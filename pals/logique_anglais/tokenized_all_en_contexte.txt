RESOLVED
CLOSE
ISSUE
25
Addressed
by
SWC
document
RESOLVED
close
ISSUE
27
with
the
understanding
that
neither
RIF
Core
nor
RIF
BLD
will
have
constraint
logic
programming
RESOLVED
close
ISSUE
28
with
the
understanding
that
RIF
Core
as
defined
earlier
today
does
not
have
the
problems
which
caused
us
Resolutions
from
Telecon
9
0
ctober
2007
RESOLVED
the
name
of
the
dialect
is
RIF
basic
logic
dialect
and
the
short
notation
is
RIF-BLD
RESOLVED
to
split
RIF
Compatibility
from
BLD
and
publish
2
drafts
task
forces
in
RIF
one
focusing
on
a
logical
dialect
and
the
other
one
focusing
on
a
production
rules
dialect
RESOLVED
Rename
the
current
RIF
Core
draft
RIF
basic
logic
dialect
RESOLVED
Create
a
RIF
basic
PR
dialect
Provides
students
with
a
broad
understanding
of
the
fundamental
concepts
of
computing
logic
and
data
processing
Concepts
include
introductory
hardware
and
software
architecture
models
of
computation
representation
of
data
machine
arithmetic
assembler
programming
3
credits
Functional
and
Logic
Programming
Prerequisite(s
COMP
251
with
a
C
or
better
MATH
225
recommended
instructions
that
change
program
state
However
imperative
programming
is
just
one
programming
paradigm
This
course
introduces
two
other
programming
paradigms
functional
and
logic
programming
Logic
programming
is
based
on
first-order
logic
while
functional
programming
is
based
on
the
lambda
calculus
Students
will
learn
the
basic
theoretical
foundations
as
well
as
how
to
program
in
two
relevant
Microprocessors
and
Digital
Systems
Applications
of
a
contemporary
digital
designs
and
microcontrollers
will
be
used
to
teach
students
digital
logic
microcontroller
programming
and
microcontroller
interfacing
This
course
is
intended
as
a
service
course
for
non-electrical
majors
who
have
not
taken
the
Microprocessors
and
Digital
Systems
Laboratory
This
laboratory
covers
applications
of
microcontroller
fundamentals
Topics
include
digital
logic
microcontroller
programming
and
interfacing
The
activities
for
this
course
utilize
typical
microcontroller
and
application
hardware
Prerequisites
MATH
111
or
Microprocessors
and
Digital
Systems
Applications
of
a
contemporary
digital
designs
and
microcontrollers
will
be
used
to
teach
students
digital
logic
microcontroller
programming
and
microcontroller
interfacing
This
course
is
intended
as
a
service
course
for
non-electrical
majors
who
have
not
taken
the
Microprocessors
and
Digital
Systems
Laboratory
This
laboratory
covers
applications
of
microcontroller
fundamentals
Topics
include
digital
logic
microcontroller
programming
and
interfacing
The
activities
for
this
course
utilize
typical
microcontroller
and
application
hardware
Prerequisites
MATH
111
or
1
Definition
BUTTON
Toggle
Definition
subsection
1
1
Formal
logic
1
2
Informal
logic
2
Basic
concepts
BUTTON
Toggle
Basic
concepts
subsection
2
4
Definitory
and
strategic
rules
2
5
Formal
systems
3
Systems
of
logic
BUTTON
Toggle
Systems
of
logic
subsection
3
1
Aristotelian
3
2
Classical
o
3
2
1
Propositional
logic
o
3
2
2
First-order
logic
3
3
Extended
o
3
3
1
Modal
logic
o
3
3
2
Higher
order
logic
3
4
Deviant
3
5
Informal
4
Areas
of
research
BUTTON
Toggle
Areas
of
research
subsection
4
1
Philosophy
of
logic
and
philosophical
logic
4
2
Metalogic
4
3
Mathematical
logic
4
4
Computational
logic
4
5
Formal
semantics
of
natural
language
4
6
Epistemology
of
logic
5
History
6
See
also
Toggle
the
table
of
contents
Logic
164
languages
Study
of
correct
reasoning
This
article
is
about
the
study
of
correct
reasoning
For
other
uses
see
Logic
disambiguation
and
Logician
disambiguation
Logical
and
Logically
redirect
here
For
the
rapper
see
Logic
rapper
For
the
British
company
see
Logically
company
Depiction
of
inference
using
modus
ponens
Logic
studies
valid
forms
of
inference
like
modus
ponens
Logic
is
the
study
of
correct
reasoning
It
includes
both
formal
and
informal
logic
Formal
logic
is
the
study
of
deductively
valid
inferences
or
logical
truths
It
examines
how
conclusions
follow
from
premises
based
on
the
structure
of
arguments
alone
independent
of
their
topic
and
content
Informal
logic
is
associated
with
informal
fallacies
critical
thinking
and
argumentation
theory
Informal
logic
examines
arguments
expressed
in
natural
language
whereas
formal
logic
uses
formal
language
When
used
as
a
countable
noun
the
term
a
logic
refers
to
a
specific
logical
formal
system
that
articulates
a
proof
system
Logic
plays
a
central
role
in
many
fields
such
as
philosophy
mathematics
computer
science
and
linguistics
Logic
studies
arguments
which
consist
of
a
set
of
premises
that
leads
to
a
conclusion
An
example
is
the
argument
from
the
premises
it's
Sunday
and
if
it's
Sunday
then
I
don't
have
to
work
leading
to
the
patient
has
a
certain
disease
as
the
best
explanation
for
the
symptoms
that
they
are
observed
to
suffer
3
Arguments
that
fall
short
of
the
standards
of
correct
reasoning
often
embody
fallacies
Systems
of
logic
are
theoretical
frameworks
for
assessing
the
correctness
of
arguments
Logic
has
been
studied
since
antiquity
Early
approaches
include
Aristotelian
logic
Stoic
logic
Nyaya
and
Mohism
Aristotelian
logic
focuses
on
reasoning
in
the
form
of
syllogisms
It
was
considered
the
main
system
of
logic
in
the
Western
world
until
it
was
replaced
by
modern
formal
logic
which
has
its
roots
in
the
work
of
late
19
th-century
mathematicians
such
as
Gottlob
Frege
Today
the
most
commonly
used
system
is
classical
logic
It
consists
of
propositional
logic
and
first-order
logic
Propositional
logic
only
considers
logical
relations
between
full
propositions
First-order
logic
also
takes
the
internal
parts
of
propositions
into
account
like
predicates
and
quantifiers
Extended
logics
accept
the
basic
intuitions
behind
classical
logic
and
apply
it
to
other
fields
such
as
metaphysics
ethics
and
epistemology
Deviant
logics
on
the
other
hand
reject
certain
classical
intuitions
and
provide
alternative
explanations
of
the
basic
laws
of
logic
Definition
edit
The
word
logic
originates
from
the
Greek
word
logos
which
has
a
variety
of
translations
such
as
reason
discourse
or
language
4
Logic
is
traditionally
defined
as
the
study
of
the
laws
of
thought
or
correct
reasoning
5
and
is
usually
understood
in
terms
of
inferences
or
arguments
Reasoning
is
the
activity
of
drawing
inferences
Arguments
are
the
outward
expression
of
inferences
6
An
argument
is
a
set
of
premises
together
with
a
conclusion
Logic
is
interested
in
whether
arguments
are
correct
i.e
whether
their
premises
support
the
conclusion
7
These
general
characterizations
apply
to
logic
in
the
widest
sense
i.e
to
both
formal
and
informal
logic
since
they
are
both
concerned
with
assessing
the
correctness
of
arguments
8
Formal
logic
is
the
traditionally
dominant
field
and
some
logicians
restrict
logic
to
formal
logic
9
Formal
logic
edit
Further
information
Formal
system
Formal
logic
is
also
known
as
symbolic
logic
and
is
widely
used
in
mathematical
logic
It
uses
a
formal
approach
to
study
reasoning
it
replaces
concrete
expressions
with
abstract
symbols
to
examine
the
logical
form
of
arguments
independent
of
their
concrete
content
In
content
10
Formal
logic
is
interested
in
deductively
valid
arguments
for
which
the
truth
of
their
premises
ensures
the
truth
of
their
conclusion
This
means
that
it
is
impossible
for
the
premises
to
be
true
and
the
according
to
which
all
arguments
of
the
form
1
p
2
if
p
then
q
3
therefore
q
are
valid
independent
of
what
the
terms
p
and
q
stand
for
13
In
this
sense
formal
logic
can
be
defined
as
the
science
of
valid
inferences
An
alternative
definition
sees
logic
as
the
study
of
logical
truths
14
A
proposition
is
logically
true
if
its
truth
depends
only
on
the
logical
vocabulary
used
in
it
This
means
that
it
is
true
in
all
possible
worlds
and
under
all
interpretations
of
its
non-logical
terms
like
the
claim
either
it
is
raining
or
it
is
not
15
These
two
definitions
of
formal
logic
are
not
identical
but
they
are
closely
related
For
example
if
the
inference
from
p
to
q
is
deductively
valid
then
the
claim
if
p
then
q
is
a
logical
truth
16
Visualization
of
how
to
translate
an
English
sentence
into
first-order
logic
Formal
logic
needs
to
translate
natural
language
arguments
into
a
formal
language
like
first-order
logic
to
assess
whether
they
are
valid
In
this
example
the
letter
c
represents
Carmen
while
the
letters
M
and
T
stand
for
Mexican
and
teacher
The
symbol
has
the
meaning
of
and
Formal
logic
uses
formal
languages
to
express
and
analyze
arguments
17
They
normally
have
a
very
limited
vocabulary
and
exact
syntactic
rules
These
rules
specify
how
their
symbols
can
be
combined
to
construct
sentences
so-called
well-formed
formulas
18
This
simplicity
and
exactness
of
formal
logic
make
it
capable
of
formulating
precise
rules
of
inference
They
determine
whether
a
given
argument
is
valid
19
Because
of
the
reliance
on
formal
language
natural
assessed
20
The
term
logic
can
also
be
used
in
a
slightly
different
sense
as
a
countable
noun
In
this
sense
a
logic
is
a
logical
formal
system
Distinct
logics
differ
from
each
other
concerning
the
rules
of
inference
they
accept
as
valid
and
the
formal
languages
used
to
express
them
21
Starting
in
the
late
19
th
century
many
new
formal
systems
have
been
proposed
There
are
disagreements
about
what
makes
a
formal
system
a
logic
22
For
example
it
has
been
suggested
that
only
logically
complete
systems
like
first-order
logic
qualify
as
logics
For
such
reasons
some
theorists
deny
that
higher-order
logics
are
logics
in
the
strict
sense
23
Informal
logic
edit
Main
article
Informal
logic
When
understood
in
a
wide
sense
logic
encompasses
both
formal
and
informal
logic
24
Informal
logic
uses
non-formal
criteria
and
standards
to
analyze
and
assess
the
correctness
of
arguments
Its
main
focus
is
on
everyday
discourse
25
Its
development
was
prompted
by
difficulties
in
applying
the
insights
of
formal
logic
to
natural
language
arguments
26
In
this
regard
it
considers
problems
that
formal
logic
on
its
own
is
unable
to
address
27
Both
provide
criteria
for
assessing
the
correctness
of
arguments
and
distinguishing
them
from
fallacies
28
Many
characterizations
of
informal
logic
have
been
suggested
but
there
is
no
general
agreement
on
its
precise
definition
29
The
most
literal
approach
sees
the
terms
formal
and
informal
as
applying
to
the
language
used
to
express
arguments
On
this
view
informal
logic
studies
arguments
that
are
in
informal
or
natural
language
30
Formal
logic
can
only
examine
them
indirectly
by
translating
them
first
into
a
formal
language
while
informal
logic
investigates
them
in
their
original
form
31
On
this
view
the
argument
Birds
fly
Tweety
is
a
bird
Therefore
Tweety
flies
belongs
to
natural
language
and
is
examined
by
informal
logic
But
the
formal
translation
1
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
true
scriptlevel
0
mi
mathvariant
normal
mi
encoding
application/x-tex
displaystyle
Flies(Tweety
annotation
semantics
MATH
displaystyle
Flies(Tweety
is
studied
by
formal
logic
32
The
study
of
natural
language
arguments
comes
with
various
difficulties
For
example
natural
language
expressions
are
often
ambiguous
vague
and
context-dependent
33
Another
approach
defines
informal
logic
in
a
wide
sense
as
the
normative
study
of
the
standards
criteria
and
procedures
of
argumentation
In
this
sense
it
includes
questions
about
argumentation
34
Another
characterization
identifies
informal
logic
with
the
study
of
non-deductive
arguments
In
this
way
it
contrasts
with
deductive
reasoning
examined
by
formal
logic
35
Non-deductive
arguments
make
their
conclusion
probable
but
do
not
ensure
that
it
is
true
An
example
is
the
inductive
argument
from
the
empirical
observation
that
all
black
36
A
further
approach
is
to
define
informal
logic
as
the
study
of
informal
fallacies
37
Informal
fallacies
are
incorrect
arguments
in
which
errors
are
present
in
the
content
and
the
context
of
the
argument
38
viable
options
This
is
the
case
in
the
fallacy
you
are
either
with
us
or
against
us
you
are
not
with
us
therefore
you
are
against
us
39
Some
theorists
state
that
formal
logic
studies
the
general
form
of
arguments
while
informal
logic
studies
particular
instances
of
arguments
Another
approach
is
to
hold
that
formal
logic
only
considers
the
role
of
logical
constants
for
correct
inferences
while
informal
logic
also
takes
the
meaning
of
substantive
concepts
into
account
Further
approaches
focus
on
the
discussion
of
logical
topics
with
or
without
formal
devices
and
on
the
role
of
epistemology
for
the
Premises
and
conclusions
are
the
basic
parts
of
inferences
or
arguments
and
therefore
play
a
central
role
in
logic
In
the
case
of
a
valid
inference
or
a
correct
argument
the
conclusion
follows
from
the
premises
or
in
other
words
the
premises
support
the
conclusion
41
For
instance
the
premises
Mars
is
red
and
Mars
is
a
planet
support
the
conclusion
Mars
is
a
red
planet
For
most
types
of
logic
it
is
accepted
that
premises
and
conclusions
have
to
be
truth-bearers
41
a
This
means
that
they
have
a
truth
value
they
Some
complex
propositions
are
true
independently
of
the
substantive
meanings
of
their
parts
53
In
classical
logic
for
example
the
complex
proposition
either
Mars
is
red
or
Mars
is
not
red
is
true
independent
of
whether
its
parts
like
the
simple
proposition
Mars
is
all
interpretations
of
its
non-logical
terms
In
some
modal
logics
this
means
that
the
proposition
is
true
in
all
possible
worlds
55
Some
theorists
define
logic
as
the
study
of
logical
truths
16
Truth
tables
Main
articles
Argument
and
inference
Logic
is
commonly
defined
in
terms
of
arguments
or
inferences
as
the
study
of
their
correctness
59
An
argument
is
a
set
of
premises
together
with
a
conclusion
60
An
inference
is
the
process
of
reasoning
from
these
premises
to
the
conclusion
43
But
these
terms
are
often
used
interchangeably
in
logic
Arguments
are
correct
or
incorrect
depending
on
whether
their
premises
support
their
conclusion
Premises
and
conclusions
on
the
other
hand
are
true
or
false
depending
on
whether
they
are
in
accord
with
reality
In
formal
logic
a
sound
argument
is
an
argument
that
is
both
correct
and
has
only
true
premises
61
Sometimes
a
distinction
is
made
between
simple
and
premise
of
later
arguments
For
a
complex
argument
to
be
successful
each
link
of
the
chain
has
to
be
successful
43
Diagram
of
argument
terminology
used
in
logic
Argument
terminology
used
in
logic
Arguments
and
inferences
are
either
correct
or
incorrect
If
they
are
their
premises
offer
non-deductive
support
to
their
conclusions
For
such
cases
the
term
ampliative
or
inductive
reasoning
is
used
63
Deductive
arguments
are
associated
with
formal
logic
in
contrast
to
the
relation
between
ampliative
arguments
and
informal
logic
64
Deductive
committing
and
accepting
them
86
However
this
reference
to
appearances
is
controversial
because
it
belongs
to
the
field
of
psychology
not
logic
and
because
appearances
may
be
different
for
different
people
87
Poster
from
1901
Young
America's
dilemma
Shall
I
be
wise
and
great
or
The
main
focus
of
most
logicians
is
to
study
the
criteria
according
to
which
an
argument
is
correct
or
incorrect
A
fallacy
is
committed
if
these
criteria
are
violated
In
the
case
of
formal
logic
they
are
known
as
rules
of
inference
93
They
are
definitory
rules
which
determine
whether
an
inference
is
correct
or
which
inferences
are
rules
specify
which
inferential
moves
are
necessary
to
reach
a
given
conclusion
based
on
a
set
of
premises
This
distinction
does
not
just
apply
to
logic
but
also
to
games
In
chess
for
example
the
definitory
rules
dictate
that
bishops
may
only
move
diagonally
The
strategic
rules
on
the
other
hand
describe
how
the
allowed
moves
may
be
used
to
Main
article
Formal
system
A
formal
system
of
logic
consists
of
a
formal
language
together
with
a
set
of
axioms
and
a
proof
system
used
to
draw
inferences
from
these
axioms
95
In
logic
axioms
are
statements
that
are
accepted
without
proof
They
are
used
to
justify
other
statements
96
Some
theorists
also
include
a
semantics
that
specifies
how
the
expressions
of
the
rules
determine
how
these
symbols
may
be
arranged
to
result
in
well-formed
formulas
99
For
instance
the
syntactic
rules
of
propositional
logic
determine
that
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
true
scriptlevel
0
mi
P
mi
mo
mo
mi
Q
mi
A
semantics
is
a
system
for
mapping
expressions
of
a
formal
language
to
their
denotations
In
many
systems
of
logic
denotations
are
truth
values
For
instance
the
semantics
for
classical
propositional
logic
assigns
the
formula
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
true
102
A
system
of
logic
is
sound
when
its
proof
system
cannot
derive
a
conclusion
from
a
set
of
premises
unless
it
is
semantically
entailed
by
them
In
other
words
its
proof
system
cannot
lead
to
false
entailment
line
up
perfectly
103
Systems
of
logic
edit
Systems
of
logic
are
theoretical
frameworks
for
assessing
the
correctness
of
reasoning
and
arguments
For
over
two
thousand
years
Aristotelian
logic
was
treated
as
the
canon
of
logic
in
the
Western
world
104
but
modern
developments
in
this
field
have
led
to
a
vast
proliferation
of
logical
systems
105
One
prominent
categorization
divides
modern
formal
logical
systems
into
classical
logic
extended
logics
and
deviant
logics
106
edit
Main
article
Aristotelian
logic
Aristotelian
logic
encompasses
a
great
variety
of
topics
They
include
metaphysical
theses
about
ontological
categories
and
problems
of
scientific
explanation
But
in
a
more
narrow
sense
it
is
identical
to
term
logic
or
syllogistics
A
syllogism
is
a
form
of
argument
involving
three
propositions
two
premises
and
a
conclusion
Each
proposition
has
three
essential
parts
a
subject
a
predicate
and
a
copula
connecting
Socrates
is
wise
is
made
up
of
the
subject
Socrates
the
predicate
wise
and
the
copula
is
108
The
subject
and
the
predicate
are
the
terms
of
the
proposition
Aristotelian
logic
does
not
contain
complex
propositions
made
up
of
simple
propositions
It
differs
in
this
aspect
from
propositional
logic
in
which
any
two
propositions
can
be
linked
using
a
logical
connective
like
and
to
form
a
new
complex
proposition
109
Diagram
of
the
square
of
opposition
The
square
of
opposition
is
often
used
to
visualize
the
relations
between
the
four
basic
categorical
propositions
in
Aristotelian
logic
It
shows
for
example
that
the
propositions
All
S
are
P
and
Some
S
are
not
P
are
contradictory
meaning
that
one
of
them
has
to
be
true
while
the
other
is
false
In
Aristotelian
logic
the
subject
can
be
universal
particular
indefinite
or
singular
For
example
the
term
all
humans
is
a
universal
subject
in
the
proposition
all
humans
are
mortal
A
similar
Socrates
110
Aristotelian
logic
only
includes
predicates
for
simple
properties
of
entities
But
it
lacks
predicates
corresponding
to
relations
between
entities
111
The
predicate
can
be
linked
to
the
subject
in
two
ways
predicate
in
each
case
113
Thus
these
three
propositions
contain
three
predicates
referred
to
as
major
term
minor
term
and
middle
term
114
The
central
aspect
of
Aristotelian
logic
involves
classifying
all
possible
syllogisms
into
valid
and
invalid
arguments
according
to
how
the
propositions
are
formed
112
115
For
example
edit
Main
article
Classical
logic
Classical
logic
is
distinct
from
traditional
or
Aristotelian
logic
It
encompasses
propositional
logic
and
first-order
logic
It
is
classical
in
the
sense
that
it
is
based
on
basic
logical
intuitions
shared
by
most
logicians
117
These
intuitions
include
the
law
of
obligation
and
permission
Similarly
it
does
not
address
the
relations
between
past
present
and
future
119
Such
issues
are
addressed
by
extended
logics
They
build
on
the
basic
intuitions
of
classical
logic
and
expand
it
by
introducing
new
logical
vocabulary
This
way
the
exact
logical
approach
is
applied
to
fields
like
ethics
or
epistemology
that
lie
beyond
the
scope
of
mathematics
120
Propositional
logic
edit
Main
article
Propositional
calculus
Propositional
logic
comprises
formal
systems
in
which
formulae
are
built
from
atomic
propositions
using
logical
connectives
For
instance
propositional
logic
represents
the
conjunction
of
two
atomic
propositions
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
encoding
application/x-tex
displaystyle
P\land
Q
annotation
semantics
MATH
displaystyle
P\land
Q
Unlike
predicate
logic
where
terms
and
predicates
are
the
smallest
units
propositional
logic
takes
full
propositions
with
truth
values
as
its
most
basic
component
121
Thus
propositional
logics
can
only
represent
logical
relationships
that
of
a
proposition
122
First-order
logic
edit
displaystyle
forall
x.F(x
is
true
Main
article
First-order
logic
First-order
logic
includes
the
same
propositional
connectives
as
propositional
logic
but
differs
from
it
because
it
articulates
the
internal
structure
of
propositions
This
happens
through
devices
such
as
singular
terms
which
refer
to
particular
objects
predicates
which
encoding
application/x-tex
displaystyle
exists
xB(x
annotation
semantics
MATH
displaystyle
exists
xB(x
First-order
logic
contains
various
rules
of
inference
that
determine
how
expressions
articulated
this
way
can
form
valid
arguments
for
example
that
one
may
infer
Extended
logics
are
logical
systems
that
accept
the
basic
principles
of
classical
logic
They
introduce
additional
symbols
and
principles
to
apply
it
to
fields
like
metaphysics
ethics
and
epistemology
125
Modal
logic
edit
Main
article
Modal
logic
Modal
logic
is
an
extension
of
classical
logic
In
its
original
form
sometimes
called
alethic
modal
logic
it
introduces
two
new
symbols
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
true
scriptlevel
0
mi
mi
mstyle
mrow
displaystyle
Diamond
B(s
articulates
the
sentence
It
is
possible
that
Socrates
is
a
banker
127
To
include
these
symbols
in
the
logical
formalism
modal
logic
introduces
new
rules
of
inference
that
govern
what
role
they
play
in
inferences
One
rule
of
inference
states
that
if
something
is
necessary
then
it
is
also
possible
This
means
displaystyle
lnot
Diamond
lnot
A
128
Other
forms
of
modal
logic
introduce
similar
symbols
but
associate
different
meanings
with
them
to
apply
modal
logic
to
other
fields
For
example
deontic
logic
concerns
the
field
of
ethics
and
introduces
symbols
to
express
the
ideas
of
obligation
and
permission
i.e
to
describe
whether
an
agent
has
to
perform
a
certain
action
or
is
allowed
to
perform
it
129
The
modal
operators
in
temporal
modal
logic
articulate
temporal
relations
They
can
be
used
to
express
for
example
that
something
happened
at
one
time
or
that
something
is
happening
all
the
time
129
In
epistemology
epistemic
modal
logic
is
used
to
represent
the
ideas
of
knowing
something
in
contrast
to
merely
believing
it
to
be
the
case
130
Higher
order
logic
edit
Main
article
Higher-order
logic
Higher-order
logics
extend
classical
logic
not
by
using
modal
operators
but
by
introducing
new
forms
of
quantification
131
Quantifiers
correspond
to
terms
like
all
or
some
In
classical
first-order
logic
quantifiers
are
only
applied
to
individuals
The
formula
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
true
scriptlevel
0
mi
mathvariant
normal
mi
of
mathematical
theories
43
But
it
has
drawbacks
in
regard
to
its
meta-logical
properties
and
ontological
implications
which
is
why
first-order
logic
is
still
more
commonly
used
133
Deviant
edit
Main
article
Deviant
logic
Deviant
logics
are
logical
systems
that
reject
some
of
the
basic
intuitions
of
classical
logic
Because
of
this
they
are
usually
seen
not
as
its
supplements
but
as
its
rivals
Deviant
logical
systems
differ
from
each
other
either
because
they
reject
different
classical
issue
134
Intuitionistic
logic
is
a
restricted
version
of
classical
logic
135
It
uses
the
same
symbols
but
excludes
some
rules
of
inference
For
example
according
to
the
law
of
double
negation
elimination
if
a
A
annotation
semantics
MATH
displaystyle
lnot
lnot
A
This
is
a
valid
rule
of
inference
in
classical
logic
but
it
is
invalid
in
intuitionistic
logic
Another
classical
principle
not
part
of
intuitionistic
logic
is
the
law
of
excluded
middle
It
states
that
for
every
sentence
either
it
or
its
negation
is
true
This
means
that
every
proposition
of
the
form
semantics
MATH
displaystyle
A\lor
lnot
A
is
true
135
These
deviations
from
classical
logic
are
based
on
the
idea
that
truth
is
established
by
verification
using
a
proof
Intuitionistic
logic
is
especially
prominent
in
the
field
of
constructive
mathematics
which
emphasizes
the
need
to
find
or
construct
a
specific
example
to
prove
its
edit
Main
article
Informal
logic
Informal
logic
is
usually
carried
out
in
a
less
systematic
way
It
often
focuses
on
more
specific
issues
like
investigating
a
particular
type
of
fallacy
or
studying
a
certain
aspect
of
argumentation
Nonetheless
some
frameworks
of
informal
logic
have
also
been
presented
that
try
to
provide
a
systematic
characterization
of
the
correctness
of
arguments
141
The
pragmatic
or
dialogical
approach
to
informal
logic
sees
arguments
as
speech
acts
and
not
merely
as
a
set
of
premises
together
with
a
conclusion
142
As
speech
acts
they
occur
in
a
certain
context
like
the
standards
in
business
negotiations
147
The
epistemic
approach
to
informal
logic
on
the
other
hand
focuses
on
the
epistemic
role
of
arguments
148
It
is
based
on
the
idea
that
arguments
aim
to
increase
our
knowledge
They
achieve
this
by
linking
edit
Logic
is
studied
in
various
fields
In
many
cases
this
is
done
by
applying
its
formal
method
to
specific
topics
outside
its
scope
like
to
ethics
or
computer
science
156
In
other
cases
logic
itself
is
made
the
subject
of
research
in
another
discipline
This
can
happen
in
diverse
ways
For
instance
it
can
involve
investigating
the
philosophical
assumptions
linked
to
the
basic
concepts
used
by
logicians
Other
ways
include
interpreting
and
analyzing
logic
through
mathematical
structures
as
well
as
studying
and
comparing
abstract
properties
of
formal
logical
systems
157
Philosophy
of
logic
and
philosophical
logic
edit
Main
articles
Philosophy
of
logic
and
Philosophical
logic
Philosophy
of
logic
is
the
philosophical
discipline
studying
the
scope
and
nature
of
logic
59
It
examines
many
presuppositions
implicit
in
logic
like
how
to
define
its
basic
concepts
or
the
metaphysical
assumptions
associated
with
them
158
It
is
also
concerned
with
how
to
classify
logical
systems
and
considers
the
ontological
commitments
they
incur
159
Philosophical
logic
is
one
of
the
areas
within
the
philosophy
of
logic
It
studies
the
application
of
logical
methods
to
philosophical
problems
in
fields
like
metaphysics
ethics
and
epistemology
160
This
application
usually
happens
in
the
form
of
and
general
conclusions
on
these
topics
162
Mathematical
logic
edit
Main
article
Mathematical
logic
Photograph
of
Bertrand
Russell
Bertrand
Russell
made
various
contributions
to
mathematical
logic
163
The
term
mathematical
logic
is
sometimes
used
as
a
synonym
of
formal
logic
But
in
a
more
restricted
sense
it
refers
to
the
study
of
logic
within
mathematics
Major
subareas
include
model
theory
proof
theory
set
theory
and
computability
theory
164
Research
in
mathematical
logic
commonly
addresses
the
mathematical
properties
of
formal
systems
of
logic
However
it
can
also
include
attempts
to
use
logic
to
analyze
mathematical
reasoning
or
to
establish
logic-based
foundations
of
mathematics
165
The
latter
was
a
major
concern
in
early
20
th-century
mathematical
logic
which
pursued
the
program
of
logicism
pioneered
by
philosopher-logicians
such
as
Gottlob
Frege
Alfred
North
Whitehead
and
Bertrand
Russell
Mathematical
theories
were
supposed
to
be
logical
tautologies
and
their
program
was
to
show
this
by
means
of
a
reduction
of
mathematics
to
logic
Many
attempts
to
realize
this
program
failed
from
the
crippling
of
Frege's
project
in
his
Grundgesetze
by
Russell's
paradox
to
the
defeat
of
Hilbert's
program
by
Gödel's
incompleteness
Set
theory
originated
in
the
study
of
the
infinite
by
Georg
Cantor
and
it
has
been
the
source
of
many
of
the
most
challenging
and
important
issues
in
mathematical
logic
They
include
Cantor's
theorem
the
status
of
the
Axiom
of
Choice
the
question
of
the
independence
of
the
continuum
hypothesis
and
the
modern
debate
on
large
cardinal
axioms
167
Computability
theory
is
the
branch
of
mathematical
logic
that
studies
effective
procedures
to
solve
calculation
problems
One
of
its
main
goals
is
to
understand
whether
it
is
possible
to
solve
a
given
problem
type
of
issue
168
Computational
logic
edit
Main
articles
Computational
logic
and
Logic
in
computer
science
Diagram
of
an
AND
gate
using
transistors
Conjunction
AND
is
one
of
the
basic
operations
of
Boolean
logic
It
can
be
electronically
implemented
in
several
ways
for
example
by
using
two
transistors
Computational
logic
is
the
branch
of
logic
and
computer
science
that
studies
how
to
implement
mathematical
reasoning
and
logical
formalisms
using
computers
This
includes
for
example
automatic
theorem
provers
which
employ
rules
of
inference
to
construct
a
proof
step
by
step
from
a
set
of
premises
to
the
intended
conclusion
without
human
intervention
169
Logic
programming
languages
are
designed
specifically
to
express
facts
using
logical
formulas
and
to
draw
inferences
from
these
facts
For
example
Prolog
is
a
logic
programming
language
based
on
predicate
logic
170
Computer
scientists
also
apply
concepts
from
logic
to
problems
in
computing
The
works
of
Claude
Shannon
were
influential
in
this
regard
He
showed
how
Boolean
logic
can
be
used
to
understand
and
implement
computer
circuits
171
This
can
be
achieved
using
electronic
logic
gates
i.e
electronic
circuits
with
one
or
more
inputs
and
usually
one
output
The
truth
values
of
propositions
are
represented
by
voltage
levels
In
this
way
logic
functions
can
be
simulated
by
applying
the
corresponding
voltages
to
the
inputs
of
the
circuit
and
determining
the
value
of
the
function
by
Main
article
Formal
semantics
natural
language
Formal
semantics
is
a
subfield
of
logic
linguistics
and
the
philosophy
of
language
The
discipline
of
semantics
studies
the
meaning
of
language
Formal
semantics
uses
formal
tools
from
the
fields
of
symbolic
logic
and
mathematics
to
give
precise
theories
of
the
meaning
of
natural
language
expressions
It
understands
meaning
usually
in
relation
to
truth
conditions
i.e
it
examines
in
which
situations
a
language
173
Epistemology
of
logic
edit
The
epistemology
of
logic
studies
how
one
knows
that
an
argument
is
valid
or
that
a
proposition
is
logically
true
174
This
includes
questions
like
how
to
justify
that
modus
ponens
is
a
valid
rule
of
mind
has
a
special
faculty
to
examine
relations
between
pure
ideas
and
that
this
faculty
is
also
responsible
for
apprehending
logical
truths
177
A
similar
approach
understands
the
rules
of
logic
in
terms
of
linguistic
conventions
On
this
view
the
laws
of
logic
are
trivial
since
they
are
true
by
definition
they
just
express
the
meanings
of
the
logical
vocabulary
178
Some
theorists
like
Hilary
Putnam
and
Penelope
Maddy
object
to
the
view
that
logic
is
knowable
a
priori
They
hold
instead
that
logical
truths
depend
on
the
empirical
world
This
is
usually
combined
with
the
claim
that
the
laws
of
logic
express
universal
regularities
found
in
the
structural
features
of
the
world
According
to
this
view
they
may
be
explored
by
studying
general
patterns
of
the
fundamental
sciences
For
example
it
has
been
argued
that
certain
insights
of
quantum
mechanics
refute
the
principle
of
distributivity
in
classical
logic
which
states
that
the
formula
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
C
annotation
semantics
MATH
displaystyle
A\land
B
lor
A\land
C
This
claim
can
be
used
as
an
empirical
argument
for
the
thesis
that
quantum
logic
is
the
correct
logical
system
and
should
replace
classical
logic
179
History
edit
Main
article
History
of
logic
Bust
of
Aristotle
Bust
showing
Gottlob
Frege
Top
row
Aristotle
who
established
the
canon
of
western
philosophy
108
and
Avicenna
who
replaced
Aristotelian
logic
in
Islamic
discourse
180
Bottom
row
William
of
Ockham
a
major
figure
of
medieval
scholarly
thought
181
and
Gottlob
Frege
one
of
the
founders
of
modern
symbolic
logic
182
Logic
was
developed
independently
in
several
cultures
during
antiquity
One
major
early
contributor
was
Aristotle
who
developed
term
logic
in
his
Organon
and
Prior
Analytics
183
He
was
responsible
for
the
introduction
of
the
hypothetical
syllogism
184
and
temporal
modal
logic
185
Further
innovations
include
inductive
logic
186
as
well
as
the
discussion
of
new
logical
concepts
such
as
terms
predicables
syllogisms
and
propositions
Aristotelian
logic
was
highly
regarded
in
classical
and
medieval
times
both
in
Europe
and
the
Middle
East
It
remained
in
wide
use
in
the
West
until
the
early
19
th
century
187
It
has
now
been
superseded
by
later
work
though
many
of
its
key
insights
are
still
present
in
modern
systems
of
logic
188
Ibn
Sina
Avicenna
was
the
founder
of
Avicennian
logic
which
replaced
Aristotelian
logic
as
the
dominant
system
of
logic
in
the
Islamic
world
189
It
influenced
Western
medieval
writers
such
as
Albertus
Magnus
and
William
of
Ockham
190
Ibn
Sina
wrote
on
the
hypothetical
syllogism
191
and
on
the
propositional
calculus
192
He
developed
an
original
temporally
modalized
syllogistic
theory
involving
temporal
logic
and
modal
logic
193
He
also
made
use
of
inductive
logic
such
as
his
methods
of
agreement
difference
and
concomitant
variation
which
are
critical
to
the
scientific
method
191
Fakhr
al-Din
al-Razi
was
another
influential
Muslim
logician
He
criticized
Aristotelian
syllogistics
and
formulated
an
early
system
of
inductive
logic
foreshadowing
the
system
of
inductive
logic
developed
by
John
Stuart
Mill
194
During
the
Middle
Ages
many
translations
and
interpretations
of
Aristotelian
logic
were
made
The
works
of
Boethius
were
particularly
influential
Besides
translating
Aristotle's
work
into
Latin
he
also
produced
textbooks
on
logic
195
Later
the
works
of
Islamic
philosophers
such
as
Ibn
Sina
and
Ibn
Rushd
Averroes
were
drawn
on
This
expanded
the
range
of
ancient
works
available
to
medieval
scholars
that
had
been
preserved
in
Latin
commentaries
In
1323
William
of
Ockham's
influential
Summa
Logicae
was
released
It
is
a
comprehensive
treatise
on
logic
that
discusses
many
basic
concepts
of
logic
and
provides
a
systematic
exposition
of
types
of
propositions
and
their
truth
conditions
196
paradoxes
For
example
Gongsun
Long
proposed
the
white
horse
paradox
which
defends
the
thesis
that
a
white
horse
is
not
a
horse
The
school
of
Mohism
also
acknowledged
the
importance
of
language
for
logic
and
tried
to
relate
the
ideas
in
these
fields
to
the
realm
of
ethics
197
In
India
the
study
of
logic
was
primarily
pursued
by
the
schools
of
Nyaya
Buddhism
and
Jainism
It
was
not
treated
as
a
separate
academic
discipline
and
discussions
of
its
topics
usually
happened
in
the
to
arrive
at
conclusions
for
example
about
the
cause
of
this
object
199
A
similar
emphasis
on
the
relation
to
epistemology
is
also
found
in
Buddhist
and
Jainist
schools
of
logic
where
inference
is
used
to
expand
the
knowledge
gained
through
other
sources
200
Some
of
the
later
theories
of
Nyaya
belonging
to
the
Navya-Nyāya
school
resemble
modern
forms
of
logic
such
as
Gottlob
Frege's
distinction
between
sense
and
reference
and
his
definition
of
number
201
The
syllogistic
logic
developed
by
Aristotle
predominated
in
the
West
until
the
mid
19
th
century
when
interest
in
the
foundations
of
mathematics
stimulated
the
development
of
modern
symbolic
logic
202
Many
see
Gottlob
Frege's
Begriffsschrift
as
the
birthplace
of
modern
logic
Gottfried
Wilhelm
Leibniz's
idea
of
a
universal
formal
language
is
often
considered
a
forerunner
Other
pioneers
were
George
Boole
who
invented
Boolean
algebra
as
a
mathematical
system
of
logic
and
Charles
Peirce
who
developed
the
logic
of
relatives
Alfred
North
Whitehead
and
Bertrand
Russell
in
turn
condensed
many
of
these
insights
in
their
work
Principia
Mathematica
Modern
logic
introduced
novel
concepts
such
as
functions
quantifiers
and
relational
predicates
A
hallmark
of
modern
symbolic
logic
is
its
use
of
formal
language
to
precisely
codify
its
insights
In
this
regard
it
departs
from
earlier
logicians
who
relied
mainly
on
natural
language
203
Of
particular
influence
was
the
development
of
first-order
logic
which
is
usually
treated
as
the
standard
system
of
modern
logic
204
Its
analytical
generality
allowed
the
formalization
of
mathematics
and
drove
the
investigation
of
set
theory
It
also
made
Alfred
Tarski's
approach
to
model
theory
possible
and
provided
the
foundation
of
modern
mathematical
logic
205
See
also
Philosophy
portal
Glossary
of
logic
Outline
of
logic
Overview
of
and
topical
guide
to
logic
Critical
thinking
Analysis
of
facts
to
form
a
judgment
List
of
logic
journals
List
of
logic
symbols
List
of
symbols
used
to
express
logical
relations
List
of
logicians
Logic
puzzle
Puzzle
deriving
from
the
mathematics
field
of
deduction
Logical
reasoning
Process
of
drawing
correct
inferences
Logos
Concept
in
philosophy
religion
rhetoric
and
psychology
Vector
logic
References
edit
1
However
there
are
some
forms
of
logic
like
imperative
logic
where
this
may
not
be
the
case
42
2
Conductive
arguments
present
reasons
in
favor
of
a
conclusion
3
Nunes
2011
pp
2066
2069
4
Pépin
2004
Logos
Online
Etymology
Staff
5
Hintikka
2019
lead
section
Nature
and
varieties
of
logic
6
Hintikka
2019
Nature
and
varieties
of
logic
Haack
1978
pp
1
10
Philosophy
of
logics
Schlesinger
Keren-Portnoy
Parush
2001
p
220
7
Hintikka
Sandu
2006
p
13
Audi
1999
b
Philosophy
of
logic
McKeon
8
Blair
Johnson
2000
pp
93
95
Craig
1996
Formal
and
informal
logic
9
Craig
1996
Formal
and
informal
logic
Barnes
2007
p
274
Planty-Bonjour
2012
p
62
Rini
2010
p
26
10
MacFarlane
2017
Corkum
2015
pp
753
767
Blair
Johnson
2000
pp
93
95
Magnus
2005
pp
12
4
1
6
Formal
languages
11
a
b
McKeon
Craig
1996
Formal
and
informal
logic
12
Hintikka
Sandu
2006
p
13
13
Magnus
2005
Proofs
p
102
10
16
a
b
Hintikka
Sandu
2006
p
16
17
Honderich
2005
logic
informal
Craig
1996
Formal
and
informal
logic
Johnson
1999
pp
265
268
18
Craig
1996
Formal
languages
and
systems
Simpson
2008
p
14
19
Craig
1996
Formal
languages
and
systems
Deductive
validity
Johnson
1999
p
267
21
Haack
1978
pp
1
2
4
Philosophy
of
logics
Hintikka
Sandu
2006
pp
16
17
Jacquette
2006
Introduction
Philosophy
of
logic
today
pp
1
12
22
Haack
1978
pp
1
2
4
Philosophy
of
logics
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
23
Haack
1978
pp
5
7
9
Philosophy
of
logics
Hintikka
Sandu
2006
pp
31
2
Haack
1996
pp
229
30
24
Haack
1978
pp
1
10
Philosophy
of
logics
Groarke
2021
lead
section
1
1
Formal
and
Informal
Logic
25
Johnson
2014
pp
228
9
26
Groarke
2021
lead
section
1
History
Audi
1999
a
Informal
logic
Johnson
1999
pp
265
274
27
Craig
1996
Formal
and
informal
logic
Johnson
1999
p
267
28
Blair
Johnson
2000
pp
93
97
Craig
1996
Formal
and
informal
logic
29
Johnson
1999
pp
265
270
van
Eemeren
et
al
pp
1
45
Informal
Logic
30
Groarke
2021
1
1
Formal
and
Informal
Logic
Audi
1999
a
Informal
logic
Honderich
2005
logic
informal
31
Blair
Johnson
2000
pp
93
107
Groarke
2021
lead
section
1
1
Formal
and
Informal
Logic
van
Eemeren
et
al
p
169
32
Oaksford
Chater
2007
p
47
33
Craig
1996
Formal
and
informal
logic
Walton
1987
pp
2
3
6
8
1
A
new
model
of
argument
Engel
1982
pp
59
92
2
The
medium
of
language
34
Blair
Johnson
1987
pp
147
51
35
Falikowski
Mills
2022
p
98
Weddle
2011
pp
383
8
36
Informal
logic
and
the
eductive-inductive
distinction
Blair
2011
p
47
36
Vickers
2022
Nunes
2011
pp
2066
9
Logical
Reasoning
and
38
a
b
Vleet
2010
pp
ix–x
Introduction
Dowden
Stump
39
Maltby
Day
Macaskill
2007
p
564
Dowden
40
Craig
1996
Formal
and
informal
logic
Johnson
1999
pp
265
270
41
a
b
Audi
1999
b
Philosophy
of
logic
Honderich
2005
philosophical
logic
42
Haack
1974
p
51
43
a
b
c
d
e
Audi
1999
b
Philosophy
of
logic
44
Falguera
Martínez-Vidal
Rosen
2021
Tondl
2012
p
111
45
Olkowski
Pirovolakis
2019
pp
65
66
46
Audi
1999
b
Philosophy
of
logic
Pietroski
2021
47
Audi
1999
b
Philosophy
of
logic
Kusch
2020
Rush
2014
pp
1
10
189
190
48
a
b
King
2019
Pickel
2020
pp
2991
3006
49
a
b
c
Honderich
2005
philosophical
logic
50
Pickel
2020
pp
2991
3006
51
Honderich
2005
philosophical
logic
Craig
1996
Philosophy
of
logic
Michaelson
Reimer
2019
52
Michaelson
Reimer
2019
53
Hintikka
2019
Nature
and
varieties
of
logic
MacFarlane
2017
54
Gómez-Torrente
2019
MacFarlane
2017
Honderich
2005
philosophical
logic
55
Gómez-Torrente
2019
Jago
2014
p
41
56
Magnus
2005
pp
35
38
3
Truth
tables
Angell
1964
p
164
58
Tarski
1994
p
40
59
a
b
Hintikka
2019
lead
section
Nature
and
varieties
of
logic
Audi
1999
b
Philosophy
of
logic
60
Blackburn
2008
argument
Stairs
2017
p
343
61
Copi
Cohen
Rodych
2019
p
30
63
Hintikka
Sandu
2006
p
16
Backmann
2019
pp
235
255
IEP
Staff
64
Groarke
2021
1
1
Formal
and
Informal
Logic
Weddle
2011
pp
383
8
36
Informal
logic
and
the
eductive-inductive
distinction
van
Eemeren
Garssen
2009
p
191
65
Evans
2005
8
Deductive
Reasoning
p
169
85
Walton
1987
pp
7
1
A
new
model
of
argument
Hansen
2020
86
Hansen
2020
87
Hansen
2020
Walton
1987
pp
63
3
Logic
of
propositions
88
Sternberg
Stone
2012
pp
327
356
89
Walton
1987
pp
2
4
1
A
new
model
of
argument
Dowden
Hansen
98
Haack
1978
pp
1
10
Philosophy
of
logics
Hintikka
Sandu
2006
pp
31
32
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
99
Moore
Carling
1982
p
53
Enderton
2001
pp
12
13
Sentential
Logic
100
Lepore
Cumming
2012
p
5
101
Wasilewska
2018
pp
145
6
Rathjen
Sieg
2022
103
Restall
Standefer
2023
pp
91
Enderton
2001
pp
131
146
Chapter
2
5
van
Dalen
1994
Chapter
1
5
104
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
Smith
2022
Groarke
105
Haack
1996
1
Alternative
in
Alternative
Logic
106
Haack
1978
pp
1
10
Philosophy
of
logics
Haack
1996
1
Alternative
in
Alternative
Logic
Wolf
1978
pp
327
340
107
Smith
2022
Groarke
Bobzien
2020
108
a
b
Groarke
115
Hurley
2015
4
Categorical
Syllogisms
116
Spriggs
2012
pp
20
2
117
Hintikka
2019
Nature
and
varieties
of
logic
Alternative
logics
Hintikka
Sandu
2006
pp
27
8
Bäck
2016
p
317
118
Shapiro
Kouri
Kissel
2022
119
Burgess
2009
1
Classical
logic
120
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
Borchert
2006
c
Logic
Non-Classical
Goble
2001
Introduction
121
Brody
2006
pp
535
536
122
Klement
1995
b
123
Shapiro
Kouri
Kissel
2022
Honderich
2005
philosophical
logic
Michaelson
Reimer
2019
124
Nolt
2021
Magnus
2005
4
Quantified
logic
125
Bunnin
Yu
2009
p
179
Garson
2023
Introduction
126
Garson
2023
Sadegh-Zadeh
2015
p
983
129
a
b
Garson
2023
130
Rendsvig
Symons
2021
131
Audi
1999
b
Philosophy
of
logic
Väänänen
2021
Ketland
2005
Second
Order
Logic
132
Audi
1999
b
Philosophy
of
logic
Väänänen
2021
Daintith
Wright
2008
Predicate
calculus
133
Audi
1999
b
Philosophy
of
logic
Ketland
2005
Second
Order
Logic
134
Haack
1996
1
Alternative
in
Alternative
Logic
Wolf
1978
pp
327
340
135
a
b
Moschovakis
2022
Borchert
2006
c
Logic
Non-Classical
136
Borchert
2006
c
Logic
Non-Classical
Bridges
et
al
2023
pp
73
74
Friend
2014
p
101
137
Sider
2010
Chapter
3
4
Gamut
1991
5
5
Zegarelli
2010
p
30
138
Hájek
2006
139
Borchert
2006
c
Logic
Non-Classical
Priest
Tanaka
Weber
2018
Weber
140
Priest
Tanaka
Weber
2018
Weber
Haack
1996
Introduction
145
Walton
1987
pp
3
4
11
18
1
A
new
model
of
argument
Ritola
2008
p
335
146
Hansen
2020
Walton
1987
pp
3
4
18
22
3
Logic
of
propositions
147
Ritola
2008
p
335
155
Korb
2004
pp
41
42
44
46
Hájek
Lin
2017
pp
207
232
Talbott
2016
156
Hintikka
2019
Logic
and
other
disciplines
Haack
1978
pp
1
10
Philosophy
of
logics
157
Hintikka
2019
lead
section
Features
and
problems
of
logic
Gödel
1984
pp
447
469
Russell's
mathematical
logic
Monk
1976
pp
1
9
Introduction
158
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
159
Hintikka
2019
Problems
of
ontology
160
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
Burgess
2009
1
Classical
logic
161
Goble
2001
Introduction
Hintikka
Sandu
2006
pp
31
32
162
Gensler
2006
pp
xliii–xliv
Sider
2010
pp
4
6
Schagrin
2005
p
447
170
Clocksin
Mellish
2003
pp
237
238
252
255
257
The
Relation
of
Prolog
to
Logic
Daintith
Wright
2008
Logic
Programming
Languages
171
O'Regan
2016
p
49
Calderbank
Sloane
2001
pp
768
172
Daintith
Wright
2008
Logic
Gate
173
Janssen
Zimmermann
2021
pp
3
4
Partee
2016
King
2009
pp
557
8
Aloni
Dekker
2016
pp
22
23
174
Warren
2020
6
The
Epistemology
of
Logic
Schechter
175
Warren
2020
6
The
Epistemology
of
Logic
176
Schechter
177
Gómez-Torrente
2019
178
Warren
2020
6
The
Epistemology
of
Logic
Gómez-Torrente
2019
Warren
2020
1
What
is
Conventionalism
179
Chua
2017
pp
631
636
Wilce
2021
Putnam
1969
pp
216
241
181
Spade
Panaccio
2019
182
Haaparanta
2009
pp
4
6
1
Introduction
Hintikka
Spade
Modern
logic
Logic
since
1900
183
Kline
1972
A
major
achievement
of
Aristotle
was
the
founding
of
the
science
of
logic
p
53
Łukasiewicz
1957
p
7
Liu
Guo
2023
p
15
184
Lear
1980
p
34
191
a
b
Goodman
2003
p
155
192
Goodman
1992
p
188
193
Hintikka
Spade
Arabic
Logic
194
Iqbal
2013
pp
99
115
The
Spirit
of
Muslim
Culture
195
Marenbon
2021
Introduction
3
The
Logical
Text-Books
Hintikka
201
Chakrabarti
1976
pp
554
563
202
Groarke
Haaparanta
2009
pp
3
5
1
Introduction
203
Haaparanta
2009
pp
4
6
Hintikka
Spade
Modern
logic
Logic
since
1900
204
Ewald
2019
Angell
Richard
B
1964
Reasoning
and
Logic
Ardent
Media
p
164
OCLC
375322
Audi
Robert
1999
a
Informal
logic
The
Cambridge
Dictionary
of
Philosophy
Cambridge
University
Press
p
435
ISBN
978
1
107
64379
6
Archived
from
the
original
on
14
April
2021
Retrieved
29
December
2021
Audi
Robert
1999
b
Philosophy
of
logic
The
Cambridge
Dictionary
of
Philosophy
Cambridge
University
Press
pp
679
681
ISBN
978
1
107
64379
6
Archived
from
the
original
on
14
April
2021
Barnes
Jonathan
25
January
2007
Truth
etc
Six
Lectures
on
Ancient
Logic
Clarendon
Press
p
274
ISBN
978
0
19
151574
3
Benthem
Johan
van
Modal
Logic
Contemporary
View
1
Modal
Notions
and
Reasoning
Patterns
a
First
Pass
Internet
Encyclopedia
of
Philosophy
Retrieved
11
March
2023
Blair
J
Anthony
Johnson
Ralph
H
1987
The
Current
State
of
Informal
Logic
Informal
Logic
9
2
147
51
doi
10
22329
il.v
9
i
2
2671
Archived
from
the
original
on
30
December
2021
Retrieved
2
January
2022
Blair
J
Anthony
Johnson
Ralph
H
2000
Informal
Logic
An
Overview
Informal
Logic
20
2
93
107
doi
10
22329
il.v
20
i
2
2262
Archived
from
the
original
on
9
December
2021
Retrieved
29
December
2021
Business
Media
p
47
ISBN
978
94
007
2363
4
Bobzien
Susanne
2020
Ancient
Logic
2
Aristotle
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Archived
from
the
original
on
28
August
2018
Retrieved
3
Retrieved
4
January
2022
Borchert
Donald
2006
c
Logic
Non-Classical
Macmillan
Encyclopedia
of
Philosophy
Volume
5
2
nd
ed
Macmillan
pp
485
492
ISBN
978
0
02
865785
1
Archived
from
the
original
on
12
January
2021
ISBN
978
1
4051
9112
8
Burgess
John
P
2009
1
Classical
logic
Philosophical
Logic
Princeton
NJ
Princeton
University
Press
pp
1
12
ISBN
978
0
691
15633
0
Archived
from
the
original
on
16
December
2021
Chakrabarti
Kisor
Kumar
June
1976
Some
Comparisons
Between
Frege's
Logic
and
Navya-Nyaya
Logic
Philosophy
and
Phenomenological
Research
36
4
554
563
doi
10
2307
2106873
JSTOR
2106873
Chua
Eugene
2017
An
Empirical
Route
to
Logical
Conventionalism
Logic
Rationality
and
Interaction
Lecture
Notes
in
Computer
Science
Vol
10455
pp
631
636
doi
10
1007
978
3
662
55665
8
43
ISBN
978
3
662
55664
1
Clocksin
William
F
Mellish
Christopher
S
2003
The
Relation
of
Prolog
to
Logic
Programming
in
Prolog
Using
the
ISO
Standard
Springer
pp
237
257
doi
10
1007
978
3
642
55481
0
10
ISBN
978
3
642
55481
0
Cook
Roy
T
2009
Dictionary
of
Philosophical
Logic
Edinburgh
University
Press
p
124
ISBN
978
0
7486
3197
1
Copi
Irving
M
Cohen
Carl
Rodych
Victor
2019
Introduction
to
Logic
Routledge
ISBN
978
1
351
38697
5
Corkum
Philip
2015
Generality
and
Logical
Constancy
Revista
D'Agostino
Marcello
Floridi
Luciano
2009
The
Enduring
Scandal
of
Deduction
Is
Propositional
Logic
Really
Uninformative
Synthese
167
2
271
315
doi
10
1007
s
11229
008
9409
4
hdl
2299
2995
ISSN
0039
7857
JSTOR
40271192
S
2
CID
9602882
OUP
ISBN
978
0
19
923400
4
van
Dalen
Dirk
1994
Logic
and
Structure
Springer
Chapter
1
5
ISBN
978
0
387
57839
2
van
Eemeren
Frans
H
Garssen
Bart
Krabbe
Erik
C
W
Snoeck
Henkemans
A
Francisca
Verheij
Bart
Wagemans
Jean
H
M
2021
Informal
Logic
Handbook
of
Argumentation
Theory
Springer
Netherlands
pp
1
45
doi
10
1007
978
94
007
6883
3
7
1
ISBN
978
94
007
6883
3
Archived
from
the
original
on
31
December
2021
Wiley
Sons
pp
320
2
ISBN
978
1
119
14466
3
Enderton
Herbert
2001
A
Mathematical
Introduction
to
Logic
Elsevier
ISBN
978
0
12
238452
3
Reasoning
Cambridge
University
Press
p
169
ISBN
978
0
521
82417
0
Ewald
William
2019
The
Emergence
of
First-Order
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
12
March
2023
Routledge
p
101
ISBN
978
1
317
49379
2
Gamut
L.T.F
1991
Logic
Language
and
Meaning
Vol
1
Introduction
to
Logic
University
of
Chicago
Press
5
5
ISBN
978
0
226
28085
1
Garson
James
2023
Modal
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
11
March
2023
Gensler
Harry
J
2006
The
A
to
Z
of
Logic
Scarecrow
Press
pp
xliii–xliv
ISBN
978
1
4617
3182
5
Goble
Lou
2001
Introduction
The
Blackwell
Guide
to
Philosophical
Logic
Wiley-Blackwell
pp
1
8
ISBN
978
0
631
20692
7
Archived
from
the
original
on
7
December
2021
Retrieved
4
January
2022
p
155
ISBN
978
0
19
513580
0
Groarke
Louis
F
Aristotle
Logic
Internet
Encyclopedia
of
Philosophy
Archived
from
the
original
on
29
December
2021
Retrieved
1
January
2022
Groarke
Leo
2021
Informal
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Archived
from
the
original
on
12
January
2022
Retrieved
31
December
2021
November
2021
Gödel
Kurt
1984
Russell's
mathematical
logic
In
Benacerraf
Paul
Putnam
Hilary
eds
Philosophy
of
Mathematics
Selected
Readings
2
nd
ed
Cambridge
University
Press
pp
447
469
Retrieved
9
January
2022
Hájek
Petr
3
September
2006
Fuzzy
Logic
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
19
July
2023
January
2022
Retrieved
8
January
2022
Haack
Susan
1974
Deviant
Logic
Some
Philosophical
Issues
CUP
Archive
p
51
ISBN
978
0
521
20500
9
Retrieved
29
December
2021
Haack
Susan
1996
Deviant
Logic
Fuzzy
Logic
Beyond
the
Formalism
University
of
Chicago
Press
ISBN
978
0
226
31133
3
Haaparanta
Leila
2009
1
Introduction
The
Development
of
Modern
Logic
Oxford
University
Press
pp
4
6
ISBN
978
0
19
513731
6
Hansen
Hans
2020
Fallacies
The
Stanford
Encyclopedia
of
Metaphysics
Research
Lab
Stanford
University
Retrieved
19
July
2023
Hawthorne
James
2021
Inductive
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Archived
from
the
original
on
21
January
2022
Retrieved
6
January
2022
Hintikka
Jaakko
J
2019
Philosophy
of
logic
Encyclopædia
Britannica
Archived
from
the
original
on
28
April
2015
Retrieved
21
November
2021
JSTOR
2214318
Hintikka
Jaakko
Sandu
Gabriel
2006
What
is
Logic
In
Jacquette
D
ed
Philosophy
of
Logic
North
Holland
pp
13
39
ISBN
978
0
444
51541
4
Archived
from
the
original
on
7
December
2021
Retrieved
29
December
2021
Hintikka
Jaakko
J
Spade
Paul
Vincent
History
of
logic
Encyclopædia
Britannica
Retrieved
23
September
2022
29
January
2021
Retrieved
2
January
2022
Hurley
Patrick
J
2015
4
Categorical
Syllogisms
Logic
The
Essentials
Wadsworth
pp
189
237
ISBN
978
1
305
59041
0
University
Retrieved
29
September
2022
Jacquette
Dale
2006
Introduction
Philosophy
of
logic
today
Philosophy
of
Logic
North
Holland
pp
1
12
ISBN
978
0
444
51541
4
Archived
from
the
original
on
7
December
2021
Retrieved
29
December
2021
Johnson
Ralph
H
1999
The
Relation
Between
Formal
and
Informal
Logic
Argumentation
13
3
265
274
doi
10
1023
A
1007789101256
S
2
CID
141283158
Archived
from
the
original
on
7
December
2021
Retrieved
2
January
2022
Johnson
Ralph
H
15
July
2014
The
Rise
of
Informal
Logic
Essays
on
Argumentation
Critical
Thinking
Reasoning
and
Politics
University
of
Windsor
ISBN
978
0
920233
71
9
Ketland
Jeffrey
2005
Second
Order
Logic
Macmillan
Encyclopedia
of
Philosophy
Volume
8
Macmillan
Reference
USA
pp
707
708
ISBN
978
0
02
865788
2
Archived
from
the
original
on
7
December
2021
December
2021
Klement
Kevin
C
1995
b
Propositional
Logic
Internet
Encyclopedia
of
Philosophy
ISSN
2161
0002
Retrieved
23
September
2022
Times
Oxford
University
Press
ISBN
978
0
19
506135
2
Kneale
William
Kneale
Martha
1962
The
Development
of
Logic
Clarendon
Press
ISBN
978
0
19
824773
9
p
71
ISBN
978
90
277
1125
0
Korb
Kevin
2004
Bayesian
Informal
Logic
and
Fallacy
Informal
Logic
24
1
41
70
doi
10
22329
il.v
24
i
1
2132
Archived
from
the
original
on
10
November
2021
Retrieved
2
January
2022
Leary
Christopher
C
Kristiansen
Lars
2015
A
Friendly
Introduction
to
Mathematical
Logic
Suny
p
195
ISBN
978
1
942341
07
9
Lepore
Ernest
Cumming
Sam
14
September
2012
Meaning
and
Argument
An
Introduction
to
Logic
Through
Language
John
Wiley
Sons
p
5
ISBN
978
1
118
45521
0
Li
Wei
26
February
2010
Mathematical
Logic
Foundations
for
Information
Science
Springer
Science
Business
Media
p
ix
ISBN
978
3
7643
9977
1
University
Press
p
4
ISBN
978
1
139
49733
6
Liu
Shiyong
Guo
Kaizhong
7
March
2023
Error
Logic
Paving
Pathways
for
Intelligent
Error
Identification
and
Management
Springer
Nature
p
15
ISBN
978
3
031
00820
7
Łukasiewicz
Jan
1957
Aristotle's
Syllogistic
from
the
Standpoint
of
Modern
Formal
Logic
2
nd
ed
Oxford
University
Press
p
7
OCLC
656161566
the
original
on
15
April
2021
Retrieved
19
March
2021
Magnus
P
D
2005
Forall
X
An
Introduction
to
Formal
Logic
Victoria
BC
Canada
State
University
of
New
York
Oer
Services
pp
8
9
ISBN
978
1
64176
026
3
Archived
from
the
original
on
7
December
2021
Retrieved
29
December
2021
Makridis
Odysseus
2022
Symbolic
Logic
Springer
Nature
pp
1
2
ISBN
978
3
030
67396
3
knowledge
perception
inference
comparison
and
testimony
Monk
J
Donald
1976
Introduction
Mathematical
Logic
Springer
pp
1
9
doi
10
1007
978
1
4684
9452
5
1
ISBN
978
1
4684
9452
5
Archived
from
the
original
on
9
January
2022
Retrieved
9
January
2022
ISBN
978
1
349
16895
8
Moschovakis
Joan
2022
Intuitionistic
Logic
The
Stanford
Encyclopedia
of
Philosophy
Introduction
Metaphysics
Research
Lab
Stanford
University
Retrieved
11
March
2023
Nolt
John
2021
Free
Logic
1
The
Basics
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
10
September
2022
Archived
from
the
original
on
16
May
2021
Retrieved
4
January
2022
Online
Etymology
Staff
Logic
etymonline.com
Archived
from
the
original
on
29
December
2021
Retrieved
29
December
2021
ISBN
978
1
107
02839
5
Paulson
Lawrence
C
February
2018
Computational
Logic
Its
Origins
and
Applications
Proceedings
of
the
Royal
Society
A
Mathematical
Physical
and
Engineering
Sciences
474
2210
1
14
Possin
Kevin
2016
Conductive
Arguments
Why
is
This
Still
a
Thing
Informal
Logic
36
4
563
593
doi
10
22329
il.v
36
i
4
4527
Archived
from
the
original
on
8
January
2022
Retrieved
8
January
2022
Priest
Graham
Tanaka
Koji
Weber
Zach
2018
Paraconsistent
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
14
December
2021
Retrieved
29
December
2021
Putnam
H
1969
Is
Logic
Empirical
Boston
Studies
in
the
Philosophy
of
Science
Vol
5
pp
216
241
doi
10
1007
978
94
010
3381
7
5
ISBN
978
94
010
3383
1
Quine
Willard
Van
Orman
1981
Mathematical
Logic
Harvard
University
Press
p
1
ISBN
978
0
674
55451
1
Rautenberg
Wolfgang
1
July
2010
A
Concise
Introduction
to
Mathematical
Logic
Springer
p
15
ISBN
978
1
4419
1221
3
Rendsvig
Rasmus
Symons
John
2021
Epistemic
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
11
March
2023
Rini
Adriane
13
December
2010
Aristotle's
Modal
Proofs
Prior
Analytics
A
8
22
in
Predicate
Logic
Springer
Science
Business
Media
p
26
ISBN
978
94
007
0050
5
Ritola
Juho
1
December
2008
Walton's
Informal
Logic
A
Pragmatic
Approach
Informal
Logic
28
4
335
doi
10
22329
il.v
28
i
4
2856
Rocci
Andrea
8
March
2017
Modality
in
Argumentation
A
Semantic
ISBN
978
94
024
1063
1
Rošker
Jana
S
May
2015
Classical
Chinese
Logic
Philosophy
Compass
Philosophy
Compass
10
5
301
309
doi
10
1111
phc
3
12226
Creativity
Academic
Press
p
155
ISBN
978
0
12
227075
8
Rush
Penelope
2014
Introduction
The
Metaphysics
of
Logic
Cambridge
University
Press
pp
1
10
ISBN
978
1
107
03964
3
Archived
from
the
original
on
7
December
2021
Retrieved
8
January
2022
23
September
2022
Schechter
Joshua
Epistemology
of
Logic
Bibliography
PhilPapers
Retrieved
11
September
2022
Retrieved
8
January
2022
Shapiro
Stewart
Kouri
Kissel
Teresa
2022
Classical
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
19
July
2023
Believe
the
Irrational
JHU
Press
ISBN
978
1
4214
4445
1
Sider
Theodore
2010
Logic
for
Philosophy
Oxford
University
Press
ISBN
978
0
19
957558
9
original
on
28
February
2022
Retrieved
4
January
2022
Simpson
R
L
2008
Essentials
of
Symbolic
Logic
3
rd
ed
Broadview
Press
p
14
ISBN
978
1
77048
495
5
Smith
Robin
2022
Aristotle's
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
11
March
2023
Stolyar
Abram
Aronovich
1
January
1984
Introduction
to
Elementary
Mathematical
Logic
Courier
Corporation
ISBN
978
0
486
64561
2
Stone
Mark
A
2012
Denying
the
Antecedent
Its
Effective
Use
in
Argumentation
Informal
Logic
32
3
327
356
doi
10
22329
il.v
32
i
3
3681
Archived
from
the
original
on
28
February
2022
Retrieved
8
January
2022
March
2021
Tarski
Alfred
1994
Introduction
to
Logic
and
to
the
Methodology
of
the
Deductive
Sciences
Oxford
University
Press
p
40
ISBN
978
0
19
802139
1
Bibliographies
Oxford
University
Press
Retrieved
18
January
2023
Vidyabhusana
Satis
Chandra
1988
A
History
of
Indian
Logic
Ancient
Mediaeval
and
Modern
Schools
Motilal
Banarsidass
Publisher
p
221
ISBN
978
81
208
0565
1
2022
Väänänen
Jouko
2021
Second-order
and
Higher-order
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Archived
from
the
original
on
30
October
2021
Retrieved
23
ISBN
978
0
19
008615
2
Washell
Richard
F
1973
Logic
Language
and
Albert
the
Great
Journal
of
the
History
of
Ideas
34
3
445
50
doi
10
2307
2708963
JSTOR
2708963
Non-Classical
Springer
pp
145
6
ISBN
978
3
319
92591
2
Weber
Zach
Paraconsistent
Logic
Internet
Encyclopedia
of
Philosophy
Retrieved
12
December
2021
Weddle
Perry
2011
Chapter
36
Informal
logic
and
the
eductive-inductive
distinction
Across
the
Lines
of
Disciplines
De
Gruyter
Mouton
pp
383
388
doi
10
1515
9783110867718
383
Archived
from
the
original
on
8
January
2022
Retrieved
8
January
2022
Wilce
Alexander
2021
Quantum
Logic
and
Probability
Theory
2
1
Realist
Quantum
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
11
March
2023
ISBN
978
0
08
047664
3
Willman
Marshall
D
2022
Logic
and
Language
in
Early
Chinese
Philosophy
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Introduction
Retrieved
11
March
the
original
on
16
December
2021
Retrieved
4
January
2022
Zegarelli
Mark
2010
Logic
For
Dummies
John
Wiley
Sons
p
30
ISBN
978
1
118
05307
2
Audio
help
More
spoken
articles
Logic
at
Wikipedia's
sister
projects
Definitions
from
Wiktionary
Media
from
Commons
Library
resources
about
Logic
e
Logic
Outline
Formal
semantics
natural
language
Inference
Philosophy
of
logic
Proof
Semantics
of
logic
Syntax
topics
Mathematical
logic
Boolean
algebra
Set
theory
Paradoxes
Fallacies
Logic
symbols
Philosophy
portal
Branches
Applied
philosophy
Logic
Metaphilosophy
Philosophy
of
information
Retrieved
from
https
en.wikipedia.org/w/index.php?title
Logic&oldid
1266818857
Categories
Logic
Formal
sciences
international
relations
They
perceive
of
morality
as
an
appropriate
standard
for
judging
individual
relations
but
not
the
relations
of
states
as
the
latter
remains
to
be
governed
by
the
logic
of
power
and
interest
It
follows
that
from
a
realist
perspective
individuals
are
objects
rather
than
subjects
of
international
politics
Thus
they
triggered
debates
questioning
the
limit
of
state
rule
over
society
and
national
sovereignty
Accordingly
human
rights
issues
even
pose
a
particularly
potent
challenge
to
the
central
logic
of
a
system
of
independent
sovereign
states
under
anarchy
and
thus
to
one
of
the
key
assumptions
of
realism
whereby
such
development
cannot
be
explained
by
a
logic
of
self-interest
Sikkink
1998
517
Then
since
the
realist
perspective
ignores
the
fact
that
human
rights
rhetoric
which
propelled
and
shaped
the
Titanic
miracle
It
appears
that
the
film
industry
in
China
is
predominately
governed
by
a
commercial
logic
dictated
by
profit
maximization
as
adopted
by
both
official
cultural
policies
and
commercial
practices
As
played
out
by
the
Titanic
miracle
we
observe
how
culture
remains
an
ideological
sharing
on
social
media
Interrogating
a
wide
range
of
examples
from
Facebook
to
viral
celebrity
to
the
Abu
Ghraib
photos
the
book
uncovers
the
queer
and
entrepreneurial
logic
governing
what
circulates
in
digital
networks
and
how
we
talk
about
them
Jackson
1989
p
18
notes
that
Carl
Sauer
adopted
a
super-organic
approach
to
culture
which
asserts
that
culture
is
an
entity
at
a
higher
level
than
the
individual
that
it
is
governed
by
a
logic
of
its
own
and
that
it
actively
constrains
human
behaviour
see
Berkeley
School
Such
an
approach
severely
limits
the
questions
that
may
be
Harvard
Yale
and
their
peer
institutions
as
determined
by
test
scores
and
GPA
and
not
by
lineage
or
family
income
But
does
reality
support
those
expectations
Or
are
admissions
governed
by
a
logic
that
rewards
socioeconomic
status
while
disguising
it
as
personal
merit
Undergraduate
research
University
of
Kentucky
CS
department
Logic
programming
and
nonmonotonic
reasoning
systems
distributed
computing
Translation
and
conversion
of
logic
programs
to
default
theories
Analysis
of
logic
programs
including
stratification
well-founded
semantics
and
stable
model
semantics
Wrote
a
number
of
logic
programs
many
encoding
graph-theoretical
problems
Developed
and
optimized
a
distributed
implementation
of
the
stable
model
semantics
using
PVM
Parallel
Virtual
Machine
Served
as
a
teaching
assistant
for
two
three-week
sessions
of
IAAY's
Center
for
Talented
Youth
CTY
program
Assisted
the
instructor
of
a
Digital
Logic
class
for
talented
and
gifted
middle
school
and
high
school
students
Prepared
classroom
materials
graded
papers
and
exams
and
supervised
electronics
laboratory
assignments
for
approximately
30
doesn't
waste
much
time
chatting
with
us
about
the
footie
Bird
gives
the
strong
impression
that
straightforward
logic
governs
large
chunks
of
his
life
both
at
work
and
at
home
In
contrast
to
the
cynicism
and
flippancy
prevalent
among
those
working
for
him
originalism
From
my
limited
perspective
I
see
the
life
of
law
J
Scalia
doesn’t
agree
with
the
term
living
because
paper
and
ink
are
inanimate
objects
governed
by
logic
and
experience
text
history
tradition
precedent
but
also
by
contextuality
and
contemporary
circumstances
purpose
and
consequences
Justice
within
narrative
expanded
the
latterâ
s
representational
scope
and
especially
its
affective
impact
on
hearers
and
readersâ
The
literary
logic
governing
the
inclusion
of
poetry
into
prose
narrative
changes
over
time
however
See
S
WEITZMAN
Song
and
Story
in
Biblical
Narrative
The
history
of
a
literary
convention
in
Ancient
Israel
original
portrayal
of
guilt
is
long
lost
at
this
point
Although
each
essay
like
this
is
characteristically
bookended
by
Lim's
conclusion
the
essay
seems
to
be
governed
by
an
internal
logic
that
eludes
the
reader
states
in
her
introductory
essay
This
book
is
about
the
long
and
intense
spiritual
journey
I
have
undertaken
with
its
many
conflicts
of
head
and
heart
logic
and
feeling
joy
and
pain
certitude
and
doubt
True
to
her
introduction
the
collection
is
a
working
through
of
conflict
as
Lim
answers
the
questions
she
presents
herself
The
for
visualizing
knowledge
has
been
the
tree
Lima
2014
Its
origins
can
be
traced
back
to
Aristotle
and
to
the
Isagoge
an
introduction
to
Aristotle’s
logic
written
by
Porphyry
in
the
3
rd
Century
In
the
13
th
Century
Ramon
Llull
depicted
a
tree
of
the
sciences
in
his
Arbor
Scientiae
1295
Descartes
in
the
Principia
Philosophiae
1644
used
are
exposing
the
previous
testimony
as
false
e.g
group
2
The
logic
for
this
is
as
follows
On
the
face
of
it
there
is
no
rational
way
to
explain
the
halachah
of
hazamah
For
why
should
we
believe
the
second
group
of
witnesses
any
more
than
the
first
group
How
would
Rav
Ashi
respond
to
this
argument
Perhaps
Rav
Ashi
would
say
that
you
have
no
right
to
make
any
logical
extensions
from
a
law
that
is
clearly
not
governed
by
logic
This
viewpoint
can
be
compared
to
the
view
that
ironically
is
expressed
by
Rava
back
on
27
a
The
Gemara
there
explores
the
question
of
whether
we
apply
the
status
of
a
witness
Rava
there
states
that
we
do
not
apply
this
false
witness’s
disqualified
status
retroactively
Why
not
Because
since
as
explained
above
the
whole
concept
of
hazamah
defies
logic
we
cannot
treat
it
as
a
regular
case
where
we
would
certainly
establish
the
person’s
status
from
the
moment
of
the
crime
itself
So
Rav
Ashi
could
apply
this
kind
witnesses
we
consider
them
false
witnesses
Because
this
is
a
novel
ruling
we
can
only
apply
it
today
and
going
forward
But
on
our
page
Rava
is
asserting
that
logic
compels
us
to
say
that
an
exemption
from
the
normal
requirement
that
testimony
be
subject
to
hazamah
must
have
been
included
in
the
teaching
itself
Much
like
the
classic
example
of
BUTTON
Essential
Logic
Gates
to
Know
for
Discrete
Mathematics
Related
Subjects
Discrete
Mathematics
Logic
gates
are
the
building
blocks
of
digital
circuits
representing
fundamental
operations
in
Boolean
algebra
They
process
binary
inputs
to
produce
outputs
forming
the
basis
for
complex
logical
expressions
Symbolized
by
a
bar
over
the
variable
A
or
A
Fundamental
for
negation
in
logical
expressions
Used
to
create
more
complex
logic
circuits
by
inverting
signals
Truth
table
Outputs
1
for
input
0
and
0
for
input
1
it
outputs
true
1
Combination
of
an
AND
gate
followed
by
a
NOT
gate
Universal
gate
can
be
used
to
create
any
other
logic
gate
Important
in
digital
circuit
design
for
simplifying
logic
Truth
table
Outputs
1
for
all
combinations
except
1
1
5
NOR
gate
Combination
of
an
OR
gate
followed
by
a
NOT
gate
Also
a
universal
gate
can
be
used
to
construct
any
other
logic
gate
Useful
in
creating
circuits
that
require
a
default
false
state
be
the
habits
of
thought
enforced
by
the
current
technological
scheme
that
will
have
most
or
most
immediately
to
say
in
the
current
systematization
of
facts
The
working
logic
of
the
current
state
of
the
industrial
arts
will
necessarily
insinuate
itself
as
the
logical
scheme
which
must
of
course
effectually
govern
the
interpretation
and
limitations
of
workmanship
And
when
and
in
so
far
as
the
habituation
so
enforced
in
the
traffic
of
workday
life
goes
into
effect
as
a
scheme
of
logic
governing
the
quest
of
knowledge
such
principles
as
have
by
habit
found
acceptance
as
being
conventionally
salutary
and
conclusive
in
the
pecuniary
conduct
of
affairs
will
necessarily
leave
their
mark
framework
of
the
modern
system
of
learning
but
rather
the
preconceptions
of
that
disciplined
workmanship
that
has
been
instructed
in
the
logic
of
the
modern
technology
and
sophisticated
with
much
experience
in
a
civilization
in
whose
scheme
of
life
pecuniary
canons
are
definitive
taken
using
automated
computer
software
and
systems
These
decisions
do
not
involve
human
input
and
the
software
and
systems
apply
pre-defined
logic
programming
and
criteria
to
make
a
decision
and
assess
how
we
deal
with
you
in
connection
with
the
provision
of
services
strong
constructive
and
balanced
relations
especially
with
our
neighbors
That
same
logic
is
governing
our
policy
today
regarding
the
relationship
with
our
neighbor
Spain
It
is
a
fact
that
these
relations
have
recently
come
up
against
an
The
United
States
government
has
long
had
an
interest
in
nonproliferation
as
a
means
of
ensuring
national
security
The
logic
governing
this
interest
is
straightforward
as
long
as
weapons
continue
to
proliferate
among
foreign
and
hostile
powers
U.S
Active
Logic
Metacognitive
Computation
and
Mind
Toward
Human-Level
Cognitive
Adequacy
If
you
would
like
to
learn
more
about
Active
Logic
we
suggest
you
start
with
one
of
our
primers
Our
acronym
ALMECOM
stands
for
Active
Logic
Metacognitive
Computation
and
Mind
Active
Logic
is
a
time-sensitive
formalism
that
has
been
developed
with
real-world
applications
and
their
challenges
in
mind
Active
logic
explicitly
reasons
in
time
and
incorporates
a
history
of
its
reasoning
as
it
runs
This
characteristic
makes
active
logic
more
flexible
than
traditional
AI
systems
and
therefore
more
suitable
for
commonsense
real-world
reasoning
One
important
strategy
that
we
employ
in
active
logic
is
metareasoning
Because
active
logic
tracks
its
reasoning
it
is
able
to
reason
about
its
own
inferences
and
thereby
recognize
and
recover
from
errors
all
the
answers
to
your
questions
Logic
Guide
Help
Making
Forms
Using
the
Editor
Configuring
Behavior
How
it
worksSetting
a
conditionMultiple
conditions
Visibility
logicQuestion
visibility
logicSection
visibility
logicPage
visibility
logicUsing
visibility
logic
Applying
logic
to
actionsEmailsIntegrationsSuccess
Pages
Redirects
Complex
conditions
GotchasWorking
with
similar
question
titlesWorking
with
numbersBlank
or
Introduction
Conditional
logic
can
be
used
to
change
the
way
your
form
behaves
depending
on
how
it
is
filled
out
You
may
want
to
show
or
hide
a
certain
question
for
example
depending
on
how
another
question
is
answered
The
same
visibility
logic
can
be
applied
to
entire
sections
or
even
pages
of
content
You
can
also
use
logic
to
determine
which
actions
trigger
after
the
form
is
submitted
Set
conditions
Effectively
combine
multiple
conditions
Apply
visibility
logic
to
questions
sections
and
pages
Conditionally
trigger
specific
emails
integrations
success
pages
and
redirects
Combine
logic
with
Calculations
for
more
complex
conditions
Custom
Pricing
Rules
can
also
be
used
to
conditionally
alter
the
Setting
a
condition
Logic
can
be
toggled
on
in
many
places
throughout
the
form
editor
If
you
select
it
you’ll
see
a
series
of
dropdown
menus
used
to
set
a
condition
When
this
condition
is
met
the
content
will
be
visible
or
and
the
value
First
you'll
choose
the
question
Logic
can
be
based
on
any
field's
answer
including
Hidden
fields
and
Calculations
If
you've
set
up
any
Scoring
on
your
form
you'll
also
see
Score
listed
as
an
option
at
Need
the
condition
to
be
case-insensitive
Use
a
Calculation
field
to
transform
the
original
answer
to
all
uppercase
using
the
UPPER
function
Then
target
that
Calculation
in
the
logic
and
set
the
value
to
the
uppercase
version
of
the
answer
Read
on
to
learn
more
about
combining
logic
with
Calculations
Multiple
conditions
Multiple
Condition
Group
at
the
very
end
of
the
question
dropdown
menu
Kind
of
like
parentheses
in
a
math
equation
this
tells
the
form
which
part
of
the
logic
to
evaluate
first
Conditional
logic
that
uses
the
Multiple
Conditions
option
to
group
the
second
and
third
condition
together
like
A
or
B
and
C
Now
that
we've
got
a
basic
understanding
of
how
conditions
work
let's
take
a
look
at
the
different
ways
logic
can
be
applied
Visibility
logic
Question
visibility
logic
Perfect
for
a
follow-up
question
to
a
specific
answer
visibility
logic
is
most
often
applied
to
a
single
question
To
set
up
question
visibility
logic
1
Click
the
question
that
should
be
hidden
or
revealed
2
Make
sure
Hide
this
question
is
toggled
off
if
applicable
3
Toggle
on
Question
visibility
logic
4
Set
the
condition(s
that
should
be
met
for
the
question
to
appear
5
Click
Done
Once
added
you
can
edit
your
visibility
logic
by
clicking
on
the
Configure
Logic
x
conditions
button
below
the
Question
visibility
logic
toggle
The
Question
visibility
logic
toggle
is
available
in
the
configuration
panel
when
you
click
a
field
A
button
will
appear
below
this
allowing
you
to
edit
the
conditions
If
you'd
like
to
control
visibility
logic
for
a
group
of
questions
or
any
other
content
on
the
form
page
then
you'll
want
to
use
section
or
page
breaks
instead
Section
visibility
logic
Section
breaks
are
perfect
for
applying
logic
to
a
group
of
questions
without
changing
the
page
They
can
also
cover
other
content
so
you
can
use
them
to
apply
visibility
logic
to
headings
paragraph
text
images
embedded
videos
etc
represents
the
beginning
of
a
new
section
You
can
configure
the
break
to
add
visibility
logic
that
will
apply
to
everything
below
this
line
up
until
the
next
section
or
page
break
A
pair
of
section
breaks
wrapped
around
a
heading
and
a
few
questions
break
by
clicking
the
X
that
appears
to
the
left
Page
visibility
logic
When
an
entire
page
is
hidden
that
means
that
it
will
be
skipped
completely
when
the
user
clicks
the
next
page
button
You
can
use
visibility
logic
to
determine
which
pages
will
be
displayed
or
skipped
To
add
a
page
break
type
break
into
a
blank
line
in
the
editor
editing
the
form
Configure
the
break
to
add
visibility
logic
that
will
apply
to
everything
below
this
line
up
until
the
following
page
break
or
the
end
of
the
form
When
working
with
any
breaks
try
to
avoid
any
redundant
logic
If
logic
is
applied
to
a
page
it
will
automatically
be
applied
to
any
sections
and
questions
on
that
page
Repeating
the
same
logic
rules
in
those
sub-sections
and
individual
questions
can
make
things
more
difficult
to
edit
later
This
also
applies
to
individual
questions
inside
sections
Using
visibility
logic
The
most
common
use
of
logic
is
to
conditionally
show
or
hide
certain
questions
sections
or
pages
of
the
form
Animated
GIF
of
some
visibility
logic
in
practice
on
a
live
form
As
each
question
is
answered
more
questions
and
text
appear
Applying
logic
to
actions
Emails
Custom
emails
can
be
configured
under
After
Submission
Emails
When
adding
a
new
email
or
editing
an
existing
one
you
can
toggle
on
Email
Logic
at
the
very
bottom
of
the
page
After
the
form
is
submitted
the
email
will
be
sent
only
if
the
condition(s
have
been
met
A
custom
email
with
Email
Logic
toggled
on
and
the
Configure
Logic
button
displayed
email
to
your
mailing
list
in
MailChimp
but
only
if
they
indicate
on
the
form
that
they’d
like
to
sign
up
Conditional
logic
in
an
integration
Would
you
like
to
sign
up
for
the
newsletter
is
Sign
me
up
To
add
conditional
logic
to
your
integration
1
Head
to
After
Submission
Integrations
Webhooks
2
To
update
an
existing
integration
find
it
below
the
list
of
apps
create
a
new
one
select
the
app
and
follow
the
prompts
3
Scroll
down
to
the
very
bottom
of
the
page
and
toggle
on
Use
conditional
logic
4
Set
the
condition(s
that
should
be
met
in
order
for
the
integration
to
fire
Users
on
selected
pricing
plans
have
access
to
Dynamic
Success
Pages
Redirects
With
this
feature
logic
can
be
used
to
determine
which
page
displays
after
the
form
is
submitted
An
automatic
redirect
can
optionally
happen
after
that
with
the
same
conditions
applied
Quizzes
are
a
common
use
case
for
dynamic
success
pages—you
may
want
to
show
one
of
several
possible
pages
of
results
to
the
submitter
depending
on
their
answers
The
logic
could
be
based
on
their
final
Score
the
result
of
a
Calculation
or
the
answers
themselves
The
configuration
for
a
dynamic
success
page
titled
Quiz
Result
100
Correct
Email
logic
is
toggled
on
and
the
Configure
Logic
button
is
showing
that
2
conditions
are
set
3
Click
the
Add
Page
button
to
set
up
the
first
page
4
Toggle
on
Page
has
conditions
when
it
should
be
used
to
apply
logic
to
this
page
5
Design
the
success
page
save
it
and
then
repeat
for
the
next
conditional
page
Complex
conditions
You
may
need
to
apply
some
logic
that
is
a
bit
more
complicated
than
what
you
can
accomplish
using
a
few
dropdown
menus
On
selected
pricing
plans
robust
Calculation
fields
are
available
for
just
about
anything
you
can
think
of—applying
math
to
answers
transforming
answers
using
functions
etc
Once
you
have
the
answer
you
need
from
the
Calculation
you
can
select
that
field
in
the
logic
dropdown
instead
of
the
original
question
DATEDIFF
NOW
dob
years
Then
we’ll
apply
some
visibility
logic
to
the
Signature
field
on
our
form
using
the
Calculation's
result
Question
visibility
logic
with
the
condition
Age
Calculation
is
less
than
18
condition
We
include
each
field's
Question
ID
in
dropdowns
to
help
you
identify
which
question
you
are
selecting
The
first
Choose
question
dropdown
in
visibility
logic
showing
a
list
that
includes
multiple
copies
of
the
same
question
title
but
with
different
Question
IDs
You
can
also
temporarily
add
a
number
or
another
identifier
to
the
beginning
of
each
repeated
question's
title
so
that
you
know
exactly
what
you’re
looking
for
in
the
logic
dropdown
or
the
question
panel
The
question
panel
showing
a
list
of
numbered
questions
with
otherwise
similar
titles
Once
all
of
the
logic
is
set
up
and
tested
you
can
go
back
through
and
delete
the
numbers
to
return
the
questions
to
their
original
names
Slider
Score
etc
If
you'd
like
to
use
this
kind
of
logic
with
a
different
question
type
like
Dropdown
or
Scale
try
using
a
Calculation
field
to
turn
that
answer
into
a
numeric
value
first
Blank
or
unfinished
conditions
Screenshot
of
some
unfinished
conditional
logic
Score
is
Answer
OR
Choose
question
If
you
find
that
some
content
is
simply
never
visible
or
a
certain
action
never
fires
double-check
the
logic
to
make
sure
that
all
of
the
conditions
are
set
up
completely
including
the
value
for
each
answer
When
a
question
is
deleted
or
its
type
or
options
get
changed
this
may
affect
logic
that
depends
on
that
question
in
another
part
of
the
form
If
logic
is
toggled
on
but
no
condition
is
set
then
this
logic
will
always
fail
The
same
is
true
for
conditions
that
are
missing
a
value
for
the
answer
If
you
don't
need
a
certain
condition
delete
the
whole
line
If
you
don't
need
any
conditions
toggle
the
logic
setting
off
completely
3
Computer
Science
4
Technical
Reports
from
UMIACS
5
Information
Retrieval
on
the
World
Wide
Web
and
Active
Logic
A
Survey
and
Problem
Definition
Information
Retrieval
on
the
World
Wide
Web
and
Active
Logic
A
Survey
and
Problem
Definition
Loading
involves
Active
Logic
is
a
formalism
that
has
been
developed
with
real-world
applications
and
their
challenges
in
mind
Motivating
its
design
is
the
thought
that
one
of
the
factors
that
supports
the
flexibility
of
human
reasoning
is
that
it
takes
place
step-wise
in
time
Active
Logic
is
one
of
a
family
of
inference
engines
step-logics
that
explicitly
reason
in
time
and
incorporate
a
history
of
their
reasoning
as
they
run
This
characteristic
makes
Active
Logic
systems
more
flexible
than
traditional
AI
systems
and
therefore
more
suitable
for
commonsense
real-world
reasoning
In
this
report
we
mainly
will
survey
recent
concentrate
on
topic-specific
search
engines
focused
crawling
and
finally
will
propose
an
Information
Integration
Environment
based
on
the
Active
Logic
framework
Keywords
Web
Information
Retrieval
Web
Crawling
Focused
Crawling
Machine
Learning
Active
Logic
Also
UMIACS-TR
2001
69
Notes
native
integration
with
other
middleware
and
APIs
and
support
for
a
security
model
that
separates
security
code
from
business
logic
typical
middleware
architecture
Oracle
WebLogic
Server
is
a
component
WebLogic
allows
users
to
develop
and
deploy
an
application
that
has
business
logic
and
allows
the
application
to
access
other
services
like
database
messaging
or
other
enterprise
systems
It
is
a
robust
platform
for
distributed
applications
2
4
Fluent
calculus
solution
2
5
Event
calculus
solution
2
6
Default
logic
solution
2
7
Answer
set
programming
solution
2
8
Separation
logic
solution
2
9
Action
description
languages
3
See
also
In
artificial
intelligence
with
implications
for
cognitive
science
the
frame
problem
describes
an
issue
with
using
first-order
logic
to
express
facts
about
a
robot
in
the
world
Representing
the
state
of
a
robot
with
traditional
first-order
logic
requires
the
use
of
many
axioms
that
simply
imply
that
things
in
the
environment
do
not
change
arbitrarily
For
example
Hayes
describes
a
block
world
with
rules
about
stacking
blocks
together
In
a
first-order
logic
system
additional
axioms
are
required
to
make
inferences
about
the
environment
for
example
that
a
block
cannot
change
position
unless
it
is
are
called
fluents
A
domain
in
which
the
door
is
closed
and
the
light
off
at
time
0
and
the
door
opened
at
time
1
can
be
directly
represented
in
logic
clarification
needed
by
the
following
formulae
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
situation
calculus
gives
more
details
While
the
three
formulae
above
are
a
direct
expression
in
logic
of
what
is
known
they
do
not
suffice
to
correctly
draw
consequences
While
the
following
conditions
representing
the
expected
situation
are
language
for
the
specification
of
dynamical
domains
therefore
such
a
domain
can
be
first
expressed
in
this
language
and
then
automatically
translated
into
logic
In
this
article
only
the
expression
in
logic
is
shown
and
only
in
the
simplified
language
with
no
action
names
false
A
successor
state
axiom
is
a
formalization
in
logic
of
these
two
facts
For
example
if
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
The
fluent
calculus
is
a
variant
of
the
situation
calculus
It
solves
the
frame
problem
by
using
first-order
logic
terms
rather
than
predicates
to
represent
the
states
Converting
predicates
into
terms
in
first-order
logic
is
called
reification
the
fluent
calculus
can
be
seen
as
a
logic
in
which
predicates
representing
the
state
of
conditions
are
reified
The
difference
between
a
predicate
and
a
term
in
first-order
logic
is
that
a
term
is
a
representation
of
an
object
possibly
a
complex
object
composed
of
other
objects
while
a
predicate
represents
a
condition
The
event
calculus
solves
the
frame
problem
eliminating
undesired
solutions
by
using
a
non-monotonic
logic
such
as
first-order
logic
with
circumscription
3
or
by
treating
the
event
calculus
as
a
logic
program
using
negation
as
failure
Default
logic
solution
edit
state
in
which
it
is
Leibniz
An
Introduction
to
a
Secret
Encyclopædia
c
1679
This
default
sometimes
called
the
commonsense
law
of
inertia
was
expressed
by
Raymond
Reiter
in
default
logic
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
edit
The
counterpart
of
the
default
logic
solution
in
the
language
of
answer
set
programming
is
a
rule
with
strong
negation
displaystyle
r(X
remains
true
Separation
logic
solution
edit
Separation
logic
is
a
formalism
for
reasoning
about
computer
programs
using
pre/post
specifications
of
the
form
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
semantics
MATH
displaystyle
mathrm
precondition
mathrm
code
mathrm
postcondition
Separation
logic
is
an
extension
of
Hoare
logic
oriented
to
reasoning
about
mutable
data
structures
in
computer
memory
and
other
dynamic
resources
and
it
has
a
special
connective
disjoint
memory
regions
5
6
Separation
logic
employs
a
tight
interpretation
of
pre/post
specs
which
say
that
the
code
can
only
access
memory
locations
guaranteed
to
exist
by
the
precondition
7
This
leads
to
the
soundness
of
the
most
important
inference
rule
of
the
logic
the
frame
rule
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
deployed
industrially
to
codebases
with
tens
of
millions
of
lines
9
There
appears
to
be
some
similarity
between
the
separation
logic
solution
to
the
frame
problem
and
that
of
the
fluent
calculus
mentioned
above
further
explanation
needed
Since
domains
are
expressed
in
these
languages
rather
than
directly
in
logic
the
frame
problem
only
arises
when
a
specification
given
in
an
action
description
logic
is
to
be
translated
into
logic
Typically
however
a
translation
is
given
from
these
languages
to
answer
set
programming
rather
than
first-order
logic
See
also
Commonsense
reasoning
Defeasible
reasoning
Linear
logic
Separation
logic
Non-monotonic
logic
Qualification
problem
Ramification
problem
investigation
of
the
common
sense
law
of
inertia
MIT
Press
4
i.e
no
contradicting
information
is
known
5
Reynolds
J.C
2002
Separation
logic
A
logic
for
shared
mutable
data
structures
Proceedings
17
th
Annual
IEEE
Symposium
on
Logic
in
Computer
Science
Copenhagen
Denmark
IEEE
Comput
Soc
pp
55
74
CiteSeerX
10
1
1
110
7749
doi
10
1109
LICS
2002
1029817
ISBN
978
0
7695
1483
3
S
2
CID
6271346
6
O'Hearn
Peter
2019
01
28
Separation
logic
Communications
of
the
ACM
62
2
86
95
doi
10
1145
3211968
ISSN
0001
0782
7
O’Hearn
Peter
Reynolds
John
Yang
Hongseok
2001
Local
Reasoning
about
Programs
that
Alter
Data
Structures
In
Fribourg
Laurent
ed
Computer
Science
Logic
Lecture
Notes
in
Computer
Science
Vol
2142
Berlin
Heidelberg
Springer
pp
1
19
doi
10
1007
3
540
44802
0
1
ISBN
978
3
540
44802
0
Gelfond
M
Lifschitz
V
1993
Representing
action
and
change
by
logic
programs
Journal
of
Logic
Programming
17
2
4
301
322
doi
10
1016
0743
1066
93
90035
f
Transactions
on
Artificial
Intelligence
2
3
4
193
210
Hanks
S
McDermott
D
1987
Nonmonotonic
logic
and
temporal
projection
Artificial
Intelligence
33
3
379
412
doi
10
1016
0004
3702
87
90043
9
Miller
R
Shanahan
M
1999
The
event-calculus
in
classical
logic
alternative
axiomatizations
Electronic
Transactions
on
Artificial
Intelligence
3
1
77
105
doi
10
1145
316542
316545
S
2
CID
16203802
Reiter
R
1980
A
logic
for
default
reasoning
PDF
Artificial
Intelligence
13
1
2
81
132
CiteSeerX
10
1
1
250
9224
doi
10
1016
0004
3702
80
90014
4
Sandewall
E
Shoham
Y
1995
Non-monotonic
Temporal
Reasoning
In
Gabbay
D
M
Hogger
C
J
Robinson
J
A
eds
Handbook
of
Logic
in
Artificial
Intelligence
and
Logic
Programming
Vol
vol
4
Oxford
University
Press
pp
439
498
ISBN
978
0
19
853791
5
Sandewall
E
1998
Cognitive
robotics
logic
and
its
metatheory
Features
and
fluents
revisited
Electronic
Transactions
on
Artificial
Intelligence
2
3
4
307
329
doi
10
1016
0004
3702
95
90043
8
Turner
H
1997
Representing
actions
in
logic
programs
and
default
theories
a
situation
calculus
approach
PDF
Journal
of
Logic
Programming
31
1
3
245
298
doi
10
1016
s
0743
1066
96
00125
2
Knowledge
representation
Concepts
in
epistemology
Logic
programming
Philosophical
problems
1969
introductions
policies
or
regulations
To
address
this
issue
we
propose
the
integration
of
databases
in
particular
relational
databases
with
a
logic
reasoner
and
rule
engine
We
argue
that
defeasible
logic
is
an
appropriate
formalism
to
model
rules
in
particular
when
the
rules
are
meant
to
model
regulations
The
resulting
RuleOMS
provides
an
efficient
contribution
Measurements
or
Duration
5
pages
Keywords
Child
Care
Compliance
Defeasible
Logic
Online
Management
System
Reasoning
Regulations
Rule-based
DOI
10
1145
2746090
2746120
ADMIN
MOD
I
would
like
to
write
a
paper
in
logic
but
I
do
not
know
where
to
start
I
have
sufficient
knowledge
on
the
applications
of
logic
However
I
have
no
idea
how
to
write
a
paper
in
logic
In
academic
classes
and
most
of
other
resources
online
you
would
be
taught
how
to
apply
logic
I
have
never
seen
a
logic
class
not
a
philosophy
of
logic
class
where
the
professor
requires
her
students
to
write
papers
because
the
course
is
concentrated
on
the
understanding
and
application
of
logic
I
want
to
write
a
paper
in
logic
I
would
like
to
know
where
to
start
Can
someone
guide
me
on
what
research
topics
should
I
look
into
or
what
problems
should
I
try
to
tackle
Thank
you
in
advance
EDIT
I
might
have
not
been
quite
clear
I
know
a
lot
about
logic
including
advanced
propositional
and
predicate
logic
modal
logic
free
logic
discrete
mathematics
Gödel's
incompleteness
etc
I
know
how
to
solve
problems
and
do
proofs
but
I
am
not
sure
how
to
write
a
paper
on
the
subject
I
can
only
write
papers
on
truth
and
meaning
which
could
be
considered
as
philosophy
of
logic
and
philosophy
of
language
but
I
am
not
sure
what
a
logic
paper
would
look
like
BUTTON
Read
more
Archived
post
New
comments
cannot
be
posted
and
votes
cannot
be
cast
example
is
in
the
SAT-based
analysis
of
quantification
information
flow
programs
where
efficient
methods
for
conditioned
model
counting
using
d-DNNF
were
exploited
5
Another
example
is
the
Probabilistic
Logic
Programming
framework
ProbLog
6
Here
the
model
counters
were
used
to
provide
probabilistic
inference
for
targeted
queries
compiled
from
a
given
logic
program
Finally
since
the
original
publication
of
this
work
in
2012
by
Muise
For
stable
model
counting
every
model
represented
by
the
compiled
theory
must
be
stable
a
notion
in
logic
programming
that
stipulates
that
the
truth
of
atoms
cannot
be
self
supporting
given
the
logic
program’s
rules
9
To
accommodate
for
stable
models
DSHARP
was
modified
to
include
an
internal
propagator
that
rules
out
any
model
6
Fierens
D
den
Broeck
G
V
Renkens
J
Shterionov
D
S
Gutmann
B
Thon
I
Janssens
G
and
Raedt
L
D
2015
Inference
and
learning
in
probabilistic
logic
programs
using
15
3
358
401
7
Aziz
R
A
Chu
G
Muise
C
and
Stuckey
P
2015
Stable
model
counting
and
its
application
in
probabilistic
logic
programming
In
The
29
th
AAAI
Conference
on
Artificial
Intelligence
8
Aziz
R
A
Chu
G
Muise
C
and
Stuckey
P
2015
Projected
Applications
of
Satisfiability
Testing
9
Gelfond
M
and
Lifschitz
V
1988
The
stable
model
semantics
for
logic
programming
In
Logic
Programming
Proceedings
of
the
Fifth
International
Conference
and
Symposium
Seattle
Washington
August
15
19
1988
2
Volumes
1070
1080
Church’s
type
theory
aka
simple
type
theory
is
a
formal
logical
language
which
includes
classical
first-order
and
propositional
logic
but
is
more
expressive
in
a
practical
sense
It
is
used
with
some
modifications
and
enhancements
in
most
modern
applications
of
type
information
systems
sophisticated
automated
reasoning
systems
systems
for
verifying
the
correctness
of
mathematical
proofs
and
a
range
of
projects
involving
logic
and
artificial
intelligence
Some
examples
and
further
references
are
given
in
Sections
1
2
2
and
5
below
Type
theories
are
also
called
higher-order
logics
since
they
allow
quantification
not
only
over
individual
variables
as
in
first-order
logic
but
also
over
function
predicate
and
even
higher-order
variables
Type
theories
characteristically
assign
types
to
entities
distinguishing
for
example
between
numbers
sets
of
numbers
x
of
all
natural
numbers
y
such
that
x
is
less
than
y
Thus
sets
properties
and
relations
may
be
regarded
as
particular
kinds
of
functions
Church’s
type
type
theory
is
thus
a
logic
of
functions
and
in
this
sense
it
is
in
the
tradition
of
the
work
of
Frege’s
Begriffsschrift
The
opposite
approach
would
be
to
reduce
functions
to
ontological
argument
for
the
existence
of
God
This
example
illustrates
two
interesting
aspects
Church’s
type
theory
can
be
employed
as
a
meta-logic
to
concisely
embed
expressive
other
logics
such
as
the
higher-order
modal
logic
assumed
by
Gödel
By
exploiting
the
possible
world
semantics
of
this
target
logic
its
syntactic
elements
are
defined
in
such
a
way
that
the
infrastructure
of
the
meta-logic
are
reused
as
much
as
possible
In
this
technique
called
shallow
semantical
embedding
the
modal
operator
Box
for
example
is
simply
identified
with
actuality
can
be
modeled
as
varphi
o
imath
n
imath
where
n
imath
is
a
nominal
constant
symbol
in
the
meta-logic
denoting
a
particular
possible
world
The
above
technique
can
be
exploited
for
a
natural
encoding
and
automated
assessment
of
Gödel’s
ontological
argument
in
higher-order
modal
logic
which
unfolds
into
formulas
in
Church’s
type
theory
such
that
higher-order
theorem
provers
can
be
applied
Further
details
are
presented
in
Section
6
Logic
and
Philosophy
of
the
SEP
entry
on
automated
reasoning
and
also
in
Section
5
2
moreover
see
Benzmüller
Woltzenlogel-Paleo
2014
and
Benzmüller
rE
1
rE
6
alpha
for
all
type
symbols
alpha
We
shall
sometimes
refer
to
elementary
type
theory
as
cT
It
embodies
the
logic
of
propositional
connectives
quantifiers
and
λ-conversion
in
the
context
of
type
theory
sfQ
o
alpha
alpha
s
Tarski
1923
noted
that
in
the
context
of
higher-order
logic
one
can
define
propositional
connectives
in
terms
of
logical
equivalence
and
quantifiers
Quine
1956
showed
how
both
quantifiers
and
connectives
It
is
natural
to
compare
the
semantics
of
type
theory
with
the
semantics
of
first-order
logic
where
the
theorems
are
precisely
the
wffs
which
are
valid
in
all
interpretations
From
an
intuitive
point
of
view
the
natural
interpretations
of
type
theory
are
standard
models
Thus
far
investigations
of
model
theory
for
Church’s
type
theory
have
been
far
less
extensive
than
for
first-order
logic
Nevertheless
there
has
been
some
work
on
methods
of
constructing
nonstandard
models
of
type
theory
and
models
in
which
various
forms
of
extensionality
fail
The
Unifying
Principle
was
introduced
in
Smullyan
1963
see
also
Smullyan
1995
as
a
tool
for
deriving
a
number
of
basic
metatheorems
about
first-order
logic
in
a
uniform
way
The
principle
was
extended
to
elementary
type
theory
by
Andrews
1971
and
to
extensional
type
theory
that
is
Henkin’s
general
semantics
without
description
or
An
expansion
proof
is
a
generalization
of
the
notion
of
a
Herbrand
expansion
of
a
theorem
of
first-order
logic
it
provides
a
very
elegant
concise
and
nonredundant
representation
of
the
relationship
between
the
theorem
and
a
tautology
which
can
be
obtained
from
it
by
3
6
The
Decision
Problem
Since
type
theory
includes
first-order
logic
it
is
no
surprise
that
most
systems
of
type
theory
are
undecidable
However
one
may
look
for
solvable
special
cases
of
the
decision
problem
For
example
the
system
Although
the
system
cT
of
elementary
type
theory
is
analogous
to
first-order
logic
in
certain
respects
it
is
a
considerably
more
complex
language
and
special
cases
of
the
decision
problem
for
provability
in
cT
seem
rather
intractable
for
the
most
part
of
the
form
exists
bz\bC
where
bC
is
quantifier-free
is
unsolvable
By
contrast
the
corresponding
decision
problem
in
first-order
logic
with
function
symbols
is
known
to
be
solvable
Maslov
1967
Since
irrelevant
or
vacuous
quantifiers
can
always
be
introduced
this
shows
that
the
only
solvable
classes
of
wffs
of
years
see
e.g
the
references
on
superposition
based
calculi
given
below
The
challenges
are
obviously
much
bigger
than
in
first-order
logic
The
practically
way
more
expressive
nature
of
the
term-language
of
Church’s
type
theory
causes
a
larger
bushier
and
more
difficult
to
traverse
proof
search
space
than
in
first-order
logic
Moreover
remember
that
unification
which
constitutes
a
very
important
control
and
filter
mechanism
in
first-order
theorem
proving
is
undecidable
in
general
in
type
theory
see
Section
3
2
On
the
positive
side
however
there
is
a
chance
to
find
significantly
shorter
proofs
than
in
first-order
logic
This
is
well
illustrated
with
a
small
concrete
example
in
Boolos
1987
for
which
a
fully
automated
proof
seems
now
in
reach
Benzmüller
et
al
2023
and
on
heuristic
rewriting
In
the
tradition
of
its
predecessors
Leo-III
cooperates
with
first-order
reasoning
tools
using
translations
to
many-sorted
first-order
logic
The
prover
accepts
every
common
TPTP
syntax
dialect
and
is
thus
very
widely
applicable
Recently
the
prover
has
also
been
extended
to
natively
supports
almost
every
normal
higher-order
modal
logic
Steen
et
al
2023
CVC
4
CVC
5
and
Verit
Barbosa
et
al
2019
are
SMT-based
automated
Vampire
Bhayat
Reger
2020
which
has
dominated
the
TPTP
competitions
in
first-order
logic
for
more
than
two
decades
now
also
supports
the
automation
of
Church's
type
theory
using
a
combinator-based
superposition
calculus
Vampire
was
the
winner
of
the
ordinary
English
which
are
reprinted
in
Montague
1974
A
crucial
component
of
Montague’s
analysis
of
natural
language
is
the
definition
of
a
tensed
intensional
logic
Montague
1974
256
which
is
an
enhancement
of
Church’s
type
theory
Montague
Grammar
had
a
huge
impact
and
has
since
been
developed
in
many
further
directions
not
least
in
Typelogical/Categorical
Grammar
Further
related
work
on
intensional
and
higher-order
modal
logic
is
presented
in
Gallin
1975
and
Muskens
2006
5
3
Computational
Metaphysics
and
Artificial
Intelligence
Church’s
type
theory
is
a
classical
logic
but
topical
applications
in
philosophy
and
artificial
intelligence
often
require
expressive
non-classical
logics
In
order
to
support
such
applications
with
embedding
technique
see
also
Section
1
2
2
has
been
developed
that
generalizes
and
extends
the
ideas
underlying
the
well
known
standard
translation
of
modal
logics
to
first-order
logic
The
technique
was
applied
for
the
assessment
of
modern
variants
of
the
ontological
argument
with
a
range
of
higher-order
theorem
provers
including
Scott’s
emendation
of
it
and
to
confirm
the
consistency
of
the
emended
premises
More
details
on
this
work
are
presented
in
a
related
SEP
entry
on
automated
reasoning
see
Section
4
6
on
Logic
and
Philosophy
The
semantical
embedding
approach
has
been
adapted
and
further
extended
for
a
range
of
other
non-classical
logics
and
related
applications
In
normative
reasoning
to
control
AI
systems
Benzmüller
et
al
2020
as
well
as
an
automatic
proof
of
the
muddy
children
puzzle
see
Appendix
B
of
dynamic
epistemic
logic
which
is
a
famous
puzzle
in
epistemic
reasoning
respectively
dynamic
epistemic
reasoning
doi
10
4064
fm
52
3
345
350
1971
Resolution
in
Type
Theory
The
Journal
of
Symbolic
Logic
36
3
414
432
Reprinted
in
Siekmann
Wrightson
1983
and
in
Benzmüller
et
al
2008
doi
10
2307
2269949
doi
10
1007
978
3
642
81955
1
1972
a
General
Models
and
Extensionality
The
Journal
of
Symbolic
Logic
37
2
395
397
Reprinted
in
Benzmüller
et
al
2008
doi
10
2307
2272982
1972
b
General
Models
Descriptions
and
Choice
in
Type
Theory
The
Journal
of
Symbolic
Logic
37
2
385
394
Reprinted
in
Benzmüller
et
al
2008
doi
10
2307
2272981
1974
Provability
in
Elementary
Type
Theory
Zeitschrift
für
Volume
2
Chapter
15
pp
965
1007
doi
10
1016
B
978
044450813
3
50017
5
2002
An
Introduction
to
Mathematical
Logic
and
Type
Theory
To
Truth
Through
Proof
Applied
Logic
Series
27
second
edition
Dordrecht
Springer
Netherlands
doi
10
1007
978
94
015
9934
4
Andrews
Peter
B
Matthew
Bishop
Sunil
Issar
Dan
Nesmith
Frank
Andrews
Peter
B
and
Chad
E
Brown
2006
TPS
A
Hybrid
Automatic-Interactive
System
for
Developing
Proofs
Journal
of
Applied
Logic
4
4
367
395
doi
10
1016
j.jal
2005
10
002
Baader
Franz
and
Wayne
Snyder
2001
Unification
Theory
in
Robinson
and
Voronkov
2001
Volume
1
Chapter
8
Amsterdam
Elsevier
Science
pp
445
533
doi
10
1016
B
978
044450813
3
50010
2
Backes
Julian
and
Chad
Edward
Brown
2011
Analytic
Tableaux
for
Higher-Order
Logic
with
Choice
Journal
of
Automated
Reasoning
47
4
451
479
doi
10
1007
s
10817
011
9233
2
Barbosa
Haniel
Andrew
Reynolds
Daniel
El
Ouraoui
Cesare
Tinelli
and
Clark
Barret
2019
Extending
SMT
Solvers
to
Higher-Order
Logic
in
Automated
Deduction
CADE
27
Pascal
Fontaine
ed
Lecture
Notes
in
Computer
Science
11716
Cham
Springer
Nature
Switzerland
AG
doi
10
1007
978
3
030
29436
6
3
Barendregt
H
P
1984
The
Lambda
Calculus
Its
Syntax
and
Semantics
Studies
in
Logic
and
the
Foundations
of
Mathematics
103
revised
edition
Amsterdam
North-Holland
Barendregt
Henk
Wil
Dekkers
and
Richard
Statman
2013
Lambda
doi
10
1090
noti
2860
Bentkamp
Alexander
Jasmin
Blanchette
Simon
Cruanes
and
Uwe
Waldmann
2018
Superposition
for
Lambda-Free
Higher-Order
Logic
in
Galmiche
et
al
2018
28
46
doi
10
1007
978
3
319
94205
6
3
Bentkamp
Alexander
Jasmin
Blanchette
Visa
Nummelin
Sophie
doi
10
1145
3636362
3636367
Bentkamp
Alexander
Jasmin
Blanchette
Sophie
Tourret
and
Petar
Vukmirovic
2023
c
Superposition
for
Higher-Order
Logic
Journal
of
Automated
Reasoning
67
1
10
doi
10
1007
s
10817
022
09649
9
Bentkamp
Alexander
Jasmin
Blanchette
Sophie
Tourret
Petar
doi
10
1016
j.scico
2018
10
008
Benzmüller
Christoph
and
Michael
Kohlhase
1997
Model
Existence
for
Higher
Order
Logic
SEKI
Report
SR
97
09
1998
a
Extensional
Higher-Order
Resolution
Kirchner
and
Kirchner
1998
56
71
doi
10
1007
BFb
0054248
Benzmüller
Christoph
Chad
E
Brown
and
Michael
Kohlhase
2004
Higher-Order
Semantics
and
Extensionality
The
Journal
of
Symbolic
Logic
69
4
1027
1088
doi
10
2178
jsl
1102022211
2009
Cut-Simulation
and
Impredicativity
Logical
Methods
in
Computer
Science
5
1
6
doi
10
2168
LMCS
5
1
6
2009
Statman
eds
2008
Reasoning
in
Simple
Type
Theory
Festschrift
in
Honour
of
Peter
B
Andrews
on
His
70
th
Birthday
Studies
in
Logic
17
London
College
Publications
Benzmüller
Christoph
David
Fuenmayor
Alexander
Steen
and
Geoff
Sutcliffe
2023
Who
Finds
the
Short
Proof
Logic
Journal
of
the
IGPL
doi
10
1093
jigpal/jzac
082
Benzmüller
Christoph
and
Dale
Miller
2014
Automation
of
Higher
Order
Logic
in
Computational
Logic
Handbook
of
the
History
of
Logic
9
Dov
M
Gabbay
Jörg
H
Siekmann
and
John
Woods
eds
Amsterdam
Elsevier
215
254
Benzmüller
Christoph
Xavier
Parent
and
Leendert
van
der
Torre
Reasoning
55
4
389
404
doi
10
1007
s
10817
015
9348
y
Benzmüller
Christoph
and
Dana
S
Scott
2019
Automating
Free
Logic
in
HOL
with
an
Experimental
Application
in
Category
Theory
Journal
of
Automated
Reasoning
64
53
72
2020
doi
10
1007
s
10817
018
09507
7
doi
10
1007
978
3
662
07964
5
Bhayat
Ahmed
and
Giles
Reger
2020
A
Combinator-Based
Superposition
Calculus
for
Higher-Order
Logic
in
Automated
Reasoning
IJCAR
2020
Nicolas
Peltier
and
Sofronie-Stokkermans
eds
Lecture
Notes
in
Computer
Science
12166
Cham
Springer
Search
in
Ganzinger
1999
359
373
doi
10
1007
3
540
48660
7
32
Blanchette
Jasmin
Christian
and
Tobias
Nipkow
2010
Nitpick
A
Counterexample
Generator
for
Higher-Order
Logic
Based
on
a
Relational
Model
Finder
in
Interactive
Theorem
Proving
Matt
Kaufmann
and
Lawrence
C
Paulson
eds
Lecture
Notes
in
Computer
doi
10
1007
s
10817
013
9278
5
Boolos
George
1987
A
Curious
Inference
Journal
of
Philosophical
Logic
16
1
1
12
doi
10
1007
BF
00250612
Brown
Chad
E
2004
Set
Comprehension
in
Church’s
Type
Theory
PhD
Thesis
Department
of
Mathematical
Sciences
Carnegie
Mellon
University
Pittsburgh
PA
2007
Automated
Reasoning
in
Higher-Order
Logic
Set
Comprehension
and
Extensionality
in
Church
s
Type
Theory
Studies
in
Logic
Logic
and
Cognitive
Systems
10
London
King’s
College
Publications
2012
Satallax
An
Automatic
Higher-Order
Prover
in
Büchi
J
Richard
1953
Investigation
of
the
Equivalence
of
the
Axiom
of
Choice
and
Zorn’s
Lemma
from
the
Viewpoint
of
the
Hierarchy
of
Types
The
Journal
of
Symbolic
Logic
18
2
125
135
doi
10
2307
2268945
Church
Alonzo
1932
A
Set
of
Postulates
for
the
Foundation
of
Logic
The
Annals
of
Mathematics
33
2
346
366
doi
10
2307
1968337
1940
A
Formulation
of
the
Simple
Theory
of
Types
The
Journal
of
Symbolic
Logic
5
2
56
68
Reprinted
in
Benzmüller
et
al
2008
doi
10
2307
2266170
1941
The
Calculi
of
Lambda
Conversion
Annals
of
Mathematics
Studies
6
Princeton
NJ
Princeton
University
Press
1956
Introduction
to
Mathematical
Logic
Princeton
NJ
Princeton
University
Press
Czajka
Łukasz
and
Cezary
Kaliszyk
2018
Hammer
for
Coq
doi
10
1016
B
978
044450813
3
50018
7
Dowek
Gilles
and
Benjamin
Werner
2003
Proof
Normalization
Modulo
The
Journal
of
Symbolic
Logic
68
4
1289
1316
doi
10
2178
jsl
1067620188
Farmer
William
M
2008
The
Seven
Virtues
of
Simple
Type
Theory
Journal
of
Applied
Logic
6
3
267
286
doi
10
1016
j.jal
2007
11
001
Farmer
William
M
2023
Simple
Type
Theory
A
Practical
Logic
for
Expressing
and
Reasoning
About
Mathematical
Ideas
Cham
Birkhäuser
doi
10
1007
978
3
031
21112
6
IMPS
An
Interactive
Mathematical
Proof
System
Journal
of
Automated
Reasoning
11
2
213
248
doi
10
1007
BF
00881906
Gallin
Daniel
1975
Intensional
and
Higher-Order
Modal
Logic
Amsterdam
North-Holland
Galmiche
Didier
Stephan
Schulz
and
Roberto
Sebastiani
eds
Unification
Problem
Theoretical
Computer
Science
13
2
225
230
doi
10
1016
0304
3975
81
90040
2
Gordon
Michael
J
C
1986
Why
Higher-Order
Logic
is
a
Good
Formalism
for
Specifying
and
Verifying
Hardware
in
George
J
Milne
and
P
A
Subrahmanyam
eds
Formal
Aspects
of
VLSI
Design
Proceedings
of
the
1985
Edinburgh
Workshop
on
VLSI
Amsterdam
North-Holland
pp
153
177
1988
HOL
A
Proof
Generating
System
for
Higher-Order
Logic
in
VLSI
Specification
Verification
and
Synthesis
Graham
Birtwistle
and
P
A
Subrahmanyam
eds
The
Kluwer
International
Springer
US
73
128
doi
10
1007
978
1
4613
2007
4
3
Gordon
M
J
and
T
F
Melham
1993
Introduction
to
HOL
A
Theorem-Proving
Environment
for
Higher-Order
Logic
Cambridge
Cambridge
University
Press
Gould
William
Eben
1966
A
Matching
Procedure
for
omega
order
Logic
Ph.D
dissertation
Mathematics
Department
Princeton
University
Gould
1966
available
online
Hales
Thomas
Mark
Adams
Gertrud
Bauer
Tat
Dat
Dang
John
doi
10
1007
BFb
0031814
Halkjær
Asta
Anders
Schlichtkrull
Jørgen
Villadsen
2023
A
sequent
calculus
for
first-order
logic
formalized
in
Isabelle/HOL
Journal
of
Logic
and
Computation
33
4
818
836
doi
10
1093
logcom/exad
013
Henkin
Leon
1950
Completeness
in
the
Theory
of
Types
The
Journal
of
Symbolic
Logic
15
2
81
91
Reprinted
in
Hintikka
1969
and
in
Benzmüller
et
al
2008
doi
10
2307
2266967
1963
A
Theory
of
Prepositional
Types
Fundamenta
available
online
1973
b
The
Undecidability
of
Unification
in
Third
Order
Logic
Information
and
Control
22
3
257
267
doi
10
1016
S
0019
9958
73
90301
X
1975
A
Unification
Algorithm
for
Typed
λ-Calculus
doi
10
1145
3230627
Kohlhase
Michael
1993
A
Unifying
Principle
for
Extensional
Higher-Order
Logic
Technical
Report
93
153
Department
of
Mathematics
Carnegie
Mellon
University
1995
Higher-Order
Tableaux
in
Theorem
Proving
with
Heidelberg
245
261
doi
10
1007
BFb
0055140
Kumar
Ramana
Rob
Arthan
Magnus
O
Myreen
and
Scott
Owens
2016
Self-Formalisation
of
Higher-Order
Logic
Journal
of
Automated
Reasoning
56
221
259
doi
10
1007
s
10817
015
9357
x
Maslov
S
Yu
1967
An
Inverse
Method
for
Establishing
Deducibility
of
Nonprenex
Formulas
of
Predicate
Calculus
Soviet
Mathematics
Doklady
8
1
16
19
Miller
Dale
A
1983
Proofs
in
Higher-Order
Logic
Ph.D
dissertation
Mathematics
Department
Carnegie
Mellon
University
1987
A
Compact
Representation
of
Proofs
Studia
Logica
46
4
347
370
doi
10
1007
BF
00370646
1991
A
Logic
Programming
Language
with
Lambda-Abstraction
Function
Variables
and
Simple
Unification
Journal
of
Logic
and
Computation
1
4
497
536
doi
10
1093
logcom
1
4
497
Mints
G
1999
Cut-Elimination
for
Simple
Type
Theory
with
an
Axiom
of
Choice
The
Journal
of
Symbolic
Logic
64
2
479
485
doi
10
2307
2586480
Montague
Richard
1974
Formal
Philosophy
Selected
Papers
Of
Richard
Montague
edited
and
with
an
introduction
by
Richmond
H
Thomason
New
Haven
Yale
University
Press
Muskens
Reinhard
2006
Higher
Order
Modal
Logic
in
Handbook
of
Modal
Logic
Patrick
Blackburn
Johan
Van
Benthem
and
Frank
Wolter
eds
Amsterdam
Elsevier
621
653
2007
Intensional
Models
for
the
Theory
of
Types
The
Journal
of
Symbolic
Logic
72
1
98
118
doi
10
2178
jsl
1174668386
Nipkow
Tobias
Markus
Wenzel
and
Lawrence
C
Paulson
eds
2002
Isabelle/HOL
A
Proof
Assistant
for
Higher-Order
Logic
Lecture
Notes
in
Computer
Science
2283
Berlin
Heidelberg
Springer
Berlin
Heidelberg
doi
10
1007
3
540
45949
9
Lecture
Notes
in
Computer
Science
417
Berlin
Heidelberg
Springer
Berlin
Heidelberg
246
274
doi
10
1007
3
540
52335
9
58
Prawitz
Dag
1968
Hauptsatz
for
Higher
Order
Logic
The
Journal
of
Symbolic
Logic
33
3
452
457
doi
10
2307
2270331
Quine
W
V
1956
Unification
of
Universes
in
Set
Theory
The
Journal
of
Symbolic
Logic
21
3
267
279
doi
10
2307
2269102
Richardson
Julian
Alan
Smaill
and
Ian
Green
1998
System
Description
Proof
Planning
in
Higher-Order
Logic
with
ΛClam
in
Kirchner
and
Kirchner
1998
129
133
doi
10
1007
BFb
0054254
Robinson
Alan
and
Andrei
Voronkov
eds
2001
Handbook
of
Russell
Bertrand
1903
The
Principles
of
Mathematics
Cambridge
Cambridge
University
Press
1908
Mathematical
Logic
as
Based
on
the
Theory
of
Types
American
Journal
of
Mathematics
30
3
222
262
Reprinted
in
van
Heijenoort
1967
150
182
doi
10
2307
2369948
Schlichtkrull
Anders
2023
Soundness
of
the
Q
0
proof
system
for
higher-order
logic
Archive
of
Formal
Proofs
https
www.isa-afp.org/entries/Q
0
Soundness.html
Schlichtkrull
Anders
Jasmin
Blanchette
Dmitriy
Traytel
and
Uwe
Heijenoort
1967
355
366
doi
10
1007
BF
01448013
Schütte
Kurt
1960
Syntactical
and
Semantical
Properties
of
Simple
Type
Theory
The
Journal
of
Symbolic
Logic
25
4
305
326
doi
10
2307
2963525
Shankar
Natarajan
2001
Using
Decision
Procedures
with
a
Higher-Order
Logic
in
Theorem
Proving
in
Higher
Order
Logics
Richard
J
Boulton
and
Paul
B
Jackson
eds
Lecture
Notes
in
Computer
Science
2152
Berlin
Heidelberg
Springer
Berlin
Heidelberg
5
26
doi
10
1007
3
540
44755
5
3
Siekmann
Jörg
H
and
Graham
Wrightson
eds
1983
Automation
of
Reasoning
Classical
Papers
on
Computational
Logic
1967
1970
Vol
2
Berlin
Heidelberg
Springer
Berlin
Heidelberg
doi
10
1007
978
3
642
81955
1
Siekmann
Jörg
Christoph
Benzmüller
and
Serge
Autexier
2006
Computer
Supported
Mathematics
with
ΩMEGA
Journal
of
Applied
Logic
4
4
533
559
doi
10
1016
j.jal
2005
10
008
Smullyan
Raymond
M
1963
A
Unifying
Principal
in
Quantification
Theory
Proceedings
of
the
National
Academy
of
Sciences
49
6
828
832
doi
10
1073
pnas
49
6
828
1995
First-Order
Logic
New
York
Dover
second
corrected
edition
Steen
Alexander
2018
Extensional
Paramodulation
for
Higher-Order
Logic
and
its
Effective
Implementation
Leo-III
Ph.D
dissertation
Series
Dissertations
in
Artificial
Intelligence
DISKI
Volume
345
Berlin
AKA-Verlag
IOS
Press
Reasoning
65
775
807
doi
10
1007
s
10817
021
09588
x
Steen
Alexander
Geoff
Sutcliffe
Tobias
Scholl
Christoph
Benzmüller
2023
Solving
Modal
Logic
Problems
by
Translation
to
Higher-Order
Logic
in
Logic
and
Argumentation
CLAR
2023
Andreas
Herzig
Jieting
Luo
Pere
Pardo
eds
Lecture
Notes
in
Computer
Science
14156
Cham
Springer
Nature
Switzerland
AG
From
CNF
to
TH
0
TPTP
v
6
4
0
Journal
of
Automated
Reasoning
59
4
483
502
doi
10
1007
s
10817
017
9407
7
2023
The
logic
languages
of
the
TPTP
world
Logic
Journal
of
the
IGPL
31
6
1153
1169
doi
10
1093
jigpal/jzac
068
Sutcliffe
Geoff
and
Christoph
Benzmüller
2010
Automated
Reasoning
in
Higher-Order
Logic
Using
the
TPTP
THF
Infrastructure
Journal
of
Formalized
Reasoning
3
1
1
27
doi
10
6092
issn
1972
5787
1710
de
La
Logistique
Fundamenta
Mathematicae
4
196
200
Translated
in
Tarski
1956
1
23
doi
10
4064
fm
4
1
196
200
1956
Logic
Semantics
Metamathematics
Papers
from
1923
to
1938
Oxford
Oxford
University
Press
van
Heijenoort
Jean
1967
From
Frege
to
Gödel
A
Source
Book
in
Mathematical
Logic
1879
1931
Cambridge
MA
Harvard
University
Press
Vukmirović
Petar
Alexander
Bentkamp
Jasmin
Blanchette
Simon
66
541
564
doi
10
1007
s
10817
021
09613
z
Vukmirović
Petar
Jasmin
Blanchette
and
Stephan
Schulz
2023
Extending
a
High-Performance
Prover
to
Higher-Order
Logic
in
Tools
and
Algorithms
for
the
Construction
and
Analysis
of
Systems
TACAS
2023
Sankaranarayanan
S
Sharygina
N
eds
Lecture
Related
Entries
artificial
intelligence
logic-based
category
theory
choice
axiom
of
descriptions
epsilon
calculus
Frege
Gottlob
Gödel
Kurt
incompleteness
theorems
grammar
typelogical
lambda
calculus
the
logic
history
of
first-order
logic
logic
classical
logic
deontic
logic
dynamic
epistemic
logic
modal
logic
second-order
and
higher-order
metaphysics
ontological
arguments
paradox
Skolem’s
paradoxes
and
contemporary
logic
possibilism-actualism
debate
possible
worlds
Principia
Mathematica
proof
theory
quantifiers
and
quantification
Quine
Willard
Van
Orman
rational
THE
LOGIC
OF
ECONOMICS
Economics
Homework
Project
LinkedIn
THE
LOGIC
OF
ECONOMICS
Economic
life
is
an
enormously
complicated
hive
of
activity
with
We
mention
these
fallacies
only
briefly
in
this
introduction
Later
as
we
introduce
the
tools
of
economics,we
will
provide
examples
of
how
inattention
to
the
logic
of
economics
can
lead
you
to
false
and
sometimes
costly
errors
When
you
reach
the
end
of
this
book
you
can
look
back
to
see
why
each
of
these
paradoxical
examples
is
true
BUTTON
logic
1
noun
6
BUTTON
logic
2
Definitions
1
Advertisement
View
synonyms
for
logic
BUTTON
American
BUTTON
British
BUTTON
Scientific
BUTTON
Cultural
BUTTON
logic
1
reliable
inference
2
a
particular
method
of
reasoning
or
argumentation
We
were
unable
to
follow
his
logic
3
the
system
or
principles
of
reasoning
applicable
to
any
branch
of
knowledge
or
study
4
reason
or
sound
judgment
as
in
utterances
or
actions
There
wasn't
much
logic
in
her
move
Synonyms
cogency
sense
5
convincing
forcefulness
inexorable
truth
or
persuasiveness
the
irresistible
logic
of
the
facts
6
Computers
logic
circuit
logic
2
1
a
combining
form
used
in
the
formation
of
adjectives
corresponding
analogic
logic
ˈlɒdʒɪk
reasoning
by
which
a
conclusion
is
properly
drawn
from
a
set
of
premises
without
reference
to
meaning
or
context
See
also
formal
logic
deduction
induction
2
any
particular
formal
system
in
which
are
defined
axioms
and
rules
of
inference
Compare
formal
system
formal
language
7
the
relationship
and
interdependence
of
a
series
of
events
facts
etc
8
chop
logic
to
use
excessively
subtle
or
involved
logic
or
argument
9
electronics
computing
1
the
principles
underlying
the
units
in
a
computer
system
that
perform
arithmetical
and
logical
operations
See
also
logic
circuit
2
as
modifier
a
logic
element
Collins
English
Dictionary
Complete
Unabridged
2012
Digital
Publishers
1998
2000
2003
2005
2006
2007
2009
2012
logic
lŏj′ĭk
of
method
and
validity
in
deductive
reasoning
logic
1
The
branch
of
philosophy
dealing
with
the
principles
of
reasoning
Classical
logic
as
taught
in
ancient
Greece
and
Rome
systematized
rules
for
deduction
The
modern
scientific
and
philosophical
logic
of
deduction
has
become
closely
allied
to
mathematics
especially
in
showing
how
the
foundations
of
mathematics
lie
in
logic
Discover
More
Word
History
and
Origins
Origin
of
logic
1
First
recorded
in
1325
75
Middle
English
logik
from
Latin
logica
noun
use
of
neuter
plural
in
Medieval
Latin
taken
as
feminine
singular
of
Greek
logikós
of
speech
or
reason
logo
ic
Origin
of
logic
2
Greek
logikós
See
logic
Discover
More
Word
History
and
Origins
Origin
of
logic
1
C
14
from
Old
French
logique
from
Medieval
Latin
logica
neuter
plural
treated
in
Medieval
Latin
as
feminine
singular
from
Greek
logikos
Example
Sentences
Both
men
were
caught
up
in
the
sick
logic
of
toxic
masculinity
where
being
good
is
about
being
dominant
and
hateful
From
Salon
As
we
saw
during
the
pandemic
they
operate
by
cult
logic
From
Salon
He
could
pick
apart
an
argument
you
made
with
one
or
two
incisive
slashes
of
history
facts
humor
or
logic
mostly
all
four
put
together
in
ways
you’d
never
heard
before
From
Salon
Timothy
Snyder
who
is
a
leading
historian
of
fascism
and
the
author
of
On
Tyranny
Twenty
Lessons
from
the
Twentieth
Century
explained
the
logic
of
anticipatory
obedience
to
The
Guardian
in
the
following
way
From
Salon
We
are
willing
to
talk
to
them
with
logic
We
are
willing
to
talk
to
them
with
a
real
proposal
From
BBC
Toggle
the
table
of
contents
Programmable
logic
device
20
languages
programmable
elements
shown
as
a
fuse
connect
both
the
true
and
complemented
inputs
to
the
AND
gates
These
AND
gates
also
known
as
product
terms
are
ORed
together
to
form
a
sum-of-products
logic
array
A
programmable
logic
device
PLD
is
an
electronic
component
used
to
build
reconfigurable
digital
circuits
Unlike
digital
logic
constructed
using
discrete
logic
gates
with
fixed
functions
the
function
of
a
PLD
is
undefined
at
the
time
of
manufacture
Before
the
PLD
can
be
used
in
a
circuit
it
must
be
programmed
to
implement
the
desired
function
1
Compared
to
fixed
logic
devices
programmable
logic
devices
simplify
the
design
of
complex
logic
and
may
offer
superior
performance
2
Unlike
for
microprocessors
programming
a
PLD
changes
the
connections
made
between
the
gates
in
the
device
PLDs
can
broadly
be
categorised
into
in
increasing
order
of
complexity
simple
programmable
logic
devices
SPLDs
comprising
programmable
array
logic
programmable
logic
array
and
generic
array
logic
complex
programmable
logic
devices
CPLDs
and
field-programmable
gate
arrays
FPGAs
was
programmed
by
altering
the
metal
layer
during
the
production
of
the
IC
The
TMS
2000
had
up
to
17
inputs
and
18
outputs
with
8
JK
flip-flops
for
memory
TI
coined
the
term
programmable
logic
array
PLA
for
this
device
4
In
1971
General
Electric
Company
GE
was
developing
a
programmable
logic
device
based
on
the
new
programmable
read-only
memory
PROM
technology
This
experimental
device
improved
on
IBM's
ROAM
by
allowing
multilevel
logic
Intel
had
just
introduced
the
floating-gate
UV
EPROM
so
the
researcher
at
GE
incorporated
that
technology
The
GE
device
was
the
first
erasable
PLD
ever
developed
predating
the
Altera
EPLD
by
over
a
decade
GE
obtained
several
early
patents
on
programmable
logic
devices
5
6
7
This
was
more
popular
than
the
TI
part
but
the
cost
of
making
the
metal
mask
limited
its
use
The
device
is
significant
because
it
was
the
basis
for
the
field
programmable
logic
array
produced
by
Signetics
in
1975
the
82
S
100
Intersil
actually
beat
Signetics
to
market
but
poor
yield
doomed
their
part
8
9
In
1974
GE
entered
into
an
agreement
with
Monolithic
Memories
MMI
to
develop
a
mask-programmable
logic
device
incorporating
the
GE
innovations
The
device
was
named
programmable
associative
logic
array
or
PALA
The
MMI
5760
was
completed
in
1976
and
could
implement
multilevel
or
sequential
circuits
of
over
100
gates
The
device
was
edit
Main
article
Programmable
logic
array
In
1970
Texas
Instruments
developed
a
mask-programmable
IC
based
on
was
programmed
by
altering
the
metal
layer
during
the
production
of
the
IC
The
TMS
2000
had
up
to
17
inputs
and
18
outputs
with
8
JK
flip-flops
for
memory
TI
coined
the
term
programmable
logic
array
for
this
device
4
A
programmable
logic
array
PLA
has
a
programmable
AND
gate
array
which
links
to
a
programmable
OR
gate
array
which
can
then
be
conditionally
complemented
to
produce
an
output
A
PLA
is
similar
to
a
edit
Main
article
Programmable
array
logic
PAL
devices
have
arrays
of
transistor
cells
arranged
in
a
fixed-OR
programmable-AND
plane
used
to
implement
sum-of-products
binary
logic
equations
for
each
of
the
outputs
in
terms
of
the
inputs
and
either
synchronous
or
asynchronous
feedback
from
the
outputs
MMI
introduced
a
breakthrough
device
in
1978
the
programmable
array
logic
or
PAL
The
architecture
was
simpler
than
that
of
Signetics
FPLA
because
it
omitted
the
programmable
OR
array
This
made
the
parts
faster
smaller
and
cheaper
They
were
available
in
20
pin
300
mil
DIP
edit
Main
article
Generic
array
logic
220
px-Lattice_GAL
16
V
8
jpg
Lattice
GAL
16
V
8
and
20
V
8
These
are
35
nanosecond
devices
An
improvement
on
the
PAL
was
the
generic
array
logic
device
or
GAL
invented
by
Lattice
Semiconductor
in
1985
This
device
has
the
same
logical
properties
as
the
PAL
but
can
be
erased
and
reprogrammed
The
GAL
is
very
useful
in
the
prototyping
stage
of
a
design
when
any
bugs
in
the
logic
can
be
corrected
by
reprogramming
GALs
are
programmed
and
reprogrammed
using
a
PAL
programmer
or
in
the
case
of
chips
that
support
it
by
using
the
in-circuit
programming
technique
Lattice
GALs
combine
CMOS
and
electrically
erasable
E
2
floating
gate
technology
for
a
high-speed
low-power
logic
device
A
similar
device
called
a
PEEL
programmable
electrically
erasable
logic
was
introduced
by
the
International
CMOS
Technology
ICT
corporation
Sometimes
GAL
chips
are
referred
as
simple
programmable
logic
device
SPLD
analogous
to
complex
programmable
logic
device
CPLD
below
CPLDs
edit
Main
article
Complex
programmable
logic
device
PALs
and
GALs
are
available
only
in
small
sizes
equivalent
to
a
few
hundred
logic
gates
For
bigger
logic
circuits
complex
PLDs
or
CPLDs
can
be
used
These
contain
the
equivalent
of
several
PALs
linked
by
programmable
interconnections
all
in
one
integrated
circuit
CPLDs
can
replace
thousands
or
even
hundreds
of
thousands
of
logic
gates
Some
CPLDs
are
programmed
using
a
PAL
programmer
but
this
method
then
feed
it
with
a
serial
data
stream
from
a
personal
computer
The
CPLD
contains
a
circuit
that
decodes
the
data
stream
and
configures
the
CPLD
to
perform
its
specified
logic
function
Some
manufacturers
such
as
Altera
and
Atmel
now
Microchip
use
JTAG
to
program
CPLDs
in-circuit
from
JAM
files
AND-plane
OR-plane
FPGAs
use
a
grid
of
logic
gates
and
once
stored
the
data
doesn't
change
similar
to
that
of
an
ordinary
gate
array
The
term
field-programmable
means
the
device
is
programmed
by
the
customer
not
The
difference
between
FPGAs
and
CPLDs
is
that
FPGAs
are
internally
based
on
look-up
tables
LUTs
whereas
CPLDs
form
the
logic
functions
with
sea-of-gates
e.g
sum
of
products
CPLDs
are
meant
for
simpler
designs
while
FPGAs
are
meant
for
more
complex
designs
In
general
CPLDs
are
a
good
choice
for
wide
combinational
logic
applications
whereas
FPGAs
are
more
suitable
for
large
state
machines
such
as
microprocessors
electrically
15
16
An
erasable
programmable
logic
device
EPLD
is
an
integrated
circuit
that
comprises
an
array
of
PLDs
that
do
not
come
pre-connected
the
connections
are
programmed
electrically
by
the
user
Most
GAL
and
FPGA
PLDs
are
being
sold
now
that
contain
a
microprocessor
with
a
fixed
function
the
so-called
core
surrounded
by
programmable
logic
These
devices
let
designers
concentrate
on
adding
new
features
to
designs
without
having
to
worry
about
making
the
microprocessor
work
Also
the
edit
A
PLD
is
a
combination
of
a
logic
device
and
a
memory
device
The
memory
is
used
to
store
the
pattern
that
was
given
to
the
chip
during
programming
Most
of
the
methods
for
storing
data
in
an
integrated
Many
PAL
programming
devices
accept
input
in
a
standard
file
format
commonly
referred
to
as
JEDEC
files
They
are
analogous
to
software
compilers
The
languages
used
as
source
code
for
logic
compilers
are
called
hardware
description
languages
or
HDLs
1
edit
A
device
programmer
is
used
to
transfer
the
Boolean
logic
pattern
into
the
programmable
device
In
the
early
days
of
programmable
logic
every
PLD
manufacturer
also
produced
a
specialized
device
programmer
for
its
family
of
logic
devices
Later
universal
device
programmers
came
onto
the
market
that
supported
several
logic
device
families
from
different
manufacturers
Today's
device
programmers
usually
can
program
common
PLDs
mostly
PAL/GAL
equivalents
from
all
existing
manufacturers
Common
file
formats
used
to
store
the
Boolean
logic
pattern
fuses
are
JEDEC
Altera
POF
programmable
object
file
or
Xilinx
BITstream
17
edit
Complex
programmable
logic
device
CPLD
Field-programmable
gate
array
FPGA
Macrocell
array
Programmable
array
logic
PAL
References
ISBN
978
0
521
80926
9
cite
book
CS
1
maint
location
missing
publisher
link
2
Holdsworth
B
Woods
R
C
2003
Digital
Logic
Design
4
th
ed
Elsevier
ISBN
978
0
7506
4582
9
3
Motorola
Semiconductor
Data
Book
Fourth
Edition
Motorola
Inc
1969
p
IC
73
4
a
b
Andres
Kent
October
1970
A
Texas
Instruments
Application
Report
MOS
programmable
logic
arrays
Texas
Instruments
Bulletin
CA
158
Report
introduces
the
TMS
2000
and
TMS
2200
series
of
mask
programmable
PLAs
5
Greer
David
L
Electrically
Programmable
Logic
Circuits
US
Patent
3
818
452
Assignee
General
Electric
Filed
April
28
1972
Granted
June
18
1974
6
Greer
David
L
Multiple
Level
Associative
Logic
Circuits
US
Patent
3
816
725
Assignee
General
Electric
Filed
April
28
1972
Granted
June
11
1974
7
Greer
David
L
Segmented
Associative
Logic
Circuits
US
Patent
3
849
638
Assignee
General
Electric
Filed
July
18
1973
Granted
November
19
1974
8
Semiconductors
and
IC's
FPLA
EDN
20
13
Boston
MA
Cahners
Publishing
66
July
20
1975
Press
release
on
Intersil
IM
5200
field
programmable
logic
array
Fourteen
inputs
pins
and
48
product
terms
Avalanched-induced-migration
programming
Unit
price
was
37
50
9
FPLA's
give
quick
custom
logic
EDN
20
13
Boston
MA
Cahners
Publishing
61
July
20
1975
Press
release
on
Signetics
82
S
100
and
82
S
101
field
programmable
logic
arrays
Fourteen
inputs
pins
8
output
pins
and
48
product
terms
NiCr
fuse
link
programming
10
Pellerin
David
Michael
Holley
1991
Practical
Design
Using
Programmable
Logic
Prentice-Hall
p
15
ISBN
0
13
723834
7
11
Dorf
Richard
C
3
October
2018
Electronics
Power
Electronics
Optoelectronics
Microwaves
Electromagnetics
and
2024
08
21
15
a
b
Tertulien
Ndjountche
Digital
Electronics
2
Sequential
and
Arithmetic
Logic
Circuits
2016
p
224
16
a
b
Clive
Maxfield
The
Design
Warrior's
Guide
to
FPGAs
2004
p
20
edit
Wikibooks
has
a
book
on
the
topic
of
Programmable
Logic
Wikimedia
Commons
has
media
related
to
Programmable
logic
devices
e
Programmable
logic
Concepts
SoC
FPGA
Logic
block
CPLD
EPLD
Flip-flop
Memory
cell
Combinational
logic
Sequential
logic
Logic
gate
Boolean
circuit
Integrated
circuit
IC
Mixed-signal
integrated
circuit
Three-dimensional
integrated
circuit
3
D
IC
Emitter-coupled
logic
ECL
Erasable
programmable
logic
device
EPLD
Macrocell
array
Programmable
logic
array
PLA
Programmable
logic
device
PLD
Programmable
Array
Logic
PAL
Generic
Array
Logic
GAL
Complex
programmable
logic
device
CPLD
Field-programmable
gate
array
FPGA
Field-programmable
object
array
FPOA
Digital
signal
Boolean
algebra
Logic
synthesis
Logic
in
computer
science
Computer
architecture
Digital
signal
Design
Logic
synthesis
Place
and
route
Placement
High-level
synthesis
Formal
equivalence
checking
Synchronous
logic
Asynchronous
logic
Finite-state
machine
Hierarchical
state
machine
2
Concepts
BUTTON
Toggle
Concepts
subsection
2
1
Algorithm
Logic
Control
2
2
Relationship
with
functional
programming
2
3
Relationship
with
relational
programming
BUTTON
Toggle
Variants
and
extensions
subsection
3
1
Prolog
3
2
Constraint
logic
programming
3
3
Datalog
3
4
Answer
set
programming
3
5
Abductive
logic
programming
3
6
Inductive
logic
programming
3
7
Concurrent
logic
programming
3
8
Concurrent
constraint
logic
programming
3
9
Higher-order
logic
programming
3
10
Linear
logic
programming
3
11
Object-oriented
logic
programming
3
12
Transaction
logic
programming
4
See
also
5
Citations
Toggle
the
table
of
contents
Logic
programming
36
languages
BUTTON
move
to
sidebar
BUTTON
hide
From
Wikipedia
the
free
encyclopedia
Programming
paradigm
based
on
formal
logic
Logic
programming
is
a
programming
database
and
knowledge
representation
paradigm
based
on
formal
logic
A
logic
program
is
a
set
of
sentences
in
logical
form
representing
knowledge
about
some
problem
domain
Computation
is
performed
by
applying
logical
reasoning
to
that
knowledge
to
solve
problems
in
the
domain
Major
logic
programming
language
families
include
Prolog
Answer
Set
Programming
ASP
and
Datalog
In
all
of
these
languages
rules
are
written
in
the
form
of
yes
Although
Horn
clause
logic
programs
are
Turing
complete
1
2
for
most
practical
applications
Horn
clause
programs
need
to
be
extended
to
normal
logic
programs
with
negative
conditions
For
example
the
definition
of
sibling
uses
a
negative
condition
where
the
predicate
is
defined
by
the
clause
X
X
not(X
Y
Logic
programming
languages
that
include
negative
conditions
have
the
knowledge
representation
capabilities
of
a
non-monotonic
logic
In
ASP
and
Datalog
logic
programs
have
only
a
declarative
reading
and
their
execution
is
performed
by
means
of
a
proof
procedure
or
model
generator
whose
behaviour
is
not
meant
to
be
controlled
by
the
programmer
However
in
the
Prolog
family
of
languages
logic
programs
also
have
a
procedural
interpretation
as
goal-reduction
procedures
From
this
point
of
view
clause
A
B
1
B[n
is
understood
as
is
deemed
to
hold
if
and
only
if
the
positive
literal
B
fails
to
hold
Much
of
the
research
in
the
field
of
logic
programming
has
been
concerned
with
trying
to
develop
a
logical
semantics
for
negation
as
failure
and
with
developing
other
semantics
and
other
implementations
for
negation
These
developments
have
been
important
in
turn
for
supporting
the
development
of
formal
methods
for
logic-based
program
verification
and
program
transformation
edit
The
use
of
mathematical
logic
to
represent
and
execute
computer
programs
is
also
a
feature
of
the
lambda
calculus
developed
by
Alonzo
Church
in
the
1930
s
However
the
first
proposal
to
use
the
clausal
form
of
logic
for
representing
computer
programs
was
made
by
Cordell
Green
3
This
used
an
axiomatization
of
a
subset
of
LISP
together
with
a
representation
of
an
input-output
relation
to
compute
the
no
constraints
on
the
order
in
which
operations
are
performed
4
Logic
programming
with
its
current
syntax
of
facts
and
rules
can
be
traced
back
to
debates
in
the
late
1960
s
and
early
1970
s
about
declarative
versus
procedural
representations
of
knowledge
in
at
MIT
under
the
leadership
of
Marvin
Minsky
and
Seymour
Papert
5
Although
it
was
based
on
the
proof
methods
of
logic
Planner
developed
by
Carl
Hewitt
at
MIT
was
the
first
language
to
emerge
within
this
proceduralist
paradigm
6
Planner
featured
pattern-directed
QLISP
11
and
the
concurrent
language
Ether
12
Hayes
and
Kowalski
in
Edinburgh
tried
to
reconcile
the
logic-based
declarative
approach
to
knowledge
representation
with
Planner's
procedural
approach
Hayes
1973
developed
an
equational
language
In
the
meanwhile
Alain
Colmerauer
in
Marseille
was
working
on
natural-language
understanding
using
logic
to
represent
semantics
and
using
resolution
for
question-answering
During
the
summer
of
1971
Colmerauer
invited
Kowalski
to
Marseille
and
together
they
discovered
that
the
clausal
form
of
logic
could
be
used
to
represent
formal
grammars
and
that
resolution
theorem
provers
could
be
used
for
parsing
They
observed
that
some
theorem
provers
like
hyper-resolution
14
influenced
the
definition
of
ISO
standard
Prolog
Logic
programming
gained
international
attention
during
the
1980
s
when
it
was
chosen
by
the
Japanese
Ministry
of
International
Trade
and
Industry
to
develop
the
software
for
the
Fifth
Generation
Computer
Systems
FGCS
project
The
FGCS
project
aimed
to
use
logic
programming
to
develop
advanced
Artificial
Intelligence
applications
on
massively
parallel
computers
Although
the
project
initially
explored
the
use
of
Prolog
it
later
adopted
the
use
of
concurrent
logic
programming
because
it
was
closer
to
the
FGCS
computer
architecture
However
the
committed
choice
feature
of
concurrent
logic
programming
interfered
with
the
language's
logical
semantics
18
and
with
its
suitability
for
knowledge
representation
and
problem
solving
of
more
conventional
general-purpose
computers
Together
these
two
issues
resulted
in
the
FGCS
project
failing
to
meet
its
objectives
Interest
in
both
logic
programming
and
AI
fell
into
world-wide
decline
19
In
the
meanwhile
more
declarative
logic
programming
approaches
including
those
based
on
the
use
of
Prolog
continued
to
make
progress
independently
of
the
FGCS
project
In
particular
although
Prolog
was
developed
to
combine
declarative
and
procedural
representations
of
knowledge
the
purely
declarative
interpretation
of
logic
programs
became
the
focus
for
applications
in
the
field
of
deductive
databases
Work
in
this
field
became
prominent
around
1977
when
Hervé
Gallaire
and
Jack
Minker
organized
a
workshop
on
logic
and
databases
in
Toulouse
20
The
field
was
eventually
renamed
as
Datalog
This
focus
on
the
logical
declarative
reading
of
logic
programs
was
given
further
impetus
by
the
development
of
constraint
logic
programming
in
the
1980
s
and
Answer
Set
Programming
in
the
1990
s
It
is
also
receiving
renewed
emphasis
in
recent
applications
of
Prolog
21
The
Association
for
Logic
Programming
ALP
was
founded
in
1986
to
promote
Logic
Programming
Its
official
journal
until
2000
was
The
Journal
of
Logic
Programming
Its
founding
editor-in-chief
was
J
Alan
Robinson
22
In
2001
the
journal
was
renamed
The
Journal
of
Logic
and
Algebraic
Programming
and
the
official
journal
of
ALP
became
Theory
and
Practice
of
Logic
Programming
published
by
Cambridge
University
Press
edit
Logic
programs
enjoy
a
rich
variety
of
semantics
and
problem
solving
methods
as
well
as
a
wide
range
of
applications
in
programming
databases
knowledge
representation
and
problem
solving
Algorithm
Logic
Control
edit
The
procedural
interpretation
of
logic
programs
which
uses
backward
reasoning
to
reduce
goals
to
subgoals
is
a
special
case
of
the
use
of
a
problem-solving
strategy
to
control
the
use
of
a
declarative
logical
that
is
most
highly
instantiated
or
that
is
sufficiently
instantiated
so
that
only
one
procedure
applies
26
Such
strategies
are
used
for
example
in
concurrent
logic
programming
In
most
cases
backward
reasoning
from
a
query
or
goal
is
more
edit
See
also
Functional
programming
Comparison
to
logic
programming
Logic
programming
can
be
viewed
as
a
generalisation
of
functional
programming
in
which
functions
are
a
special
case
of
relations
28
For
example
the
function
mother(X
Y
every
X
has
only
one
mother
Y
can
be
represented
by
the
relation
mother(X
Y
In
this
respect
logic
programs
are
similar
to
relational
databases
which
also
represent
functions
as
relations
However
nested
syntax
can
be
regarded
as
syntactic
sugar
for
unnested
syntax
Ciao
Prolog
for
example
transforms
functional
syntax
into
relational
form
and
executes
the
resulting
logic
program
using
the
standard
Prolog
execution
strategy
29
Moreover
the
same
transformation
can
be
used
to
execute
nested
relations
that
are
not
programming
languages
that
treat
functions
as
a
special
case
of
relations
Some
of
these
languages
such
as
miniKanren
28
and
relational
linear
programming
30
are
logic
programming
languages
in
the
sense
of
this
article
However
the
relational
language
RML
is
an
imperative
programming
language
31
whose
core
construct
is
a
relational
expression
which
is
similar
to
an
expression
in
first-order
predicate
logic
Other
relational
programming
languages
are
based
on
the
relational
edit
Main
article
Syntax
and
semantics
of
logic
programming
Viewed
in
purely
logical
terms
there
are
two
approaches
to
the
declarative
semantics
of
Horn
clause
logic
programs
One
approach
is
the
original
logical
consequence
semantics
which
understands
solving
a
goal
as
showing
that
the
goal
is
a
theorem
that
is
true
in
all
models
of
the
program
In
this
approach
computation
is
theorem-proving
in
first-order
logic
and
both
backward
reasoning
as
in
SLD
resolution
and
forward
reasoning
as
in
hyper-resolution
are
correct
and
complete
theorem-proving
methods
Sometimes
such
theorem-proving
methods
are
also
regarded
as
providing
a
separate
proof-theoretic
or
operational
semantics
for
logic
programs
But
from
a
logical
point
of
view
they
are
proof
methods
rather
than
semantics
i.e
X
Y
1
X
X
Y
Here
are
the
same
definitions
as
a
logic
program
using
add(X
Y
Z
to
represent
X
Y
Z
and
multiply(X
Y
Z
to
represent
X
Y
Z
add(X
0
X
showed
that
under
certain
natural
conditions
NAF
is
an
efficient
correct
and
sometimes
complete
way
of
reasoning
with
the
logical
consequence
semantics
using
the
completion
of
a
logic
program
in
first-order
logic
Completion
amounts
roughly
to
regarding
the
set
of
all
the
program
This
property
of
withdrawing
a
conclusion
when
new
information
is
added
is
called
non-monotonicity
and
it
makes
logic
programming
a
non-monotonic
logic
But
if
we
are
now
told
that
tom
is
violent
the
conclusion
that
tom
semantics
for
which
SLDNF
provides
a
proof-theoretic
implementation
However
in
the
1980
s
the
satisfiability
semantics
became
more
popular
for
logic
programs
with
negation
In
the
satisfiability
semantics
negation
is
interpreted
according
to
the
classical
definition
of
truth
in
an
intended
or
standard
model
of
the
logic
program
In
the
case
of
logic
programs
with
negative
conditions
there
are
two
main
variants
of
the
satisfiability
semantics
In
the
well-founded
semantics
the
intended
model
of
a
logic
program
is
a
unique
three-valued
minimal
model
which
always
exists
The
well-founded
semantics
generalises
the
notion
of
inductive
definition
in
mathematical
logic
38
XSB
Prolog
39
implements
the
well-founded
semantics
using
SLG
resolution
40
Both
the
well-founded
and
stable
model
semantics
apply
to
arbitrary
logic
programs
with
negation
However
both
semantics
coincide
for
stratified
logic
programs
For
example
the
program
for
sanctioning
thieves
is
locally
stratified
and
all
three
semantics
for
the
program
determine
the
same
intended
model
is_violent(tom
Attempts
to
understand
negation
in
logic
programming
have
also
contributed
to
the
development
of
abstract
argumentation
frameworks
41
In
an
argumentation
interpretation
of
negation
the
In
his
popular
Introduction
to
Cognitive
Science
44
Paul
Thagard
includes
logic
and
rules
as
alternative
approaches
to
modelling
human
thinking
He
argues
that
rules
which
have
the
form
IF
condition
THEN
action
are
very
similar
to
logical
conditionals
but
they
are
simpler
and
have
greater
psychological
plausability
page
51
Among
other
differences
between
logic
and
rules
he
argues
that
logic
uses
deduction
but
rules
use
search
page
45
and
can
be
used
to
reason
either
forward
or
backward
page
47
Sentences
in
logic
have
to
be
interpreted
as
universally
true
but
rules
can
be
defaults
which
admit
exceptions
page
44
He
states
that
unlike
logic
rule-based
systems
can
also
easily
represent
strategic
information
about
what
to
do
page
45
For
example
IF
you
want
to
go
home
for
the
weekend
and
you
have
bus
fare
THEN
you
can
catch
a
bus
He
does
not
observe
that
the
same
strategy
of
reducing
a
goal
to
subgoals
can
be
interpreted
in
the
manner
of
logic
programming
as
applying
backward
reasoning
to
a
logical
conditional
can_go(you
home
have(you
bus_fare
catch(you
bus
All
of
these
characteristics
of
rule-based
systems
search
forward
and
backward
reasoning
default
reasoning
and
goal-reduction
are
also
defining
characteristics
of
logic
programming
This
suggests
that
Thagard's
conclusion
page
56
that
rule-based
systems
also
applies
to
logic
programming
Other
arguments
showing
how
logic
programming
can
be
used
to
model
aspects
of
human
thinking
are
presented
by
Keith
Stenning
and
Michiel
van
Lambalgen
in
their
book
Human
Reasoning
and
Cognitive
Science
45
They
show
how
the
non-monotonic
character
of
logic
programs
can
be
used
to
explain
human
performance
on
a
variety
of
psychological
tasks
They
also
show
page
237
that
closed–world
reasoning
in
its
guise
as
logic
programming
has
an
appealing
neural
implementation
unlike
classical
logic
In
The
Proper
Treatment
of
Events
46
Michiel
van
Lambalgen
and
Fritz
Hamm
investigate
the
use
of
constraint
logic
programming
to
code
temporal
notions
in
natural
language
by
looking
at
the
way
human
beings
construct
time
edit
The
use
of
logic
to
represent
procedural
knowledge
and
strategic
information
was
one
of
the
main
goals
contributing
to
the
early
development
of
logic
programming
Moreover
it
continues
to
be
an
important
feature
of
the
Prolog
family
of
logic
programming
languages
today
However
many
applications
of
logic
programming
including
Prolog
applications
increasingly
focus
on
the
use
of
logic
to
represent
purely
declarative
knowledge
These
applications
include
both
the
representation
of
general
commonsense
knowledge
and
the
the
situation
calculus
47
Logic
programming
has
also
proved
to
be
useful
for
representing
domain-specific
expertise
in
expert
systems
48
But
human
expertise
like
general-purpose
commonsense
is
mostly
implicit
and
tacit
and
it
is
often
difficult
to
represent
such
implicit
knowledge
in
explicit
rules
This
difficulty
does
not
arise
however
when
logic
programs
are
used
to
represent
the
existing
explicit
rules
of
a
business
organisation
or
legal
authority
Historically
the
representation
of
a
large
portion
of
the
British
Nationality
Act
as
a
logic
program
in
the
1980
s
49
was
hugely
influential
for
the
development
of
computational
representations
of
legislation
showing
how
logic
programming
enables
intuitively
appealing
representations
that
can
be
directly
deployed
to
generate
automatic
inferences
50
Place
red_block
Various
extensions
of
logic
programming
have
been
developed
to
provide
a
logical
framework
for
such
destructive
change
of
state
53
54
55
Prolog
XSB
and
λProlog
Constraint
logic
programming
edit
Main
article
Constraint
logic
programming
Constraint
logic
programming
CLP
combines
Horn
clause
logic
programming
with
constraint
solving
It
extends
Horn
clauses
by
allowing
some
predicates
declared
as
constraint
predicates
to
occur
Procedurally
subgoals
whose
predicates
are
defined
by
the
program
are
solved
by
goal-reduction
as
in
ordinary
logic
programming
but
constraints
are
simplified
and
checked
for
satisfiability
by
a
domain-specific
constraint-solver
which
implements
the
semantics
of
variable
52
The
following
constraint
logic
program
represents
a
toy
temporal
database
of
john's
history
as
a
teacher
teaches(john
hardware
T
1990
T
T
1999
teaches(john
software
T
1999
T
T
2005
teaches(john
logic
T
2005
T
T
2012
rank(john
instructor
T
1990
T
T
2010
rank(john
professor
T
2010
T
T
2014
Here
and
are
constraint
predicates
with
their
usual
intended
semantics
The
following
goal
clause
queries
the
database
to
find
out
when
john
both
taught
logic
and
was
a
professor
teaches(john
logic
T
rank(john
professor
T
The
solution
2010
T
T
2012
results
from
simplifying
the
constraints
2005
T
T
2012
2010
T
T
2014
Constraint
logic
programming
has
been
used
to
solve
problems
in
such
fields
as
civil
engineering
mechanical
engineering
digital
circuit
verification
automated
timetabling
air
traffic
control
and
finance
It
is
closely
related
to
abductive
logic
programming
Datalog
Datalog
is
a
database
definition
language
which
combines
a
relational
view
of
data
as
in
relational
databases
with
a
logical
view
as
in
logic
programming
Relational
databases
use
a
relational
calculus
or
relational
algebra
relational
calculus
and
that
this
defficiency
can
be
remedied
by
introducing
a
least-fixed-point
operator
56
57
In
contrast
recursive
relations
can
be
defined
naturally
by
rules
in
logic
programs
without
the
need
for
any
new
logical
connectives
or
operators
Datalog
differs
from
more
general
logic
programming
by
having
only
constants
and
variables
as
terms
Moreover
all
facts
are
variable-free
and
rules
are
restricted
so
that
if
they
are
executed
and
solves
the
goal
by
generating
a
stable
model
that
makes
the
goal
true
For
this
purpose
it
uses
the
stable
model
semantics
according
to
which
a
logic
program
can
have
zero
one
or
more
intended
models
For
example
the
following
program
represents
a
degenerate
variant
of
the
map
colouring
problem
of
colouring
two
countries
red
or
green
integrity
constraints
in
databases
This
combination
of
ordinary
logic
programming
clauses
and
constraint
clauses
illustrates
the
generate-and-test
methodology
of
problem
solving
in
ASP
The
ordinary
clauses
define
a
search
space
of
possible
Most
implementations
of
ASP
proceed
in
two
steps
First
they
instantiate
the
program
in
all
possible
ways
reducing
it
to
a
propositional
logic
program
known
as
grounding
Then
they
apply
a
propositional
logic
problem
solver
such
as
the
DPLL
algorithm
or
a
Boolean
SAT
solver
However
some
implementations
such
as
s(CASP
59
use
a
goal-directed
top-down
SLD
resolution-like
procedure
without
grounding
Abductive
logic
programming
edit
Main
article
Abductive
logic
programming
Abductive
logic
programming
60
ALP
like
CLP
extends
normal
logic
programming
by
allowing
the
bodies
of
clauses
to
contain
literals
whose
predicates
are
not
defined
by
clauses
In
ALP
these
predicates
are
happens(move(Block
1
Place
Time
happens(move(Block
2
Block
1
Time
Abductive
logic
programming
has
been
used
for
fault
diagnosis
planning
natural
language
processing
and
machine
learning
It
has
also
been
used
to
interpret
negation
as
failure
as
a
form
of
abductive
reasoning
62
Inductive
logic
programming
edit
Main
article
Inductive
logic
programming
Inductive
logic
programming
ILP
is
an
approach
to
machine
learning
that
induces
logic
programs
as
hypothetical
generalisations
of
positive
and
negative
examples
Given
a
logic
program
representing
background
knowledge
and
positive
examples
together
with
constraints
representing
negative
examples
an
ILP
system
induces
a
logic
program
that
generalises
the
positive
examples
while
excluding
the
negative
examples
the
most
important
step
needed
for
reaching
human-level
AI
Recent
work
in
ILP
combining
logic
programming
learning
and
probability
has
given
rise
to
the
fields
of
statistical
relational
learning
and
probabilistic
inductive
logic
programming
Concurrent
logic
programming
edit
Main
article
Concurrent
logic
programming
Concurrent
logic
programming
integrates
concepts
of
logic
programming
with
concurrent
programming
Its
development
was
given
a
big
impetus
in
the
1980
s
by
its
choice
for
the
systems
programming
language
of
the
Japanese
Fifth
Generation
Project
FGCS
67
A
concurrent
logic
program
is
a
set
of
guarded
Horn
clauses
of
the
form
the
clauses
and
execution
proceeds
with
the
subgoals
B
1
B[n
of
the
chosen
clause
These
subgoals
can
also
be
executed
in
parallel
Thus
concurrent
logic
programming
implements
a
form
of
don't
care
nondeterminism
rather
than
don't
know
nondeterminism
For
example
the
following
concurrent
logic
program
defines
a
predicate
shuffle(Left
Right
Merge
which
can
be
used
to
shuffle
two
lists
Left
and
Right
combining
them
into
a
single
list
Merge
that
preserves
Carl
Hewitt
has
argued
68
that
because
of
the
indeterminacy
of
concurrent
computation
concurrent
logic
programming
cannot
implement
general
concurrency
However
according
to
the
logical
semantics
any
result
of
a
computation
of
a
concurrent
logic
program
is
a
logical
consequence
of
the
program
even
though
not
all
logical
consequences
can
be
derived
Concurrent
constraint
logic
programming
edit
Main
article
Concurrent
constraint
logic
programming
Concurrent
constraint
logic
programming
69
combines
concurrent
logic
programming
and
constraint
logic
programming
using
constraints
to
control
concurrency
A
clause
can
contain
a
guard
which
is
a
set
of
constraints
that
may
block
the
applicability
of
the
clause
When
the
guards
of
several
clauses
are
satisfied
concurrent
constraint
logic
programming
makes
a
committed
choice
to
use
only
one
Higher-order
logic
programming
edit
Several
researchers
have
extended
logic
programming
with
higher-order
programming
features
derived
from
higher-order
logic
such
as
predicate
variables
Such
languages
include
the
Prolog
extensions
HiLog
70
and
λProlog
71
Linear
logic
programming
edit
Basing
logic
programming
within
linear
logic
has
resulted
in
the
design
of
logic
programming
languages
that
are
considerably
more
expressive
than
those
based
on
classical
logic
Horn
clause
programs
can
only
represent
state
change
by
the
change
in
arguments
to
predicates
In
linear
logic
programming
one
can
use
the
ambient
linear
logic
to
support
state
change
Some
early
designs
of
logic
programming
languages
based
on
linear
logic
include
LO
72
Lolli
73
ACL
74
and
Forum
75
Forum
provides
a
goal-directed
interpretation
of
all
linear
logic
Object-oriented
logic
programming
edit
F-logic
76
extends
logic
programming
with
objects
and
the
frame
syntax
standard-compliant
Prolog
systems
as
backend
compilers
Transaction
logic
programming
edit
Transaction
logic
53
is
an
extension
of
logic
programming
with
a
logical
theory
of
state-modifying
updates
It
has
both
a
model-theoretic
semantics
and
a
procedural
one
An
implementation
of
a
subset
of
Transaction
logic
is
available
in
the
Flora
2
78
system
Other
prototypes
are
also
available
Automated
theorem
proving
Boolean
satisfiability
problem
Constraint
logic
programming
Control
theory
Datalog
Fril
Functional
programming
Fuzzy
logic
Inductive
logic
programming
Linear
logic
Logic
in
computer
science
includes
Formal
methods
Logic
programming
languages
Programmable
logic
controller
R
Reasoning
system
Rule-based
machine
learning
Satisfiability
Syntax
and
semantics
of
logic
programming
Citations
S
2
CID
32577496
2
Andréka
H
Németi
I
1978
The
generalised
completeness
of
Horn
predicate-logic
as
a
programming
language
Acta
Cybernetica
4
1
3
10
3
Green
Cordell
Application
of
Theorem
Proving
to
Problem
Solving
Intelligence
Workshop
Machine
Intelligence
Vol
4
Edinburgh
UK
Edinburgh
University
Press
pp
423
429
5
Kowalski
R
A
1988
The
early
years
of
logic
programming
PDF
Communications
of
the
ACM
31
38
43
doi
10
1145
35043
35046
S
2
CID
12259230
Selection
Function
PDF
Artificial
Intelligence
2
3
4
227
260
doi
10
1016
0004
3702
71
90012
9
16
Kowalski
Robert
1973
Predicate
Logic
as
a
Programming
Language
PDF
Department
of
Artificial
Intelligence
Edinburgh
University
Memo
70
Also
in
Proceedings
IFIP
Congress
Stockholm
language
and
its
implementation
compared
with
Lisp
ACM
SIGPLAN
Notices
12
8
109
115
doi
10
1145
872734
806939
18
Ueda
K
2018
Logic/constraint
programming
and
concurrency
The
hard-won
lessons
of
the
fifth
generation
computer
project
Science
of
Computer
Programming
164
pp
3
17
19
H.P
Newquist
2020
The
Brain
Makers
The
History
Of
Artificial
Intelligence
The
Relayer
Group
20
Gallaire
Hervé
Minker
John
Jack
eds
1978
Logic
and
Data
Bases
Symposium
on
Logic
and
Data
Bases
Centre
d'études
et
de
recherches
de
Toulouse
1977
Advances
in
Data
Base
Theory
New
York
Plenum
Press
ISBN
978
0
306
40060
5
doi
10
1007
978
3
031
35254
6
1
ISBN
978
3
031
35253
9
22
Robinson
J
Alan
2001
Invited
Editorial
Theory
and
Practice
of
Logic
Programming
1
1
Cambridge
University
Press
1
doi
10
1017
s
1471068400000028
inactive
1
November
2024
cite
journal
CS
1
maint
DOI
inactive
as
of
November
2024
link
23
R.A.Kowalski
July
1979
Algorithm
Logic
Control
Communications
of
the
ACM
22
7
424
436
doi
10
1145
359131
359136
S
2
CID
2509896
intelligent
backtracking
Implementations
of
Prolog
Chichester
England
Ellis
Horwood
pp
194
215
25
Nakamura
K
July
1985
Heuristic
Prolog
logic
program
execution
by
heuristic
search
Conference
on
Logic
Programming
Berlin
Heidelberg
Springer
Berlin
Heidelberg
pp
148
155
26
Genesereth
M.R
Ginsberg
M.L
1985
Logic
programming
Communications
of
the
ACM
28
9
933
941
doi
10
1145
4284
4287
S
2
CID
15527861
27
Swift
T
Warren
D.S
January
2012
XSB
Extending
Prolog
with
tabled
logic
programming
Theory
and
Practice
of
Logic
Programming
12
1
2
157
187
arXiv
1012
5123
doi
10
1017
S
1471068411000500
S
2
CID
6153112
29
A
Casas
D
Cabeza
M
V
Hermenegildo
A
Syntactic
Approach
to
Combining
Functional
Notation
Lazy
Evaluation
and
Higher-Order
in
LP
Systems
The
8
th
International
Symposium
on
Functional
and
Logic
Programming
FLOPS
06
pages
142
162
April
2006
30
Kersting
K
Mladenov
M
and
Tokmakov
P
2017
Relational
318
321
Springer
Berlin
Heidelberg
34
Van
Emden
M.H
Kowalski
R.A
October
1976
The
semantics
of
predicate
logic
as
a
programming
language
Journal
of
the
ACM
23
4
733
742
doi
10
1145
321978
321991
S
2
CID
11048276
35
Clark
K.L
1977
Negation
as
Failure
Logic
and
Data
Bases
Boston
MA
Springer
US
pp
293
322
doi
10
1007
978
1
4684
3384
5
11
ISBN
978
1
4684
3386
9
37
Shepherdson
J.C
1984
Negation
as
failure
a
comparison
of
Clark's
completed
data
base
and
Reiter's
closed
world
assumption
The
Journal
of
Logic
Programming
1
1
51
79
doi
10
1016
0743
1066
84
90023
2
38
Denecker
M
Ternovska
E
2008
A
logic
of
nonmonotone
inductive
definitions
ACM
Transactions
on
Computational
Logic
9
2
14
1
14
52
arXiv:cs
0501025
doi
10
1145
1342991
1342998
S
2
CID
13156469
39
Rao
P
Sagonas
K
Swift
T
Warren
D.S
Freire
J
July
28
31
1997
XSB
A
system
for
efficiently
computing
well-founded
semantics
Logic
Programming
And
Nonmonotonic
Reasoning
4
th
International
Conference
LPNMR
97
Dagstuhl
Castle
Germany
Springer
Berlin
Heidelberg
pp
430
440
doi
10
1007
3
540
63255
7
33
40
W
Chen
D
S
Warren
January
1996
Tabled
Evaluation
with
Delaying
for
General
Logic
Programs
Journal
of
the
ACM
43
1
20
74
doi
10
1145
227595
227597
S
2
CID
7041379
41
Phan
Minh
Dung
1995
On
the
acceptability
of
arguments
and
its
fundamental
role
in
nonmonotonic
reasoning
logic
programming
and
n–person
games
Artificial
Intelligence
77
2
321
357
doi
10
1016
0004
3702
94
00041
X
1
isAllowed
y
49
Sergot
M.J
Sadri
F
Kowalski
R.A
Kriwaczek
F
Hammond
P
Cory
H.T
1986
The
British
Nationality
Act
as
a
logic
program
PDF
Communications
of
the
ACM
29
5
370
386
doi
10
1145
5689
5920
S
2
CID
5665107
50
Prakken
H
Sartor
G
October
2015
Law
and
logic
a
review
from
an
argumentation
perspective
PDF
Artificial
Intelligence
227
214
245
doi
10
1016
j.artint
2015
06
005
S
2
CID
4261497
Jose
F
Wielemaker
Jan
Diaz
Daniel
Abreu
Salvador
Ciatto
Giovanni
November
2022
Fifty
Years
of
Prolog
and
Beyond
Theory
and
Practice
of
Logic
Programming
22
6
776
858
arXiv
2201
10816
doi
10
1017
S
1471068422000102
ISSN
1471
0684
53
a
b
Bonner
A.J
and
Kifer
M
1993
February
Transaction
Logic
Programming
In
ICLP
Vol
93
pp
257
279
54
Genesereth
M
2023
Dynamic
logic
programming
In
Prolog
The
Next
50
Years
pp
197
209
Cham
Springer
Nature
Switzerland
55
Kowalski
R
Sadri
F
Calejo
M
and
Dávila
J
2023
Combining
logic
programming
and
imperative
programming
in
LPS
In
Prolog
The
Next
50
Years
pp
210
223
Cham
Springer
Nature
Switzerland
symposium
on
Principles
of
programming
languages
pp
110
119
57
Maier
D
Tekle
K.T
Kifer
M
and
Warren
D.S
2018
Datalog
concepts
history
and
outlook
In
Declarative
Logic
Programming
Theory
Systems
and
Applications
pp
3
100
58
Eiter
T
Ianni
G
and
Krennwallner
T
2009
Answer
Set
59
Arias
J
Carro
M
Salazar
E
Marple
K
Gupta
G
2018
Constraint
Answer
Set
Programming
without
Grounding
Theory
and
Practice
of
Logic
Programming
18
3
4
337
354
arXiv
1804
11162
doi
10
1017
S
1471068418000285
S
2
CID
13754645
60
Denecker
M
Kakas
A.C
July
2000
Special
issue
abductive
logic
programming
Journal
of
Logic
Programming
44
1
3
1
4
doi
10
1016
S
0743
1066
99
00078
3
61
Eshghi
K
1988
August
Abductive
Planning
with
Event
Calculus
with
Negation
by
Failure
In
ICLP
Vol
89
pp
234
255
63
Nienhuys-Cheng
Shan-hwei
Wolf
Ronald
de
1997
Foundations
of
inductive
logic
programming
Lecture
notes
in
computer
science
Lecture
notes
in
artificial
intelligence
Berlin
Heidelberg
Springer
p
173
ISBN
978
3
540
62927
6
abduction
and
inductive
learning
In
Abductive
Reasoning
and
Learning
pp
1
33
Dordrecht
Springer
Netherlands
65
Cropper
A
and
Dumančić
S
2022
Inductive
logic
programming
at
30
a
new
introduction
Journal
of
Artificial
Intelligence
Research
74
pp
765
850
Project
Evaluation
Workshop
Institute
for
New
Generation
Computer
Technology
ICOT
1992
68
Hewitt
Carl
27
April
2016
Inconsistency
Robustness
for
Logic
Programs
Hal
Archives
pp
21
26
Retrieved
7
November
2016
69
Saraswat
V.A
and
Rinard
M
1989
December
Concurrent
pp
232
245
70
Chen
Weidong
Kifer
Michael
Warren
David
S
February
1993
HiLog
A
foundation
for
higher-order
logic
programming
Journal
of
Logic
Programming
15
3
187
230
doi
10
1016
0743
1066
93
90039
J
71
Miller
D.A
and
Nadathur
G
1986
July
Higher-order
logic
programming
In
International
Conference
on
Logic
Programming
pp
448
462
Berlin
Heidelberg
Springer
Berlin
Heidelberg
72
Andreoli
Jean-Marc
1
June
1992
Logic
Programming
with
Focusing
Proofs
in
Linear
Logic
Journal
of
Logic
and
Computation
2
3
297
347
doi
10
1093
logcom
2
3
297
73
Hodas
Joshua
Miller
Dale
1994
Logic
Programming
in
a
Fragment
of
Intuitionistic
Linear
Logic
Information
and
Computation
110
2
327
365
doi
10
1006
inco
1994
1036
74
Kobayashi
Naoki
Yonezawa
Akinori
1994
Asynchronous
communication
model
based
on
linear
logic
US/Japan
Workshop
on
Parallel
Symbolic
Computing
pp
279
294
CiteSeerX
10
1
1
42
8749
75
Miller
Dale
30
September
1996
Forum
A
Multiple-Conclusion
Specification
Logic
Theoretical
Computer
Science
165
1
201
232
doi
10
1016
0304
3975
96
00045
X
76
Kifer
M
and
Lausen
G
1989
June
F-logic
a
higher-order
language
for
reasoning
about
objects
inheritance
and
scheme
In
Proceedings
of
the
1989
ACM
SIGMOD
international
conference
on
Management
of
data
pp
134
146
77
de
Moura
P.J.L
2003
Design
of
an
Object-Oriented
Logic
Programming
Language
Doctoral
dissertation
Universidade
da
Beira
Interior
78
Yang
G
and
Kifer
M
2000
July
FLORA
Implementing
an
efficient
DOOD
system
using
a
tabling
logic
engine
In
International
Conference
on
Computational
Logic
pp
1078
1093
Berlin
Heidelberg
Springer
Berlin
Heidelberg
Baral
C
Gelfond
M
1994
Logic
programming
and
knowledge
representation
PDF
The
Journal
of
Logic
Programming
19
20
73
148
doi
10
1016
0743
1066
94
90025
6
Kowalski
R
A
1988
The
early
years
of
logic
programming
PDF
Communications
of
the
ACM
31
38
43
doi
10
1145
35043
35046
S
2
CID
12259230
1
Lloyd
J
W
1987
Foundations
of
Logic
Programming
2
nd
ed
Springer-Verlag
Miller
Dale
Nadathur
Gopalan
Pfenning
Frank
Scedrov
Andre
1991
Uniform
proofs
as
a
foundation
for
logic
programming
Annals
of
Pure
and
Applied
Logic
51
1
2
125
157
doi
10
1016
0168
0072
91
90068
W
Gabbay
Dov
M
Hogger
Christopher
John
Robinson
J.A
eds
1993
1998
Handbook
of
Logic
in
Artificial
Intelligence
and
Logic
Programming.Vols
1
5
Oxford
University
Press
Carl
Hewitt
Procedural
Embedding
of
Knowledge
in
Planner
IJCAI
1971
Carl
Hewitt
The
Repeated
Demise
of
Logic
Programming
and
Why
It
Will
Be
Reincarnated
AAAI
Spring
Symposium
What
Went
Wrong
and
Why
Lessons
from
AI
Research
and
Applications
2006
2
9
Evgeny
Dantsin
Thomas
Eiter
Georg
Gottlob
Andrei
Voronkov
Complexity
and
expressive
power
of
logic
programming
ACM
Comput
Surv
33
3
374
425
2001
Ulf
Nilsson
and
Jan
Maluszynski
Logic
Programming
and
Prolog
External
links
edit
Wikimedia
Commons
has
media
related
to
Logic
programming
Logic
Programming
Virtual
Library
entry
Bibliographies
on
Logic
Programming
Archived
2008
12
04
at
the
Wayback
Machine
Association
for
Logic
Programming
ALP
Theory
and
Practice
of
Logic
Programming
journal
Logic
programming
in
C
with
Castor
Logic
programming
Archived
2011
09
03
at
the
Wayback
Machine
in
Oz
Prolog
Development
Center
Racklog
Logic
Programming
in
Racket
v
GADTs
Dependent
types
Functional
logic
Point-free
style
Expression-oriented
Synchronous
Logic
Abductive
logic
Answer
set
Constraint
Constraint
logic
Inductive
logic
Nondeterministic
Ontology
Probabilistic
logic
Query
Automatic
mutual
exclusion
Choreographic
programming
Concurrent
logic
Concurrent
constraint
logic
Concurrent
OO
Macroprogramming
Categories
Logic
programming
Computer-related
introductions
in
1972
Programming
paradigms
Logic
Hidden
categories
the
sense
that
it
aims
to
formulate
correct
arguments
that
any
rational
person
would
find
convincing
The
main
discipline
studying
logical
reasoning
is
logic
Distinct
types
of
logical
reasoning
differ
from
each
other
concerning
true
the
conclusion
could
not
be
false
Valid
arguments
follow
a
rule
of
inference
such
as
modus
ponens
or
modus
tollens
Deductive
reasoning
plays
a
central
role
in
formal
logic
and
mathematics
For
non-deductive
logical
reasoning
the
premises
make
their
conclusion
knowledge
7
The
main
discipline
studying
logical
reasoning
is
called
logic
It
is
divided
into
formal
and
informal
logic
which
study
formal
and
informal
logical
reasoning
8
9
10
Traditionally
logical
reasoning
was
primarily
associated
with
deductive
reasoning
studied
by
formal
logic
11
But
in
a
wider
sense
it
also
includes
forms
of
non-deductive
reasoning
such
as
inductive
abductive
and
analogical
reasoning
12
13
14
starts
from
the
premises
and
arrives
at
the
conclusion
18
24
But
the
terms
argument
and
inference
are
often
used
interchangeably
in
logic
The
purpose
of
arguments
is
to
convince
a
person
that
something
is
the
case
by
providing
reasons
for
this
belief
25
26
Many
arguments
in
natural
language
do
not
explicitly
state
all
the
premises
The
rules
governing
deductive
reasoning
are
often
expressed
formally
as
logical
systems
for
assessing
the
correctness
of
deductive
arguments
Aristotelian
logic
is
one
of
the
earliest
systems
and
was
treated
as
the
canon
of
logic
in
the
Western
world
for
over
two
thousand
years
It
is
based
on
syllogisms
like
concluding
that
Socrates
is
a
mortal
from
the
premises
Socrates
is
a
man
and
all
men
are
mortal
44
45
46
The
currently
dominant
system
is
known
as
classical
logic
and
covers
many
additional
forms
of
inferences
besides
syllogisms
So-called
extended
logics
are
based
on
classical
logic
and
introduce
additional
rules
of
inference
for
specific
domains
For
example
modal
logic
can
be
used
to
reason
about
what
is
possible
and
what
is
necessary
Temporal
logic
can
be
used
to
draw
inferences
about
what
happened
before
during
and
after
an
event
47
48
49
Classical
logic
and
its
extensions
rest
on
a
set
of
basic
logical
intuitions
accepted
by
most
logicians
They
include
the
law
of
excluded
middle
the
double
negation
elimination
the
principle
of
explosion
explosion
52
53
54
Deductive
reasoning
plays
a
central
role
in
formal
logic
and
mathematics
1
In
mathematics
it
is
used
to
prove
mathematical
theorems
based
on
a
set
of
premises
usually
called
axioms
For
conclusion
Fallacies
often
appear
to
be
correct
on
the
first
impression
and
thereby
seduce
people
into
accepting
and
using
them
In
logic
the
term
fallacy
does
not
mean
that
the
conclusion
is
false
Instead
it
only
means
that
some
kind
of
error
was
committed
on
the
way
to
reaching
the
conclusion
An
argument
can
be
a
fallacy
even
if
by
a
fortuitous
accident
the
conclusion
is
true
Outside
the
field
of
logic
the
term
fallacy
is
sometimes
used
in
a
slightly
different
sense
for
a
false
belief
or
theory
and
not
for
an
argument
32
96
97
thinking
In
this
sense
it
is
roughly
equivalent
to
critical
thinking
and
includes
the
capacity
to
select
and
apply
the
appropriate
rules
of
logic
to
specific
situations
110
It
encompasses
a
great
variety
of
abilities
besides
drawing
conclusions
from
premises
Examples
are
to
understand
a
position
to
generate
and
evaluate
reasons
for
and
against
edit
Argumentation
theory
Dialogical
logic
Epilogism
List
of
rules
of
inference
9
Dowden
2020
p
355
10
Girod
2014
p
13
11
Craig
1996
Formal
and
informal
logic
12
Bronkhorst
et
al
2020
p
1674
6
13
a
b
Enyeart
Baker
Vanharlingen
1980
p
263
267
16
Dowden
2020
p
346
7
432
470
17
a
b
c
Dowden
2020
p
1
18
a
b
c
d
Audi
1999
Philosophy
of
logic
19
a
b
Honderich
2005
philosophical
logic
20
Copi
Cohen
Rodych
2018
p
4
21
Kenny
2018
p
140
42
a
b
Velleman
2006
p
8
103
43
Church
1996
p
104
44
a
b
Jacquette
2006
p
1
12
Introduction
Philosophy
of
logic
today
45
Smith
2020
49
Goranko
Rumberg
2022
50
Shapiro
Kouri
Kissel
2021
51
Haack
1996
p
1
4
1
Alternative
in
Alternative
Logic
52
a
b
Borchert
2006
Logic
Non-Classical
53
Moschovakis
2021
54
Priest
Tanaka
Weber
2018
Media
p
22
ISBN
9780387728377
Atwater
Lyman
Hotchkiss
1867
Manual
of
Elementary
Logic
Designed
Especially
for
the
Use
of
Teachers
and
Learners
J
B
Lippincott
p
167
Audi
Robert
1999
Philosophy
of
logic
The
Cambridge
Dictionary
of
Philosophy
Cambridge
University
Press
ISBN
9781107643796
Archived
from
the
original
on
14
April
2021
Retrieved
29
December
2021
Archived
from
the
original
on
8
January
2022
Retrieved
8
January
2022
Borchert
Donald
2006
Logic
Non-Classical
Macmillan
Encyclopedia
of
Philosophy
2
nd
Edition
Macmillan
ISBN
9780028657905
Press
p
37
ISBN
9781482238099
Church
Alonzo
1996
Introduction
to
Mathematical
Logic
Princeton
University
Press
p
104
ISBN
9780691029061
Copi
Irving
M
Cohen
Carl
Rodych
Victor
3
September
2018
Introduction
to
Logic
Routledge
ISBN
9781351386975
Cottrell
Stella
14
March
2017
Critical
Thinking
Skills
Effective
ISBN
9781350314672
Craig
Edward
1996
Formal
and
informal
logic
Routledge
Encyclopedia
of
Philosophy
Routledge
ISBN
9780415073103
Archived
from
the
original
on
16
January
2021
Retrieved
29
December
2021
doi
10
1007
s
11409
013
9099
2
S
2
CID
255162310
Gabbay
Michael
4
September
2002
Logic
With
Added
Reasoning
Broadview
Press
p
15
ISBN
9781551114057
Press
ISBN
9781482243147
Goranko
Valentin
Rumberg
Antje
2022
Temporal
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
24
January
2023
Routledge
p
86
ISBN
9781317775393
Groarke
Louis
F
2022
Aristotle
Logic
Internet
Encyclopedia
of
Philosophy
Archived
from
the
original
on
29
December
2021
Retrieved
1
January
2022
Haack
Susan
1996
1
Alternative
in
Alternative
Logic
Deviant
Logic
Fuzzy
Logic
Beyond
the
Formalism
Chicago
and
London
University
of
Chicago
Press
pp
1
4
ISBN
9780226311333
Lab
Stanford
University
Retrieved
18
January
2023
Honderich
Ted
2005
philosophical
logic
The
Oxford
Companion
to
Philosophy
Oxford
University
Press
ISBN
9780199264797
Archived
from
the
original
on
29
January
2021
Retrieved
2
January
2022
ISBN
9780198841531
Jacquette
Dale
2006
Introduction
Philosophy
of
logic
today
Philosophy
of
Logic
North
Holland
pp
1
12
ISBN
9780444515414
Archived
from
the
original
on
7
December
2021
Retrieved
29
December
2021
Johnson
Gregory
6
January
2017
Argument
and
Inference
An
Introduction
to
Inductive
Logic
MIT
Press
p
2
ISBN
9780262035255
Johnson-Laird
Phil
30
December
2009
Deductive
reasoning
WIREs
p
100
ISBN
9781487588618
Kohar
Richard
15
June
2016
Basic
Discrete
Mathematics
Logic
Set
Theory
And
Probability
World
Scientific
Publishing
Company
pp
54
57
ISBN
9789814730419
Realism/Antirealism
Debate
Springer
Nature
p
83
ISBN
9783030580476
Moschovakis
Joan
2021
Intuitionistic
Logic
1
Rejection
of
Tertium
Non
Datur
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
11
December
Norman
J
Sylvan
R
6
December
2012
Directions
in
Relevant
Logic
Springer
Science
Business
Media
p
419
ISBN
9789400910058
Nunes
Terezinha
5
October
2011
Logical
Reasoning
and
Learning
Springer
Science
Business
Media
pp
2066
9
ISBN
9781441914279
Nute
Donald
6
December
2012
Defeasible
Deontic
Logic
Springer
Science
Business
Media
p
82
ISBN
9789401588515
Priest
Graham
Tanaka
Koji
Weber
Zach
2018
Paraconsistent
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
14
December
2021
the
Philosophy
of
Normativity
OUP
Oxford
p
192
ISBN
9780191610219
Salmon
Merrilee
2012
Introduction
to
Logic
and
Critical
Thinking
Cengage
Learning
ISBN
978
1133711643
permanent
dead
link
Lang
p
15
ISBN
9781433107801
Shapiro
Stewart
Kouri
Kissel
Teresa
2021
Classical
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Archived
from
the
original
on
3
May
1998
Retrieved
4
December
2021
Smith
Robin
2020
Aristotle's
Logic
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Archived
from
the
original
on
26
December
2021
Retrieved
1
January
2022
Categories
Reasoning
Concepts
in
logic
Hidden
categories
Logical
consequence
also
entailment
or
implication
is
a
fundamental
concept
in
logic
which
describes
the
relationship
between
statements
that
hold
true
when
one
statement
logically
follows
from
one
or
more
statements
A
valid
logical
argument
is
one
in
which
the
conclusion
is
involves
the
questions
In
what
sense
does
a
conclusion
follow
from
its
premises
and
What
does
it
mean
for
a
conclusion
to
be
a
consequence
of
premises
1
All
of
philosophical
logic
is
meant
to
provide
accounts
of
the
nature
of
logical
consequence
and
the
nature
of
logical
truth
2
explain
with
formal
proof
and
models
of
interpretation
1
A
sentence
is
said
to
be
a
logical
consequence
of
a
set
of
sentences
for
a
given
language
if
and
only
if
using
only
logic
i.e
without
regard
to
any
personal
interpretations
of
the
sentences
the
sentence
must
be
true
if
every
sentence
in
the
set
is
true
3
The
two
prevailing
techniques
for
providing
accounts
of
logical
consequence
involve
expressing
the
concept
in
terms
of
proofs
and
via
models
The
study
of
the
syntactic
consequence
of
a
logic
is
called
its
proof
theory
whereas
the
study
of
its
semantic
consequence
is
called
its
model
theory
4
edit
See
also
Non-monotonic
logic
and
Belief
revision
Non-monotonic
inference
relation
edit
Abstract
algebraic
logic
Ampheck
Boolean
algebra
logic
Boolean
domain
Boolean
function
Boolean
logic
Causality
Deductive
reasoning
Logic
gate
Logical
graph
Peirce's
law
Probabilistic
logic
Propositional
calculus
Sole
sufficient
operator
Strawson
entailment
Strict
conditional
Tautology
logic
Tautological
consequence
Therefore
sign
Consequence
The
Stanford
Encyclopedia
of
Philosophy
Fall
2009
Edition
Edward
N
Zalta
ed
2
Quine
Willard
Van
Orman
Philosophy
of
Logic
3
a
b
McKeon
Matthew
Logical
Consequence
Internet
Encyclopedia
of
Philosophy
4
Kosta
Dosen
1996
Logical
consequence
a
turn
in
style
In
Maria
Luisa
Dalla
Chiara
Kees
Doets
Daniele
Mundici
Johan
van
Benthem
eds
Logic
and
Scientific
Methods
Volume
One
of
the
Tenth
International
Congress
of
Logic
Methodology
and
Philosophy
of
Science
Florence
August
1995
Springer
p
292
ISBN
978
0
7923
4383
7
Nostrand
Publishing
p
88
10
Hunter
Geoffrey
1996
1971
Metalogic
An
Introduction
to
the
Metatheory
of
Standard
First-Order
Logic
University
of
California
Press
published
1973
p
101
ISBN
9780520023567
OCLC
36312727
accessible
to
patrons
with
print
disabilities
Augusto
Luis
M
2017
Logical
consequences
Theory
and
applications
An
introduction
London
College
Publications
Series
Mathematical
logic
and
foundations
Barwise
Jon
Etchemendy
John
2008
Language
Proof
and
Logic
Stanford
CSLI
Publications
Brown
Frank
Markham
2003
Boolean
Reasoning
The
Logic
of
Boolean
Equations
1
st
edition
Kluwer
Academic
Publishers
Norwell
MA
2
nd
edition
Dover
Publications
Mineola
NY
2003
Edgington
Dorothy
2001
Conditionals
Blackwell
in
Lou
Goble
ed
The
Blackwell
Guide
to
Philosophical
Logic
Edgington
Dorothy
2006
Indicative
Conditionals
Conditionals
University
Press
Goble
Lou
ed
2001
The
Blackwell
Guide
to
Philosophical
Logic
Blackwell
Planchette
P
A
2001
Logical
Consequence
in
Goble
Lou
ed
The
Blackwell
Guide
to
Philosophical
Logic
Blackwell
Quine
W.V
1982
Methods
of
Logic
Cambridge
MA
Harvard
University
Press
1
st
ed
1950
2
nd
ed
1959
3
rd
ed
1972
4
th
edition
1982
Shapiro
Stewart
2002
Necessity
meaning
and
rationality
the
notion
of
logical
consequence
in
D
Jacquette
ed
A
Companion
to
Philosophical
Logic
Blackwell
Tarski
Alfred
1936
On
the
concept
of
logical
consequence
Reprinted
in
Tarski
A
1983
Logic
Semantics
Metamathematics
2
nd
ed
Oxford
University
Press
Originally
published
in
Polish
and
German
e
Logic
Outline
Formal
semantics
natural
language
Inference
Philosophy
of
logic
Proof
Semantics
of
logic
Syntax
topics
Mathematical
logic
Boolean
algebra
Set
theory
Paradoxes
Fallacies
Logic
symbols
Philosophy
portal
e
Mathematical
logic
General
list
Cardinality
First-order
logic
Formal
proof
Formal
semantics
Traditional
Classical
logic
Logical
truth
Tautology
Propositional
formula
Truth
tables
Many-valued
logic
3
finite
Model
complete
theory
Satisfiability
Semantics
of
logic
Strength
Theories
of
truth
Related
Abstract
logic
Algebraic
logic
Automated
theorem
proving
Category
theory
Concrete/Abstract
category
Category
of
sets
History
of
logic
History
of
mathematical
logic
timeline
Logicism
Glue
semantics
Inquisitive
semantics
Intensional
logic
Lambda
calculus
Mereology
Formal
grammar
Inferentialism
Logic
translation
Linguistics
wars
Philosophy
of
language
Pragmatics
Semantics
of
logic
Authority
control
databases
National
Edit
this
at
Wikidata
Categories
Logical
consequence
Philosophical
logic
Metalogic
Propositional
calculus
Semantic
units
Deductive
reasoning
Concepts
in
logic
Syntax
logic
Binary
operations
From
Wikipedia
the
free
encyclopedia
Logical
connective
OR
Disjunction
redirects
here
For
the
logic
gate
see
OR
gate
For
separation
of
chromosomes
see
Meiosis
For
disjunctions
in
distribution
see
Disjunct
distribution
semantics
MATH
displaystyle
1110
Logic
gate
70
px-OR_ANSI.svg.png
Normal
forms
Disjunctive
Related
concepts
Propositional
calculus
Predicate
logic
Boolean
algebra
Truth
table
Boolean
function
Functional
completeness
Scope
logic
Applications
Digital
logic
Programming
languages
Mathematical
logic
Philosophy
of
logic
Category
displaystyle
scriptstyle
A\lor
B\lor
C
In
logic
disjunction
also
known
as
logical
disjunction
or
logical
or
or
logical
addition
or
inclusive
disjunction
is
a
logical
connective
typically
notated
as
displaystyle
lor
and
read
aloud
as
or
For
instance
the
English
language
sentence
it
is
sunny
or
it
is
warm
can
be
represented
in
logic
using
the
disjunctive
formula
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
true
scriptlevel
0
mi
S
mi
mo
mo
mi
W
mi
displaystyle
W
abbreviates
it
is
warm
In
classical
logic
disjunction
is
given
a
truth
functional
semantics
according
to
which
a
formula
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
When
it
is
necessary
to
clarify
whether
inclusive
or
exclusive
or
is
intended
English
speakers
sometimes
uses
the
phrase
and/or
In
terms
of
logic
this
phrase
is
identical
to
or
but
makes
the
inclusion
of
both
being
true
explicit
edit
In
logic
and
related
fields
disjunction
is
customarily
notated
with
an
infix
operator
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
vert
vert
in
many
programming
languages
The
English
word
or
is
sometimes
used
as
well
often
in
capital
letters
In
Jan
Łukasiewicz's
prefix
notation
for
logic
the
operator
is
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
true
scriptlevel
0
mi
A
mi
mstyle
mrow
edit
In
the
semantics
of
logic
classical
disjunction
is
a
truth
functional
operation
which
returns
the
truth
value
true
unless
both
of
its
arguments
are
false
Its
semantic
entry
is
standardly
given
as
edit
In
classical
logic
systems
where
logical
disjunction
is
not
a
primitive
it
can
be
defined
in
terms
of
the
primitive
and
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
2021
150
px-Or-gate-en.svg.png
OR
logic
gate
Operators
corresponding
to
logical
disjunction
exist
in
most
annotation
encoding
application/x-tex
displaystyle
lor
annotation
semantics
MATH
displaystyle
lor
in
classical
logic
Notably
classical
disjunction
is
inclusive
while
natural
language
disjunction
is
often
understood
exclusively
as
the
following
English
example
typically
be
forced
1
Similar
deviations
from
classical
logic
have
been
noted
in
cases
such
as
free
choice
disjunction
and
simplification
of
disjunctive
antecedents
where
certain
modal
operators
trigger
a
conjunction-like
Affirming
a
disjunct
Boolean
algebra
logic
Boolean
algebra
topics
Boolean
domain
Winter
2016
ed
Metaphysics
Research
Lab
Stanford
University
retrieved
2020
09
03
2
Disjunction
logic
Encyclopedia
Britannica
Retrieved
2020
09
03
3
Beall
Jeffrey
C
2010
Logic
the
basics
1
publ
ed
London
Routledge
p
57
ISBN
978
0
203
85155
5
4
Józef
Maria
Bocheński
1959
A
Précis
of
Mathematical
Logic
translated
by
Otto
Bird
from
the
French
and
German
editions
Dordrecht
North
Holland
D
Reidel
passim
5
Weisstein
Eric
W
OR
MathWorld
A
Wolfram
Web
Resource
Retrieved
24
September
2024
6
Walicki
Michał
2016
Introduction
to
Mathematical
Logic
WORLD
SCIENTIFIC
p
150
doi
10
1142
9783
ISBN
978
9814343879
7
Howson
Colin
1997
Logic
with
trees
an
introduction
to
symbolic
logic
London
New
York
Routledge
p
38
ISBN
978
0
415
13342
5
8
Python
3
12
1
Documentation
The
Python
Language
Reference
e
Mathematical
logic
General
list
Cardinality
First-order
logic
Formal
proof
Formal
semantics
Traditional
Classical
logic
Logical
truth
Tautology
Propositional
formula
Truth
tables
Many-valued
logic
3
finite
Model
complete
theory
Satisfiability
Semantics
of
logic
Strength
Theories
of
truth
Related
Abstract
logic
Algebraic
logic
Automated
theorem
proving
Category
theory
Concrete/Abstract
category
Category
of
sets
History
of
logic
History
of
mathematical
logic
timeline
Logicism
Glue
semantics
Inquisitive
semantics
Intensional
logic
Lambda
calculus
Mereology
Formal
grammar
Inferentialism
Logic
translation
Linguistics
wars
Philosophy
of
language
Pragmatics
Semantics
of
logic
Authority
control
databases
National
Edit
this
at
Wikidata
Toggle
the
table
of
contents
Logic
for
Computable
Functions
3
languages
From
Wikipedia
the
free
encyclopedia
1970
s
automated
theorem
prover
See
also
Logic
of
Computable
Functions
Logic
for
Computable
Functions
LCF
is
an
interactive
automated
theorem
prover
developed
at
Stanford
and
Edinburgh
by
Robin
Milner
and
collaborators
in
early
1970
s
based
on
the
theoretical
foundation
of
logic
of
computable
functions
previously
proposed
by
Dana
Scott
Work
on
the
LCF
system
introduced
the
general-purpose
programming
language
ML
to
allow
users
to
write
theorem-proving
tactics
supporting
Among
subsequent
implementations
is
Cambridge
LCF
Later
systems
simplified
the
logic
to
use
total
instead
of
partial
functions
leading
to
HOL
HOL
Light
and
the
Isabelle
proof
assistant
that
supports
various
logics
As
of
2019
the
Isabelle
proof
assistant
still
contains
an
implementation
of
an
LCF
logic
Isabelle/LCF
Notes
Gordon
Michael
J
Milner
Arthur
J
Wadsworth
Christopher
P
1979
Edinburgh
LCF
A
Mechanised
Logic
of
Computation
Lecture
Notes
in
Computer
Science
Vol
78
Berlin
Heidelberg
Springer
doi
10
1007
3
540
09724
4
ISBN
978
3
540
09724
2
S
2
CID
21159098
doi
10
1007
978
3
322
96753
4
ISBN
978
3
322
96754
1
Milner
Robin
May
1972
Logic
for
Computable
Functions
description
of
a
machine
implementation
PDF
Stanford
University
Isabelle
LEGO
Logic
for
Computable
Functions
Matita
Twelf
Stub
icon
This
mathematical
logic-related
article
is
a
stub
You
can
help
Wikipedia
by
expanding
it
Categories
Logic
in
computer
science
Proof
assistants
Mathematical
logic
stubs
Hidden
categories
permalink
Does
one
have
to
understand
the
theory
of
formal
ontologies
and
logic
to
use
the
Semantic
Web
permalink
Description
Logic
Description
Logic
is
the
mathematical
theory
stemming
from
knowledge
representation
that
is
at
the
basis
of
some
of
the
technologies
defined
on
the
Semantic
Web
like
the
so-called
Direct
Semantics
of
Ontologies
and
rules
refer
to
two
different
traditions
stemming
from
logic
as
developed
in
the
past
decades
Whereas
ontologies
are
more
closely
related
to
classification
systems
and
particularly
to
description
logic
rules
rely
more
on
the
advances
of
logic
programming
and
rule
based
systems
The
term
rules
in
the
context
of
the
Semantic
Web
refers
to
elements
of
logic
programming
and
rule
based
systems
bound
to
Semantic
Web
data
Rules
offer
a
way
to
express
for
example
constraints
on
the
relationships
defined
by
by
RDF
or
may
be
used
to
discover
new
The
Rule
Interchange
Format
RIF
Working
Group
is
currently
working
on
a
precise
definition
of
this
core
Rule
language
on
ways
to
extend
this
rule
language
to
various
variants
production
rules
logic
programming
etc
to
exchange
expression
of
rules
among
systems
and
to
define
the
precise
relationships
of
these
rules
with
OWL
ontologies
sides
i.e
the
rule
and
the
classification
sides
should
work
together
on
the
same
data
set
It
defines
some
sort
of
an
interplay
between
two
different
mechanisms
the
shall
we
say
logic
programming
part
and
the
knowledge
representation
part
Implementations
doing
both
are
a
bit
like
hybrid
cars
they
have
two
parallel
engines
and
a
well
implementations
out
there
that
do
just
that
The
substantive
differences
is
that
RIF
i.e
logic
programming
and
OWL
are
designed
to
allow
for
optimizations
of
different
sets
of
problems
Very
broadly
speaking
OWL
optimizes
for
taxonomic
reasoning
problems
within
an
ontology
specification
i.e
without
the
data
and
logic
programs
optimize
for
reasoning
problems
within
the
data
i.e
without
the
ontology
So
a
reasonable
rule
of
thumb
is
if
one’s
ontology
is
very
large
one
should
probably
use
OWL
and
if
data
set
is
It
depends
on
the
application
The
answer
on
the
role
of
ontologies
and/or
rules
includes
a
very
simple
ontology
example
Some
applications
may
decide
not
to
use
even
such
small
ontologies
and
rely
on
the
logic
of
the
application
program
Some
application
may
choose
to
use
very
simple
ontologies
like
the
one
described
and
let
a
general
Semantic
Web
environment
use
that
extra
information
to
make
the
identification
of
the
terms
Some
applications
need
an
agreement
on
common
terminologies
without
any
rigor
imposed
by
a
logic
system
Finally
some
applications
may
need
more
complex
ontologies
with
complex
reasoning
procedures
It
all
depends
on
the
requirements
and
the
goals
permalink
Consequences
of
inconsistency
in
formal
logic
doesn’t
that
ruin
the
Semantic
Web
The
problem
referred
to
by
this
question
is
the
fact
that
in
formal
logic
if
there
is
an
inconsitency
somewhere
then
it
is
possible
to
draw
all
conclusions
and
their
negations
The
issue
is
whether
this
would
not
create
major
difficulties
on
the
Semantic
Web
discovering
new
relationships
as
explained
in
the
answer
of
another
question
These
inferences
are
mostly
done
within
a
restricted
guarded
subset
of
first
order
logic
Usually
reasoning
on
the
Semantic
Web
does
not
use
the
full
power
of
first
order
or
higher
order
logic
and
therefore
avoids
some
of
the
dangerous
issues
that
can
come
from
an
inferred
inconsistency
In
other
words
in
practice
no
major
difficulties
can
be
expected
1
Theoretical
foundations
and
analysis
2
Computers
to
assist
logicians
3
Logic
applications
for
computers
4
See
also
5
References
Toggle
the
table
of
contents
Logic
in
computer
science
7
languages
From
Wikipedia
the
free
encyclopedia
Academic
discipline
For
the
academic
conference
LICS
see
Symposium
on
Logic
in
Computer
Science
220
px-Logic_Gates.svg.png
Diagrammatic
representation
of
computer
logic
gates
Logic
in
computer
science
covers
the
overlap
between
the
field
of
logic
and
that
of
computer
science
The
topic
can
essentially
be
divided
into
three
main
areas
Theoretical
foundations
and
analysis
Use
of
computer
technology
to
aid
logicians
Use
of
concepts
from
logic
for
computer
applications
Theoretical
foundations
and
analysis
edit
Logic
plays
a
fundamental
role
in
computer
science
Some
of
the
key
areas
of
logic
that
are
particularly
significant
are
computability
theory
formerly
called
recursion
theory
modal
logic
and
category
theory
The
theory
of
computation
is
based
on
concepts
defined
by
logicians
and
mathematicians
such
as
Alonzo
Church
and
Alan
procedure
and
Kurt
Gödel
asserted
that
he
found
Turing's
analysis
perfect
3
In
addition
some
other
major
areas
of
theoretical
overlap
between
logic
and
computer
science
are
Gödel's
incompleteness
theorem
proves
that
any
logical
system
powerful
enough
to
characterize
arithmetic
will
contain
statements
software
4
The
frame
problem
is
a
basic
problem
that
must
be
overcome
when
using
first-order
logic
to
represent
the
goals
of
an
artificial
intelligence
agent
and
the
state
of
its
environment
5
The
Curry–Howard
correspondence
is
a
relation
between
logical
precise
correspondence
between
proofs
and
programs
In
particular
it
showed
that
terms
in
the
simply
typed
lambda
calculus
correspond
to
proofs
of
intuitionistic
propositional
logic
Category
theory
represents
a
view
of
mathematics
that
emphasizes
the
relations
between
structures
It
is
intimately
tied
to
many
languages
the
theory
of
transition
systems
models
of
programming
languages
and
the
theory
of
programming
language
semantics
6
Logic
programming
is
a
programming
database
and
knowledge
representation
paradigm
that
is
based
on
formal
logic
A
logic
program
is
a
set
of
sentences
about
some
problem
domain
Computation
is
performed
by
applying
logical
reasoning
to
solve
problems
in
the
domain
Major
logic
programming
language
families
include
Prolog
Answer
Set
Programming
ASP
and
Datalog
One
of
the
first
applications
to
use
the
term
artificial
intelligence
was
the
Logic
Theorist
system
developed
by
Allen
Newell
Cliff
Shaw
and
Herbert
Simon
in
1956
One
of
the
things
that
a
logician
does
is
to
take
a
set
of
statements
in
logic
and
deduce
the
conclusions
additional
statements
that
must
be
true
by
the
laws
of
logic
For
example
if
given
the
statements
All
humans
are
mortal
and
Socrates
is
human
a
valid
conclusion
is
Socrates
is
mortal
Of
course
this
is
a
trivial
example
In
actual
logical
systems
the
statements
can
be
numerous
and
complex
It
was
realized
early
on
that
this
kind
of
analysis
could
be
significantly
aided
by
the
use
of
computers
Logic
Theorist
validated
the
theoretical
work
of
Bertrand
Russell
and
Alfred
North
Whitehead
in
their
influential
work
on
mathematical
logic
called
Principia
Mathematica
In
addition
subsequent
systems
have
been
utilized
by
logicians
to
validate
and
discover
new
mathematical
theorems
and
proofs
7
Logic
applications
for
computers
edit
There
has
always
been
a
strong
influence
from
mathematical
logic
on
the
field
of
artificial
intelligence
AI
From
the
beginning
of
the
field
it
was
realized
that
technology
to
automate
logical
inferences
could
have
great
potential
to
solve
problems
and
draw
conclusions
from
facts
Ron
Brachman
has
described
first-order
logic
FOL
as
the
metric
by
which
all
AI
knowledge
representation
formalisms
should
be
evaluated
First-order
logic
is
a
general
and
powerful
method
for
describing
and
analyzing
information
The
reason
FOL
itself
is
simply
not
used
as
a
computer
language
is
that
it
is
actually
too
expressive
in
the
sense
optimization
algorithms
and
compilation
9
On
the
other
hand
logic
programming
which
combines
the
Horn
clause
subset
of
first-order
logic
with
a
non-monotonic
form
of
negation
has
both
high
expressive
power
and
efficient
implementations
In
particular
the
logic
programming
language
Prolog
is
a
Turing
complete
programming
language
Datalog
extends
the
relational
database
model
with
recursive
relations
while
answer
set
programming
is
a
form
of
logic
programming
oriented
towards
difficult
primarily
NP-hard
search
problems
specification
11
Another
important
application
of
logic
to
computer
technology
has
been
in
the
area
of
frame
languages
and
automatic
classifiers
Frame
languages
such
as
KL-ONE
can
be
directly
mapped
to
set
theory
and
first-order
logic
This
allows
specialized
theorem
provers
called
classifiers
to
analyze
the
various
declarations
between
sets
subsets
and
relations
in
a
given
model
In
this
way
the
model
can
be
validated
Semantic
Web
12
13
Temporal
logic
is
used
for
reasoning
in
concurrent
systems
14
See
also
edit
Automated
reasoning
Computational
logic
Logic
programming
References
1
Lewis
Harry
R
1981
Elements
of
the
Theory
of
Computation
Prentice
Hall
2
Davis
Martin
11
May
1995
Influences
of
Mathematical
Logic
on
Computer
Science
In
Rolf
Herken
ed
The
Universal
Turing
Machine
Springer
Verlag
ISBN
9783211826379
Retrieved
26
December
Computing
Science
PDF
Centre
de
Recherches
Mathématiques
7
Newell
Allen
J.C
Shaw
H.C
Simon
1963
Empirical
explorations
with
the
logic
theory
machine
In
Ed
Feigenbaum
ed
Computers
and
Thought
McGraw
Hill
pp
109
133
ISBN
978
0262560924
on
April
24
2013
14
Colin
Stirling
1992
Modal
and
Temporal
Logics
In
S
Abramsky
D
M
Gabbay
T
S
E
Maibaum
eds
Handbook
of
Logic
in
Computer
Science
Vol
II
Oxford
University
Press
pp
477
563
ISBN
0
19
853761
1
Ben-Ari
Mordechai
2012
Mathematical
Logic
for
Computer
Science
3
rd
ed
Springer-Verlag
ISBN
978
1447141280
Harrison
John
2009
Handbook
of
Practical
Logic
and
Automated
Reasoning
1
st
ed
Cambridge
University
Press
ISBN
978
0521899574
Huth
Michael
Ryan
Mark
2004
Logic
in
Computer
Science
Modelling
and
Reasoning
about
Systems
2
nd
ed
Cambridge
University
Press
ISBN
978
0521543101
Burris
Stanley
N
1997
Logic
for
Mathematics
and
Computer
Science
1
st
ed
Prentice
Hall
ISBN
978
0132859745
edit
Article
on
Logic
and
Artificial
Intelligence
at
the
Stanford
Encyclopedia
of
Philosophy
IEEE
Symposium
on
Logic
in
Computer
Science
LICS
Alwen
Tiu
Introduction
to
logic
video
recording
of
a
lecture
at
ANU
Logic
Summer
School
09
aimed
mostly
at
computer
scientists
v
e
Logic
Outline
Formal
semantics
natural
language
Inference
Philosophy
of
logic
Proof
Semantics
of
logic
Syntax
topics
Mathematical
logic
Boolean
algebra
Set
theory
Paradoxes
Fallacies
Logic
symbols
Philosophy
portal
Flip-flop
Memory
cell
Combinational
logic
Sequential
logic
Logic
gate
Boolean
circuit
Integrated
circuit
IC
Mixed-signal
integrated
circuit
Three-dimensional
integrated
circuit
3
D
IC
Emitter-coupled
logic
ECL
Erasable
programmable
logic
device
EPLD
Macrocell
array
Programmable
logic
array
PLA
Programmable
logic
device
PLD
Programmable
Array
Logic
PAL
Generic
Array
Logic
GAL
Complex
programmable
logic
device
CPLD
Field-programmable
gate
array
FPGA
Field-programmable
object
array
FPOA
Digital
signal
Boolean
algebra
Logic
synthesis
Logic
in
computer
science
Computer
architecture
Digital
signal
Design
Logic
synthesis
Place
and
route
Placement
High-level
synthesis
Formal
equivalence
checking
Synchronous
logic
Asynchronous
logic
Finite-state
machine
Hierarchical
state
machine
Categories
Logic
in
computer
science
Formal
methods
o
Theory
of
Computation
o
Compiler
Design
o
Digital
Logic
o
Software
Engineering
DevOps
DBMS
Computer
Networks
Digital
Logic
and
Design
C
Programming
Data
Structures
Open
In
App
Program
to
Implement
Logic
Gates
Last
Updated
30
Aug
2024
News
Follow
In
a
computer
most
of
the
electronic
circuits
are
made
up
logic
gates
Logic
gates
are
used
to
create
a
circuit
that
performs
calculations
data
storage
or
shows
off
object-oriented
programming
especially
the
power
of
inheritance
Logic
gates
can
also
be
constructed
using
vacuum
tubes
electromagnetic
elements
like
optics
molecule
etc
What
is
Logic
Gate
A
Logic
gate
is
an
elementary
building
block
of
any
digital
circuits
It
takes
one
or
two
inputs
and
produces
output
based
on
those
inputs
Outputs
may
be
high
1
or
low
0
Logic
gates
are
implemented
using
diodes
or
transistors
There
are
seven
basic
logic
gates
defined
these
are
1
AND
gate
Conclusion
Logic
gates
are
basic
building
components
of
digital
circuits
necessary
to
design
complex
systems
They
are
used
to
perform
logical
operations
It
is
important
to
understanding
the
working
and
combination
of
these
gates
in
order
to
design
circuits
that
perform
tasks
correctly
and
efficiently
Logic
gates
can
help
develop
a
solid
foundation
in
digital
electronics
and
pave
the
way
for
exploring
more
advanced
topics
Frequently
Asked
Questions
on
Logic
Gates
FAQs
How
to
Implement
Logic
Gates
Logic
gates
are
implemented
using
diodes
or
transistors
They
can
also
be
constructed
using
vacuum
tubes
molecules
etc
How
are
Logic
Gates
Implemented
in
Real
Life
Logic
gates
are
implemented
in
thermostats
locks
water
systems
and
many
other
electronic
devices
What
are
the
Applications
of
Logic
Gates
Logic
gates
are
used
in
microcontrollers
microprocessors
and
embedded
systems
More
info
Next
Article
Two
Level
Implementation
of
Logic
Gates
author
sunilkannur
98
Article
Tags
C
Language
Digital
Logic
Programming
Language
Similar
Reads
Program
to
Implement
Logic
Gates
In
a
computer
most
of
the
electronic
circuits
are
made
up
logic
gates
Logic
gates
are
used
to
create
a
circuit
that
performs
calculations
data
storage
or
shows
off
object-oriented
programming
especially
the
power
of
inheritance
Logic
gates
can
also
be
constructed
using
vacuum
tubes
electromagne
8
min
read
Two
Level
Implementation
of
Logic
Gates
The
term
two-level
logic
refers
to
a
logic
design
that
uses
no
more
than
two
logic
gates
between
input
and
output
This
does
not
mean
that
the
entire
design
will
only
have
two
logic
gates
but
it
does
mean
that
the
single
path
from
input
to
output
will
only
have
two
logic
gates
In
two-level
logic
10
min
read
C
program
to
implement
Half
Adder
Prerequisite
Half
Adder
in
Digital
Logic
We
are
given
with
two
inputs
A
and
B
Our
task
is
to
implement
Half
Adder
circuit
and
print
the
outputs
sum
and
carry
of
two
inputs
Introduction
The
2
min
read
Python
program
to
implement
2
4
Multiplexer
Prerequisite
Multiplexers
in
Digital
Logic
Introduction
It
is
a
combinational
circuit
which
have
many
data
inputs
and
single
output
depending
on
control
or
select
inputs
For
N
input
lines
log
n
numbers
which
are
minuend
subtrahend
2
min
read
Introduction
of
Logic
Gates
In
Boolean
Algebra
there
are
three
basic
operations
Tex
prime
Tex
which
are
analogous
to
disjunction
conjunction
and
negation
in
propositional
logic
Each
of
these
operations
has
a
corresponding
logic
gate
Apart
from
these
there
are
a
few
other
logic
gates
as
well
It
was
inv
10
min
read
Implementation
of
OR
Gate
from
NOR
Gate
The
Logic
gates
are
the
Fundamental
Building
Blocks
of
the
Digital
Circuits
The
Logic
Gate
takes
one
or
more
Binary
inputs
and
performs
logical
Operations
to
Produce
a
single
binary
Output
Understanding
through
the
Different
Combinations
of
gates
is
In
Digital
Electronics
the
concepts
of
Gates
and
Mux
are
a
must
to
design
the
Digital
circuit
The
gates
are
the
building
block
in
Digital
electronics
and
a
MUX
is
a
combinational
logic
circuit
used
in
Digital
Electronics
By
Combining
different
types
of
gates
we
can
design
a
complex
circuit
that
c
6
min
read
Python
Program
to
implement
Full
Subtractor
Prerequisite
Full
Subtractor
in
Digital
Logic
In
this
we
will
discuss
the
overview
of
the
full
subtractor
and
will
implement
the
full
subtractor
logic
in
the
python
language
Also
we
will
cover
with
the
help
of
examples
Let's
discuss
it
one
by
one
Given
three
inputs
of
Full
Subtractor
A
B
Bin
4
min
read
Programming
Array
Logic
Programmable
Array
Logic
PAL
is
a
commonly
used
programmable
logic
device
PLD
It
has
programmable
AND
array
and
fixed
OR
array
Because
only
the
AND
array
is
programmable
it
is
easier
to
use
but
not
flexible
as
compared
to
Programmable
Logic
Array
PLA
PAL's
only
limitation
is
number
of
AND
5
min
read
Implementation
of
Full
Adder
using
NOR
Gates
In
Digital
Logic
Circuit
Full
Adder
is
a
Digital
Logic
Circuit
that
can
add
three
inputs
and
give
two
outputs
The
three
inputs
A
B
and
input
carry
as
Cin
Cout
is
represented
as
output
carry
and
symbols
0
1
2
4
5
6
7
8
9
A
B
C
8
min
read
Programmable
Logic
Array
A
Programmable
Logic
Array
therefore
comprises
of
a
PLA
chip
having
a
fixed
wiring
structure
of
AND
gates
followed
by
OR
gates
that
can
be
programmed
PLA
is
a
type
of
programmable
logic
device
to
construct
a
reconfigurable
digital
circuit
on
its
architecture
It
includes
memory
as
well
as
logical
6
min
read
Implementation
of
OR
Gate
from
NAND
Gate
Logic
gates
are
an
essential
component
of
digital
electronics
and
are
used
to
handle
binary
data
Because
of
its
universal
nature
the
NAND
gate
is
particularly
significant
among
these
gates
This
demonstrating
the
adaptability
and
usef
4
min
read
Universal
Logic
Gates
A
logic
gate
is
an
active
electronic
component
that
uses
one
or
more
inputs
to
produce
an
output
based
on
the
bolean
algebra
each
gate
is
designed
to
perform
Though
there
are
various
types
of
of
the
digital
electronics
field
that
uses
binary
variables
and
logical
operations
Think
of
it
as
the
mind
that
makes
the
computers
work
effectively
Then
imagine
that
logic
gates
AND
OR
and
NOT
could
be
the
necessary
helpers
in
5
min
read
Database
Management
System
Software
Engineering
Digital
Logic
Design
Engineering
Maths
Software
Development
2
RIF
Use
Cases
and
Requirements
Second
Edition
3
RIF
Core
Dialect
Second
Edition
4
RIF
Basic
Logic
Dialect
Second
Edition
5
RIF
Production
Rule
Dialect
Second
Edition
6
RIF
Framework
for
Logic
Dialects
Second
Edition
7
RIF
Datatypes
and
Built-Ins
1
0
Second
Edition
8
RIF
RDF
and
OWL
Compatibility
Second
Edition
1
Introduction
2
RIF
Dialects
3
RIF
Framework
for
Logic
Dialects
4
RDF
and
OWL
Compatibility
5
A
General
Survey
of
the
RIF
Documents
rule
exchange
alone
was
recognized
as
a
daunting
task
Known
rule
systems
fall
into
three
broad
categories
first-order
logic-programming
and
action
rules
These
paradigms
share
little
in
the
way
of
syntax
and
semantics
Moreover
there
are
large
differences
between
systems
even
within
the
same
paradigm
2
RIF
Dialects
The
RIF
Working
Group
has
focused
on
two
kinds
of
dialects
logic-based
dialects
and
dialects
for
rules
with
actions
Generally
logic-based
dialects
include
languages
that
employ
some
kind
of
logic
such
as
first-order
logic
often
restricted
to
Horn
logic
or
non-first-order
logics
underlying
the
various
logic
programming
languages
e.g
logic
programming
under
the
well-founded
or
stable
semantics
The
rules-with-actions
dialects
include
production
rule
systems
such
as
event-condition-action
rules
such
as
Reaction
RuleML
and
XChange
Due
to
the
limited
resources
of
the
RIF
Working
Group
it
defined
only
two
logic
dialects
the
Basic
Logic
Dialect
RIF-BLD
and
a
subset
the
RIF
Core
Dialect
shared
with
RIF-PRD
the
Production
Rule
Dialect
RIF-PRD
is
the
only
rules-with-actions
dialect
defined
by
the
group
RIF-Core
and
RIF-PRD
all
share
the
foundations
of
RIF-DTB
1
0
3
RIF
Framework
for
Logic
Dialects
The
RIF
Working
Group
spent
almost
four
years
on
developing
the
above
community-developed
dialects
once
the
RIF
Working
Group
disbands
The
Working
Group
partially
addressed
these
questions
by
also
developing
an
extensibility
framework
called
the
Framework
for
Logic
Dialects
or
RIF-FLD
A
comparable
framework
for
rules
with
actions
might
be
developed
later
Developing
RIF-FLD
as
a
framework
turned
out
to
be
feasible
because
despite
the
diversity
of
logical
theories
underlying
the
different
logic
rule
systems
they
share
much
of
the
same
syntactic
and
semantic
machinery
Moreover
the
ways
to
combine
the
different
pieces
of
that
machinery
in
order
to
create
those
logic
systems
are
well
studied
However
the
RIF-FLD
specification
is
unique
in
that
it
digests
much
of
this
knowledge
presents
it
in
a
coherent
form
and
uses
XML
even
on
the
framework
level
RIF-FLD
is
a
very
general
logic
language
that
includes
a
great
deal
of
commonly
used
syntactic
and
semantic
apparatus
however
it
purposely
leaves
certain
parameters
unspecified
to
enable
designers
of
concrete
RIF-BLD
is
also
intended
to
serve
as
an
example
of
dialect
design
by
specialization
from
the
RIF
framework
the
preferred
mode
of
specification
for
various
future
logic
dialects
The
RIF
framework
is
not
a
monument
that
is
cut
in
stone
and
is
likely
RIF
developing
simple
rule
examples
over
movie
data
RIF-BLD
The
Basic
Logic
Dialect
This
is
one
of
the
two
major
dialects
and
the
main
logic-based
dialect
developed
by
the
group
Technically
this
dialect
corresponds
to
Horn
logic
with
various
syntactic
and
semantic
extensions
The
main
syntactic
extensions
include
the
frame
syntax
and
predicates
with
named
arguments
The
Production
rules
as
they
are
currently
practiced
in
main-stream
systems
like
Jess
or
JRules
are
defined
using
ad
hoc
computational
mechanisms
which
are
not
based
on
a
logic
For
this
reason
RIF-PRD
is
not
part
of
the
suite
of
logical
RIF
dialects
and
stands
apart
from
them
However
significant
effort
has
been
extended
to
RIF-Core
The
Core
Dialect
This
dialect
is
a
subset
of
both
RIF-BLD
and
RIF-PRD
based
on
RIF-DTB
1
0
thus
enabling
limited
rule
exchange
between
logic
rule
dialects
and
production
rules
RIF-Core
corresponds
to
Horn
logic
without
function
symbols
often
called
Datalog
with
a
number
of
extensions
to
support
features
such
as
objects
and
frames
as
in
F-logic
internationalized
resource
identifiers
for
concepts
and
XML
Schema
datatypes
RIF-FLD
The
Framework
for
Logic
Dialects
RIF-FLD
is
not
a
dialect
in
its
own
right
but
rather
a
general
logical
extensibility
framework
It
was
introduced
in
order
to
drastically
lower
the
amount
of
effort
needed
to
define
and
verify
new
logic
dialects
that
extend
the
capabilities
of
RIF-BLD
RIF-BLD
RIF
Basic
Logic
Dialect
Second
Edition
Harold
Boley
Michael
Kifer
eds
W
3
C
Recommendation
5
February
2013
http
www.w
3
org/TR
2013
REC-rif-bld
20130205
Latest
version
RIF-FLD
RIF
Framework
for
Logic
Dialects
Second
Edition
Harold
Boley
Michael
Kifer
eds
W
3
C
Recommendation
5
February
2013
http
www.w
3
org/TR
2013
REC-rif-fld
20130205
Latest
version
GL
88
The
Stable
Model
Semantics
for
Logic
Programming
M
Gelfond
and
V
Lifschitz
Logic
Programming
Proceedings
of
the
Fifth
Conference
and
Symposium
pages
1070
1080
1988
GRS
91
The
Well-Founded
Semantics
for
General
Logic
Programs
A
Van
Gelder
K.A
Ross
J.S
Schlipf
Journal
of
ACM
38
3
pages
620
650
1991
allows
users
to
write
inference
rules
and
queries
in
English-like
syntax
We
will
demonstrate
how
these
reasoning
rules
have
equivalent
representation
both
as
RDF
descriptions
and
as
logic
programs
We
will
also
show
how
an
automated
compilation
between
these
translations
is
possible
structure
of
an
XML
document
Logic
programs
consist
of
facts
and
rules
where
valid
inference
rules
are
used
to
arrives
into
new
facts
i.e
query
results
The
second
component
consists
of
a
logical
interpretation
of
RDF
data
optionally
enriched
with
the
semantic
schema
into
logic
programming
This
way
the
understood
semantics
of
RDF
is
unwielded
into
its
logical
components
a
logic
program
indeed
This
means
that
every
reasonment
on
RDF
data
can
be
performed
acting
upon
the
corresponding
logical
view
the
logic
program
providing
a
neat
and
powerful
way
to
reason
about
data
The
first
correspondance
in
Metalog
is
between
the
basic
RDF
data
model
and
the
predicates
in
logic
The
RDF
data
model
consists
of
so-called
statements
Statements
are
triples
where
there
is
a
subject
the
resource
a
predicate
the
property
and
an
object
the
example
the
RDF
statement
expressing
the
fact
that
Tim
Berners-Lee
invented
the
Web
formally
the
RDF
triple
invented
Tim
Berners-Lee
Web
is
seen
in
logic
programming
as
the
predicate
invented(Tim
Berners-Lee
Web
Once
we
have
estalished
the
basic
correspondance
between
the
basic
RDF
data
model
and
predicates
in
logic
the
next
step
becomes
easy
we
can
extend
RDF
so
that
the
mapping
to
logic
is
able
to
take
advantage
of
all
of
the
logical
relationships
present
in
logical
systems
that
is
to
say
beyond
the
ability
of
expressing
static
facts
we
want
the
ability
to
encode
dynamic
reasoning
rules
like
in
logic
programming
In
order
to
do
so
we
need
at
least
schema
elements
since
they
will
be
presented
later
what
the
reader
should
keep
in
mind
is
just
that
the
Metalog
schema
provides
the
meta-logic
operators
to
reason
with
RDF
statements
Technically
this
is
quite
easy
to
do
the
metalog
schema
is
just
a
would
like
to
have
is
a
subset
of
predicate
calculus
that
is
still
expressible
enough
and
also
computationally
feasible
our
choice
went
to
logic
programming
Logic
programming
see
e.g
1
is
a
well
known
programming
paradigm
that
selects
a
subset
of
full
first-order
predicate
calculus
so
called
Horn
clauses
it
is
a
very
powerful
and
expressive
paradigm
and
has
the
further
advantage
that
it
has
been
widely
studied
in
the
database
community
a
subset
of
logic
programming
datalog
has
even
the
advantage
of
having
computations
always
terminating
a
feature
of
obvious
interest
for
Web
queries
and
this
metalog
RDF
encoding
with
the
constraint
that
the
expressibility
of
the
language
must
fit
within
the
one
provided
by
logic
programming
The
metalog
syntax
has
been
explicitly
designed
with
the
purpose
of
speak
John
Y
Running
this
query
in
the
corresponding
logic
program
gives
the
result
that
Y
English
that
is
to
say
the
predicate
speak
John
English
is
true
Related
work
The
use
of
Web
infrastructure
to
accommodate
logic
programs
has
been
suggested
by
Sandevall
1996
and
Loke
Davidson
1996
The
latter
approach
suggests
using
familiar
logic
program
notation
to
place
facts
and
queries
on
HTML
pages
The
embedded
rules
also
have
the
ability
to
refer
to
other
HTML
pages
with
other
predicates
using
a
namespace
References
1
Das
S.K
1992
Deductive
Databases
and
Logic
Programming
Addison
Wesley
2
Brickley
D
Guha
R.V
Layman
A
1999
Resource
Description
Model
and
Syntax
W
3
C
Proposed
Recommendation
http
www.w
3
org/TR
5
Loke
S.W
Davison
A
1996
Logic
Programming
with
the
World
Wide
Web
Proc
of
the
7
th
ACM
Conf
on
Hypertext
http
www.cs.unc.edu
barman/HT
96
P
14
lpwww.html
6
Niemelä
I
Simons
P
1997
Smodels
an
implementation
of
the
stable
model
and
well-founded
semantics
for
normal
logic
programs
Proc
of
the
4
th
Int
Conf
on
Logic
Programming
and
Non-Monotonic
Reasoning
Dagstuhl
Germany
http
saturn.hut.fi/pub/papers/lpnmr
97
sd.ps.gz
7
Ramakrishnan
R
Srivastava
D
Sudarshan
D
1992
CORAL
Control
Relations
and
Logic
Proc
of
the
Int
Conf
on
VLDB
8
Sandewall
E
1996
Towards
a
World-Wide
Data
Base
Proc
of
the
5
th
Int
WWW
Conf
Metalog
allows
users
to
write
metadata
inference
rules
and
queries
in
English-like
syntax
We
will
demonstrate
how
these
reasoning
rules
have
equivalent
representation
both
as
RDF
descriptions
and
as
logic
formulae
We
will
also
show
how
an
automated
compilation
between
these
translations
is
possible
showing
the
effectiveness
of
the
system
The
second
layer
consists
of
a
logical
interpretation
of
RDF
data
optionally
enriched
with
the
semantic
schema
into
logic
This
way
the
understood
semantics
of
RDF
is
unwound
into
its
logical
components
This
means
that
every
reasonment
on
RDF
data
can
be
performed
acting
upon
the
corresponding
logical
view
providing
a
neat
and
powerful
way
to
reason
about
data
We
call
this
level
of
Metalog
the
Metalog
logic
level
logical
inferences
the
user
will
be
able
to
simply
express
these
using
the
Metalog
language
This
layer
is
translated
into
the
Metalog
model
and
then
using
the
Metalog
logic
interpretation
into
logic
From
here
classic
inference
engines
can
then
be
applied
like
logic
programming
datalog
theorem
provers
and
so
on
Also
all
the
already
existing
RDF
data
will
enter
this
chain
directly
into
the
Metalog
model
level
The
Metalog
Model
We
can
extend
RDF
so
that
the
mapping
to
logic
is
able
to
take
advantage
of
all
of
the
logical
relationships
present
in
logical
systems
that
is
to
say
behind
the
ability
of
expressing
static
facts
we
want
the
ability
to
encode
dynamic
reasoning
rules
like
in
logic
programming
the
connectors
and
or
implies
and
the
variables
What
the
reader
should
keep
in
mind
is
therefore
just
that
the
Metalog
model
provides
the
meta-logic
operators
to
reason
with
RDF
statements
Technically
this
is
quite
easy
to
do
the
metalog
schema
is
just
a
and
and
or
are
subinstances
of
the
RDF
Bag
connector
The
Metalog
Logic
Once
we
have
extended
syntactically
the
RDF
model
with
connectors
The
first
correspondence
in
Metalog
is
between
the
basic
RDF
data
model
and
the
predicates
in
logic
The
RDF
data
model
consists
of
so-called
statements
Statements
are
triples
where
there
is
a
subject
the
resource
a
predicate
the
property
and
an
object
the
example
the
RDF
statement
expressing
the
fact
that
Tim
Berners-Lee
invented
the
Web
formally
the
RDF
triple
invented
Tim
Berners-Lee
Web
is
seen
in
logic
as
the
predicate
invented(Tim
Berners-Lee
Web
So
in
general
RDF
statements
have
a
natural
translation
into
logic
predicates
The
exceptions
that
Metalog
does
are
for
the
so-called
sequencing
constructs
in
RDF
Bag
Seq
and
Alt
These
are
codified
like
a
set-like
operator
that
is
to
say
Bag(X
1
X_n
Bag(X_p
1
X_p(n
for
every
permutation
p
So
in
fact
Metalog
logic
is
a
kind
of
equational
logic
see
also
later
in
the
case
of
the
mathematical
operators
Then
we
disambiguate
using
the
metalog
keywords
The
basic
metalog
mapping
structure
here
we
use
a
mapping
directly
to
logic
rather
than
to
Metalog
model
for
conciseness
follows
the
classic
grammatical
model
of
basic
sentence
where
we
have
a
subject
followed
by
a
predicate
and
then
an
object
This
triple
subject
predicate
object
is
naturally
translated
into
the
logic
binary
predicate
predicate(subject,object
On
top
of
this
basic
model
of
translation
more
sophisticated
constructs
are
added
using
the
metalog
keywords
Instead
the
fact
the
ultimate
point
of
the
Metalog
chain
is
the
Metalog
logic
leads
itself
to
a
natural
definition
of
query
constructive
satisfability
That
is
to
say
any
given
logical
formula
can
be
queried
along
the
database
to
check
whether
it
is
satisfable
or
Note
that
the
RDF
metalog
model
and
the
corresponding
translation
into
logical
formulas
in
the
Metalog
logic
is
absolutely
general
However
in
practice
one
need
also
to
then
be
able
to
process
the
resulting
logical
formulas
in
an
effective
ways
In
other
words
while
the
particular
inference
engine
to
try
to
effectively
deal
with
the
resulting
logical
knowledge
basis
However
there
are
at
least
two
restrictions
of
the
logic
that
deserves
particular
attention
logic
programming
and
datalog
see
e.g
1
These
paradigms
are
that
they
are
computationally
rather
efficient
such
that
there
are
many
implemented
will
always
return
the
answer(s
in
a
finite
amount
of
time
The
interesting
things
that
makes
these
languages
particularly
appealing
in
our
case
is
due
to
the
fact
that
both
logic
programming
and
datalog
restrict
to
binary
predicates
this
means
that
RDF
without
the
ordering
structures
is
already
directly
mappable
via
Metalog
into
a
logic
program
Therefore
just
relatively
small
syntactical
constraints
enables
a
metalog
language
program
and
so
logic
formula
to
be
ultimately
processed
in
an
effective
way
using
an
already
existing
logic
programming
or
datalog
inference
engine
This
is
indeed
what
we
are
currently
doing
with
our
current
prototype
interfacing
with
existing
logic
programming/datalog
systems
like
for
example
8
first
is
liberal
it
is
up
to
the
implementation
to
check
whether
the
metalog
language
code
does
actually
satisfy
the
corresponding
restrictions
such
to
be
interpreted
as
a
logic
program
or
as
a
datalog
program
This
is
consistent
with
the
general
philosophy
of
Metalog
as
being
a
purely
declarative
and
highly
expressive
language
The
second
restriction
tag
a
restriction
tag
is
a
metalog
sentence
expressing
the
fact
that
the
code
indeed
satisfies
the
appropriate
syntactic
restrictions
So
far
there
are
two
restriction
tags
one
for
logic
programming
and
the
other
for
datalog
It
is
important
to
note
that
these
restriction
tags
are
just
annotations
that
is
to
say
they
are
in
all
equivalent
to
comments
but
for
the
fact
that
they
provide
a
hint
to
an
eventual
application
that
tries
to
process
the
metalog
code
that
some
particular
inference
engine
for
logic
programs
datalog
programs
etc
could
be
profitably
used
It
is
semantically
transparent
since
there
is
no
actual
representation
of
a
restriction
tag
in
the
metalog
This
formula
is
just
a
Horn
clause
and
as
such
it
means
it
can
be
viewed
as
a
logic
program
So
suppose
we
have
already
grabbed
from
somewhere
in
the
Web
some
pieces
of
RDF
that
tell
us
for
example
that
John
is
the
author
of
technical
report
231
and
that
the
language
of
technical
report
231
is
English
This
again
can
be
viewed
as
part
of
a
logic
program
technically
they
are
facts
Then
if
we
want
to
know
what
language
does
John
speak
we
can
just
ask
speak
John
Y
Running
this
query
in
the
corresponding
logic
program
gives
the
result
that
Y
English
that
is
to
say
the
predicate
speak
John
English
is
true
allows
users
to
write
inference
rules
and
queries
in
English-like
syntax
We
will
demonstrate
how
these
reasoning
rules
have
equivalent
representation
both
as
RDF
descriptions
and
as
logic
programs
We
will
also
show
how
an
automated
compilation
between
these
translations
is
possible
structure
of
an
XML
document
Logic
programs
consist
of
facts
and
rules
where
valid
inference
rules
are
used
to
arrives
into
new
facts
i.e
query
results
The
second
component
consists
of
a
logical
interpretation
of
RDF
data
optionally
enriched
with
the
semantic
schema
into
logic
programming
This
way
the
understood
semantics
of
RDF
is
unwielded
into
its
logical
components
a
logic
program
indeed
This
means
that
every
reasonment
on
RDF
data
can
be
performed
acting
upon
the
corresponding
logical
view
the
logic
program
providing
a
neat
and
powerful
way
to
reason
about
data
The
first
correspondance
in
Metalog
is
between
the
basic
RDF
data
model
and
the
predicates
in
logic
The
RDF
data
model
consists
of
so-called
statements
Statements
are
triples
where
there
is
a
subject
the
resource
a
predicate
the
property
and
an
object
the
example
the
RDF
statement
expressing
the
fact
that
Tim
Berners-Lee
invented
the
Web
formally
the
RDF
triple
invented
Tim
Berners-Lee
Web
is
seen
in
logic
programming
as
the
predicate
invented(Tim
Berners-Lee
Web
Once
we
have
estalished
the
basic
correspondance
between
the
basic
RDF
data
model
and
predicates
in
logic
the
next
step
becomes
easy
we
can
extend
RDF
so
that
the
mapping
to
logic
is
able
to
take
advantage
of
all
of
the
logical
relationships
present
in
logical
systems
that
is
to
say
beyond
the
ability
of
expressing
static
facts
we
want
the
ability
to
encode
dynamic
reasoning
rules
like
in
logic
programming
In
order
to
do
so
we
need
at
least
schema
elements
since
they
will
be
presented
later
what
the
reader
should
keep
in
mind
is
just
that
the
Metalog
schema
provides
the
meta-logic
operators
to
reason
with
RDF
statements
Technically
this
is
quite
easy
to
do
the
metalog
schema
is
just
a
would
like
to
have
is
a
subset
of
predicate
calculus
that
is
still
expressible
enough
and
also
computationally
feasible
our
choice
went
to
logic
programming
Logic
programming
see
e.g
1
is
a
well
known
programming
paradigm
that
selects
a
subset
of
full
first-order
predicate
calculus
so
called
Horn
clauses
it
is
a
very
powerful
and
expressive
paradigm
and
has
the
further
advantage
that
it
has
been
widely
studied
in
the
database
community
a
subset
of
logic
programming
datalog
has
even
the
advantage
of
having
computations
always
terminating
a
feature
of
obvious
interest
for
Web
queries
and
this
metalog
RDF
encoding
with
the
constraint
that
the
expressibility
of
the
language
must
fit
within
the
one
provided
by
logic
programming
The
metalog
syntax
has
been
explicitly
designed
with
the
purpose
of
speak
John
Y
Running
this
query
in
the
corresponding
logic
program
gives
the
result
that
Y
English
that
is
to
say
the
predicate
speak
John
English
is
true
Related
work
The
use
of
Web
infrastructure
to
accommodate
logic
programs
has
been
suggested
by
Sandevall
1996
and
Loke
Davidson
1996
The
latter
approach
suggests
using
familiar
logic
program
notation
to
place
facts
and
queries
on
HTML
pages
The
embedded
rules
also
have
the
ability
to
refer
to
other
HTML
pages
with
other
predicates
using
a
namespace
References
1
Das
S.K
1992
Deductive
Databases
and
Logic
Programming
Addison
Wesley
2
Brickley
D
Guha
R.V
Layman
A
1999
Resource
Description
Model
and
Syntax
W
3
C
Proposed
Recommendation
http
www.w
3
org/TR
5
Loke
S.W
Davison
A
1996
Logic
Programming
with
the
World
Wide
Web
Proc
of
the
7
th
ACM
Conf
on
Hypertext
http
www.cs.unc.edu
barman/HT
96
P
14
lpwww.html
6
Niemelä
I
Simons
P
1997
Smodels
an
implementation
of
the
stable
model
and
well-founded
semantics
for
normal
logic
programs
Proc
of
the
4
th
Int
Conf
on
Logic
Programming
and
Non-Monotonic
Reasoning
Dagstuhl
Germany
http
saturn.hut.fi/pub/papers/lpnmr
97
sd.ps.gz
7
Ramakrishnan
R
Srivastava
D
Sudarshan
D
1992
CORAL
Control
Relations
and
Logic
Proc
of
the
Int
Conf
on
VLDB
8
Sandewall
E
1996
Towards
a
World-Wide
Data
Base
Proc
of
the
5
th
Int
WWW
Conf
