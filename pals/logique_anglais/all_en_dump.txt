   Skip to main content

   Trinitry Western University
   (BUTTON) Discover (BUTTON) Search Apply Give

   Imagine a university that does more than just prepare you for a
   career—one that equips you to set the foundation for a full and
   meaningful life

   Find all the information you need about joining a community committed
   to helping you explore bigger ideas about who you are, what you
   believe, and what you're called to do in the world

   Explore our undergraduate and graduate degree programs to discover a
   learning community passionate about helping you thrive on your academic
   and professional journey

   Experience a vibrant student community filled with new friends,
   lifelong memories, and lots of opportunities for getting plugged in and
   experiencing the best of university life

   Learn more about our Spartans athletics programs, and discover how we
   equip our student-athletes for life with the Complete Champion
   Approach^™

   Discover a dynamic community of teachers, scholars, and researchers
   producing new knowledge and innovation that is having a positive impact
   for the good of the world and the glory of God

   Find out the latest news and events taking place within the life of the
   community, and discover how our students, alumni, faculty, and staff
   are making a positive difference in the world

   Imagine a university that does more than just prepare you for a
   career—one that equips you to set the foundation for a full and
   meaningful life

   Discover how you can actively participate in our global community of
   more than 30,000 engaged and connected alumni from around the world

   Imagine a university that does more than just prepare you for a
   career—one that equips you to set the foundation for a full and
   meaningful life
     * (BUTTON) About Us
          + (BUTTON) Main Menu
          + (BUTTON) Strategic Plan
               o (BUTTON) About Us
               o Message from the Chair of the Board of Governors
          + (BUTTON) Commitments
               o (BUTTON) About Us
               o History
               o Mission & Vision
               o Core Values
          + Facts & Figures
          + (BUTTON) Inclusive Excellence
               o (BUTTON) About Us
               o Our Approach
          + (BUTTON) Indigenous Initiatives
               o (BUTTON) About Us
               o Land Acknowledgements
               o Classes & Resources
               o Response to TRC
               o Partnerships
          + (BUTTON) Leadership & Administration
               o (BUTTON) About Us
               o Office of the President
               o Presidential Search
               o Board of Governors
               o Executive Leadership Team
               o Finance
               o People & Culture
               o Office of the Provost
          + (BUTTON) Liberal Arts Core
               o (BUTTON) About Us
               o Graduate Student Learning Outcomes
               o Undergraduate Student Learning Outcomes
               o Why Liberal Arts
               o Core Foundations
               o Core Ways Of Knowing
               o Inquiry-Rich Learning
          + (BUTTON) Locations
               o (BUTTON) About Us
               o Ottawa
               o Langley
               o Richmond
          + (BUTTON) Policies & Guidelines
               o (BUTTON) About Us
               o University Policies
               o Student Policies
     * (BUTTON) Admissions & Aid
          + (BUTTON) Main Menu
          + (BUTTON) Why TWU?
               o (BUTTON) Admissions & Aid
               o Viewbook
          + (BUTTON) Admission Requirements
               o (BUTTON) Admissions & Aid
               o Graduate Program Reference Forms
               o Canadian High School Students
               o US Students
               o Homeschool Students
               o Transfer Students
               o International (Non-US)
               o Re-Enrolling Students
               o Adult Students
               o Degree Completion
          + (BUTTON) Scholarships & Financial Aid
               o (BUTTON) Admissions & Aid
               o Student Loans
               o Undergraduate Students
               o Graduate Students
               o Degree Completion Students
               o Contact Us
          + (BUTTON) Tuition & Cost
               o (BUTTON) Admissions & Aid
               o Graduate Student Cost Estimator
               o Undergraduate Student Cost Estimator
          + How to Apply
          + Dates & Deadlines
          + (BUTTON) Contact an Advisor
               o (BUTTON) Admissions & Aid
               o Virtual Meeting Room
               o Guidance Counsellors Resources
               o Travel Season Schedule
          + (BUTTON) International
               o (BUTTON) Admissions & Aid
               o Graduate Studies International Applicants
               o Study Permit
               o U1 & Open Gate (Mandarin)
               o Viewbook
          + (BUTTON) New to TWU
               o (BUTTON) Admissions & Aid
               o Admitted Graduate Students
               o Admitted Undergraduate Students
               o Graduate Studies Orientation
               o International Pre-Orientation Series
               o Richmond Undergraduate Orientation
          + Requesting Transcripts
     * (BUTTON) Academics
          + (BUTTON) Main Menu
          + Programs & Courses
          + (BUTTON) Schools & Faculties
               o (BUTTON) Academics
               o Faculty of Humanities & Social Sciences
               o Faculty of Natural & Applied Sciences
               o School of the Arts, Media + Culture
               o School of Business
               o School of Education
               o School of Graduate Studies
               o School of Human Kinetics
               o School of Nursing
               o TWU GLOBAL
          + (BUTTON) Academic Calendar
               o (BUTTON) Academics
               o 2024/2025
               o 2023/2024
               o 2022/2023
               o 2021/2022
               o 2020/2021
               o 2019/2020
          + (BUTTON) Academic Partners
               o (BUTTON) Academics
               o Catholic Pacific College
               o FAR CENTRE™ Program
               o Global Express Pathway
               o Short-Term Programs
          + (BUTTON) Academic & Professional Support
               o (BUTTON) Academics
               o Centre for Calling & Career Development
          + (BUTTON) Accreditation
               o (BUTTON) Academics
               o Approvals & Other Memberships
               o Programmatic Accreditation
          + Faculty Directory
          + (BUTTON) Laurentian Leadership Centre
               o (BUTTON) Academics
               o Academics
               o Finances
               o Application Process
               o Community Life
               o Internships
               o Frequently Asked Questions
          + (BUTTON) Library
               o (BUTTON) Academics
               o Learning Commons
          + (BUTTON) Office of the Registrar
               o (BUTTON) Academics
               o Contact Us
               o Non-Degree Options
               o Contractual Statement
               o Course Timetable
               o Exam Schedule
               o Forms
               o Graduation
               o Important Dates
               o Records
               o Transcript Orders
               o Transfer Credit
               o Tuition & Fees
          + (BUTTON) Ways to Learn
               o (BUTTON) Academics
               o Certificates
               o Independent Studies
               o Part-Time Students
               o Summer Sessions
               o Travel Studies
     * (BUTTON) Life at TWU
          + (BUTTON) Main Menu
          + (BUTTON) Student Services
               o (BUTTON) Life at TWU
               o Academic & Learning Resources
               o Campus Life & Community
               o Career & Experience
               o Courses, Fees & Enrolment
               o Health & Wellness
               o International Student Resources
               o Graduate Student Services
          + (BUTTON) Arts, Media, & Music
               o (BUTTON) Life at TWU
               o SAMC Gallery Exhibitions
          + (BUTTON) Campus Services
               o (BUTTON) Life at TWU
               o Campus Security
               o Mail & Courier Services
               o Trinity Western Campus Store
               o Parking Services
          + (BUTTON) Connect at TWU
               o (BUTTON) Life at TWU
               o Commuter Programs
               o Residence Programs
               o Richmond Student Life
               o Student Leadership
               o Student Media
               o Global Engagement Office
          + (BUTTON) Fitness & Recreation
               o (BUTTON) Life at TWU
               o Athletic Facilities
               o Fitness Memberships
               o Fitness
               o Hours & Open Gym
               o Intramurals
               o Journey - Canoe Trip
               o Lendable Equipment
               o Personal Training
               o Omada Teambuilding
               o Special Events
               o Sport Clubs
               o Well-Being Programs
          + (BUTTON) Health & Wellness
               o (BUTTON) Life at TWU
               o Community Wellness Services
               o Contact Us
               o Referral List
               o Appointment Booking
               o Health Services
               o Meet the Staff
               o Mental Health Services
               o Sexualized Violence Information & Response
          + (BUTTON) Housing & Dining
               o (BUTTON) Life at TWU
               o Summer Housing
               o Housing Accommodation Process
               o Housing Application Process
               o Residence Buildings
               o Housing Styles & Cost
               o Frequently Asked Questions
               o Off-Campus Housing
          + (BUTTON) Kids & Camps
               o (BUTTON) Life at TWU
               o Young Movie Makers
               o Youth Adventure Outtrip Camp
               o Kids Adventure Camp
               o Salmon, Science & Nature Explorations
               o Active Kids
               o The Arts
               o Before & After Camp Care
               o How to Register
               o Registration Forms
               o Volunteer at Camp
               o Camp Testimonials
               o Science in the Valley
          + (BUTTON) Campus Ministries
               o (BUTTON) Life at TWU
               o Richmond Campus Ministries
               o Chapel
               o Discipleship
     * Athletics
     * (BUTTON) Research
          + (BUTTON) Main Menu
          + About Our Researchers
          + (BUTTON) Canada Research Chairs
               o (BUTTON) Research
               o Former Canada Research Chairs
               o Archived Competitions
               o CRC Public Accountability Page
               o Dr. Anita Coté
               o Internal Postings & Call for Proposals
               o Policies
               o Richard (Rick) Sawatzky
          + Contact Us
          + Delegation of Signing Authority
          + (BUTTON) Discover TWU Research
               o (BUTTON) Research
               o Conscientia
               o Institutes & Centres
               o Professorships
               o Research Support Fund (RSF)
               o Royal Society of Canada
          + Donate to TWU Research
          + (BUTTON) Funding Opportunities
               o (BUTTON) Research
               o Tips for External Applications
          + News & Stories
          + (BUTTON) Research Services
               o (BUTTON) Research
               o Animal Care
               o Biosafety
               o Human Research Ethics
          + (BUTTON) Student Research
               o (BUTTON) Research
               o News
               o Opportunities
               o Undergraduate Student Research Awards (USRA)
          + TWU CREATE Conference
          + Upcoming Deadlines
     * (BUTTON) News & Events
          + (BUTTON) Main Menu
          + News
          + Events
          + (BUTTON) Media Relations
               o (BUTTON) News & Events
               o Filming on Campus
          + TWU Story Submission

     * Giving
     * Visit
     * Request Info

     * Students
     * Alumni
     * Employees
     * Parents

   Apply Now

How can we help?

   Search TWU.ca ____________________ Submit

Frequently Searched Items

     * ADMISSIONS
          + Tuition & Costs
          + Scholarships
          + International
          + Deadlines
          + Requirements
     * PROGRAMS
          + Business
          + Leadership
          + Nursing
          + Psychology
          + Education
     * RESOURCES
          + Service Hub
          + Moodle
          + Transcripts
          + Housing
          + Calendar

   students working in a computer lab

Breadcrumb

    1. Home
    2. Academics
    3. Faculty of Natural & Applied Sciences

Computing Science

   Make your mark on an industry that has the power to influence the
   trajectory of history.

Visit Us

Request Info

   Apply Now

   Our Computing Science program prepares you to be a technological leader
   with a global perspective.

   Our graduates are creative problem solvers, lifelong learners, and
   highly adaptable leaders in our rapidly changing world. In addition to
   studying fundamental computing science topics, our students choose from
   a variety of elective courses, including artificial intelligence,
   software engineering, computer graphics, databases, programming
   languages, computer networking, and virtual reality. We encourage our
   students to engage in undergraduate research with their computing
   science professors. These research projects often result in students
   presenting their work at international conferences. Past students have
   coauthored papers with their professors and published their findings in
   peer-reviewed journals, providing them with valuable experience and
   identifiable skills. Through our program, our students gain expertise
   in their area, as well as character development, as they learn to
   navigate between technology and society from a distinctly Christian
   worldview. Graduates from our computing science program stand out as
   confident professionals and choose from a variety of career paths, such
   as software developer, systems manager, support specialist, trainer,
   software engineer, technical writer, software tester or supporter, and
   entrepreneur.

   We also have a Data Science stream as a valuable option in the major,
   which identifies a group of courses intended to provide excellent
   access to graduate programs and employment opportunities.



Degrees

   Bachelor of Science (BSc), Minor, Concentration

Related Programs

   Mathematics
   Engineering Transfer
   Biotechnology
   Game Development

Courses

Checklists

   Students talking on campus.

Financial Aid

   Planning early is key, and we are here to help get you started.
   Learn More
   Three students happily walking past Robert N. Thompson

Admission Requirements

   The admissions process is designed to be simple and convenient.
   Learn More
   students learning in computer lab

Student Opportunities

   Check out how you can apply your learning while you are a student.
   Learn More

Alumni Perspective

   “The courses I took at TWU helped me gain the skills needed for the job
   as a web developer. Through my liberal arts education, I experienced a
   sampling of many different fields, which helped me decide my career
   path. TWU’s strong sense of community—through friends and also
   teachers—was fundamental to my becoming who I am today. I was exposed
   to opportunities that wouldn’t have been possible at a different
   university.”

   - Andrew Chell ('11)

Meet the Faculty

   Meet some of our world class faculty and staff inspiring great minds
   and changing the world.
   Alternate Text

Andrew J. Park, PhD

   Associate Professor of Mathematical Sciences; Coordinator, Computing
   View Profile
   Alternate Text

Herbert H Tsang, PEng, PhD

   Professor of Computing Science and Mathematics; Coordinator,
   Pre-Engineering...
   View Profile
   Rick Sutcliffe

Richard (Rick) Joseph Sutcliffe, MSc

   Professor of Mathematics and Computing Science; Assistant Dean, Faculty
   of...
   View Profile

   View all Computer Science Faculty

Careers in Computing Science

   Relevant careers for Computing Science graduates from TWU include:
   - Computer programmer
   - Systems manager
   - Computer communications specialist
   - Software engineer
   - Technical writer
   - Entrepreneur
   students working using a computer

News & Events

Related News

     *

TWU Biology travel study students learn within Hawaii's natural laboratories
       Developing ecological knowledge, appreciation, and Christian
       stewardship
     *

TWU alumnus Spencer Funk understands the value of collaboration—in science
and in life
       “I think life is to be done in community, and I feel that's
       emphasized at Trinity Western.” –…
     *

TWU researchers join global race to find alternatives to single-use plastics
       Building sustainable biodegradable materials from fungi to help our
       planet.
     *

TWU alumni apply their medical and educational degrees on a three-month
mission trip in Kenya

   See All

Related Events

     *

Preview Day
       Feb. 14, 2025, 8:30 a.m.–5 p.m. — Reimer Student Centre
       We are thrilled to have you joining us for Preview Day ! This will
       be an amazing opportunity to…
     *

Preview Day
       Mar. 14, 2025, 8:30 a.m.–5 p.m. — Reimer Student Centre
       We are thrilled to have you joining us for Preview Day ! This will
       be an amazing opportunity to…

   See All
   (BUTTON)
     * Home
          + Computing Science
               o Contact Us

     * Request Info
     * Visit Campus
     * Contact Us

     * Resources
          + Security & Parking
          + Media Relations
          + Careers
          + Library
     * Admissions & Aid
          + Admission Requirements
          + Dates & Deadlines
          + Financial Aid
          + International
     * Community Life
          + Health & Wellness
          + Campus Services
          + Athletics
          + Events
     * Locations
          + Langley
          + Richmond
          + Ottawa

Land Acknowledgement

   Trinity Western University's Langley campus is located on the
   traditional, ancestral, unceded territory of the Stó:lō people.

   Learn more
     * Request Info
     * Visit Campus
     * Contact Us

     * Instagram
     * Facebook
     * X
     * LinkedIn

   Trinity Western University

Explore Our Campus

   Visit TWU and find out for yourself what our campus has to offer. We
   will gladly take you on a campus tour to give you a taste of the
   Trinity Western community, where living and learning thrive.
     * Virtual Tour

   Copyright © 2025
     * Website Feedback
   Warning:
   This wiki has been archived and is now read-only.

Resolutions

   From RIF
   Jump to: navigation, search

Working Group resolutions

   All the resolutions passed by the WG are collected in this page, in
   reverse chronological order. However, the resolutions to accept minutes
   as true records of meetings are not repeated here.

   Resolutions from 17 February Agenda Minutes
     * RESOLVED: RIF-RDF combinations are not defined in case rif:iri or
       rdf:text are used in the imported RDF graphs.
     * RESOLVED: Change the test cases to "import rejection tests" and
       close issue-90.

   Resolutions from 10 February Agenda Minutes
     * RESOLVED: Close ISSUE-63 with the understanding that the Group
       construct is sufficient.
     * RESOLVED: Close ISSUE-65 with the understanding that PRD does not
       add specific syntax to specify halting tests.

   Resolutions from 27 Jan 2009 Agenda Minutes
     * RESOLVED: Core, BLD, PRD will not have semantic metadata; removing
       metadata from a ruleset will not change the entailments - closing
       ISSUE-50.
     * RESOLVED: Close ISSUE-83 - the existing presentation syntax
       ambiguities are resolvable.
     * RESOLVED: Accept
       http://www.w3.org/2005/rules/wiki/Argument_names_in_uniterms_1.
     * RESOLVED: Accept
       http://www.w3.org/2005/rules/wiki/Argument_names_in_uniterms_2.

   Resolutions from F2F12, 14-15 January 2009, hosted by Oracle in
   Portland, OR. Minutes day one, day two
     * RESOLVED: approve test case RDF_Combination_Blank_Node for BLD,
       Core, PRD, and Safe-Core.
     * RESOLVED: Approve test case RDF_Combination_Constant_Equivalence_2
       (for all dialects, and it's Safe).
     * RESOLVED: Approve test case RDF_Combination_Constant_Equivalence_3
       (for all dialects, and it's Safe).
     * RESOLVED: Approve test case
       RDF_Combination_Constant_Equivalence_Graph_Entailment_2 but be sure
       to make it clear that this is a different kind of test case, about
       RDF entailment. (Current wiki template does not properly show
       that.).
     * RESOLVED: Approve test case RDF_Combination_Member_1 for all
       dialects (BLD, Core, CoreSafe, PRD).
     * RESOLVED: Close issue-39, saying ruleset-imports is in Core, and
       we're not going to define an "includes" at this time (in part
       because we don't know what it might mean). 'Imports' ends up in
       PRD, where it's not ideal, but not really harmful. Some version of
       PRD may do a more sophisticated import at some point.
     * RESOLVED: PRD will not address interop with RDF and OWL directly --
       there is no work to do there. SWC will instead be updated to be
       phrased in terms of [safe] Core, so it can be (in most ways)
       inherited for PRD.
     * RESOLVED: Close issue-82, given understandings in discussion so far
       today. Core as specialization of PRD is just work to do. Yes,
       safeness restriction will resolve backward chaining problem (action
       on Jos). Does Core compatibility with RDF+OWL extend to PRD? only
       to the extend that's automatic through Core.
     * RESOLVED: Close issue-48. membership (#) in Core facts and
       conditions. subclass (##) not in Core.
     * RESOLVED: close issue-68 with no Named-Argument Uniterms (NAU) in
       Core or PRD.
     * RESOLVED: Close issue-72 saying "No" (Option D). (Nothing like
       skolem functions in Core.) We regret we were unable to find a good
       design to address this need.
     * RESOLVED: Close issue-33 with the understand that our mechanisms
       for accessing RDF and XML data sources, and using externals, will
       be sufficient.
     * RESOLVED: Close issue-78. The only Externals in BLD (and Core, and
       PRD) will be Predicates and Functions. No external frames, no
       external equality, etc.
     * RESOLVED: Close issue-69; there will be a Core schema, included in
       BLD and PRD schemas. see ACTION-692.
     * RESOLVED: Close issue-46; no decision to make at this time. If
       someone produces a proposal for modules, we may consider it.
     * RESOLVED: Add xsd:nonNegativeInteger, xsd:anyURI, xsd:hexBinary,
       xsd:base64Binary to RIF Core. In RIF, the xsd numeric types will
       have disjoint value spaces (as in XSD1.1, unlike current OWL 2
       drafts)-- we'll push for OWL to change and assume they will. [The
       owl:* types will be decided separately. Value spaces of Binaries
       will be decided separately. When those are decided, it will close
       issue-81].
     * RESOLVED: Add owl:real and owl:realPlus to RIF Core, BLD, PRD.

   Resolutions from 6 January 2009 Agenda Minutes
     * RESOLVED: add isLiteralOfType and isLiteralNotOfType (Changing
       guards to return true only for literals that are/are not of the
       type, false for non-literals) and remove specific type-named guards
       (e.g. isInteger, isNotInteger). Closing ISSUE-79 and the
       membership/non-membership part of ISSUE-80.

   Resolutions from 9 December 2008 Agenda Minutes
     * RESOLVED: Replace in UCR the requirement on Rule language coverage
       by the following statement: Because of the great diversity of rule
       languages, no one interchange language is likely to be able to
       bridge between all. Instead, RIF provides dialects which are each
       targeted at a cluster of similar rule languages. RIF must allow
       intra-dialect interoperation, i.e. interoperability between
       semantically similar rule languages (via interchange of RIF rules)
       within one dialect, and it should support inter-dialect
       interoperation, i.e. interoperation between dialects with maximum
       overlap.
     * RESOLVED: Publish UCR as WD4
     * RESOLVED: Publish Core as WD2
     * RESOLVED: Publish PRD as WD2
     * RESOLVED: Publish DTB as WD2

   Resolutions from 2 December 2008 Agenda Minutes
     * RESOLVED: to publish the test case document as FPWD (conditional on
       Sandro's approval of modifications)

   Resolutions from 25 Nov 2008 Agenda Minutes
     * RESOLVED: Include in UCR a new requirement on Internationalized
       text: RIF must support internationalized text - that is, text that
       additionally conveys information in terms of a language tag.
     * RESOLVED: Add equal and not-equal builtins for string in DTB.

   Resolutions from 11 Nov 2008 Agenda Minutes
     * RESOLVED: Publish rdf:text as a FPWD, jointly with OWL-WG, adding
       an editor's note about infinity (actions Jos, Axel)
     * RESOLVED: In RIF-PRD, the conflict resolution strategy for a set of
       rules will be indicated in some way, associated with the top-level
       group. RIF-PRD 1.0 will specify only one normative conflict
       resolution strategy, as specified in csma's email [9] (essentially:
       refraction+priority+recency).
     * RESOLVED: RIF-PRD 1.0 MAY specify other conflict resolution
       strategies for suggested use, but these will not be mandatory.
     * RESOLVED: Close ISSUE-64.

   Resolutions from 4 November 2008 Agenda Minutes
     * RESOLVED: Parameterize the conformance clauses of Core with
       safeness requirements "strict" and "none" (default: "none").
       Closing ISSUE-70.

   Resolutions from 21 Oct 2008 Agenda Minutes
     * RESOLVED: Core should keep safe disjunction in rule bodies.
       Implementations can be direct or use a well-known preprocessing
       step.
     * RESOLVED: Close Issue-75.
     * RESOLVED: accept Test Case Annotation Entailment

   Resolutions from 7 Oct 2008 Agenda Minutes
     * RESOLVED: Add "New" construct with Gary's proposed semantics to
       represent the creation of new frame objects in then-part of PRD
       rules; not excluding extending it later with the use of
       constructors once we resolve how to call "methods".
     * RESOLVED: Add a construct with Gary's proposed semantics to
       represent the declaration of local variables for binding to New
       frames in the then-part of PRD rules ; not excluding that later
       resolutions might extend the use of local variables in the action
       part.
     * RESOLVED: Extend "Retract" construct with Gary's semantics to
       represent the removal of a frame object in then-part of PRD rules,
       that is, to represent the removal of an object from the instances
       of its class as well as all the frames with that object in the
       object position.
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Disjunctive_Information_from_Nega
       tive_Guards_2

   Resolutions from F2F11 Sept 26-27, 2008, NY; Minutes of Day 1 Day 2
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Arbitrary_Entailment with more
       detailed description link
     * RESOLVED: Approve
       http://www.w3.org/2005/rules/wiki/Chaining_strategy_numeric-add_1
       link
     * RESOLVED: Approve
       http://www.w3.org/2005/rules/wiki/Chaining_strategy_numeric-add_2
       link
     * RESOLVED: Approve
       http://www.w3.org/2005/rules/wiki/Chaining_strategy_numeric-subtrac
       t_1 and 2 link
     * RESOLVED: Accept
       http://www.w3.org/2005/rules/wiki/Classification_non-inheritance
       link
     * RESOLVED: Accept
       http://www.w3.org/2005/rules/wiki/Disjunctive_Information link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Equality_in_conclusion_1 link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Equality_in_conclusion_2 link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Equality_in_condition link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Guards_and_subtypes link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Inconsistent_Entailment link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Individual-Data_Separation_Incons
       istency link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/No_polymorphic_symbols link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Non-Annotation_Entailment link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/OWL_Combination_Vocabulary_Separa
       tion_Inconsistency_1 link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/OWL_Combination_Vocabulary_Separa
       tion_Inconsistency_2 link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Frame_slots_are_independent link
     * RESOLVED: accept
       http://www.w3.org/2005/rules/wiki/Named_Argument_Uniterms_non-polym
       orphic link
     * RESOLVED: RIF will not specify a mechanism for profiles
       (sub-languages of dialects, which are not themselves a dialect),
       (addressing part of issue-29) link
     * RESOLVED: Future RIF dialects SHOULD extend Core. (Closing
       ISSUE-29) link
     * RESOLVED: remove round-tripping clause from BLD conformance, add
       sentence to RIF_BLD clauses, closing round-tripping issue 26 link
     * RESOLVED: Core should keep unrestricted equality and external
       function and predicate calls in rule conditions and keep external
       functions calls in rule conclusions link
     * RESOLVED: close issue-71, given we're retaining equality in
       conditions in core link
     * RESOLVED: Close issue-74, saying Core will have both Predicates
       (with positional arguments) and Frames (no comment on having
       membership) link

   Resolutions from 23 Sep 2008 Agenda Minutes
     * RESOLVED: Each RIF test case MUST, eventually, be provided in RIF
       XML, and MAY be provided in some syntax for which a
       translator-to-XML has been promised. The translator SHOULD be
       available for use by the WG to check the translation.

   Resolutions from 16 Sep 2008 Agenda Minutes
     * RESOLVED: Core will not have equality in the conclusion

   Resolutions from 9 Sep 2008 Agenda Minutes
     * RESOLVED: Core will not have named-argument uniterms

   Resolutions from 5 Aug 2008 Agenda Minutes
     * RESOLVED: Remove section 4.3.5 (casting function for rif:iri) from
       DTB.

   Resolutions from 29 July 2008 Agenda Minutes
     * RESOLVED: Publish the July 28 snapshot as BLD LC, after correction
       of the HTML problems.
     * RESOLVED: Publish the July 28 snapshot as SWC LC.
     * RESOLVED: Publish the July 28 snapshot as UCR 3rd public WD.
     * RESOLVED: Publish the July 28 snapshot as FLD 2nd public WD, after
       correction of HTML errors.
     * RESOLVED: Publish the July 28 snapshot as DTB 1st public WD, after
       the links are fixed.
     * RESOLVED: Publish the July 28 snapshot as PRD 1st public WD.

   Resolutions from telecon 1 July 2008 Agenda Minutes
     * RESOLVED: Mark "External Frames" AT RISK in BLD.
     * RESOLVED: Change the tag name of the sub elements of Equal in BLD
       XML from side to left and right

   Resolutions from telecon 24 June 2008 Agenda Minutes
     * RESOLVED: BLD refers to DTB by version number. If/when dialects
       need other things, they refer to new versions. BLD still refers to
       old one.

   Resolutions from telecon 10 June 2008 Agenda Minutes
     * RESOLVED: reword req. 5.2.8 to "RIF semantics"
     * RESOLVED: replace req. 5.2.9 with re-wording: "The semantics of a
       RIF document must be uniquely determined by the content of the
       document, without out-of-band data."
     * RESOLVED: change req. 5.2.12 to "must" support ability to merge
       rule sets
     * RESOLVED: change req. 5.2.13 "will" to "must" & remove
       parenthetical comment: RIF must support the identification of rule
       sets.
     * RESOLVED: Move 5.3.1 to 5.2.14 and make it a SHOULD instead of
       MUST. (support XML as data)

   Resolutions from telecon 3 June 2008 Agenda Minutes
     * RESOLVED: change text of 5.1.3 to: It must be possible to create
       new RIF dialects which extend existing dialects (thus providing
       backward compatibility) and are handled gracefully by systems which
       support existing dialects (thus providing forward compatibility).
     * RESOLVED: For this next draft of UCR, add an editor's note to 5.1.6
       to note that we're still working on how to define a coverage
       requirement. (unless we come up with some consensus text before
       publication)
     * RESOLVED: rephrase 5.2.1 to: The RIF specifications must provide
       clear conformance criteria, defining what is or is not a conformant
       RIF implementation.

   Resolutions from F2F10 (F2F10_Minutes)
     * RESOLVED: BLD will include Conjunction in the rule head (the "then"
       part)
     * RESOLVED: remove language about all the subtypes of xsd:string
       being required (from DTB)
     * RESOLVED: DTB will provide the menu of datatypes and builtins which
       dialects can use, by reference, when they state which datatypes and
       builtins must be supported by implementations.
     * RESOLVED: add xs:dayTimeDuration and xs:yearMonthDuration, but NOT
       duration, to those required in BLD (and of course DTB), as in
       http://www.w3.org/TR/xquery-operators/#dt-yearMonthDuration
     * RESOLVED: add builtin predicates to BLD and DTB:
       pred:numeric-less-or-equal, pred:numberic-greater-or-equal,
       pred:numberic-not-equal (they amount to shortcuts, to avoid
       disjunction).
     * RESOLVED: Publish DTB as a FPWD once changes decided so far today
       are made (and reviewed by Chris)
     * RESOLVED: remove aliases for symbol space identifiers in RIF
     * RESOLVED: modify Presentation Syntax to include "Const ::= STRING"
       (allowing "chat" as short for "chat"^^xs:string).
     * RESOLVED: add xsd:double as a required symbol space
     * RESOLVED: reuse NumericLiteral from SPARQL
       http://www.w3.org/TR/rdf-sparql-query/#rNumericLiteral giving us
       INTEGER, DECIMAL, and DOUBLE to the Presentation Syntax
     * RESOLVED: modify presentation syntax so that alphanumeric
       identifiers starting with "_" are shortcut for rif:local (so _foo
       is short for "foo"^^rif:local)
     * RESOLVED: Adopt SPARQL convention for using backslash to allow
       quotes (and cr, lf, tab, etc) within quoted strings (in
       Presentation Syntax).
     * RESOLVED: Close Issue 56 as addressed by the resolutions this
       morning.
     * RESOLVED: Publish SWC as LAST CALL Working Draft, after changes
       agreed upon this session and yesterday are made (and checked by
       CSMA)
     * RESOLVED: Close Issue 49 with decisions made so far today
     * RESOLVED: Close Issue 54 with at-risk label as decided this
       morning.
     * RESOLVED: Close Issue 60 as decided this morning -- if they are
       incomparable it's an error
     * RESOLVED: Answer to Dan is that in BLD, pred and funcs have one
       arity, and it is correct that the restriction holds even across
       multiple documents. So the requirement is met -- rulesets can be
       merged -- but if one ruleset is in error, then the merged version
       will be able to detect the error.
     * RESOLVED: in the RIF XML syntax (as long as we stick with this
       non-RDF style), attributes will have no namespace (be unqualified)
       (so that we can avoid "rif:" in documents)
     * RESOLVED: Change External(ATOMIC) to External(Atom) or
       External(Frame) and add text explaining how External frames are
       supported by the semantics.
     * RESOLVED: accept the conformance statement on
       http://www.w3.org/2005/rules/wiki/Conformance for BLD, up to the
       separator line.
     * RESOLVED: we'll have an XML such that RIF can operate on RIF
       documents at a RIF-syntactic-level instead of a DOM level. Requires
       something like numbering arguments or rdf:parsetype="collection" or
       ordered="yes".
     * RESOLVED: use an XML attribute rif:ordered="yes" (as exemplified
       above) or using an equivalent unique method to specify order, which
       works like rdf:parseType="Collection" (and rif:type attribute gets
       qualified again.)
     * RESOLVED: Close Issue 34 as addressed by text currently in BLD at
       http://www.w3.org/2005/rules/wiki/BLD#Conformance_Clauses
     * RESOLVED: RIF will use rif:ordered="yes". This item will be marked
       "at risk", saying the name and XML details on this bit may change.
     * RESOLVED: Adopt the XML syntax for metadata in
       http://lists.w3.org/Archives/Public/public-rif-wg/2008May/0036.html
       and given as the first example on
       http://www.w3.org/2005/rules/wiki/Metadata_examples, using
       conjunction-of-frames instead of all formulas.
     * RESOLVED: the <id> and <meta> elements can occur under any Class
       element (this matter is underspecified in 0036, and previous
       resolution).
     * RESOLVED: Close Issue 51 (metadata syntax and rule identification)
       give the decisions made so far this meeting.
     * RESOLVED: Close Issue 58 (Comments) by suggesting people use Dublin
       Core, RDFS, and OWL properties for metadata, along the lines of
       http://www.w3.org/TR/owl-ref/#Annotations -- specifically
       owl:versionInfo, rdfs:label, rdfs:comment, rdfs:seeAlso,
       rdfs:isDefinedBy, dc:creator, dc:description, dc:date, foaf:maker.
       This goes in BLD (near where the metadata syntax goes).
     * RESOLVED: close Issue 55 (striping and xml syntax and rdf/xml
       syntax compatibility) addressed by decisions made so far this
       meeting
     * RESOLVED: move Issue 57 (xml syntax extensibility) out of critical
       path
     * RESOLVED: We say metadata SHOULD survive the translation
       from-and-back-to RIF
     * RESOLVED: close Issue 59 as discussed in this meeting
     * RESOLVED: In Presentation Syntax, the IRIs in rif:iri Consts can be
       relative.
     * RESOLVED: We'll use XML 1.0 as amended http://www.w3.org/TR/xml
       (not XML 1.1) for the XML syntax for BLD.
     * RESOLVED: make equality-in-the-head a feature-at-risk.
     * RESOLVED: Mark "at risk" the strictness part of the conformance
       clause
     * RESOLVED: Advance BLD to Last Call, pending satisfactory completion
       of the edits decided at this meeting.
     * RESOLVED: Publish PRD as a FPWD, given the editorial changes
       decided so far this meeting (after confirmation of edits by Gary
       and Adrian).
     * RESOLVED: The WG requests a 1-year extension, with the work
       plan/description
       http://www.w3.org/2005/rules/wiki/Extension_Request_2008
     * RESOLVED: conditional on reviews by Jos and Chris, publish FLD as
       2cnd WD

   Resolutions from Telecon 13 May 2008 Agenda Minutes
     * RESOLVED: to close ISSUE-52 per the current version of BLD and SWC
       drafts, with the understanding that ISSUE-33 and ISSUE-39, and the
       new issue to be raised about profile mixing, are moved out of BLD
       critical path as a consequence.
     * RESOLVED: (on Axel's point 4) go with Prefix as Axel proposes
       (whitespace between prefix name and uri), as long as in the
       presentation syntax it is in a pre-amble, as a directive, so it is
       not easily confused with a fact.
     * RESOLVED: Presentation Syntax will follow option 1a (where
       Const ::= ANGLEBRACKIRI | CURIE | STRING^^ANGLEBRACKIRI |
       STRING^^CURIE )

   Resolutions from Telecon 6 May 2008 Agenda Minutes (draft)
     * RESOLVED: close ISSUE-53 as in current
       http://www.w3.org/2005/rules/wiki/SWC

   Resolutions from Telecon 22 April 2008 Agenda Minutes
     * RESOLVED: ISSUE-37 is not critical path for BLD.
     * RESOLVED: ISSUE-38 is not critical path for BLD.
     * RESOLVED: ISSUE-46 is not critical path for BLD.
     * RESOLVED: ISSUE-48 is not critical path for BLD.

   Resolutions from Telecon 15 April 2008 Agenda Minutes
     * RESOLVED: That FLD be published as a FPWD with [three additional]
       Editor's Notes.
     * RESOLVED: That BLD be published as a WD with [three additional]
       Editor's Notes (same as FLD).
     * RESOLVED: Publish rif-rdf-owl (aka SWC) as WD.
     * RESOLVED: Close ISSUE-14. It is addressed in the RDF+OWL document
     * RESOLVED: Close ISSUE-15. It is addressed in the RDF+OWL document
     * RESOLVED: Close ISSUE-24. It is addressed in the RDF+OWL document.
       At the time the issue was opened, Core was BLD.
     * RESOLVED: Close ISSUE-16, it is addressed (as far as Phase 1) in
       FLD and BLD through the external call mechanism
     * RESOLVED: Postpone ISSUE-17, ISSUE-18, ISSUE-19 and ISSUE-20. They
       are not covered by Phase I of RIF.
     * RESOLVED: Close ISSUE-21 - unclear what it means and most likely
       subsumed by ISSUE-38.
     * RESOLVED: Remove ISSUE-26 from critical path (of BLD 1.0).

   Resolution from Telecon 8 April 2008 Agenda Minutes
     * RESOLVED: Repeal resolution regarding moving "RIF-BLD as a
       specialization of FLD" to appendix and keep that as last section
       before refs

   Resolution from Telecon 25 March 2008 Minutes
     * RESOLVED: Use fully-striped syntax for next WD (option 3 from here)

   Resolutions from Telecon 18 March 2008 Minutes
     * RESOLVED: Open an issue on terminology around
       terms/functions/predicates and include an editorial comment in WD2
       asking for feedback, but keep "atom" and "expr" for this draft.
     * RESOLVED: remove nested Foralls for BLD WD2. Maybe we'll get some
       use case some day for putting them back in.

   Resolutions from Telecon 11 March 2008 Minutes
     * RESOLVED: BLD builtins are not sensitive to order of evaluation
       (closing issue-40).
     * RESOLVED: Approve Michael's alternative proposal on lists and
       update FLD+BLD syntax/semantics accordingly to reflect that and the
       previous resolution on lists

   Resolutions from F2F9 21-22 Feb, 2008, Paris
     * RESOLVED: Create a new Document with provisional title "Data Types
       and Builtins" to contain elements common to all dialects with
       Harold and Axel as editors.
     * RESOLVED: make "specialization of FLD" sections (of BLD)
       appendices, leaving standalone sections in place, and making both
       standalone and specialization normative.
     * RESOLVED: make argument names distinct.
     * RESOLVED: We keep named arguments, explaining in BLD that: A RIF
       consumer that does not support named arguments can implement them,
       with relative ease, by treating them as positional arguments (of a
       different predicate, formed in a stable but
       implementation-dependent way) in the lexical order of the argument
       names. (Closing ISSUE-44).
     * RESOLVED: No reification in BLD. This is like WD1, except no nested
       frames. A change from 18-Feb draft: Equality, frames, subclass,
       membership are no longer terms.
     * RESOLVED: (Approach 3) Functions on error return an error element
       that is in the domain. BLD Spec does not require that predicates
       return F on error, just that they have a truth value. BLD spec
       recommends using guards with builtins, to give predictability.
       Without guards, rules may behave unpredictability on error.

   Resolution from Telecon 12 February 2008 Agenda Minutes
     * RESOLVED: Fixed interpretation functions will be represented as
       functions and fixed interpretation relations as predicates, rather
       than representing functions as predicates.

   Resolution from Telecon 29 January 2008 Agenda Minutes
     * RESOLVED: to close issue 36 without action (that is, direct mapping
       between presentation and XML syntaxes, e.g. presented as a table).

   Resolution from Telecon 22 January 2008 Agenda Minutes
     * RESOLVED: close issue 45 by including lists in BLD as sequences for
       both presentation and XML syntaxes.

   Resolution from Telecon 15 January 2008 Agenda Minutes
     * RESOLVED: to close issue 47 without action (i.e. equality stays in
       BLD as it is currently specified)

   Resolutions from Telecon 8 January 2007 Agenda Minutes
     * RESOLVED: Close Issue-43 by including in BLD subclass formulae of
       the form a ## b. In the RDF compatibility document, ## and
       rdfs:subClassOf will be connected appropriately, i.e. whenever a ##
       b holds, a rdfs:subClassOf b is required to hold.
     * RESOLVED: Close Issue-41 by including in BLD membership formulae of
       the form c # a. In the RDF compatibility document, # and rdf:type
       will be connected appropriately, i.e. a # b holds iff a rdf:type b
       holds.

   Resolution from Telecon 11 December 2007 Agenda Minutes
     * RESOLVED: Go with Axel's option C, that is using a special syntax
       to distinguish evaluated functions/predicates from logical
       functions/predicates

   Resolution from Telecon 4 December 2007 Agenda Minutes
     * RESOLVED: Close Issue 42 such that the relationship between the xml
       syntax treatment of constants and the presentation treatment of
       constants is specified in the syntax mapping table

   Resolutions from Telecon 20 November 2007
     * RESOLVED: close ISSUE-2 based on Jos' analysis
     * RESOLVED: We'll refer to XSD 1.0 instead of XSD 1.1 in our document
       for now, including a clear note that it our intention to change to
       XSD 1.1 when it becomes available, so that people can use XML 1.1.

   Resolutions from [:F2F8]
     * RESOLVED: All official (ie standard) dialects will use the main RIF
       namespace. We will support user extensions using other namespaces.
     * RESOLVED: WG asks for 6 months extension. Plans to get BLD to Last
       Call and hold 2 more F2F meetings by end of May.
     * RESOLVED: Core will be what is currently called BLD with Equality
       removed, function terms removed, and perhaps safeness, and perhaps
       slotted terms. We will not get rid of BLD. (Ignoring editorial
       issues for now) Frames stay in core.
     * RESOLVED: CLOSE ISSUE 25. Addressed by SWC document.
     * RESOLVED: close ISSUE-27 with the understanding that neither RIF
       Core nor RIF BLD will have constraint logic programming.
     * RESOLVED: close ISSUE-28 with the understanding that RIF Core (as
       defined earlier today) does not have the problems which caused us
       to raise this issue.
     * RESOLVED: to close ISSUE-35 with the understanding that this issue
       is settled in our latest published version of BLD.
     * RESOLVED: no invisible extensions (official or user extensions)
     * RESOLVED: Be nice to Michael until mid-december

   Resolutions from Telecon 23 October 2007
     * RESOLVED: Short name request for the SWC document will be
       rif-rdf-owl
     * RESOLVED: short name request for BLD will be rif-bld, with rif-core
       being republished as a trivial document referring people to
       rif-bld.

   Resolutions from Telecon 9 0ctober 2007
     * RESOLVED: the name of the dialect is RIF basic logic dialect and
       the short notation is RIF-BLD
     * RESOLVED: to split RIF Compatibility from BLD and publish 2 drafts
       simultaneously: RIF-BLD (WD 2) and RIF-COMP (WD 1)

   Resolutions from F2F7
     * RESOLVED: for BLD WD2, the root element will not be dialect
       specific
     * RESOLVED: root element is rif:Document
     * RESOLVED: To identify rules and rulesets (and other syntactic
       objects not otherwise having identifiers) we'll use rdf:about or
       rif:identifier in the next draft. This is envisioned for metadata
       and should not affect the semantics
     * RESOLVED: In WD2 there will be no indication of whether order has
       semantics in XML instance documents. The issue remains open for
       future drafts.
     * RESOLVED: In the XML syntax, we'll use full IRIs (not qnames or
       curies) for Const types, etc. Of course, XML entities can be used.
     * RESOLVED: dialect-of-authoring is identified by an IRI, which
       appears in the document as an attribute rif:dialect on the root
       element (for WD2, until we figure out extensibility)
     * RESOLVED: We will use Presentation Syntax, with minor changes, with
       a mapping table to the XML syntax.
     * RESOLVED: BLD WD2 will have structural model diagrams (which look
       like UML).
     * RESOLVED: Remove ASN from BLD WD2.
     * RESOLVED: For WD2, change structural model so that Forall, Implies,
       and Atomic are three parallel subclasses of RULE (as shown on
       Christian's diagram labeled "BLD Rule: alternative")
     * RESOLVED: The OWL Compatibility text will proceed to Last Call in
       sync with BLD.

   Resolutions from Telecon 11 September 2007
     * RESOLVED: we will have naming conventions; people edit the page to
       propose theirs (with explanation and reasons for any differences
       from what's already on page)

   Resolutions from Telecon 28 August 2007
     * RESOLVED: To include the section on frames/classification in the
       next BLD WD, suitably labelled as "under discussion" with rationale
       for/against

   Resolutions from Telecon 17 July 2007
     * RESOLVED: To better understand what RIF Core could be, create two
       task forces in RIF, one focusing on a logical dialect and the other
       one focusing on a production rules dialect
     * RESOLVED: Rename the current "RIF Core" draft: "RIF basic logic
       dialect"
     * RESOLVED: Create a "RIF basic PR dialect"

   Resolutions from [:F2F6:F2F6 2-3 June 2007]
     * RESOLVED: for [:Arch/XML_Syntax:XML syntax issue 2.1. "Should
       string values be child-elements or attributes?"], the answer is:
       Use Child Elements
     * RESOLVED: Add Frames to RIF Core (objects with slots and values,
       where slots are just binary predicates), roughly as described in
       [:Core/Slotted_Conditions]. We'll decide about the classification
       and slotted-predicates separately.

   Resolutions from Telecon 22 May 2007
     * RESOLVED: RIF Core follows OS ("overlapping sorts") as on
       http://www.w3.org/2005/rules/wg/wiki/Issue-31 (resolving issue-31)
     * RESOLVED: RIF Core will require implementations to support an
       enumerated subset of F&O, used as functions (or predicates if they
       are boolean functions, like comparators), in an "evaluation" style
       (with no unbound variables as arguments).

   Resolutions from Telecon 8 May 2007
     * RESOLVED: To go with 3 (OS) or 4 (OSR), and next week we'll decide
       between 3 and 4 (cf http://www.w3.org/2005/rules/wg/wiki/Issue-31),
       closing Issue 31.

   Resolutions from Telecon 17 April 2007
     * RESOLVED: Change rif:uri to rif:iri for now, we can discuss level
       of indirection and change it later if there's consensus on a new
       name (closing Issue 30)

   Resolutions from Telecon 27 March 2007
     * RESOLVED: Publish first WD of RIF Core

   Resolutions from Telecon 20 March 2007
     * RESOLVED: Add "The examples of BNF and XML rule syntax given here
       use the unsorted version of the condition syntax and fail to
       illustrate the use of URIs for constants. This will be addressed in
       a future working draft." to the CORE WD

   Resolutions from 5th F2F Meeting
     * RESOLVED: remove link to draft DTD from Core WD1
     * RESOLVED: Remove anonymous variables from CORE WD1
     * RESOLVED: Equal aggregates 2 Terms (one association with
       multiplicity = 2 in Core condition language diagram)
     * RESOLVED: we'll keep AND and OR as 0-or-more. (it's a conventional
       treatment.)
     * RESOLVED: UML diagram for Core condition language stays in WD1 but
       with NamedElement and PSort removed
     * RESOLVED: Use diagram in
       http://lists.w3.org/Archives/Public/public-rif-wg/2007Feb/0134, in
       Core WD1, labeled "still under discussion"
     * RESOLVED: The concrete human-readable syntax, described in BNF, is:
       work in progress and under discussion. (It was already resolved as
       being For Illustrative Purposes Only)
     * RESOLVED: the xmlns to use for WD1 is
       "http://www.w3.org/2007/01/rif#"
     * RESOLVED: Any sort defined in Core MUST BE identified by a URI
     * RESOLVED: replace uri with rif:URI in WD1 and link to issue
     * RESOLVED: keep text as in draft, which changes datatype list from
       charter by replacing int with integer
     * RESOLVED: to publish Core WD1, if ACTIONS assigned in this meeting
       so far are done to our satisfaction. (That is, no new issues should
       arise to block publication of Core WD1)
     * RESOLVED: We'll use UML to help people visualize our abstract
       syntax. We'll say "these are graphical views of the abstract syntax
       using UML notation"

   Telecon 20 Feb Resolutions:
     * webizing will be stalled for after WD1.

   Telecon 6 February 2007 Resolutions:
     * RESOLVED: March 13 and 20 telecons will be at 4pm CET time (1500
       UTC, 11am US Eastern)
     * RESOLVED: Close issue 5
     * RESOLVED: Close issue 7
     * RESOLVED: 1st CORE WD will have only placeolders/section titles for
       "OWL Compatibility" and "RDF COmpatibility"
     * RESOLVED: 1st WD will include a MOF-UML diagram and a BNF for the
       syntax (clearly labelled as being for illustration/explanation
       purposes only)
     * RESOLVED: 1st WD will contain XML examples, stripe-skipped and
       clearly labelled as being for illustration purposes only

   Telecon 30 January 2007 Resolutions:
     * RESOLVED: we'll maintain the XML syntax(es) of RIF in the 2-step
       process, where step one will use asn06 (contingent on asn06 being
       defined as a subset of OWL Full or some other standard formalism)
       and step 2 is the precisely specified mapping from asn06 to XML
       (striped or stripe skipping or whatever).

   [:F2F4:F2F4 4-5 November 2006] Resolutions:
     * The RIF CORE will be positve Horn.
     * RIF Core will be based on current model theory with suitable
       extensions
     * RIF core must have a clear and precise syntax and semantics. Each
       standard RIF dialect must have a clear and precise syntax and
       semantics that extends RIF core.
     * For standard RIF dialects, model theories will be normative; in
       their absence it will be proof theories; in the absence of both it
       will be operational semantics.
     * The RIFWG will define useful RIF dialects in Phase 1, e.g.
       including negation, not necessarily in a Rec
     * new requirements:
     * RIF should support the ability to merge rule sets
     * RIF will support the identification of rule sets
     * RIF will use URIs as in RDF (see below)
     * RIF will provide a framework for defining RIF dialects
     * RIF must have a standard core and a limited number of standard
       dialects based upon that core
     * The implementability, semantic precision, standard components, and
       translator requirements will be treated as "general" (ie not
       specific to use cases)
     * RIF will use URIs (IRIs) in the style of RDF and OWL, using them to
       identify at least: globally named predicates, functions, datatypes,
       constants (OWL individuals, not literal values), rules, and
       rulesets.
     * Translators to and from languages which do not use URIs as names
       will need to use a name-mapping system (such as namespace prefixes)
     * RIF does not mandate any particular mapping scheme. It will provide
       a metadata vocabulary to allow translators to record the mapping if
       they choose to.
     * For example, in rule systems where the predicates refer to fields
       of java objects the metadata annotations might be used to carry the
       java fully-qualified classname and field name.
     * For RIF these are purely annotations, any use of them for carrying
       semantic information steps outside of RIF.

   Retrieved from
   "https://www.w3.org/2005/rules/wiki/index.php?title=Resolutions&oldid=7
   795"

Navigation menu

Personal tools

Namespaces

     * Page
     * Discussion

Variants

Views

     * Read
     * View source

More

RIF Working Group

     * Home
     * Events
     * FAQ
     * Mail Archives
     * Public Comments
     * Blog
     * Tracker
     * Test Cases
     * Implementations
     * Resolutions
     * Old Wiki
     * Telecon Regrets
     * Meetings

publications

     * Core
     * BLD
     * PRD
     * DTB
     * SWC
     * FLD
     * PlainLiteral
     * UCR
     * Test

Tools

     * Special pages

     * This page was last modified on 3 March 2009, at 15:56.

     * Privacy policy
     * About RIF
     * Disclaimers
     * UFV.ca
     * Admissions
     * Registration
     * International

     * Learning Outcomes
     * myUFV
     * Contact

   University of the Fraser Valley

   Current

   Academic Calendar

   2024/25
   (BUTTON) Toggle navigation UFV.ca
     * Academic Calendar
     * Course Descriptions
     * Course Finder
     * Course Outlines
     * Program Index

   Academic Calendar 2024/25

Computing Science

   English language proficiency requirements

   Students registering in post-secondary level courses (numbered 100 to
   499) will be required to meet the English language entrance proficiency
   requirements. Students in ELS or the University Foundations programs
   can register in those courses identified in the University Foundations
   program with lower levels of language proficiency.

   Please note that not all courses are offered every semester.

   COMP 061

   1.5 credits

Fundamental Computer Studies

   Prerequisite(s): None. Note: Students should have basic English
   proficiency in order to be successful in this course.

   Corequisite(s): None

   Pre- or corequisite(s): None

   Computers are a pervasive part of daily life in personal, work, and
   educational situations. This course helps students with little or no
   experience gain the confidence to perform basic computer operations:
   keyboarding, word processing, emailing, and using the Internet.

   COMP 071

   1.5 credits

Intermediate Computer Studies

   Prerequisite(s): COMP 061 or equivalent. Note: Students should have
   basic English proficiency in order to be successful in this course.

   Corequisite(s): None

   Pre- or corequisite(s): None

   Computers are increasingly becoming a part of daily life in personal,
   work and educational environments. This course introduces students with
   basic computer skills to the Windows environment, Blackboard, Excel
   spreadsheets, electronic communication, Power Point presentations, and
   intermediate topics in Word.

   COMP 091

   3 credits

Provincial-Level Computer Studies: Graphics and Publishing

   Prerequisite(s): COMP 071 or equivalent. Note: Students should have
   basic English proficiency in order to be successful in this course.

   Corequisite(s): None

   Pre- or corequisite(s): None

   This provincial-level computing course teaches intermediate to advanced
   computer skills in current online technologies, publishing, digital
   art, and graphics. Students will use their computer skills to develop
   problem solving and critical thinking skills as they apply computer
   applications.

   COMP 092

   3 credits

Provincial-Level Computer Studies: Computer Applications

   Prerequisite(s): COMP 071 or equivalent. Note: Students should have
   basic English proficiency in order to be successful in this course.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   This provincial-level computing course teaches intermediate and/or
   advanced computer skills in networking, programming, spreadsheets,
   database management, and online technologies. Students will use
   computer skills to develop problem solving and critical thinking skills
   and apply computer applications to real-life and workplace situations.

   COMP 120

   3 credits

Computing for the Sciences

   Prerequisite(s): One of the following: (C+ or better in Principles of
   Mathematics 12), (C or better in one of Foundations of Mathematics 12,
   Pre-calculus 12, MATH 096, or MATH 110), (C or better in both MATH 092
   and MATH 093), or (C or better in both MATH 094 and MATH 095).

   Corequisite(s): None

   Pre- or corequisite(s): None

   An introduction to computing and programming, with applications in the
   sciences. Imperative programming, computational thinking, advanced
   spreadsheets, introductory databases, and publication-quality
   typesetting tools.
   Note: Competency in computer skills is required. See CIS Required
   Skills section on the CIS department website for details.

   COMP 125

   3 credits

Principles of Computing

   Prerequisite(s): One of the following: (C or better in one of
   Pre-calculus 11, Foundations of Mathematics 11, Principles of
   Mathematics 11, or MATH 085) or (one of Principles of Mathematics 12,
   Foundations of Mathematics 12, Pre-calculus 12, MATH 092, or MATH 094).

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Provides students with a broad understanding of the fundamental
   concepts of computing, logic, and data processing. Concepts include
   introductory hardware and software architecture, models of computation,
   representation of data, machine arithmetic, assembler programming,
   command line interfaces, and an introduction to some of the logical and
   mathematical ideas used in computing.
   Note: Competency in computer skills is required. See CIS Required
   Skills section on the CIS department website for details.

   COMP 150

   4 credits

Introduction to Programming

   Prerequisite(s): One of the following: (C or better in one of
   Pre-calculus 11, Foundations of Mathematics 11, Principles of
   Mathematics 11, or MATH 085) or (one of Principles of Mathematics 12,
   Foundations of Mathematics 12, Pre-calculus 12, MATH 092, or MATH 094).

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   An introduction to computer programming using a modern programming
   language. Students will cover fundamental concepts such as variables,
   data types, control structures, collections, recursion and objects.
   Emphasis will be placed on clarity, style and design throughout.
   Note: Competency in computer skills is required. See CIS Required
   Skills section on the CIS department website for details.
   Note: Students with credit for COMP 152 cannot take this course for
   further credit.

   COMP 152

   4 credits

Introduction to Structured Programming

   Prerequisite(s): C+ or better in one of the following: Principles of
   Mathematics 12, Pre-calculus 12, MATH 093, or MATH 095.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   This course is an introduction to structured computer programming.
   Students will study algorithms and top-down design, and will implement
   algorithms in a procedural programming language. Lab exercises and
   programming assignments will emphasize scientific and numerical
   applications.
   Note: Competency in computer skills is required. See CIS Required
   Skills section on the CIS department website for details.
   Note: Students with credit for COMP 150 cannot take this course for
   further credit.

   COMP 155

   4 credits

Object-oriented Programming

   Prerequisite(s): C+ or better in one of COMP 150 or COMP 152.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Continues the systematic study of programming, focusing on
   object-oriented programming and design. Introduces large and complex
   collaborations of objects and covers important skills to design
   modern-day software systems. Students will reflect on the practice of
   tómiyeqw and Stó:lō worldview of community practice in relation to the
   development of object-oriented software.

   COMP 230

   3 credits

Databases and Database Management Systems

   Prerequisite(s): COMP 155 or (admission to the Data Analysis
   Post-degree certificate program and one of the following: STAT 106
   [formerly MATH 106] or MATH 270/STAT 270).

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   This course covers the theoretical foundations that are necessary to
   design and implement a database, and to use database management systems
   effectively. The database approach is introduced and major models are
   reviewed. Relational models are considered in more detail. Data
   modeling techniques are used as a tool for design. Students will study
   data manipulation languages such as relational algebra and SQL.
   Normalization and practical design considerations are covered.
   Note: Students with credit for CIS 230 cannot take this course for
   further credit.

   COMP 251

   4 credits

Data Structures and Algorithms

   Prerequisite(s): COMP 125, COMP 155, and MATH 125.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   An introduction to the abstract data structures used in the solution of
   common computing problems. Applies concepts such as stacks, queues,
   trees, and graphs to problems using a modern object-oriented
   programming language. Also covers the correctness and efficiency of
   algorithms.

   COMP 256

   3 credits

Introduction to Machine Architecture

   Prerequisite(s): COMP 125 and one of (COMP 150 or COMP 152).

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Students study the fundamental digital circuits in typical
   microcomputer hardware, and assembly language programming as a tool for
   understanding the computer architecture and for controlling computer
   hardware devices.

   COMP 325

   3 credits

Malicious Software and Attack Prevention

   Prerequisite(s): COMP 155 or CIS 221. Note: COMP 256 is recommended.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Students will learn about the vulnerabilities inherent in computer
   programs. Topics studied will include stack and buffer overflows, race
   conditions, file operations, string handling, interprocess
   communication, injection attacks. C and assembly language examples will
   be used.
   Note: Students with credit for CIS 325 cannot take this course for
   further credit.

   COMP 331

   3 credits

Data Quality

   Prerequisite(s): COMP 230 (formerly CIS 230) and one of the following:
   STAT 106 (formerly MATH 106) with a B, MATH 270/STAT 270, or STAT 271.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Data quality issues pertaining to data acquisition, storage, integrity,
   and use. Identifying and analyzing data quality problems, and assessing
   strategies and tools to correct them. Also covers privacy and security,
   and data quality needs of data warehousing and mining applications.
   Note: This course is offered as COMP 331 and STAT 331 (formerly MATH
   331). Students may take only one of these for credit.

   COMP 340

   3 credits

Operating Systems

   Prerequisite(s): COMP 251 and admission to the Bachelor of Computer
   Information Systems degree or the Bachelor of Science with Computing
   Science major.
   Note: Students accepted to a CIS or Computing Science minor may
   register with permission of the department.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   An examination of computer operating system architecture. Students will
   gain an understanding of general as well as distinguishing features of
   various operating systems. Students are also expected to do some system
   programming on multi-user operating systems such as UNIX or LINUX.

   COMP 350

   3 credits

User Interface Design and Programming

   Prerequisite(s): COMP 251 and admission to the Bachelor of Computer
   Information Systems degree or the Bachelor of Science with Computing
   Science major.
   Note: Students accepted to a CIS or Computing Science minor may
   register with permission of the department.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   This course introduces the topic of human-computer interaction by
   teaching students how to design and program enjoyable, user-centered
   graphical interfaces. The design principles are based on user behavior
   and human factors such as perception, memory, and attention. Students
   will learn to implement graphical user interfaces in a variety of
   programming environments and operating systems.

   COMP 351

   3 credits

Advanced Website Programming

   Prerequisite(s): COMP 251 and admission to the Bachelor of Computer
   Information Systems degree or the Bachelor of Science with Computing
   Science major.
   Note: Students accepted to a CIS or Computing Science minor may
   register with permission of the department.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   This course covers current technologies for client and server-side
   programming of dynamic websites, web-enabled applications, and web
   services. Internet protocols, security issues, and database
   connectivity will be examined. The course will also introduce common
   design architectures used for the technologies.

   COMP 359

   3 credits

Design and Analysis of Algorithms

   Prerequisite(s): COMP 251 and (MATH 125 or MATH 225) and (STAT 106
   [formerly MATH 106] or MATH 270/STAT 270).

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Advanced study of the analysis and design of algorithms and data
   structures in order to solve common computer science problems.

   COMP 360

   3 credits

Computer Graphics

   Prerequisite(s): COMP 251 and admission to the Bachelor of Computer
   Information Systems degree or the Bachelor of Science with Computing
   Science major.
   Note: Students admitted to a CIS or Computing Science minor may
   register with department permission.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   This course focuses on the development of Computer Graphics technology.
   Topics include graphics hardware, lighting models, texture models and
   the geometric representation of shapes and surfaces.

   COMP 361

   3 credits

Introduction to Robotics

   Prerequisite(s): COMP 251.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   This course introduces the principles, design, and implementation of
   autonomous robotic systems. Students will learn how to program
   intelligent robots for applications involving sensing, navigation,
   planning, and uncertainty, in real and simulated environments.

   COMP 370

   3 credits

Software Engineering

   Prerequisite(s): COMP 251 and CIS 270.
   Note: Students accepted to a Computing Science major or minor may
   register with permission of the department. The CIS 270 prerequisite
   will be waived for these students.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   A detailed and comprehensive study of object-oriented and classical
   software engineering techniques. This is an addition to the analysis
   and design work covered in CIS 270. Topics cover all aspects of the
   software life-cycle. Emphasis is placed on object-oriented techniques
   and the Unified Modeling Language (UML).
   Note: Students with credit for CIS 370 cannot take this course for
   further credit.

   COMP 371

   3 credits

Object Oriented Modeling and Design

   Prerequisite(s): Admission to the Bachelor of Computer Information
   Systems degree, CIS 270, COMP 230 (formerly CIS 230), and COMP 251.
   Note: Students accepted to a CIS or Computing Science minor may
   register with permission of the department.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Students will learn how to design and implement high quality computer
   systems. Emphasis is placed on creating a requirements model and using
   design principles to create a working system. The unified modeling
   language (UML) is used extensively throughout this course.
   Note: Students with credit for CIS 371 cannot take this course for
   further credit.

   COMP 380

   3 credits

Introduction to Artificial Intelligence

   Prerequisite(s): COMP 251, (one of STAT 106 or MATH 270/STAT 270), and
   admission to the Bachelor of Computer Information Systems degree or the
   Bachelor of Science with Computing Science major.
   Note: Students accepted to a CIS or Computing Science minor may
   register with permission of the department.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   A basic introduction to Artificial Intelligence. Topics include common
   AI techniques, including knowledge representation and reasoning,
   logical inference, and machine learning. Emphasis is placed on
   practical use of rule-based systems and the fundamentals necessary for
   the development of Expert Systems.
   Note: Students with credit for CIS 380 cannot take this course for
   further credit.

   COMP 381

   3 credits

Introduction to Machine Learning

   Prerequisite(s): (COMP 251 and one of the following: [STAT 106 or STAT
   270]) or admission to the Data Analysis Post-degree certificate. Note:
   Students who do not have the required courses but have been admitted to
   the Data Analysis Post-degree certificate will need to contact the
   department assistant for permission to register.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Programming computers to learn from experience and from data, resulting
   in flexible, customized software. Applications range from simple spam
   detection to complex speech recognition. Emphasis on programming
   techniques for implementing machine learning algorithms.

   COMP 382

   3 credits

Language, Computation and Machines

   Prerequisite(s): COMP 251 and MATH 225.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   This is a theoretical computer science course, covering types of formal
   languages and their hierarchical relationships, and the different
   abstract machines that recognize each type. The course has important
   practical implications for all programming languages and computer
   applications.

   COMP 386

   3 credits

Coding Best Practices

   Prerequisite(s): Admission to the Coding Skills associate certificate,
   COMP 359, and COMP 370.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Provides students with experience using software development tools and
   workflows. The content will emphasize best practices, quality assurance
   strategies, style guidelines, and professionalism. Students will learn
   to select and evaluate emerging technologies for use in their software
   development workflows.

   COMP 390

   3 credits

Data Communications

   Prerequisite(s): Admission to the Bachelor of Computer Information
   Systems or the Bachelor of Science with Computing Science major, MATH
   125, (one of CIS 291, CIS 292, or COMP 251), and (one of STAT 106 or
   MATH 270/STAT 270).
   Note: Students accepted to a CIS or Computing Science minor may
   register with permission of the department.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Students will explore the ideas, methods, and standards for the
   exchange of information, and the layers, interfaces, protocols, and
   services on the OSI reference model and TCP/IP protocol suite. Network
   algorithms, design and tradeoffs, and performance analysis are
   emphasized.
   Note: Students with credit for CIS 390 cannot take this course for
   further credit.

   COMP 420

   3 credits

Computers and Society

   Prerequisite(s): 12 credits of 300-level or above in CIS or COMP.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   An investigation of the basic cultural, social, legal, economic, and
   ethical issues inherent in the discipline of computing.
   Note: Students with credit for CIS 485 cannot take this course for
   further credit.

   COMP 430

   3 credits

Advanced Database Topics

   Prerequisite(s): (COMP 230 [formerly CIS 230] and COMP 251) or (60
   university-level credits including COMP 230 [formerly CIS 230] and one
   of the following: [STAT 106 (formerly MATH 106) with a B, MATH 270/STAT
   270, or STAT 271 (formerly MATH 271)] and one of the following: [COMP
   150, COMP 152, or COMP 155]). Note: COMP 251 and COMP 340 are
   recommended.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Students will study, discuss, and compare current processes and tools
   being used by organizations for their data-handling needs. Topics
   include indexing and hashing, performance issues, hands-on database
   administration, an introduction to data warehousing and data mining,
   and object-oriented database approaches.
   Note: Students with credit for CIS 430 cannot take this course for
   further credit.

   COMP 431

   3 credits

Data Mining

   Prerequisite(s): COMP 230 (formerly CIS 230), STAT 271, and STAT
   331/COMP 331.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Data mining provides the techniques of extracting useful information
   and hidden patterns from a massive amount of data. Main topics include
   data exploration, classification, decision trees, Bayesian classifiers,
   frequent item sets, association rules, clustering, K-means, EM
   algorithm, and anomaly detection.
   Note: This course is offered as STAT 431 and COMP 431. Students may
   take only one of these for credit.

   COMP 440

   3 credits

Project in Computing Science

   Prerequisite(s): 15 credits of 300-level or higher COMP and
   instructor's permission.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Capstone course in which each student works with a faculty advisor to
   complete an advanced project demonstrating knowledge and skills
   obtained in the Computing Science major.

   COMP 445

   3 credits

Web Server Installation and Maintenance

   Prerequisite(s): CIS 341 or COMP 390 (formerly CIS 390) and admission
   to the Bachelor of Computer Information Systems degree or the Bachelor
   of Science with Computing Science major.
   Note: Students accepted to a CIS or Computing Science minor may
   register with permission of the department.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Students will gain hands-on experience in installing and maintaining a
   web server. Both Internet and Intranet issues will be discussed.
   Maintenance issues such as system optimization and server activity
   monitoring will be discussed. In addition, server and client security
   will be discussed.

   COMP 455

   3 credits

Extreme Computing

   Prerequisite(s): COMP 251.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   We live in the age of “big data,” where companies need to gather and
   analyze truly massive amounts of information. Companies specializing in
   web search need to essentially archive and analyze the entire web.
   Social media sites need to store and work with millions of user
   profiles. Programmers need tools that will efficiently scale up to
   these kinds of tasks. This course introduces the theory and practice of
   distributed programming and cluster computing, where such problems are
   tackled by dividing the tasks into smaller parts and running them
   across many machines at once. In particular, we will cover the
   MapReduce algorithm and its popular open-source software
   implementations.

   COMP 481

   3 credits

Functional and Logic Programming

   Prerequisite(s): COMP 251 with a C or better; MATH 225 recommended.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Most programming languages (e.g. Java, C, C++, Python) are imperative
   languages, meaning that programs are written as sequences of
   instructions that change program state. However, imperative programming
   is just one programming paradigm. This course introduces two other
   programming paradigms: functional and logic programming. Logic
   programming is based on first-order logic, while functional programming
   is based on the lambda calculus. Students will learn the basic
   theoretical foundations as well as how to program in two relevant
   languages. The course will also describe the importance of these
   languages to the field of AI.

   COMP 482

   3 credits

Natural Language Processing

   Prerequisite(s): One of (STAT 106 or STAT 270) and one of (COMP 251 or
   LING 101) and 60 university-level credits.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Algorithms and tools for enabling computers to analyze, understand, and
   generate human language.

   COMP 486

   3 credits

Field Practicum

   Prerequisite(s): Admission to the Coding Skills associate certificate,
   COMP 359, COMP 370, and department permission.

   Corequisite(s): None.

   Pre- or corequisite(s): None.

   Provides students with an opportunity to gain experience in the role of
   a junior software developer in a workplace setting. Students will
   receive feedback about their competencies in relation to the demands of
   the practicum setting.

   COMP 490

   3 credits

Network Security and Cryptography

   Prerequisite(s): COMP 390 (formerly CIS 390) with a grade of C or
   better and one of the following: STAT 106 (formerly MATH 106) or MATH
   270/STAT 270.

   Corequisite(s): None

   Pre- or corequisite(s): None

   This course will cover important concepts in conventional encryption
   algorithms such as AES, public-key design and algorithms such as RSA
   and elliptic curve, digital signatures and authentication protocols
   such as Kerberos, and key managements such as PKI and X.509.

   Last updated: November 1, 2024
   [Select Area of Study...____________________]
   [Select Courses...__________________________________]
   [Select General Information...______]
     * How to Apply
     * Request Info
     * See an advisor
     * Financial Aid

UFV.ca Academic Calendar

Admissions

     * Admission to UFV Programs
     * English Language Proficiency
     * Fees and Other Costs
     * Transfer Credit Information
     * Prior Learning Assessment
     * International Students

Current Students

     * Registration
     * Timetables
     * Notice of Increased Requirements
     * Semester Dates
     * Priority Access to Student Supports
     * Transfer to Other Institutions

Rules & Regulations

     * Calendar Archives
     * Glossary
     * Grading & Academic Standing
     * Program Types & Length
     * Regulations & Policies

University Preparation

     * Continuing Education
     * High School Career Programs
     * Qualifying Studies
     * Upgrading & University Prep

   University of the Fraser Valley (UFV)

   University of the Fraser Valley

   33844 King Road, Abbotsford, BC

   Canada V2S 7M8

   604-504-7441
     *
     *
     *
     *
     *
     *

   ©2024 · University of the Fraser Valley · Academic Calendar
   Copyright · Disclaimer · Privacy
   ____________________ (BUTTON______________)
     * Course Descriptions
     * Course Outlines
     * Programs

Current Students

     * How to Apply
     * Request Information
     * See an advisor
     * Finacial Aid
    Office of the Registrar
       Monday to Friday 9am to 4pm

     *   604-854-4501
     *   1-888-823-8734 Toll-Free
     *   Contact

   s
   Skip to main content

   IFRAME: https://www.googletagmanager.com/ns.html?id=GTM-TKNM7FX

   ✕
   Request Info Visit Apply Give
     __________________________________________________________________

Mobile main navigation

     * About
          + Overview of RIT
          + Uniquely RIT
          + History of RIT
          + University Leadership
          + About Rochester, NY
          + Visit RIT
          + Careers at RIT
          + Contact
          + Global Campuses
          + Rankings and Recognition
          + Discover RIT
          + Faces of RIT
     * Academics
          + Overview of Academics
          + Undergraduate Degrees
          + Graduate and Doctoral Degrees
          + Combined Accelerated Bachelor’s/Master’s
          + RIT Certified
          + Colleges
          + New Economy Majors
          + Immersions and Minors
          + Individualized Study
          + Academic Support
          + Areas of Study
          + Academic Calendar
     * Experiential Learning
          + Overview of Experiential Learning
          + Co-op and Internships
          + Entrepreneurship
          + Community Engagement
          + Global Engagement
          + Student Research
          + Vertically Integrated Projects
          + Career Services
     * Admissions and Aid
          + Admissions and Aid Overview
          + First-Year Admission
          + Transfer Admission
          + Graduate Admission
          + International Students
          + Deaf and Hard-of-Hearing Students
          + US Military / Veterans
          + Online Education Admission
          + Financial Aid and Scholarships
          + Tuition and Fees
          + Visit RIT
          + Apply by January 15 for Fall 2025
          + Schedule a Campus Tour
     * Research
          + Research Overview
          + Signature Research Areas
          + Key Research Centers and Institutes
          + Research Awards and Recognition
          + Resources for Researchers
          + Libraries
          + Vice President for Research
          + Corporate Research Partnerships
          + Research News
     * RIT Life
          + Overview of RIT Life
          + Clubs and Experiences
          + Campus Traditions
          + Diversity and Inclusion
          + Rochester, NY
          + International Students
          + Housing and Dining
          + Sports and Recreation
          + Wellness
          + Events
          + Performing Arts
          + This is student life
     * Athletics
     __________________________________________________________________

   myRIT News Directory
   Rochester Institute
   of Technology
   ✕
   Future Students Current Students Parents Faculty and Staff Alumni
   Partners
     __________________________________________________________________

   Request Info Visit Apply Give
   Future Students Current Students Parents Faculty and Staff Alumni
   Partners
   Request Info Visit Apply Give
   Rochester Institute of Technology
   Rochester Institute of Technology
   News Directory myRIT
     * About
          + Overview of RIT
          + Uniquely RIT
          + History of RIT
          + University Leadership
          + About Rochester, NY
          + Visit RIT
          + Careers at RIT
          + Contact
          + Global Campuses
          + Rankings and Recognition
          + 4 students sit on rock wall
            Discover RIT
          + collage of 8 students featured in faces or RIT videos
            Faces of RIT
     * Academics
          + Overview of Academics
          + Undergraduate Degrees
          + Graduate and Doctoral Degrees
          + Combined Accelerated Bachelor’s/Master’s
          + RIT Certified
          + Colleges
          + New Economy Majors
          + Immersions and Minors
          + Individualized Study
          + Academic Support
          + a collage of 18 line art icons featuring technology, art,
            science, and other areas of study
            Areas of Study
          + Calendar Graphic
            Academic Calendar
     * Experiential Learning
          + Overview of Experiential Learning
          + Co-op and Internships
          + Entrepreneurship
          + Community Engagement
          + Global Engagement
          + Student Research
          + Vertically Integrated Projects
          + R I T student talking to a potential employer at a career fair
            Career Services
     * Admissions and Aid
          + Admissions and Aid Overview
          + First-Year Admission
          + Transfer Admission
          + Graduate Admission
          + International Students
          + Deaf and Hard-of-Hearing Students
          + US Military / Veterans
          + Online Education Admission
          + Financial Aid and Scholarships
          + Tuition and Fees
          + Visit RIT
          + Application deadline
            Apply by January 15 for Fall 2025
          + Experience the amazing.
            Schedule a Campus Tour
     * Research
          + Research Overview
          + Signature Research Areas
          + Key Research Centers and Institutes
          + Research Awards and Recognition
          + Resources for Researchers
          + Libraries
          + Vice President for Research
          + Corporate Research Partnerships
          + A closeup of a hand holding a phone that shows RIT's research
            news
            Research News
     * RIT Life
          + Overview of RIT Life
          + Clubs and Experiences
          + Campus Traditions
          + Diversity and Inclusion
          + Rochester, NY
          + International Students
          + Housing and Dining
          + Sports and Recreation
          + Wellness
          + Events
          + A ribbon dancer dancing on stage during a performance.
            Performing Arts
          + People cheering and laughing
            This is student life
     * Athletics

Electrical Mechanical Engineering Technology Bachelor of Science Degree


   Electrical Mechanical Engineering Technology

   Bachelor of Science Degree
    1. RIT /
    2. Rochester Institute of Technology /
    3. Academics /
    4. Electrical Mechanical Engineering Technology BS

     * Overview
     * Curriculum
     * Faculty

   Request Info about undergraduate study
   Visit Apply

   An electromechanical engineering degree that explores the fundamentals
   of mechatronics, which involves the integration of mechanics,
   electrical circuits, microprocessors, mathematics, materials
   technology, computer-aided engineering, and design.
     __________________________________________________________________

Overview for Electrical Mechanical Engineering Technology BS

   This program is no longer accepting new student applications.

   Students interested in electronics, mechanical systems, computers,
   imaging and sensing, automation, and robotics are encouraged to
   consider the mechatronics engineering technology BS program.

   With the increased complexity of products and production design, which
   includes the integration of software, electronics with mechanical and
   electrical components (mechatronics), there is a growing need for
   professionals who have a strong foundation in the electrical,
   mechanical, programming and manufacturing disciplines. The electrical
   mechanical engineering technology major prepares students for careers
   in engineering disciplines where the integration of mechanical,
   electrical, programming and manufacturing disciplines is important.
   Students develop skills that explore the fundamentals of mechanics,
   electrical circuits, and microprocessors, mathematics, materials
   technology, computer-aided engineering, and design. The
   electromechanical engineering major will develop well-rounded
   electrical mechanical engineers as lifelong learners with the ability
   to adapt, grow, and succeed in mechatronics, electromechanical
   engineering environment, or similar highly competitive workplaces.

   With both the increased complexity of product design and the merger of
   mechanical and electrical aspects of design, there is a growing need
   for professionals who have a strong foundation in the electrical,
   mechanical, and manufacturing disciplines. Graduates from the
   electrical mechanical engineering technology program are able to
   effectively bridge the gap between coworkers with more specialized
   backgrounds.

   The electromechanical engineering degree prepares graduates for
   professional careers in the broad field of engineering technology,
   where the integration of mechanical, electrical, and manufacturing
   disciplines is important. We also provide the maximum amount of
   flexibility in transfer from other RIT programs and a variety of
   two-year programs, including engineering science and engineering
   technology.

What You'll Study

   Students develop skills in courses that explore the fundamentals of
   mechanics, electrical circuits, and microprocessors, mathematics,
   materials technology, computer-aided engineering, and design. Later,
   course work focuses on both mechanical and electrical analysis and
   design. The major includes two technical electives and two free
   electives and includes a substantial amount of laboratory and project
   work. Teamwork, technical writing, and computer use are emphasized
   throughout the curriculum, which includes the presentation of
   industry-relevant team projects.

   The major will develop well-rounded electrical mechanical engineers as
   lifelong learners with the ability to adapt, grow, and succeed in
   mechatronics, electromechanical engineering environment, or similar
   highly competitive workplace. The required cooperative education
   experience prepares students to step into professional positions after
   graduation and be immediately productive in careers focused on
   mechatronics development, electromechanical system design, and
   analysis, alternative energy, or system engineering.

Get Involved

Activities and Professional Organizations

   Students have an opportunity to participate in regional and national
   design competitions such as the Society of Automotive Engineers (SAE)
   BAJA team, SAE Clean Snowmobile Challenge team, Formula SAE Racing and
   SAE Formula Electric teams. Students are also encouraged to participate
   in the student chapters of professional societies such as the Institute
   of Electrical and Electronics Engineers, the American Society of
   Mechanical Engineers, the Society of Manufacturing Engineers, the
   Society of Woman Engineers, the National Society of Black Engineers,
   Society of Hispanic Professional Engineers, and Society of Automotive
   Engineers.

   Request Info about undergraduate study
   Visit Apply
   Loading...

Curriculum for 2024-2025 for Electrical Mechanical Engineering Technology BS

   Current Students: See Curriculum Requirements
   View Printable Curriculum

Electrical Mechanical Engineering Technology, BS degree, typical course
sequence

              Course             Sem. Cr. Hrs.
   First Year
   CHMG-131
   General Education – Scientific Principles Perspective: General
   Chemistry for Engineers
   This rigorous course is primarily for, but not limited to, engineering
   students. Topics include an introduction to some basic concepts in
   chemistry, stoichiometry, First Law of Thermodynamics, thermochemistry,
   electronic theory of composition and structure, and chemical bonding.
   The lecture is supported by workshop-style problem sessions. Offered in
   traditional and online format. Lecture 3 (Fall, Spring).
   3
   EEET-111
   DC Circuits
   Develops the skills to analyze and design practical DC circuits used in
   electronic devices. Topics include resistance with circuit techniques
   of Ohm's Law; current and voltage division; simplification of series,
   parallel, series-parallel circuits: bridge and ladder networks:
   Kirchhoff's source conversions, branch analysis; Thevenin and Norton
   theorems; superposition theorems and nodal analysis. Inductance and
   capacitance are introduced and transient circuits are studied.
   (Co-requisites: EEET-112 and (MATH-111 or MATH-171 or MATH-181 or
   MATH-181A) or equivalent course.) Lecture 3 (Fall, Spring).
   3
   EEET-112
   DC Circuits Lab
   Develops skills and practice in the design, fabrication, measurement
   and analysis of practical DC circuits used in electronic devices.
   Topics include the measurement relative to: resistance, current, and
   voltage with circuit techniques of Ohm's Law; current and voltage
   division; simplification of series, parallel, series-parallel circuits:
   bridge and ladder networks: Kirchhoff's Laws; power; and transient
   circuit behavior. Laboratory verification of DC analytical and
   techniques is included. Printed circuit board (PCB) design,
   fabrication, and assembly is also included emphasizing the development
   of soldering skill proficiency. (Co-requisites: EEET-111 or equivalent
   course.) Lab 2 (Fall, Spring).
   1
   MATH-171
   General Education – Mathematical Perspective A: Calculus A
   This is the first course in a three-course sequence (COS-MATH-171,
   -172, -173). This course includes a study of precalculus, polynomial,
   rational, exponential, logarithmic and trigonometric functions,
   continuity, and differentiability. Limits of functions are used to
   study continuity and differentiability. The study of the derivative
   includes the definition, basic rules, and implicit differentiation.
   Applications of the derivative include optimization and related-rates
   problems. (Prerequisites: Completion of the math placement exam or C-
   or better in MATH-111 or C- or better in ((NMTH-260 or NMTH-272 or
   NMTH-275) and NMTH-220) or equivalent course.) Lecture 5 (Fall,
   Spring).
   3
   MATH-172
   General Education – Mathematical Perspective B: Calculus B
   This is the second course in three-course sequence (COS-MATH-171, -172,
   -173). The course includes Riemann sums, the Fundamental Theorem of
   Calculus, techniques of integration, and applications of the definite
   integral. The techniques of integration include substitution and
   integration by parts. The applications of the definite integral include
   areas between curves, and the calculation of volume. (Prerequisites: C-
   or better in MATH-171 or 1016-171T or 1016-281 or 1016-231 or
   equivalent course.) Lecture 5 (Fall, Spring).
   3
   MCET-101
   Fundamentals of Engineering
   Students will apply engineering problem solving methods used in
   industry to complete projects involving engineering topics such as
   mechanics, circuits, robotics, and thermodynamics. Software tools are
   used to model their designs, perform design calculations, collect and
   analyze data. Finally, students will present their work professionally
   using both written and oral communication software. The goal of the
   class is to have students become familiar with the many aspects of
   mechanical engineering through hands on, experiential learning and
   prepares them to work professionally and effectively in a team setting
   both in college and in industry. (This class is restricted to MCET-BS
   or MECA-BS or RMET-BS or EEET-BS or CPET-BS or ENGTEH-UND students.)
   Lecture 3, Recitation 1 (Fall, Spring).
   3
   MCET-110
   Foundations of Metals
   This class explores the commonly used engineering metals.
   Differentiation of materials, with a focus on metals, is made based on
   an understanding and control of fundamental material properties. This
   knowledge of properties and materials then informs analysis of which
   metals are selected for various applications. Corrosion and its
   mitigation are explored. Materials selection software and internet
   resources are used. (Prerequisites: This class is restricted to MCET-BS
   or MECA-BS or RMET-BS or EMET-BS or ENGTEH-UND students. Corequisites:
   MCET-111 or equivalent course.) Lecture 2 (Fall, Spring).
   2
   MCET-111
   Characterization of Metals Lab
   This lab class accompanies MCET-110 Foundations of Materials. An
   emphasis is placed on determining material, primarily metals,
   properties though experimentation and references, and analyzing why a
   particular material was selected for an application based on the
   materials properties. Differentiation of materials families is made
   based on properties. A variety of discovery activities are used to
   explore the world of metals, including labs of various types, materials
   selection software, and internet resources. (Co-requisites: MCET-110 or
   equivalent course.) Lab 1 (Fall, Spring).
   1
   MFET-105
   Machine Tools Lab
   1
   MFET-120
   Manufacturing Processes
   3
   PHYS-111
   General Education – Natural Science Inquiry Perspective: College
   Physics I
   This is an introductory course in algebra-based physics focusing on
   mechanics and waves. Topics include kinematics, planar motion, Newton’s
   laws, gravitation; rotational kinematics and dynamics; work and energy;
   momentum and impulse; conservation laws; simple harmonic motion; waves;
   data presentation/analysis and error propagation. The course is taught
   using both traditional lectures and a workshop format that integrates
   material traditionally found in separate lecture, recitation, and
   laboratory settings. Attendance at the scheduled evening sessions of
   this class is required for exams. There will be 2 or 3 of these evening
   exams during the semester. Competency in algebra, geometry and
   trigonometry is required. Lab 4, Lecture 2 (Fall, Spring, Summer).
   4
   UWRT-150
   General Education – First-Year Writing: FYW: Writing Seminar (WI)
   Writing Seminar is a three-credit course limited to 19 students per
   section. The course is designed to develop first-year students’
   proficiency in analytical and rhetorical reading and writing, and
   critical thinking. Students will read, understand, and interpret a
   variety of non-fiction texts representing different cultural
   perspectives and/or academic disciplines. These texts are designed to
   challenge students intellectually and to stimulate their writing for a
   variety of contexts and purposes. Through inquiry-based assignment
   sequences, students will develop academic research and literacy
   practices that will be further strengthened throughout their academic
   careers. Particular attention will be given to the writing process,
   including an emphasis on teacher-student conferencing, critical
   self-assessment, class discussion, peer review, formal and informal
   writing, research, and revision. Small class size promotes frequent
   student-instructor and student-student interaction. The course also
   emphasizes the principles of intellectual property and academic
   integrity for both current academic and future professional writing.
   Lecture 3 (Fall, Spring, Summer).
   3
   YOPS-10
   RIT 365: RIT Connections
   RIT 365 students participate in experiential learning opportunities
   designed to launch them into their career at RIT, support them in
   making multiple and varied connections across the university, and
   immerse them in processes of competency development. Students will plan
   for and reflect on their first-year experiences, receive feedback, and
   develop a personal plan for future action in order to develop
   foundational self-awareness and recognize broad-based professional
   competencies. (This class is restricted to incoming 1st year or global
   campus students.) Lecture 1 (Fall, Spring).
   0
   Choose one of the following:
   3
      COMM-142
    General Education – Elective: Introduction to Technical Communication
   This course introduces students to current best practices in written
   and visual technical communication including writing effective email,
   short and long technical reports and presentations, developing
   instructional material, and learning the principles and practices of
   ethical technical communication. Course activities focus on engineering
   and scientific technical documents. Lecture 3 (Fall, Spring).

      COMM-221
    General Education – Elective: Public Relations Writing
   This course covers a variety of forms of writing for public relations,
   including news releases, newsletters, backgrounders, public service
   announcements, magazine queries, interviews, coverage memos, media
   alerts, features, trade press releases, and public presentations.
   Students will write for a variety of media including print, broadcast,
   and the web. Lecture 3 (Fall, Spring).

      COMM-253
    General Education – Elective: Communication
   An introduction to communication contexts and processes emphasizing
   both conceptual and practical dimensions. Participants engage in public
   speaking, small group problem solving and leadership, and writing
   exercises while acquiring theoretical background appropriate to
   understanding these skills. Lecture 3 (Fall, Spring).

      ENGL-360
    General Education – Elective: Written Argument

      ENGL-361
    General Education – Elective: Technical Writing

      TCOM-325
    General Education – Elective: Business Communication

   Second Year
   CPET-121
   General Education – Elective: Computational Problem Solving I
   This is the first course in a two-course sequence in computational
   problem solving of engineering and scientific problems. The problems
   solved will stress the application of sequence, selection, repetitive,
   invocation operations, and arrays. The development of proper testing
   procedures to ensure computational accuracy will be stressed. Students,
   upon successful completion of this course, will be able to analyze
   introductory engineering and scientific problems, design, code, test,
   and document procedural software solutions. Lec/Lab 4 (Fall, Spring).
   3
   EEET-121
   AC Circuits
   Develops the skills to analyze and design practical AC circuits used in
   electrical systems. Topics include network theorems, reactance and
   impedance, AC power and power factor, resonance, maximum power
   transfer, frequency response, and bandwidth. (Prerequisites: C- or
   better in (EEET-111 and EEET-112) or 0609-215 or equivalent courses.
   Co-requisites: EEET-122 and MATH-171 or MATH-181 or MATH-181A.) Lecture
   3 (Fall, Spring).
   3
   EEET-122
   AC Circuits Lab
   Develops skills and practice in the design, fabrication, measurement,
   and analysis of practical AC circuits used in electrical systems.
   Topics include network theorems, reactance and impedance, AC power and
   power factor, resonance, maximum power transfer, frequency response,
   and bandwidth. (Co-requisites: EEET-121 or equivalent courses.) Lab 2
   (Fall, Spring).
   1
   EEET-225
   Electronic Amplifiers
   Develop the skills to analyze and design electronic circuits. Topics
   include: semiconductor theory, diodes, transistors and multiple
   operational amplifier applications including: current sources, strain
   gauge amplifiers, differential amplifiers and comparator circuits.
   (Prerequisites: EEET-121 and EEET-122 or 0609-411 or equivalent course.
   Co-Requisites: EEET-226 or equivalent course.) Lecture 2 (Spring).
   2
   EEET-226
   Electronic Amplifiers Laboratory
   Students, upon completion of this course, will be able to use
   laboratory tools to analyze and troubleshoot electronic circuits. They
   will be able to operate a power supply, multi-meter, function
   generator, and oscilloscope. (EEET-225 Coreq) Lab 2 (Spring).
   1
   EMET-290
   Mechanics for Mechatronics
   3
   ENGT-95
   Career Seminar
   This course is an introduction to the cooperative educational program
   at RIT, the programs in the department, and RIT resources. Topics
   include engineering technology vs. engineering, review of resources
   available at RIT, the cooperative education placement process, and the
   ethical expectations of employers for co-op students and RIT during a
   job search. Seminar 1 (Fall, Spring).
   0
   MATH-211
   General Education – Elective: Elements of Multivariable Calculus and
   Differential Equations
   This course includes an introduction to differential equations, Laplace
   transforms, numerical methods in differential equations, and the
   calculus of functions of two variables. The emphasis is on the
   application of these topics to problems in engineering technology.
   (Prerequisites: C- or better MATH-172 or MATH-182 or MATH 182A or
   1016-232 or equivalent course.) Lecture 3 (Fall, Spring).
   3
   MCET-150
   Engineering Communication and Tolerancing
   A course that integrates basic engineering techniques. Topics will
   emphasize the design and communication of components through the use of
   hand sketching, solid modeling, dimensioning, tolerancing, and current
   GD&T standards. Students will be expected to design, build, inspect,
   and integrate GD&T into designs. (This class is restricted to MCET-BS
   or MECA-BS or RMET-BS or EMET-BS or ENGTEH-UND students.) Lecture 3,
   Recitation 1 (Spring).
   3
   MCET-220
   Principles of Statics
   This course provides an introduction to the analysis and design of
   structures and machines. Students learn to calculate unknown forces
   using the concept of equilibrium and free body diagrams and to
   calculate simple stresses and deflections for axially loaded members.
   Topics include forces, moments, free body diagrams, equilibrium,
   friction, stress, strain, and deflection. Examples are drawn from
   mechanical, manufacturing, and civil engineering technology. Lecture 3,
   Recitation 1 (Fall, Spring).
   3
   PHYS-112
   General Education – Elective: College Physics II
   This course is an introduction to algebra-based physics focusing on
   thermodynamics, electricity and magnetism, and elementary topics in
   modern physics. Topics include heat and temperature, laws of
   thermodynamics, electric and magnetic forces and fields, DC and AC
   electrical circuits, electromagnetic induction, the concept of the
   photon, and the Bohr model of the atom. The course is taught using both
   traditional lectures and a workshop format that integrates material
   traditionally found in separate lecture, recitation, and laboratory
   settings. Attendance at the scheduled evening sessions of this class is
   required for exams. There will be 2 or 3 of these evening exams during
   the semester. (Prerequisites: PHYS-111 or PHYS-211 or equivalent
   course.) Lab 4, Lecture 2 (Fall, Spring).
   4
   STAT-145
   General Education – Elective: Introduction to Statistics I
   This course introduces statistical methods of extracting meaning from
   data, and basic inferential statistics. Topics covered include data and
   data integrity, exploratory data analysis, data visualization, numeric
   summary measures, the normal distribution, sampling distributions,
   confidence intervals, and hypothesis testing. The emphasis of the
   course is on statistical thinking rather than computation. Statistical
   software is used. (Prerequisites: Any 100 level MATH course, or
   NMTH-260 or NMTH-272 or NMTH-275 or (NMTH-250 with a C- or better) or a
   Math Placement Exam score of at least 35.) Lecture 3 (Fall, Spring,
   Summer).
   3

   General Education – Artistic Perspective
   3
   Third Year
   EEET-247
   Microprocessors and Digital Systems
   Applications of a contemporary digital designs and microcontrollers
   will be used to teach students digital logic, microcontroller
   programming, and microcontroller interfacing. This course is intended
   as a service course for non-electrical majors who have not taken the
   digital fundamentals course. (Prerequisites: (MATH-111 or MATH-171 or
   MATH-181 or MATH-181A) or (NMTH-260 or NMTH-272 or NMTH-275 and
   NMTH-220) and CPET-121 or equivalent courses. Co-requisites: EEET-248
   or equivalent course.) Lecture 2 (Fall).
   2
   EEET-248
   Microprocessors and Digital Systems Laboratory
   This laboratory covers applications of microcontroller fundamentals.
   Topics include digital logic, microcontroller programming and
   interfacing. The activities for this course utilize typical
   microcontroller and application hardware. (Prerequisites: MATH-111 or
   MATH-171 or MATH-181 or MATH-181A and CPET-121 or equivalent course.
   Co-requisites: EEET-247 or equivalent course.) Lab 2 (Fall).
   1
   EMET-499
   EMET Co-op (spring, summer)
   0
   MCET-210
   Foundations of Non-Metallic Materials
   This course will cover the process of selecting a best material for a
   given design application with a focus on polymeric materials. To
   support this process material families, strengthening mechanisms, and
   degradation mechanisms and prevention will be studied. The materials
   selection process will include economic, ecological, and ethical
   considerations. An emphasis is placed on the interrelationship of
   structure, process, and properties. This class expands upon concepts
   presented in MCET-110. (Prerequisites: C- or better in (CHMG-131 or
   CHMG-141 or CHEM-151) and (MCET-110 and MCET-111) or (NETS-110 and
   NETS-111) or (MECE-304 or MECE-305 and MECE-306) or equivalent courses.
   Corequisite: MCET-211 or equivalent course.) Lecture 2 (Fall, Spring).
   2
   MCET-211
   Characterization of Non-Metallic Materials Lab
   This course will consist of laboratory experiences which focus on
   property characterization of the properties of polymeric materials.
   (Co-requisites: MCET-210 or equivalent course.) Lab 2 (Fall, Spring).
   1
   MFET-340
   Automation Control Systems
   2
   MFET-341
   Automation Control Systems Lab
   1
   STAT-146
   General Education – Elective: Introduction to Statistics II
   This course is an elementary introduction to the topics of regression
   and analysis of variance. The statistical software package Minitab will
   be used to reinforce these techniques. The focus of this course is on
   business applications. This is a general introductory statistics course
   and is intended for a broad range of programs. (Prerequisites: STAT-145
   or equivalent course.) Lecture 6 (Fall, Spring, Summer).
   4

   General Education – Ethical Perspective
   3
   Fourth Year
   EEET-241
   Electrical Machines and Transformers
   Develops the knowledge and ability to analyze and specify motors,
   generators, and transformers for use in systems such as wind turbines
   and electric vehicles. Topics include efficiency, energy conservation,
   power factor, magnetism, electro-magnetic force, fields, armatures,
   commutators, rotors, stators, brushes, starters, controllers, DC
   machines, AC motors, alternators, single phase and three phase dynamos,
   three phase circuits, phasors, transformer properties, isolation,
   efficiency, and voltage regulation. (Prerequisites: (EEET-115 and
   EEET-116) or (EEET-121 and EEET-122) or (EEET-215 and EEET-216) or
   equivalent courses. Co-requisites: EEET-242 or equivalent course.)
   Lecture 2 (Fall, Spring).
   2
   EEET-242
   Electrical Machines and Transformers Lab
   Provides experience with motors, generators, and transformers. Topics
   include power factor, magnetism, electro-magnetic force, fields,
   armatures, commutators, rotors, stators, brushes, starters,
   controllers, DC machines, AC motors, alternators, single phase and
   three phase dynamos, three phase circuits, phasors, transformer
   properties, isolation, efficiency, and voltage regulation.
   (Prerequisites: (EEET-115 and EEET-116) or (EEET-121 and EEET-122) or
   (EEET-215 and EEET-216) or equivalent courses. Co-requisite: EEET-241
   or equivalent course.) Lab 2 (Fall, Spring).
   1
   EEET-427
   Control Systems
   Develops the knowledge of control system concepts and applies them to
   electromechanical systems. Systems are characterized and modeled using
   linear systems methods, focused with a controls perspective. Impulse
   responses, step responses, and transfer functions are reviewed.
   Principles of stability and damping are developed and applied to the
   specification and design of open and closed loop compensators to
   deliver specific input-output performance. Laboratory exercises are
   designed to illustrate concepts, reinforce analysis and design skills,
   and develop instrumentation techniques associated with the lecture
   topics. Student must register for BOTH the Lecture and Laboratory
   components of this course. (Prerequisites: (MATH-211 or MATH-231) and
   ((CPET-253 or (CPET-251 and CPET-252)) or ((EEET-247 and EEET-248) or
   (CPET-133)) or equivalent courses.) Lab 2, Lecture 3 (Fall, Spring).
   4
   EMET-419
   Experimental Methods for EMET (WI)
   3
   EMET-499
   EMET Co-op (summer)
   0
   MCET-430
   Thermal Fluid Science I
   This course provides an introduction to the properties of pure
   substances, gas laws, first law of thermodynamics, along with an
   introduction to fluid mechanics are studied and applied. Students learn
   through an integrated presentation of thermodynamics and fluid
   mechanics how to approach and solve reasonable thermal-fluid problems.
   Topics include the first law of thermodynamics, specific heat, ideal
   gases, work, energy, lumped systems, fluid statics, conservation of
   mass/energy, laminar, and turbulent flow. Examples are drawn from
   mechanical, and electrical mechanical engineering technology.
   (Prerequisites: Grade of C- or better in PHYS-112 or PHYS-212 or
   (PHYS-208 and PHYS-209) or equivalent courses.) Lecture 3, Recitation 1
   (Fall, Spring).
   3
   MCET-530
   Thermal Fluid Science II
   This course provides an in-depth coverage on the application of the
   first and second law of thermodynamics and conservation principles,
   mass and energy, to the analysis of open systems and power cycles,
   including refrigeration, heat pump and power cycles. It also introduces
   the fundamentals of heat transfer theory, conduction, radiation, free
   and forced convection, and its application to heat exchangers including
   free surface and conduit flow. Case studies based on real-world thermal
   systems are used to illustrate the connection between these
   interdisciplinary subjects. (Prerequisites: C- or better in MCET-430 or
   (MECE-210 and MECE-211) or equivalent course.) Lecture 3, Recitation 1
   (Fall, Spring).
   3
   MFET-436
   Engineering Economics
   3

   General Education – Global Perspective
   3

   General Education – Elective
   3

   General Education – Immersion 1, 2
   6
   Fifth Year
   EMET-499
   EMET Co-op (fall)
   0

   General Education – Social Perspective
   3

   General Education – Immersion 3
   3

   Open Electives
   6

   Technical Elective
   3
   Total Semester Credit Hours
   127

   Please see General Education Curriculum (GE) for more information.

   (WI) Refers to a writing intensive course within the major.

   Please see Wellness Education Requirement for more information.
   Students completing bachelor's degrees are required to complete two
   different Wellness courses.


Accelerated Bachelor’s/Master’s option

   Accelerated dual degree options are for undergraduate students with
   outstanding academic records. Upon acceptance, well-qualified
   undergraduate students can begin graduate study before completing their
   BS degree, shortening the time it takes to earn both degrees. Students
   should consult an academic adviser for more information.

Electrical Mechanical Engineering Technology, BS degree/Manufacturing and
Mechanical Systems Integration, MS degree, typical course sequence

              Course             Sem. Cr. Hrs.
   First Year
   CHMG-131
   General Education – Scientific Principles Perspective: General
   Chemistry for Engineers
   This rigorous course is primarily for, but not limited to, engineering
   students. Topics include an introduction to some basic concepts in
   chemistry, stoichiometry, First Law of Thermodynamics, thermochemistry,
   electronic theory of composition and structure, and chemical bonding.
   The lecture is supported by workshop-style problem sessions. Offered in
   traditional and online format. Lecture 3 (Fall, Spring).
   3
   EEET-111
   DC Circuits
   Develops the skills to analyze and design practical DC circuits used in
   electronic devices. Topics include resistance with circuit techniques
   of Ohm's Law; current and voltage division; simplification of series,
   parallel, series-parallel circuits: bridge and ladder networks:
   Kirchhoff's source conversions, branch analysis; Thevenin and Norton
   theorems; superposition theorems and nodal analysis. Inductance and
   capacitance are introduced and transient circuits are studied.
   (Co-requisites: EEET-112 and (MATH-111 or MATH-171 or MATH-181 or
   MATH-181A) or equivalent course.) Lecture 3 (Fall, Spring).
   3
   EEET-112
   DC Circuits Lab
   Develops skills and practice in the design, fabrication, measurement
   and analysis of practical DC circuits used in electronic devices.
   Topics include the measurement relative to: resistance, current, and
   voltage with circuit techniques of Ohm's Law; current and voltage
   division; simplification of series, parallel, series-parallel circuits:
   bridge and ladder networks: Kirchhoff's Laws; power; and transient
   circuit behavior. Laboratory verification of DC analytical and
   techniques is included. Printed circuit board (PCB) design,
   fabrication, and assembly is also included emphasizing the development
   of soldering skill proficiency. (Co-requisites: EEET-111 or equivalent
   course.) Lab 2 (Fall, Spring).
   1
   MATH-171
   General Education – Mathematical Perspective A: Calculus A
   This is the first course in a three-course sequence (COS-MATH-171,
   -172, -173). This course includes a study of precalculus, polynomial,
   rational, exponential, logarithmic and trigonometric functions,
   continuity, and differentiability. Limits of functions are used to
   study continuity and differentiability. The study of the derivative
   includes the definition, basic rules, and implicit differentiation.
   Applications of the derivative include optimization and related-rates
   problems. (Prerequisites: Completion of the math placement exam or C-
   or better in MATH-111 or C- or better in ((NMTH-260 or NMTH-272 or
   NMTH-275) and NMTH-220) or equivalent course.) Lecture 5 (Fall,
   Spring).
   3
   MATH-172
   General Education – Mathematical Perspective B: Calculus B
   This is the second course in three-course sequence (COS-MATH-171, -172,
   -173). The course includes Riemann sums, the Fundamental Theorem of
   Calculus, techniques of integration, and applications of the definite
   integral. The techniques of integration include substitution and
   integration by parts. The applications of the definite integral include
   areas between curves, and the calculation of volume. (Prerequisites: C-
   or better in MATH-171 or 1016-171T or 1016-281 or 1016-231 or
   equivalent course.) Lecture 5 (Fall, Spring).
   3
   MCET-101
   Fundamentals of Engineering
   Students will apply engineering problem solving methods used in
   industry to complete projects involving engineering topics such as
   mechanics, circuits, robotics, and thermodynamics. Software tools are
   used to model their designs, perform design calculations, collect and
   analyze data. Finally, students will present their work professionally
   using both written and oral communication software. The goal of the
   class is to have students become familiar with the many aspects of
   mechanical engineering through hands on, experiential learning and
   prepares them to work professionally and effectively in a team setting
   both in college and in industry. (This class is restricted to MCET-BS
   or MECA-BS or RMET-BS or EEET-BS or CPET-BS or ENGTEH-UND students.)
   Lecture 3, Recitation 1 (Fall, Spring).
   3
   MCET-110
   Foundations of Metals
   This class explores the commonly used engineering metals.
   Differentiation of materials, with a focus on metals, is made based on
   an understanding and control of fundamental material properties. This
   knowledge of properties and materials then informs analysis of which
   metals are selected for various applications. Corrosion and its
   mitigation are explored. Materials selection software and internet
   resources are used. (Prerequisites: This class is restricted to MCET-BS
   or MECA-BS or RMET-BS or EMET-BS or ENGTEH-UND students. Corequisites:
   MCET-111 or equivalent course.) Lecture 2 (Fall, Spring).
   2
   MCET-111
   Characterization of Metals Lab
   This lab class accompanies MCET-110 Foundations of Materials. An
   emphasis is placed on determining material, primarily metals,
   properties though experimentation and references, and analyzing why a
   particular material was selected for an application based on the
   materials properties. Differentiation of materials families is made
   based on properties. A variety of discovery activities are used to
   explore the world of metals, including labs of various types, materials
   selection software, and internet resources. (Co-requisites: MCET-110 or
   equivalent course.) Lab 1 (Fall, Spring).
   1
   MFET-105
   Machine Tools Lab
   1
   MFET-120
   Manufacturing Processes
   3
   PHYS-111
   General Education – Natural Science Inquiry Perspective: College
   Physics I
   This is an introductory course in algebra-based physics focusing on
   mechanics and waves. Topics include kinematics, planar motion, Newton’s
   laws, gravitation; rotational kinematics and dynamics; work and energy;
   momentum and impulse; conservation laws; simple harmonic motion; waves;
   data presentation/analysis and error propagation. The course is taught
   using both traditional lectures and a workshop format that integrates
   material traditionally found in separate lecture, recitation, and
   laboratory settings. Attendance at the scheduled evening sessions of
   this class is required for exams. There will be 2 or 3 of these evening
   exams during the semester. Competency in algebra, geometry and
   trigonometry is required. Lab 4, Lecture 2 (Fall, Spring, Summer).
   4
   UWRT-150
   General Education – First Year Writing: FYW: Writing Seminar (WI)
   Writing Seminar is a three-credit course limited to 19 students per
   section. The course is designed to develop first-year students’
   proficiency in analytical and rhetorical reading and writing, and
   critical thinking. Students will read, understand, and interpret a
   variety of non-fiction texts representing different cultural
   perspectives and/or academic disciplines. These texts are designed to
   challenge students intellectually and to stimulate their writing for a
   variety of contexts and purposes. Through inquiry-based assignment
   sequences, students will develop academic research and literacy
   practices that will be further strengthened throughout their academic
   careers. Particular attention will be given to the writing process,
   including an emphasis on teacher-student conferencing, critical
   self-assessment, class discussion, peer review, formal and informal
   writing, research, and revision. Small class size promotes frequent
   student-instructor and student-student interaction. The course also
   emphasizes the principles of intellectual property and academic
   integrity for both current academic and future professional writing.
   Lecture 3 (Fall, Spring, Summer).
   3
   YOPS-10
   RIT 365: RIT Connections
   RIT 365 students participate in experiential learning opportunities
   designed to launch them into their career at RIT, support them in
   making multiple and varied connections across the university, and
   immerse them in processes of competency development. Students will plan
   for and reflect on their first-year experiences, receive feedback, and
   develop a personal plan for future action in order to develop
   foundational self-awareness and recognize broad-based professional
   competencies. (This class is restricted to incoming 1st year or global
   campus students.) Lecture 1 (Fall, Spring).
   0
   Choose one of the following:
   3
      COMM-142
    General Education – Elective: Introduction to Technical Communication
   This course introduces students to current best practices in written
   and visual technical communication including writing effective email,
   short and long technical reports and presentations, developing
   instructional material, and learning the principles and practices of
   ethical technical communication. Course activities focus on engineering
   and scientific technical documents. Lecture 3 (Fall, Spring).

      COMM-221
    General Education – Elective: Public Relations Writing
   This course covers a variety of forms of writing for public relations,
   including news releases, newsletters, backgrounders, public service
   announcements, magazine queries, interviews, coverage memos, media
   alerts, features, trade press releases, and public presentations.
   Students will write for a variety of media including print, broadcast,
   and the web. Lecture 3 (Fall, Spring).

      COMM-253
    General Education – Elective: Communication
   An introduction to communication contexts and processes emphasizing
   both conceptual and practical dimensions. Participants engage in public
   speaking, small group problem solving and leadership, and writing
   exercises while acquiring theoretical background appropriate to
   understanding these skills. Lecture 3 (Fall, Spring).

      ENGL-361
    General Education – Elective: Technical Writing

      ENGL-360
    General Education – Elective: Written Argument

      TCOM-325
    General Education – Elective: Business Communication

   Second Year
   CPET-121
   General Education – Elective: Computational Problem Solving I
   This is the first course in a two-course sequence in computational
   problem solving of engineering and scientific problems. The problems
   solved will stress the application of sequence, selection, repetitive,
   invocation operations, and arrays. The development of proper testing
   procedures to ensure computational accuracy will be stressed. Students,
   upon successful completion of this course, will be able to analyze
   introductory engineering and scientific problems, design, code, test,
   and document procedural software solutions. Lec/Lab 4 (Fall, Spring).
   3
   EEET-121
   AC Circuits
   Develops the skills to analyze and design practical AC circuits used in
   electrical systems. Topics include network theorems, reactance and
   impedance, AC power and power factor, resonance, maximum power
   transfer, frequency response, and bandwidth. (Prerequisites: C- or
   better in (EEET-111 and EEET-112) or 0609-215 or equivalent courses.
   Co-requisites: EEET-122 and MATH-171 or MATH-181 or MATH-181A.) Lecture
   3 (Fall, Spring).
   3
   EEET-122
   AC Circuits Lab
   Develops skills and practice in the design, fabrication, measurement,
   and analysis of practical AC circuits used in electrical systems.
   Topics include network theorems, reactance and impedance, AC power and
   power factor, resonance, maximum power transfer, frequency response,
   and bandwidth. (Co-requisites: EEET-121 or equivalent courses.) Lab 2
   (Fall, Spring).
   1
   EEET-225
   Electronic Amplifiers
   Develop the skills to analyze and design electronic circuits. Topics
   include: semiconductor theory, diodes, transistors and multiple
   operational amplifier applications including: current sources, strain
   gauge amplifiers, differential amplifiers and comparator circuits.
   (Prerequisites: EEET-121 and EEET-122 or 0609-411 or equivalent course.
   Co-Requisites: EEET-226 or equivalent course.) Lecture 2 (Spring).
   2
   EEET-226
   Electronic Amplifiers Laboratory
   Students, upon completion of this course, will be able to use
   laboratory tools to analyze and troubleshoot electronic circuits. They
   will be able to operate a power supply, multi-meter, function
   generator, and oscilloscope. (EEET-225 Coreq) Lab 2 (Spring).
   1
   EMET-290
   Mechanics for Mechatronics
   3
   EMET-499
   EMET Co-op (summer)
   0
   ENGT-95
   Career Seminar
   This course is an introduction to the cooperative educational program
   at RIT, the programs in the department, and RIT resources. Topics
   include engineering technology vs. engineering, review of resources
   available at RIT, the cooperative education placement process, and the
   ethical expectations of employers for co-op students and RIT during a
   job search. Seminar 1 (Fall, Spring).
   0
   MATH-211
   General Education – Elective: Elements of Multivariable Calculus and
   Differential Equations
   This course includes an introduction to differential equations, Laplace
   transforms, numerical methods in differential equations, and the
   calculus of functions of two variables. The emphasis is on the
   application of these topics to problems in engineering technology.
   (Prerequisites: C- or better MATH-172 or MATH-182 or MATH 182A or
   1016-232 or equivalent course.) Lecture 3 (Fall, Spring).
   3
   MCET-150
   Engineering Communication and Tolerancing
   A course that integrates basic engineering techniques. Topics will
   emphasize the design and communication of components through the use of
   hand sketching, solid modeling, dimensioning, tolerancing, and current
   GD&T standards. Students will be expected to design, build, inspect,
   and integrate GD&T into designs. (This class is restricted to MCET-BS
   or MECA-BS or RMET-BS or EMET-BS or ENGTEH-UND students.) Lecture 3,
   Recitation 1 (Spring).
   3
   MCET-220
   Principles of Statics
   This course provides an introduction to the analysis and design of
   structures and machines. Students learn to calculate unknown forces
   using the concept of equilibrium and free body diagrams and to
   calculate simple stresses and deflections for axially loaded members.
   Topics include forces, moments, free body diagrams, equilibrium,
   friction, stress, strain, and deflection. Examples are drawn from
   mechanical, manufacturing, and civil engineering technology. Lecture 3,
   Recitation 1 (Fall, Spring).
   3
   PHYS-112
   General Education – Elective: College Physics II
   This course is an introduction to algebra-based physics focusing on
   thermodynamics, electricity and magnetism, and elementary topics in
   modern physics. Topics include heat and temperature, laws of
   thermodynamics, electric and magnetic forces and fields, DC and AC
   electrical circuits, electromagnetic induction, the concept of the
   photon, and the Bohr model of the atom. The course is taught using both
   traditional lectures and a workshop format that integrates material
   traditionally found in separate lecture, recitation, and laboratory
   settings. Attendance at the scheduled evening sessions of this class is
   required for exams. There will be 2 or 3 of these evening exams during
   the semester. (Prerequisites: PHYS-111 or PHYS-211 or equivalent
   course.) Lab 4, Lecture 2 (Fall, Spring).
   4
   STAT-145
   General Education – Elective: Introduction to Statistics I
   This course introduces statistical methods of extracting meaning from
   data, and basic inferential statistics. Topics covered include data and
   data integrity, exploratory data analysis, data visualization, numeric
   summary measures, the normal distribution, sampling distributions,
   confidence intervals, and hypothesis testing. The emphasis of the
   course is on statistical thinking rather than computation. Statistical
   software is used. (Prerequisites: Any 100 level MATH course, or
   NMTH-260 or NMTH-272 or NMTH-275 or (NMTH-250 with a C- or better) or a
   Math Placement Exam score of at least 35.) Lecture 3 (Fall, Spring,
   Summer).
   3

   General Education – Artistic Perspective
   3
   Third Year
   EEET-247
   Microprocessors and Digital Systems
   Applications of a contemporary digital designs and microcontrollers
   will be used to teach students digital logic, microcontroller
   programming, and microcontroller interfacing. This course is intended
   as a service course for non-electrical majors who have not taken the
   digital fundamentals course. (Prerequisites: (MATH-111 or MATH-171 or
   MATH-181 or MATH-181A) or (NMTH-260 or NMTH-272 or NMTH-275 and
   NMTH-220) and CPET-121 or equivalent courses. Co-requisites: EEET-248
   or equivalent course.) Lecture 2 (Fall).
   2
   EEET-248
   Microprocessors and Digital Systems Laboratory
   This laboratory covers applications of microcontroller fundamentals.
   Topics include digital logic, microcontroller programming and
   interfacing. The activities for this course utilize typical
   microcontroller and application hardware. (Prerequisites: MATH-111 or
   MATH-171 or MATH-181 or MATH-181A and CPET-121 or equivalent course.
   Co-requisites: EEET-247 or equivalent course.) Lab 2 (Fall).
   1
   EMET-419
   Experimental Methods for EMET (WI-PR)
   3
   EMET-499
   EMET Co-op (summer)
   0
   MCET-210
   Foundations of Non-Metallic Materials
   This course will cover the process of selecting a best material for a
   given design application with a focus on polymeric materials. To
   support this process material families, strengthening mechanisms, and
   degradation mechanisms and prevention will be studied. The materials
   selection process will include economic, ecological, and ethical
   considerations. An emphasis is placed on the interrelationship of
   structure, process, and properties. This class expands upon concepts
   presented in MCET-110. (Prerequisites: C- or better in (CHMG-131 or
   CHMG-141 or CHEM-151) and (MCET-110 and MCET-111) or (NETS-110 and
   NETS-111) or (MECE-304 or MECE-305 and MECE-306) or equivalent courses.
   Corequisite: MCET-211 or equivalent course.) Lecture 2 (Fall, Spring).
   2
   MCET-211
   Characterization of Non-Metallic Materials Lab
   This course will consist of laboratory experiences which focus on
   property characterization of the properties of polymeric materials.
   (Co-requisites: MCET-210 or equivalent course.) Lab 2 (Fall, Spring).
   1
   MCET-430
   Thermal Fluid Science I
   This course provides an introduction to the properties of pure
   substances, gas laws, first law of thermodynamics, along with an
   introduction to fluid mechanics are studied and applied. Students learn
   through an integrated presentation of thermodynamics and fluid
   mechanics how to approach and solve reasonable thermal-fluid problems.
   Topics include the first law of thermodynamics, specific heat, ideal
   gases, work, energy, lumped systems, fluid statics, conservation of
   mass/energy, laminar, and turbulent flow. Examples are drawn from
   mechanical, and electrical mechanical engineering technology.
   (Prerequisites: Grade of C- or better in PHYS-112 or PHYS-212 or
   (PHYS-208 and PHYS-209) or equivalent courses.) Lecture 3, Recitation 1
   (Fall, Spring).
   3
   MCET-530
   Thermal Fluid Science II
   This course provides an in-depth coverage on the application of the
   first and second law of thermodynamics and conservation principles,
   mass and energy, to the analysis of open systems and power cycles,
   including refrigeration, heat pump and power cycles. It also introduces
   the fundamentals of heat transfer theory, conduction, radiation, free
   and forced convection, and its application to heat exchangers including
   free surface and conduit flow. Case studies based on real-world thermal
   systems are used to illustrate the connection between these
   interdisciplinary subjects. (Prerequisites: C- or better in MCET-430 or
   (MECE-210 and MECE-211) or equivalent course.) Lecture 3, Recitation 1
   (Fall, Spring).
   3
   MFET-650
   Manufacturing and Mechanical Systems Fundamentals (Counts as
   Undergraduate Technical Elective)
   3
   MFET-730
   Six Sigma for Design and Manufacturing
   3
   STAT-146
   General Education – Elective: Introduction to Statistics II
   This course is an elementary introduction to the topics of regression
   and analysis of variance. The statistical software package Minitab will
   be used to reinforce these techniques. The focus of this course is on
   business applications. This is a general introductory statistics course
   and is intended for a broad range of programs. (Prerequisites: STAT-145
   or equivalent course.) Lecture 6 (Fall, Spring, Summer).
   4

   General Education – Ethical Perspective
   3

   MMET Concentration Course (Counts as Undergraduate Open Elective)
   3
   Fourth Year
   EEET-241
   Electrical Machines and Transformers
   Develops the knowledge and ability to analyze and specify motors,
   generators, and transformers for use in systems such as wind turbines
   and electric vehicles. Topics include efficiency, energy conservation,
   power factor, magnetism, electro-magnetic force, fields, armatures,
   commutators, rotors, stators, brushes, starters, controllers, DC
   machines, AC motors, alternators, single phase and three phase dynamos,
   three phase circuits, phasors, transformer properties, isolation,
   efficiency, and voltage regulation. (Prerequisites: (EEET-115 and
   EEET-116) or (EEET-121 and EEET-122) or (EEET-215 and EEET-216) or
   equivalent courses. Co-requisites: EEET-242 or equivalent course.)
   Lecture 2 (Fall, Spring).
   2
   EEET-242
   Electrical Machines and Transformers Lab
   Provides experience with motors, generators, and transformers. Topics
   include power factor, magnetism, electro-magnetic force, fields,
   armatures, commutators, rotors, stators, brushes, starters,
   controllers, DC machines, AC motors, alternators, single phase and
   three phase dynamos, three phase circuits, phasors, transformer
   properties, isolation, efficiency, and voltage regulation.
   (Prerequisites: (EEET-115 and EEET-116) or (EEET-121 and EEET-122) or
   (EEET-215 and EEET-216) or equivalent courses. Co-requisite: EEET-241
   or equivalent course.) Lab 2 (Fall, Spring).
   1
   EEET-427
   Control Systems
   Develops the knowledge of control system concepts and applies them to
   electromechanical systems. Systems are characterized and modeled using
   linear systems methods, focused with a controls perspective. Impulse
   responses, step responses, and transfer functions are reviewed.
   Principles of stability and damping are developed and applied to the
   specification and design of open and closed loop compensators to
   deliver specific input-output performance. Laboratory exercises are
   designed to illustrate concepts, reinforce analysis and design skills,
   and develop instrumentation techniques associated with the lecture
   topics. Student must register for BOTH the Lecture and Laboratory
   components of this course. (Prerequisites: (MATH-211 or MATH-231) and
   ((CPET-253 or (CPET-251 and CPET-252)) or ((EEET-247 and EEET-248) or
   (CPET-133)) or equivalent courses.) Lab 2, Lecture 3 (Fall, Spring).
   4
   EMET-499
   EMET Co-op (summer)
   0
   GRCS-701
   Research Methods
   Understanding research and academic writing are foundational skills for
   all graduate students regardless of degree culmination. This is a
   graduate-level survey course on research design/methods and analysis,
   with the goal of all students becoming better consumers of research,
   and preparing those who choose an empirical research degree culmination
   and future doctoral pursuits. The course provides a broad overview of
   the process and practices of research in applied contexts. Content
   includes principles and techniques of research design, sampling, data
   collection, and analysis including the nature of evidence, types of
   research, defining research questions, sampling techniques, data
   collection, data analysis, issues concerning human subjects and
   research ethics, and challenges associated with conducting research in
   real-world contexts. Research strategies using library sources,
   including academic databases and citation management, are emphasized;
   as are academic writing skills, including adherence to academic style.
   The analysis component of the course provides an understanding of
   statistical methodology used to collect and interpret data found in
   research as well as how to read and interpret data collection
   instruments. Lecture 3 (Fall, Spring).
   3
   MFET-340
   Automation Control Systems
   2
   MFET-341
   Automation Control Systems Lab
   1
   MFET-436
   Engineering Economics
   3
   STAT-670
   Design of Experiments
   How to design and analyze experiments, with an emphasis on applications
   in engineering and the physical sciences. Topics include the role of
   statistics in scientific experimentation; general principles of design,
   including randomization, replication, and blocking; replicated and
   unreplicated two-level factorial designs; two-level
   fractional-factorial designs; response surface designs. Lecture 3
   (Fall, Spring).
   3

   MMET Concentration Course (Counts as Undergraduate Open Elective)
   3

   General Education – Elective
   3

   General Education – Global Perspective
   3

   General Education – Immersion 1
   3
   Fifth Year
   DECS-744
   Project Management
   A study in the principles of project management and the application of
   various tools and techniques for project planning and control. This
   course focuses on the leadership role of the project manager, and the
   roles and responsibilities of the team members. Considerable emphasis
   is placed on statements of work and work breakdown structures. The
   course uses a combination of lecture/discussion, group exercises, and
   case studies. (This class is restricted to degree-seeking graduate
   students or those with permission from instructor.) Lecture 3 (Fall,
   Spring).
   3

   MMET Concentration Course
   3

   MMET Elective Course
   3
   Choose one of the following:
   3
      ACCT-603
    Accounting for Decision Makers
   A graduate-level introduction to the use of accounting information by
   decision makers. The focus of the course is on two subject areas: (1)
   financial reporting concepts/issues and the use of general-purpose
   financial statements by internal and external decision makers and (2)
   the development and use of special-purpose financial information
   intended to assist managers in planning and controlling an
   organization's activities. Generally accepted accounting principles and
   issues related to International Financial Reporting Standards are
   considered while studying the first subject area and ethical issues
   impacting accounting are considered throughout. (This class is
   restricted to degree-seeking graduate students or those with permission
   from instructor.) Lecture 3 (Fall, Spring, Summer).

      ACCT-706
    Cost Management
   The development and use of cost data for external reporting and
   internal cost management (planning and control). Topics include job
   costing, process costing, joint product costing, cost reassignments,
   standard costs, activity-based costing, decentralization and transfer
   pricing, and cost variances. Consideration is given to manufacturing,
   service and retail organizations. (Prerequisites: ACCT-603 or
   equivalent course.) Lecture 3 (Spring).

   Choose one of the following:
   3
      MFET-788
   MMSI Thesis Planning


   MMET Elective Course

   Choose one of the following:
   3
      MFET-797
   MMSI Capstone Project

      MFET-790
   MMSI Thesis


   MMET Elective and Comprehensive Exam


   General Education – Immersion 2, 3
   6

   General Education – Social Perspective
   3
   Total Semester Credit Hours
   154

   Please see General Education Curriculum (GE) for more information.

   (WI) Refers to a writing intensive course within the major.

   Please see Wellness Education Requirement for more information.
   Students completing bachelor's degrees are required to complete two
   different Wellness courses.

Faculty

     * Christopher Lewis Headshot
       Christopher Lewis
       Associate Professor
     * Richard Cliver Headshot
       Richard Cliver
       Associate Professor
     * Gary DeAngelis Headshot
       Gary DeAngelis
       Senior Lecturer

   All Program Faculty

   Address and Phone

   1 Lomb Memorial Drive
   Rochester, NY 14623
   585-475-2411
   US News and World Report Badge for Best National Universities 2025
     *
     *
     *
     *
     *
     *

   US News and World Report Badge for Best National Universities 2025
   Website feedback Sign up for RIT news
   US News and World Report Badge for Best National Universities 2025
   About Academics Experiential Learning Admissions and Aid
   Research RIT Life Athletics News

   Copyright © Rochester Institute of Technology.
   All Rights Reserved.
   Land Acknowledgment Nondiscrimination Disclaimer Emergency Information
   Copyright Infringement Accessibility Privacy Statement
   Search RIT
   (BUTTON) Close  X
   This website uses cookies to provide better user experience and
   functionality. You can control and configure cookies in your web
   browser. Cookie Statement | How to Disable Cookies
   (BUTTON) OK
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 Definition
       (BUTTON) Toggle Definition subsection
          + 1.1 Formal logic
          + 1.2 Informal logic
     * 2 Basic concepts
       (BUTTON) Toggle Basic concepts subsection
          + 2.1 Premises, conclusions, and truth
               o 2.1.1 Premises and conclusions
               o 2.1.2 Internal structure
               o 2.1.3 Logical truth
               o 2.1.4 Truth tables
          + 2.2 Arguments and inferences
               o 2.2.1 Deductive
               o 2.2.2 Ampliative
          + 2.3 Fallacies
          + 2.4 Definitory and strategic rules
          + 2.5 Formal systems
     * 3 Systems of logic
       (BUTTON) Toggle Systems of logic subsection
          + 3.1 Aristotelian
          + 3.2 Classical
               o 3.2.1 Propositional logic
               o 3.2.2 First-order logic
          + 3.3 Extended
               o 3.3.1 Modal logic
               o 3.3.2 Higher order logic
          + 3.4 Deviant
          + 3.5 Informal
     * 4 Areas of research
       (BUTTON) Toggle Areas of research subsection
          + 4.1 Philosophy of logic and philosophical logic
          + 4.2 Metalogic
          + 4.3 Mathematical logic
          + 4.4 Computational logic
          + 4.5 Formal semantics of natural language
          + 4.6 Epistemology of logic
     * 5 History
     * 6 See also
     * 7 References
       (BUTTON) Toggle References subsection
          + 7.1 Notes
          + 7.2 Citations
          + 7.3 Bibliography
     * 8 External links

   [ ] Toggle the table of contents

Logic

   [ ] 164 languages
     * Afrikaans
     * Alemannisch
     * አማርኛ
     * अंगिका
     * العربية
     * Aragonés
     * Արեւմտահայերէն
     * অসমীয়া
     * Asturianu
     * Avañe'ẽ
     * Azərbaycanca
     * تۆرکجه
     * বাংলা
     * 閩南語 / Bân-lâm-gú
     * Башҡортса
     * Беларуская
     * Беларуская (тарашкевіца)
     * Bikol Central
     * Български
     * Boarisch
     * Bosanski
     * Brezhoneg
     * Буряад
     * Català
     * Чӑвашла
     * Čeština
     * Chavacano de Zamboanga
     * Corsu
     * Cymraeg
     * Dansk
     * Deutsch
     * Eesti
     * Ελληνικά
     * Español
     * Esperanto
     * Estremeñu
     * Euskara
     * فارسی
     * Fiji Hindi
     * Français
     * Frysk
     * Gaeilge
     * Galego
     * 贛語
     * Gĩkũyũ
     * 한국어
     * Hawaiʻi
     * Հայերեն
     * हिन्दी
     * Hrvatski
     * Ido
     * Igbo
     * Ilokano
     * Bahasa Indonesia
     * Interlingua
     * Interlingue
     * IsiXhosa
     * Íslenska
     * Italiano
     * עברית
     * Jawa
     * Kabɩyɛ
     * ქართული
     * Қазақша
     * Kernowek
     * Kiswahili
     * Kriyòl gwiyannen
     * Kurdî
     * Кыргызча
     * Ladin
     * Лакку
     * Latina
     * Latviešu
     * Lëtzebuergesch
     * Lietuvių
     * Lingua Franca Nova
     * La .lojban.
     * Lombard
     * Magyar
     * Македонски
     * Malagasy
     * മലയാളം
     * मराठी
     * მარგალური
     * مصرى
     * مازِرونی
     * Bahasa Melayu
     * Minangkabau
     * Mirandés
     * Монгол
     * မြန်မာဘာသာ
     * Na Vosa Vakaviti
     * Nederlands
     * नेपाल भाषा
     * 日本語
     * Нохчийн
     * Nordfriisk
     * Norfuk / Pitkern
     * Norsk bokmål
     * Norsk nynorsk
     * Novial
     * Occitan
     * Oromoo
     * Oʻzbekcha / ўзбекча
     * ਪੰਜਾਬੀ
     * پنجابی
     * پښتو
     * Patois
     * ភាសាខ្មែរ
     * Piemontèis
     * Tok Pisin
     * Plattdüütsch
     * Polski
     * Português
     * Qırımtatarca
     * Română
     * Runa Simi
     * Русиньскый
     * Русский
     * Саха тыла
     * ᱥᱟᱱᱛᱟᱲᱤ
     * Sardu
     * Scots
     * Shqip
     * Sicilianu
     * Simple English
     * سنڌي
     * Slovenčina
     * Slovenščina
     * کوردی
     * Српски / srpski
     * Srpskohrvatski / српскохрватски
     * Sunda
     * Suomi
     * Svenska
     * Tagalog
     * தமிழ்
     * Taclḥit
     * Taqbaylit
     * Татарча / tatarça
     * ไทย
     * Тоҷикӣ
     * Türkçe
     * Türkmençe
     * Тыва дыл
     * Українська
     * اردو
     * Vepsän kel’
     * Tiếng Việt
     * Võro
     * Walon
     * 文言
     * Winaray
     * 吴语
     * ייִדיש
     * Yorùbá
     * 粵語
     * Žemaitėška
     * 中文
     * Betawi
     * Batak Mandailing
     * Jaku Iban
     * Tolışi
     * ⵜⴰⵎⴰⵣⵉⵖⵜ ⵜⴰⵏⴰⵡⴰⵢⵜ

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikimedia Commons
     * Wikiquote
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   Featured article
   Listen to this article
   From Wikipedia, the free encyclopedia
   Study of correct reasoning
   This article is about the study of correct reasoning. For other uses,
   see Logic (disambiguation) and Logician (disambiguation).
   "Logical" and "Logically" redirect here. For the rapper, see Logic
   (rapper). For the British company, see Logically (company).

   Depiction of inference using modus ponens Logic studies valid forms of
   inference like modus ponens.

   Logic is the study of correct reasoning. It includes both formal and
   informal logic. Formal logic is the study of deductively valid
   inferences or logical truths. It examines how conclusions follow from
   premises based on the structure of arguments alone, independent of
   their topic and content. Informal logic is associated with informal
   fallacies, critical thinking, and argumentation theory. Informal logic
   examines arguments expressed in natural language whereas formal logic
   uses formal language. When used as a countable noun, the term "a logic"
   refers to a specific logical formal system that articulates a proof
   system. Logic plays a central role in many fields, such as philosophy,
   mathematics, computer science, and linguistics.

   Logic studies arguments, which consist of a set of premises that leads
   to a conclusion. An example is the argument from the premises "it's
   Sunday" and "if it's Sunday then I don't have to work" leading to the
   conclusion "I don't have to work".^[1] Premises and conclusions express
   propositions or claims that can be true or false. An important feature
   of propositions is their internal structure. For example, complex
   propositions are made up of simpler propositions linked by logical
   vocabulary like
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∧</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \land
   }</annotation> </semantics> :MATH]
   {\displaystyle \land } (and) or
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo stretchy="false">→</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \to }</annotation>
   </semantics> :MATH]
   {\displaystyle \to } (if...then). Simple propositions also have parts,
   like "Sunday" or "work" in the example. The truth of a proposition
   usually depends on the meanings of all of its parts. However, this is
   not the case for logically true propositions. They are true only
   because of their logical structure independent of the specific meanings
   of the individual parts.

   Arguments can be either correct or incorrect. An argument is correct if
   its premises support its conclusion. Deductive arguments have the
   strongest form of support: if their premises are true then their
   conclusion must also be true. This is not the case for ampliative
   arguments, which arrive at genuinely new information not found in the
   premises. Many arguments in everyday discourse and the sciences are
   ampliative arguments. They are divided into inductive and abductive
   arguments. Inductive arguments are statistical generalization—such as
   inferring that all ravens are black, based on many individual
   observations of black ravens.^[2] Abductive arguments are inferences to
   the best explanation—for example, when a doctor concludes that a
   patient has a certain disease, as the best explanation for the symptoms
   that they are observed to suffer.^[3] Arguments that fall short of the
   standards of correct reasoning often embody fallacies. Systems of logic
   are theoretical frameworks for assessing the correctness of arguments.

   Logic has been studied since antiquity. Early approaches include
   Aristotelian logic, Stoic logic, Nyaya, and Mohism. Aristotelian logic
   focuses on reasoning in the form of syllogisms. It was considered the
   main system of logic in the Western world until it was replaced by
   modern formal logic, which has its roots in the work of late
   19th-century mathematicians such as Gottlob Frege. Today, the most
   commonly used system is classical logic. It consists of propositional
   logic and first-order logic. Propositional logic only considers logical
   relations between full propositions. First-order logic also takes the
   internal parts of propositions into account, like predicates and
   quantifiers. Extended logics accept the basic intuitions behind
   classical logic and apply it to other fields, such as metaphysics,
   ethics, and epistemology. Deviant logics, on the other hand, reject
   certain classical intuitions and provide alternative explanations of
   the basic laws of logic.

Definition

   [edit]

   The word "logic" originates from the Greek word logos, which has a
   variety of translations, such as reason, discourse, or language.^[4]
   Logic is traditionally defined as the study of the laws of thought or
   correct reasoning,^[5] and is usually understood in terms of inferences
   or arguments. Reasoning is the activity of drawing inferences.
   Arguments are the outward expression of inferences.^[6] An argument is
   a set of premises together with a conclusion. Logic is interested in
   whether arguments are correct, i.e. whether their premises support the
   conclusion.^[7] These general characterizations apply to logic in the
   widest sense, i.e., to both formal and informal logic since they are
   both concerned with assessing the correctness of arguments.^[8] Formal
   logic is the traditionally dominant field, and some logicians restrict
   logic to formal logic.^[9]

Formal logic

   [edit]
   Further information: Formal system

   Formal logic is also known as symbolic logic and is widely used in
   mathematical logic. It uses a formal approach to study reasoning: it
   replaces concrete expressions with abstract symbols to examine the
   logical form of arguments independent of their concrete content. In
   this sense, it is topic-neutral since it is only concerned with the
   abstract structure of arguments and not with their concrete
   content.^[10]

   Formal logic is interested in deductively valid arguments, for which
   the truth of their premises ensures the truth of their conclusion. This
   means that it is impossible for the premises to be true and the
   conclusion to be false.^[11] For valid arguments, the logical structure
   of the premises and the conclusion follows a pattern called a rule of
   inference.^[12] For example, modus ponens is a rule of inference
   according to which all arguments of the form "(1) p, (2) if p then q,
   (3) therefore q" are valid, independent of what the terms p and q stand
   for.^[13] In this sense, formal logic can be defined as the science of
   valid inferences. An alternative definition sees logic as the study of
   logical truths.^[14] A proposition is logically true if its truth
   depends only on the logical vocabulary used in it. This means that it
   is true in all possible worlds and under all interpretations of its
   non-logical terms, like the claim "either it is raining, or it is
   not".^[15] These two definitions of formal logic are not identical, but
   they are closely related. For example, if the inference from p to q is
   deductively valid then the claim "if p then q" is a logical truth.^[16]
   Visualization of how to translate an English sentence into first-order
   logic Formal logic needs to translate natural language arguments into a
   formal language, like first-order logic, to assess whether they are
   valid. In this example, the letter "c" represents Carmen while the
   letters "M" and "T" stand for "Mexican" and "teacher". The symbol "∧"
   has the meaning of "and".

   Formal logic uses formal languages to express and analyze
   arguments.^[17] They normally have a very limited vocabulary and exact
   syntactic rules. These rules specify how their symbols can be combined
   to construct sentences, so-called well-formed formulas.^[18] This
   simplicity and exactness of formal logic make it capable of formulating
   precise rules of inference. They determine whether a given argument is
   valid.^[19] Because of the reliance on formal language, natural
   language arguments cannot be studied directly. Instead, they need to be
   translated into formal language before their validity can be
   assessed.^[20]

   The term "logic" can also be used in a slightly different sense as a
   countable noun. In this sense, a logic is a logical formal system.
   Distinct logics differ from each other concerning the rules of
   inference they accept as valid and the formal languages used to express
   them.^[21] Starting in the late 19th century, many new formal systems
   have been proposed. There are disagreements about what makes a formal
   system a logic.^[22] For example, it has been suggested that only
   logically complete systems, like first-order logic, qualify as logics.
   For such reasons, some theorists deny that higher-order logics are
   logics in the strict sense.^[23]

Informal logic

   [edit]
   Main article: Informal logic

   When understood in a wide sense, logic encompasses both formal and
   informal logic.^[24] Informal logic uses non-formal criteria and
   standards to analyze and assess the correctness of arguments. Its main
   focus is on everyday discourse.^[25] Its development was prompted by
   difficulties in applying the insights of formal logic to natural
   language arguments.^[26] In this regard, it considers problems that
   formal logic on its own is unable to address.^[27] Both provide
   criteria for assessing the correctness of arguments and distinguishing
   them from fallacies.^[28]

   Many characterizations of informal logic have been suggested but there
   is no general agreement on its precise definition.^[29] The most
   literal approach sees the terms "formal" and "informal" as applying to
   the language used to express arguments. On this view, informal logic
   studies arguments that are in informal or natural language.^[30] Formal
   logic can only examine them indirectly by translating them first into a
   formal language while informal logic investigates them in their
   original form.^[31] On this view, the argument "Birds fly. Tweety is a
   bird. Therefore, Tweety flies." belongs to natural language and is
   examined by informal logic. But the formal translation "(1)
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">∀</mi>
   <mi>x</mi> <mo stretchy="false">(</mo> <mi>B</mi> <mi>i</mi> <mi>r</mi>
   <mi>d</mi> <mo stretchy="false">(</mo> <mi>x</mi> <mo
   stretchy="false">)</mo> <mo stretchy="false">→</mo> <mi>F</mi>
   <mi>l</mi> <mi>i</mi> <mi>e</mi> <mi>s</mi> <mo stretchy="false">(</mo>
   <mi>x</mi> <mo stretchy="false">)</mo> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \forall x(Bird(x)\to
   Flies(x))}</annotation> </semantics> :MATH]
   {\displaystyle \forall x(Bird(x)\to Flies(x))} ; (2)
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>B</mi> <mi>i</mi> <mi>r</mi>
   <mi>d</mi> <mo stretchy="false">(</mo> <mi>T</mi> <mi>w</mi> <mi>e</mi>
   <mi>e</mi> <mi>t</mi> <mi>y</mi> <mo stretchy="false">)</mo> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   Bird(Tweety)}</annotation> </semantics> :MATH]
   {\displaystyle Bird(Tweety)} ; (3)
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>F</mi> <mi>l</mi> <mi>i</mi>
   <mi>e</mi> <mi>s</mi> <mo stretchy="false">(</mo> <mi>T</mi> <mi>w</mi>
   <mi>e</mi> <mi>e</mi> <mi>t</mi> <mi>y</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle Flies(Tweety)}</annotation>
   </semantics> :MATH]
   {\displaystyle Flies(Tweety)} " is studied by formal logic.^[32] The
   study of natural language arguments comes with various difficulties.
   For example, natural language expressions are often ambiguous, vague,
   and context-dependent.^[33] Another approach defines informal logic in
   a wide sense as the normative study of the standards, criteria, and
   procedures of argumentation. In this sense, it includes questions about
   the role of rationality, critical thinking, and the psychology of
   argumentation.^[34]

   Another characterization identifies informal logic with the study of
   non-deductive arguments. In this way, it contrasts with deductive
   reasoning examined by formal logic.^[35] Non-deductive arguments make
   their conclusion probable but do not ensure that it is true. An example
   is the inductive argument from the empirical observation that "all
   ravens I have seen so far are black" to the conclusion "all ravens are
   black".^[36]

   A further approach is to define informal logic as the study of informal
   fallacies.^[37] Informal fallacies are incorrect arguments in which
   errors are present in the content and the context of the argument.^[38]
   A false dilemma, for example, involves an error of content by excluding
   viable options. This is the case in the fallacy "you are either with us
   or against us; you are not with us; therefore, you are against
   us".^[39] Some theorists state that formal logic studies the general
   form of arguments while informal logic studies particular instances of
   arguments. Another approach is to hold that formal logic only considers
   the role of logical constants for correct inferences while informal
   logic also takes the meaning of substantive concepts into account.
   Further approaches focus on the discussion of logical topics with or
   without formal devices and on the role of epistemology for the
   assessment of arguments.^[40]

Basic concepts

   [edit]

Premises, conclusions, and truth

   [edit]

Premises and conclusions

   [edit]
   Main articles: Premise and Logical consequence

   Premises and conclusions are the basic parts of inferences or arguments
   and therefore play a central role in logic. In the case of a valid
   inference or a correct argument, the conclusion follows from the
   premises, or in other words, the premises support the conclusion.^[41]
   For instance, the premises "Mars is red" and "Mars is a planet" support
   the conclusion "Mars is a red planet". For most types of logic, it is
   accepted that premises and conclusions have to be
   truth-bearers.^[41]^[a] This means that they have a truth value: they
   are either true or false. Contemporary philosophy generally sees them
   either as propositions or as sentences.^[43] Propositions are the
   denotations of sentences and are usually seen as abstract objects.^[44]
   For example, the English sentence "the tree is green" is different from
   the German sentence "der Baum ist grün" but both express the same
   proposition.^[45]

   Propositional theories of premises and conclusions are often criticized
   because they rely on abstract objects. For instance, philosophical
   naturalists usually reject the existence of abstract objects. Other
   arguments concern the challenges involved in specifying the identity
   criteria of propositions.^[43] These objections are avoided by seeing
   premises and conclusions not as propositions but as sentences, i.e. as
   concrete linguistic objects like the symbols displayed on a page of a
   book. But this approach comes with new problems of its own: sentences
   are often context-dependent and ambiguous, meaning an argument's
   validity would not only depend on its parts but also on its context and
   on how it is interpreted.^[46] Another approach is to understand
   premises and conclusions in psychological terms as thoughts or
   judgments. This position is known as psychologism. It was discussed at
   length around the turn of the 20th century but it is not widely
   accepted today.^[47]

Internal structure

   [edit]

   Premises and conclusions have an internal structure. As propositions or
   sentences, they can be either simple or complex.^[48] A complex
   proposition has other propositions as its constituents, which are
   linked to each other through propositional connectives like "and" or
   "if...then". Simple propositions, on the other hand, do not have
   propositional parts. But they can also be conceived as having an
   internal structure: they are made up of subpropositional parts, like
   singular terms and predicates.^[49]^[48] For example, the simple
   proposition "Mars is red" can be formed by applying the predicate "red"
   to the singular term "Mars". In contrast, the complex proposition "Mars
   is red and Venus is white" is made up of two simple propositions
   connected by the propositional connective "and".^[49]

   Whether a proposition is true depends, at least in part, on its
   constituents. For complex propositions formed using truth-functional
   propositional connectives, their truth only depends on the truth values
   of their parts.^[49]^[50] But this relation is more complicated in the
   case of simple propositions and their subpropositional parts. These
   subpropositional parts have meanings of their own, like referring to
   objects or classes of objects.^[51] Whether the simple proposition they
   form is true depends on their relation to reality, i.e. what the
   objects they refer to are like. This topic is studied by theories of
   reference.^[52]

Logical truth

   [edit]
   Main article: Logical truth

   Some complex propositions are true independently of the substantive
   meanings of their parts.^[53] In classical logic, for example, the
   complex proposition "either Mars is red or Mars is not red" is true
   independent of whether its parts, like the simple proposition "Mars is
   red", are true or false. In such cases, the truth is called a logical
   truth: a proposition is logically true if its truth depends only on the
   logical vocabulary used in it.^[54] This means that it is true under
   all interpretations of its non-logical terms. In some modal logics,
   this means that the proposition is true in all possible worlds.^[55]
   Some theorists define logic as the study of logical truths.^[16]

Truth tables

   [edit]

   Truth tables can be used to show how logical connectives work or how
   the truth values of complex propositions depends on their parts. They
   have a column for each input variable. Each row corresponds to one
   possible combination of the truth values these variables can take; for
   truth tables presented in the English literature, the symbols "T" and
   "F" or "1" and "0" are commonly used as abbreviations for the truth
   values "true" and "false".^[56] The first columns present all the
   possible truth-value combinations for the input variables. Entries in
   the other columns present the truth values of the corresponding
   expressions as determined by the input values. For example, the
   expression "
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>p</mi> <mo>∧</mo> <mi>q</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle p\land q}</annotation>
   </semantics> :MATH]
   {\displaystyle p\land q} " uses the logical connective
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∧</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \land
   }</annotation> </semantics> :MATH]
   {\displaystyle \land } (and). It could be used to express a sentence
   like "yesterday was Sunday and the weather was good". It is only true
   if both of its input variables,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>p</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle p}</annotation>
   </semantics> :MATH]
   {\displaystyle p} ("yesterday was Sunday") and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>q</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle q}</annotation>
   </semantics> :MATH]
   {\displaystyle q} ("the weather was good"), are true. In all other
   cases, the expression as a whole is false. Other important logical
   connectives are
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \lnot }</annotation>
   </semantics> :MATH]
   {\displaystyle \lnot } (not),
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∨</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \lor
   }</annotation> </semantics> :MATH]
   {\displaystyle \lor } (or),
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo stretchy="false">→</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \to }</annotation>
   </semantics> :MATH]
   {\displaystyle \to } (if...then), and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo stretchy="false">↑</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \uparrow }</annotation>
   </semantics> :MATH]
   {\displaystyle \uparrow } (Sheffer stroke).^[57] Given the conditional
   proposition
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>p</mi> <mo
   stretchy="false">→</mo> <mi>q</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle p\to q}</annotation>
   </semantics> :MATH]
   {\displaystyle p\to q} , one can form truth tables of its converse
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>q</mi> <mo
   stretchy="false">→</mo> <mi>p</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle q\to p}</annotation>
   </semantics> :MATH]
   {\displaystyle q\to p} , its inverse (
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mi>p</mi> <mo stretchy="false">→</mo> <mi mathvariant="normal">¬</mi>
   <mi>q</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \lnot p\to \lnot
   q}</annotation> </semantics> :MATH]
   {\displaystyle \lnot p\to \lnot q} ), and its contrapositive (
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mi>q</mi> <mo stretchy="false">→</mo> <mi mathvariant="normal">¬</mi>
   <mi>p</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \lnot q\to \lnot
   p}</annotation> </semantics> :MATH]
   {\displaystyle \lnot q\to \lnot p} ). Truth tables can also be defined
   for more complex expressions that use several propositional
   connectives.^[58]

   CAPTION: Truth table of various expressions

   p q p ∧ q p ∨ q p → q ¬p → ¬q p
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo stretchy="false">↑</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \uparrow }</annotation>
   </semantics> :MATH]
   {\displaystyle \uparrow } q
   T T T T T T F
   T F F T F T T
   F T F T T F T
   F F F F T T T

Arguments and inferences

   [edit]

   Main articles: Argument and inference

   Logic is commonly defined in terms of arguments or inferences as the
   study of their correctness.^[59] An argument is a set of premises
   together with a conclusion.^[60] An inference is the process of
   reasoning from these premises to the conclusion.^[43] But these terms
   are often used interchangeably in logic. Arguments are correct or
   incorrect depending on whether their premises support their conclusion.
   Premises and conclusions, on the other hand, are true or false
   depending on whether they are in accord with reality. In formal logic,
   a sound argument is an argument that is both correct and has only true
   premises.^[61] Sometimes a distinction is made between simple and
   complex arguments. A complex argument is made up of a chain of simple
   arguments. This means that the conclusion of one argument acts as a
   premise of later arguments. For a complex argument to be successful,
   each link of the chain has to be successful.^[43]
   Diagram of argument terminology used in logic Argument terminology used
   in logic

   Arguments and inferences are either correct or incorrect. If they are
   correct then their premises support their conclusion. In the incorrect
   case, this support is missing. It can take different forms
   corresponding to the different types of reasoning.^[62] The strongest
   form of support corresponds to deductive reasoning. But even arguments
   that are not deductively valid may still be good arguments because
   their premises offer non-deductive support to their conclusions. For
   such cases, the term ampliative or inductive reasoning is used.^[63]
   Deductive arguments are associated with formal logic in contrast to the
   relation between ampliative arguments and informal logic.^[64]

Deductive

   [edit]

   A deductively valid argument is one whose premises guarantee the truth
   of its conclusion.^[11] For instance, the argument "(1) all frogs are
   amphibians; (2) no cats are amphibians; (3) therefore no cats are
   frogs" is deductively valid. For deductive validity, it does not matter
   whether the premises or the conclusion are actually true. So the
   argument "(1) all frogs are mammals; (2) no cats are mammals; (3)
   therefore no cats are frogs" is also valid because the conclusion
   follows necessarily from the premises.^[65]

   According to an influential view by Alfred Tarski, deductive arguments
   have three essential features: (1) they are formal, i.e. they depend
   only on the form of the premises and the conclusion; (2) they are a
   priori, i.e. no sense experience is needed to determine whether they
   obtain; (3) they are modal, i.e. that they hold by logical necessity
   for the given propositions, independent of any other
   circumstances.^[66]

   Because of the first feature, the focus on formality, deductive
   inference is usually identified with rules of inference.^[67] Rules of
   inference specify the form of the premises and the conclusion: how they
   have to be structured for the inference to be valid. Arguments that do
   not follow any rule of inference are deductively invalid.^[68] The
   modus ponens is a prominent rule of inference. It has the form "p; if
   p, then q; therefore q".^[69] Knowing that it has just rained (
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>p</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle p}</annotation>
   </semantics> :MATH]
   {\displaystyle p} ) and that after rain the streets are wet (
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>p</mi> <mo
   stretchy="false">→</mo> <mi>q</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle p\to q}</annotation>
   </semantics> :MATH]
   {\displaystyle p\to q} ), one can use modus ponens to deduce that the
   streets are wet (
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>q</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle q}</annotation>
   </semantics> :MATH]
   {\displaystyle q} ).^[70]

   The third feature can be expressed by stating that deductively valid
   inferences are truth-preserving: it is impossible for the premises to
   be true and the conclusion to be false.^[71] Because of this feature,
   it is often asserted that deductive inferences are uninformative since
   the conclusion cannot arrive at new information not already present in
   the premises.^[72] But this point is not always accepted since it would
   mean, for example, that most of mathematics is uninformative. A
   different characterization distinguishes between surface and depth
   information. The surface information of a sentence is the information
   it presents explicitly. Depth information is the totality of the
   information contained in the sentence, both explicitly and implicitly.
   According to this view, deductive inferences are uninformative on the
   depth level. But they can be highly informative on the surface level by
   making implicit information explicit. This happens, for example, in
   mathematical proofs.^[73]

Ampliative

   [edit]

   Ampliative arguments are arguments whose conclusions contain additional
   information not found in their premises. In this regard, they are more
   interesting since they contain information on the depth level and the
   thinker may learn something genuinely new. But this feature comes with
   a certain cost: the premises support the conclusion in the sense that
   they make its truth more likely but they do not ensure its truth.^[74]
   This means that the conclusion of an ampliative argument may be false
   even though all its premises are true. This characteristic is closely
   related to non-monotonicity and defeasibility: it may be necessary to
   retract an earlier conclusion upon receiving new information or in
   light of new inferences drawn.^[75] Ampliative reasoning plays a
   central role in many arguments found in everyday discourse and the
   sciences. Ampliative arguments are not automatically incorrect.
   Instead, they just follow different standards of correctness. The
   support they provide for their conclusion usually comes in degrees.
   This means that strong ampliative arguments make their conclusion very
   likely while weak ones are less certain. As a consequence, the line
   between correct and incorrect arguments is blurry in some cases, such
   as when the premises offer weak but non-negligible support. This
   contrasts with deductive arguments, which are either valid or invalid
   with nothing in-between.^[76]

   The terminology used to categorize ampliative arguments is
   inconsistent. Some authors, like James Hawthorne, use the term
   "induction" to cover all forms of non-deductive arguments.^[77] But in
   a more narrow sense, induction is only one type of ampliative argument
   alongside abductive arguments.^[78] Some philosophers, like Leo
   Groarke, also allow conductive arguments^[b] as another type.^[79] In
   this narrow sense, induction is often defined as a form of statistical
   generalization.^[80] In this case, the premises of an inductive
   argument are many individual observations that all show a certain
   pattern. The conclusion then is a general law that this pattern always
   obtains.^[81] In this sense, one may infer that "all elephants are
   gray" based on one's past observations of the color of elephants.^[78]
   A closely related form of inductive inference has as its conclusion not
   a general law but one more specific instance, as when it is inferred
   that an elephant one has not seen yet is also gray.^[81] Some
   theorists, like Igor Douven, stipulate that inductive inferences rest
   only on statistical considerations. This way, they can be distinguished
   from abductive inference.^[78]

   Abductive inference may or may not take statistical observations into
   consideration. In either case, the premises offer support for the
   conclusion because the conclusion is the best explanation of why the
   premises are true.^[82] In this sense, abduction is also called the
   inference to the best explanation.^[83] For example, given the premise
   that there is a plate with breadcrumbs in the kitchen in the early
   morning, one may infer the conclusion that one's house-mate had a
   midnight snack and was too tired to clean the table. This conclusion is
   justified because it is the best explanation of the current state of
   the kitchen.^[78] For abduction, it is not sufficient that the
   conclusion explains the premises. For example, the conclusion that a
   burglar broke into the house last night, got hungry on the job, and had
   a midnight snack, would also explain the state of the kitchen. But this
   conclusion is not justified because it is not the best or most likely
   explanation.^[82]^[83]

Fallacies

   [edit]

   Not all arguments live up to the standards of correct reasoning. When
   they do not, they are usually referred to as fallacies. Their central
   aspect is not that their conclusion is false but that there is some
   flaw with the reasoning leading to this conclusion.^[84] So the
   argument "it is sunny today; therefore spiders have eight legs" is
   fallacious even though the conclusion is true. Some theorists, like
   John Stuart Mill, give a more restrictive definition of fallacies by
   additionally requiring that they appear to be correct.^[85] This way,
   genuine fallacies can be distinguished from mere mistakes of reasoning
   due to carelessness. This explains why people tend to commit fallacies:
   because they have an alluring element that seduces people into
   committing and accepting them.^[86] However, this reference to
   appearances is controversial because it belongs to the field of
   psychology, not logic, and because appearances may be different for
   different people.^[87]
   Poster from 1901 Young America's dilemma: Shall I be wise and great, or
   rich and powerful? (poster from 1901) This is an example of a false
   dilemma: an informal fallacy using a disjunctive premise that excludes
   viable alternatives.

   Fallacies are usually divided into formal and informal fallacies.^[38]
   For formal fallacies, the source of the error is found in the form of
   the argument. For example, denying the antecedent is one type of formal
   fallacy, as in "if Othello is a bachelor, then he is male; Othello is
   not a bachelor; therefore Othello is not male".^[88] But most fallacies
   fall into the category of informal fallacies, of which a great variety
   is discussed in the academic literature. The source of their error is
   usually found in the content or the context of the argument.^[89]
   Informal fallacies are sometimes categorized as fallacies of ambiguity,
   fallacies of presumption, or fallacies of relevance. For fallacies of
   ambiguity, the ambiguity and vagueness of natural language are
   responsible for their flaw, as in "feathers are light; what is light
   cannot be dark; therefore feathers cannot be dark".^[90] Fallacies of
   presumption have a wrong or unjustified premise but may be valid
   otherwise.^[91] In the case of fallacies of relevance, the premises do
   not support the conclusion because they are not relevant to it.^[92]

Definitory and strategic rules

   [edit]

   The main focus of most logicians is to study the criteria according to
   which an argument is correct or incorrect. A fallacy is committed if
   these criteria are violated. In the case of formal logic, they are
   known as rules of inference.^[93] They are definitory rules, which
   determine whether an inference is correct or which inferences are
   allowed. Definitory rules contrast with strategic rules. Strategic
   rules specify which inferential moves are necessary to reach a given
   conclusion based on a set of premises. This distinction does not just
   apply to logic but also to games. In chess, for example, the definitory
   rules dictate that bishops may only move diagonally. The strategic
   rules, on the other hand, describe how the allowed moves may be used to
   win a game, for instance, by controlling the center and by defending
   one's king.^[94] It has been argued that logicians should give more
   emphasis to strategic rules since they are highly relevant for
   effective reasoning.^[93]

Formal systems

   [edit]

   Main article: Formal system

   A formal system of logic consists of a formal language together with a
   set of axioms and a proof system used to draw inferences from these
   axioms.^[95] In logic, axioms are statements that are accepted without
   proof. They are used to justify other statements.^[96] Some theorists
   also include a semantics that specifies how the expressions of the
   formal language relate to real objects.^[97] Starting in the late 19th
   century, many new formal systems have been proposed.^[98]

   A formal language consists of an alphabet and syntactic rules. The
   alphabet is the set of basic symbols used in expressions. The syntactic
   rules determine how these symbols may be arranged to result in
   well-formed formulas.^[99] For instance, the syntactic rules of
   propositional logic determine that "
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> <mo>∧</mo> <mi>Q</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle P\land Q}</annotation>
   </semantics> :MATH]
   {\displaystyle P\land Q} " is a well-formed formula but "
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∧</mo> <mi>Q</mi> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle \land
   Q}</annotation> </semantics> :MATH]
   {\displaystyle \land Q} " is not since the logical conjunction
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∧</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \land
   }</annotation> </semantics> :MATH]
   {\displaystyle \land } requires terms on both sides.^[100]

   A proof system is a collection of rules to construct formal proofs. It
   is a tool to arrive at conclusions from a set of axioms. Rules in a
   proof system are defined in terms of the syntactic form of formulas
   independent of their specific content. For instance, the classical rule
   of conjunction introduction states that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> <mo>∧</mo> <mi>Q</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle P\land Q}</annotation>
   </semantics> :MATH]
   {\displaystyle P\land Q} follows from the premises
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle P}</annotation>
   </semantics> :MATH]
   {\displaystyle P} and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>Q</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle Q}</annotation>
   </semantics> :MATH]
   {\displaystyle Q} . Such rules can be applied sequentially, giving a
   mechanical procedure for generating conclusions from premises. There
   are different types of proof systems including natural deduction and
   sequent calculi.^[101]

   A semantics is a system for mapping expressions of a formal language to
   their denotations. In many systems of logic, denotations are truth
   values. For instance, the semantics for classical propositional logic
   assigns the formula
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> <mo>∧</mo> <mi>Q</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle P\land Q}</annotation>
   </semantics> :MATH]
   {\displaystyle P\land Q} the denotation "true" whenever
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle P}</annotation>
   </semantics> :MATH]
   {\displaystyle P} and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>Q</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle Q}</annotation>
   </semantics> :MATH]
   {\displaystyle Q} are true. From the semantic point of view, a premise
   entails a conclusion if the conclusion is true whenever the premise is
   true.^[102]

   A system of logic is sound when its proof system cannot derive a
   conclusion from a set of premises unless it is semantically entailed by
   them. In other words, its proof system cannot lead to false
   conclusions, as defined by the semantics. A system is complete when its
   proof system can derive every conclusion that is semantically entailed
   by its premises. In other words, its proof system can lead to any true
   conclusion, as defined by the semantics. Thus, soundness and
   completeness together describe a system whose notions of validity and
   entailment line up perfectly.^[103]

Systems of logic

   [edit]

   Systems of logic are theoretical frameworks for assessing the
   correctness of reasoning and arguments. For over two thousand years,
   Aristotelian logic was treated as the canon of logic in the Western
   world,^[104] but modern developments in this field have led to a vast
   proliferation of logical systems.^[105] One prominent categorization
   divides modern formal logical systems into classical logic, extended
   logics, and deviant logics.^[106]

Aristotelian

   [edit]

   Main article: Aristotelian logic

   Aristotelian logic encompasses a great variety of topics. They include
   metaphysical theses about ontological categories and problems of
   scientific explanation. But in a more narrow sense, it is identical to
   term logic or syllogistics. A syllogism is a form of argument involving
   three propositions: two premises and a conclusion. Each proposition has
   three essential parts: a subject, a predicate, and a copula connecting
   the subject to the predicate.^[107] For example, the proposition
   "Socrates is wise" is made up of the subject "Socrates", the predicate
   "wise", and the copula "is".^[108] The subject and the predicate are
   the terms of the proposition. Aristotelian logic does not contain
   complex propositions made up of simple propositions. It differs in this
   aspect from propositional logic, in which any two propositions can be
   linked using a logical connective like "and" to form a new complex
   proposition.^[109]
   Diagram of the square of opposition The square of opposition is often
   used to visualize the relations between the four basic categorical
   propositions in Aristotelian logic. It shows, for example, that the
   propositions "All S are P" and "Some S are not P" are contradictory,
   meaning that one of them has to be true while the other is false.

   In Aristotelian logic, the subject can be universal, particular,
   indefinite, or singular. For example, the term "all humans" is a
   universal subject in the proposition "all humans are mortal". A similar
   proposition could be formed by replacing it with the particular term
   "some humans", the indefinite term "a human", or the singular term
   "Socrates".^[110]

   Aristotelian logic only includes predicates for simple properties of
   entities. But it lacks predicates corresponding to relations between
   entities.^[111] The predicate can be linked to the subject in two ways:
   either by affirming it or by denying it.^[112] For example, the
   proposition "Socrates is not a cat" involves the denial of the
   predicate "cat" to the subject "Socrates". Using combinations of
   subjects and predicates, a great variety of propositions and syllogisms
   can be formed. Syllogisms are characterized by the fact that the
   premises are linked to each other and to the conclusion by sharing one
   predicate in each case.^[113] Thus, these three propositions contain
   three predicates, referred to as major term, minor term, and middle
   term.^[114] The central aspect of Aristotelian logic involves
   classifying all possible syllogisms into valid and invalid arguments
   according to how the propositions are formed.^[112]^[115] For example,
   the syllogism "all men are mortal; Socrates is a man; therefore
   Socrates is mortal" is valid. The syllogism "all cats are mortal;
   Socrates is mortal; therefore Socrates is a cat", on the other hand, is
   invalid.^[116]

Classical

   [edit]

   Main article: Classical logic

   Classical logic is distinct from traditional or Aristotelian logic. It
   encompasses propositional logic and first-order logic. It is
   "classical" in the sense that it is based on basic logical intuitions
   shared by most logicians.^[117] These intuitions include the law of
   excluded middle, the double negation elimination, the principle of
   explosion, and the bivalence of truth.^[118] It was originally
   developed to analyze mathematical arguments and was only later applied
   to other fields as well. Because of this focus on mathematics, it does
   not include logical vocabulary relevant to many other topics of
   philosophical importance. Examples of concepts it overlooks are the
   contrast between necessity and possibility and the problem of ethical
   obligation and permission. Similarly, it does not address the relations
   between past, present, and future.^[119] Such issues are addressed by
   extended logics. They build on the basic intuitions of classical logic
   and expand it by introducing new logical vocabulary. This way, the
   exact logical approach is applied to fields like ethics or epistemology
   that lie beyond the scope of mathematics.^[120]

Propositional logic

   [edit]

   Main article: Propositional calculus

   Propositional logic comprises formal systems in which formulae are
   built from atomic propositions using logical connectives. For instance,
   propositional logic represents the conjunction of two atomic
   propositions
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle P}</annotation>
   </semantics> :MATH]
   {\displaystyle P} and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>Q</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle Q}</annotation>
   </semantics> :MATH]
   {\displaystyle Q} as the complex formula
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> <mo>∧</mo> <mi>Q</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle P\land Q}</annotation>
   </semantics> :MATH]
   {\displaystyle P\land Q} . Unlike predicate logic where terms and
   predicates are the smallest units, propositional logic takes full
   propositions with truth values as its most basic component.^[121] Thus,
   propositional logics can only represent logical relationships that
   arise from the way complex propositions are built from simpler ones.
   But it cannot represent inferences that result from the inner structure
   of a proposition.^[122]

First-order logic

   [edit]

   Symbol introduced by Gottlob Frege for the universal quantifier Gottlob
   Frege's Begriffschrift introduced the notion of quantifier in a
   graphical notation, which here represents the judgment that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">∀</mi>
   <mi>x</mi> <mo>.</mo> <mi>F</mi> <mo stretchy="false">(</mo> <mi>x</mi>
   <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \forall
   x.F(x)}</annotation> </semantics> :MATH]
   {\displaystyle \forall x.F(x)} is true.

   Main article: First-order logic

   First-order logic includes the same propositional connectives as
   propositional logic but differs from it because it articulates the
   internal structure of propositions. This happens through devices such
   as singular terms, which refer to particular objects, predicates, which
   refer to properties and relations, and quantifiers, which treat notions
   like "some" and "all".^[123] For example, to express the proposition
   "this raven is black", one may use the predicate
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>B</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle B}</annotation>
   </semantics> :MATH]
   {\displaystyle B} for the property "black" and the singular term
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>r</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle r}</annotation>
   </semantics> :MATH]
   {\displaystyle r} referring to the raven to form the expression
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>B</mi> <mo
   stretchy="false">(</mo> <mi>r</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle B(r)}</annotation>
   </semantics> :MATH]
   {\displaystyle B(r)} . To express that some objects are black, the
   existential quantifier
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">∃</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \exists }</annotation>
   </semantics> :MATH]
   {\displaystyle \exists } is combined with the variable
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>x</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle x}</annotation>
   </semantics> :MATH]
   {\displaystyle x} to form the proposition
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">∃</mi>
   <mi>x</mi> <mi>B</mi> <mo stretchy="false">(</mo> <mi>x</mi> <mo
   stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \exists xB(x)}</annotation>
   </semantics> :MATH]
   {\displaystyle \exists xB(x)} . First-order logic contains various
   rules of inference that determine how expressions articulated this way
   can form valid arguments, for example, that one may infer
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">∃</mi>
   <mi>x</mi> <mi>B</mi> <mo stretchy="false">(</mo> <mi>x</mi> <mo
   stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \exists xB(x)}</annotation>
   </semantics> :MATH]
   {\displaystyle \exists xB(x)} from
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>B</mi> <mo
   stretchy="false">(</mo> <mi>r</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle B(r)}</annotation>
   </semantics> :MATH]
   {\displaystyle B(r)} .^[124]

Extended

   [edit]

   Extended logics are logical systems that accept the basic principles of
   classical logic. They introduce additional symbols and principles to
   apply it to fields like metaphysics, ethics, and epistemology.^[125]

Modal logic

   [edit]

   Main article: Modal logic

   Modal logic is an extension of classical logic. In its original form,
   sometimes called "alethic modal logic", it introduces two new symbols:
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>◊</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \Diamond
   }</annotation> </semantics> :MATH]
   {\displaystyle \Diamond } expresses that something is possible while
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>◻</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \Box
   }</annotation> </semantics> :MATH]
   {\displaystyle \Box } expresses that something is necessary.^[126] For
   example, if the formula
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>B</mi> <mo
   stretchy="false">(</mo> <mi>s</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle B(s)}</annotation>
   </semantics> :MATH]
   {\displaystyle B(s)} stands for the sentence "Socrates is a banker"
   then the formula
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>◊</mi> <mi>B</mi> <mo
   stretchy="false">(</mo> <mi>s</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Diamond B(s)}</annotation>
   </semantics> :MATH]
   {\displaystyle \Diamond B(s)} articulates the sentence "It is possible
   that Socrates is a banker".^[127] To include these symbols in the
   logical formalism, modal logic introduces new rules of inference that
   govern what role they play in inferences. One rule of inference states
   that, if something is necessary, then it is also possible. This means
   that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>◊</mi> <mi>A</mi> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   \Diamond A}</annotation> </semantics> :MATH]
   {\displaystyle \Diamond A} follows from
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>◻</mi> <mi>A</mi> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle \Box
   A}</annotation> </semantics> :MATH]
   {\displaystyle \Box A} . Another principle states that if a proposition
   is necessary then its negation is impossible and vice versa. This means
   that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>◻</mi> <mi>A</mi> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle \Box
   A}</annotation> </semantics> :MATH]
   {\displaystyle \Box A} is equivalent to
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mi>◊</mi> <mi mathvariant="normal">¬</mi> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \lnot \Diamond
   \lnot A}</annotation> </semantics> :MATH]
   {\displaystyle \lnot \Diamond \lnot A} .^[128]

   Other forms of modal logic introduce similar symbols but associate
   different meanings with them to apply modal logic to other fields. For
   example, deontic logic concerns the field of ethics and introduces
   symbols to express the ideas of obligation and permission, i.e. to
   describe whether an agent has to perform a certain action or is allowed
   to perform it.^[129] The modal operators in temporal modal logic
   articulate temporal relations. They can be used to express, for
   example, that something happened at one time or that something is
   happening all the time.^[129] In epistemology, epistemic modal logic is
   used to represent the ideas of knowing something in contrast to merely
   believing it to be the case.^[130]

Higher order logic

   [edit]

   Main article: Higher-order logic

   Higher-order logics extend classical logic not by using modal operators
   but by introducing new forms of quantification.^[131] Quantifiers
   correspond to terms like "all" or "some". In classical first-order
   logic, quantifiers are only applied to individuals. The formula "
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">∃</mi>
   <mi>x</mi> <mo stretchy="false">(</mo> <mi>A</mi> <mi>p</mi> <mi>p</mi>
   <mi>l</mi> <mi>e</mi> <mo stretchy="false">(</mo> <mi>x</mi> <mo
   stretchy="false">)</mo> <mo>∧</mo> <mi>S</mi> <mi>w</mi> <mi>e</mi>
   <mi>e</mi> <mi>t</mi> <mo stretchy="false">(</mo> <mi>x</mi> <mo
   stretchy="false">)</mo> <mo stretchy="false">)</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \exists
   x(Apple(x)\land Sweet(x))}</annotation> </semantics> :MATH]
   {\displaystyle \exists x(Apple(x)\land Sweet(x))} " (some apples are
   sweet) is an example of the existential quantifier "
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">∃</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \exists }</annotation>
   </semantics> :MATH]
   {\displaystyle \exists } " applied to the individual variable "
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>x</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle x}</annotation>
   </semantics> :MATH]
   {\displaystyle x} ". In higher-order logics, quantification is also
   allowed over predicates. This increases its expressive power. For
   example, to express the idea that Mary and John share some qualities,
   one could use the formula "
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">∃</mi>
   <mi>Q</mi> <mo stretchy="false">(</mo> <mi>Q</mi> <mo
   stretchy="false">(</mo> <mi>M</mi> <mi>a</mi> <mi>r</mi> <mi>y</mi> <mo
   stretchy="false">)</mo> <mo>∧</mo> <mi>Q</mi> <mo
   stretchy="false">(</mo> <mi>J</mi> <mi>o</mi> <mi>h</mi> <mi>n</mi> <mo
   stretchy="false">)</mo> <mo stretchy="false">)</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \exists
   Q(Q(Mary)\land Q(John))}</annotation> </semantics> :MATH]
   {\displaystyle \exists Q(Q(Mary)\land Q(John))} ". In this case, the
   existential quantifier is applied to the predicate variable "
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>Q</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle Q}</annotation>
   </semantics> :MATH]
   {\displaystyle Q} ".^[132] The added expressive power is especially
   useful for mathematics since it allows for more succinct formulations
   of mathematical theories.^[43] But it has drawbacks in regard to its
   meta-logical properties and ontological implications, which is why
   first-order logic is still more commonly used.^[133]

Deviant

   [edit]

   Main article: Deviant logic

   Deviant logics are logical systems that reject some of the basic
   intuitions of classical logic. Because of this, they are usually seen
   not as its supplements but as its rivals. Deviant logical systems
   differ from each other either because they reject different classical
   intuitions or because they propose different alternatives to the same
   issue.^[134]

   Intuitionistic logic is a restricted version of classical logic.^[135]
   It uses the same symbols but excludes some rules of inference. For
   example, according to the law of double negation elimination, if a
   sentence is not not true, then it is true. This means that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A} follows from
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mi mathvariant="normal">¬</mi> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \lnot \lnot
   A}</annotation> </semantics> :MATH]
   {\displaystyle \lnot \lnot A} . This is a valid rule of inference in
   classical logic but it is invalid in intuitionistic logic. Another
   classical principle not part of intuitionistic logic is the law of
   excluded middle. It states that for every sentence, either it or its
   negation is true. This means that every proposition of the form
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∨</mo> <mi
   mathvariant="normal">¬</mi> <mi>A</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\lor \lnot A}</annotation>
   </semantics> :MATH]
   {\displaystyle A\lor \lnot A} is true.^[135] These deviations from
   classical logic are based on the idea that truth is established by
   verification using a proof. Intuitionistic logic is especially
   prominent in the field of constructive mathematics, which emphasizes
   the need to find or construct a specific example to prove its
   existence.^[136]

   Multi-valued logics depart from classicality by rejecting the principle
   of bivalence, which requires all propositions to be either true or
   false. For instance, Jan Łukasiewicz and Stephen Cole Kleene both
   proposed ternary logics which have a third truth value representing
   that a statement's truth value is indeterminate.^[137] These logics
   have been applied in the field of linguistics. Fuzzy logics are
   multivalued logics that have an infinite number of "degrees of truth",
   represented by a real number between 0 and 1.^[138]

   Paraconsistent logics are logical systems that can deal with
   contradictions. They are formulated to avoid the principle of
   explosion: for them, it is not the case that anything follows from a
   contradiction.^[139] They are often motivated by dialetheism, the view
   that contradictions are real or that reality itself is contradictory.
   Graham Priest is an influential contemporary proponent of this position
   and similar views have been ascribed to Georg Wilhelm Friedrich
   Hegel.^[140]

Informal

   [edit]

   Main article: Informal logic

   Informal logic is usually carried out in a less systematic way. It
   often focuses on more specific issues, like investigating a particular
   type of fallacy or studying a certain aspect of argumentation.
   Nonetheless, some frameworks of informal logic have also been presented
   that try to provide a systematic characterization of the correctness of
   arguments.^[141]

   The pragmatic or dialogical approach to informal logic sees arguments
   as speech acts and not merely as a set of premises together with a
   conclusion.^[142] As speech acts, they occur in a certain context, like
   a dialogue, which affects the standards of right and wrong
   arguments.^[143] A prominent version by Douglas N. Walton understands a
   dialogue as a game between two players. The initial position of each
   player is characterized by the propositions to which they are committed
   and the conclusion they intend to prove. Dialogues are games of
   persuasion: each player has the goal of convincing the opponent of
   their own conclusion.^[144] This is achieved by making arguments:
   arguments are the moves of the game.^[145] They affect to which
   propositions the players are committed. A winning move is a successful
   argument that takes the opponent's commitments as premises and shows
   how one's own conclusion follows from them. This is usually not
   possible straight away. For this reason, it is normally necessary to
   formulate a sequence of arguments as intermediary steps, each of which
   brings the opponent a little closer to one's intended conclusion.
   Besides these positive arguments leading one closer to victory, there
   are also negative arguments preventing the opponent's victory by
   denying their conclusion.^[144] Whether an argument is correct depends
   on whether it promotes the progress of the dialogue. Fallacies, on the
   other hand, are violations of the standards of proper argumentative
   rules.^[146] These standards also depend on the type of dialogue. For
   example, the standards governing the scientific discourse differ from
   the standards in business negotiations.^[147]

   The epistemic approach to informal logic, on the other hand, focuses on
   the epistemic role of arguments.^[148] It is based on the idea that
   arguments aim to increase our knowledge. They achieve this by linking
   justified beliefs to beliefs that are not yet justified.^[149] Correct
   arguments succeed at expanding knowledge while fallacies are epistemic
   failures: they do not justify the belief in their conclusion.^[150] For
   example, the fallacy of begging the question is a fallacy because it
   fails to provide independent justification for its conclusion, even
   though it is deductively valid.^[151] In this sense, logical
   normativity consists in epistemic success or rationality.^[149] The
   Bayesian approach is one example of an epistemic approach.^[152]
   Central to Bayesianism is not just whether the agent believes something
   but the degree to which they believe it, the so-called credence.
   Degrees of belief are seen as subjective probabilities in the believed
   proposition, i.e. how certain the agent is that the proposition is
   true.^[153] On this view, reasoning can be interpreted as a process of
   changing one's credences, often in reaction to new incoming
   information.^[154] Correct reasoning and the arguments it is based on
   follow the laws of probability, for example, the principle of
   conditionalization. Bad or irrational reasoning, on the other hand,
   violates these laws.^[155]

Areas of research

   [edit]

   Logic is studied in various fields. In many cases, this is done by
   applying its formal method to specific topics outside its scope, like
   to ethics or computer science.^[156] In other cases, logic itself is
   made the subject of research in another discipline. This can happen in
   diverse ways. For instance, it can involve investigating the
   philosophical assumptions linked to the basic concepts used by
   logicians. Other ways include interpreting and analyzing logic through
   mathematical structures as well as studying and comparing abstract
   properties of formal logical systems.^[157]

Philosophy of logic and philosophical logic

   [edit]

   Main articles: Philosophy of logic and Philosophical logic

   Philosophy of logic is the philosophical discipline studying the scope
   and nature of logic.^[59] It examines many presuppositions implicit in
   logic, like how to define its basic concepts or the metaphysical
   assumptions associated with them.^[158] It is also concerned with how
   to classify logical systems and considers the ontological commitments
   they incur.^[159] Philosophical logic is one of the areas within the
   philosophy of logic. It studies the application of logical methods to
   philosophical problems in fields like metaphysics, ethics, and
   epistemology.^[160] This application usually happens in the form of
   extended or deviant logical systems.^[161]

Metalogic

   [edit]

   Main article: Metalogic

   Metalogic is the field of inquiry studying the properties of formal
   logical systems. For example, when a new formal system is developed,
   metalogicians may study it to determine which formulas can be proven in
   it. They may also study whether an algorithm could be developed to find
   a proof for each formula and whether every provable formula in it is a
   tautology. Finally, they may compare it to other logical systems to
   understand its distinctive features. A key issue in metalogic concerns
   the relation between syntax and semantics. The syntactic rules of a
   formal system determine how to deduce conclusions from premises, i.e.
   how to formulate proofs. The semantics of a formal system governs which
   sentences are true and which ones are false. This determines the
   validity of arguments since, for valid arguments, it is impossible for
   the premises to be true and the conclusion to be false. The relation
   between syntax and semantics concerns issues like whether every valid
   argument is provable and whether every provable argument is valid.
   Metalogicians also study whether logical systems are complete, sound,
   and consistent. They are interested in whether the systems are
   decidable and what expressive power they have. Metalogicians usually
   rely heavily on abstract mathematical reasoning when examining and
   formulating metalogical proofs. This way, they aim to arrive at precise
   and general conclusions on these topics.^[162]

Mathematical logic

   [edit]

   Main article: Mathematical logic

   Photograph of Bertrand Russell Bertrand Russell made various
   contributions to mathematical logic.^[163]

   The term "mathematical logic" is sometimes used as a synonym of "formal
   logic". But in a more restricted sense, it refers to the study of logic
   within mathematics. Major subareas include model theory, proof theory,
   set theory, and computability theory.^[164] Research in mathematical
   logic commonly addresses the mathematical properties of formal systems
   of logic. However, it can also include attempts to use logic to analyze
   mathematical reasoning or to establish logic-based foundations of
   mathematics.^[165] The latter was a major concern in early 20th-century
   mathematical logic, which pursued the program of logicism pioneered by
   philosopher-logicians such as Gottlob Frege, Alfred North Whitehead,
   and Bertrand Russell. Mathematical theories were supposed to be logical
   tautologies, and their program was to show this by means of a reduction
   of mathematics to logic. Many attempts to realize this program failed,
   from the crippling of Frege's project in his Grundgesetze by Russell's
   paradox, to the defeat of Hilbert's program by Gödel's incompleteness
   theorems.^[166]

   Set theory originated in the study of the infinite by Georg Cantor, and
   it has been the source of many of the most challenging and important
   issues in mathematical logic. They include Cantor's theorem, the status
   of the Axiom of Choice, the question of the independence of the
   continuum hypothesis, and the modern debate on large cardinal
   axioms.^[167]

   Computability theory is the branch of mathematical logic that studies
   effective procedures to solve calculation problems. One of its main
   goals is to understand whether it is possible to solve a given problem
   using an algorithm. For instance, given a certain claim about the
   positive integers, it examines whether an algorithm can be found to
   determine if this claim is true. Computability theory uses various
   theoretical tools and models, such as Turing machines, to explore this
   type of issue.^[168]

Computational logic

   [edit]

   Main articles: Computational logic and Logic in computer science

   Diagram of an AND gate using transistors Conjunction (AND) is one of
   the basic operations of Boolean logic. It can be electronically
   implemented in several ways, for example, by using two transistors.

   Computational logic is the branch of logic and computer science that
   studies how to implement mathematical reasoning and logical formalisms
   using computers. This includes, for example, automatic theorem provers,
   which employ rules of inference to construct a proof step by step from
   a set of premises to the intended conclusion without human
   intervention.^[169] Logic programming languages are designed
   specifically to express facts using logical formulas and to draw
   inferences from these facts. For example, Prolog is a logic programming
   language based on predicate logic.^[170] Computer scientists also apply
   concepts from logic to problems in computing. The works of Claude
   Shannon were influential in this regard. He showed how Boolean logic
   can be used to understand and implement computer circuits.^[171] This
   can be achieved using electronic logic gates, i.e. electronic circuits
   with one or more inputs and usually one output. The truth values of
   propositions are represented by voltage levels. In this way, logic
   functions can be simulated by applying the corresponding voltages to
   the inputs of the circuit and determining the value of the function by
   measuring the voltage of the output.^[172]

Formal semantics of natural language

   [edit]

   Main article: Formal semantics (natural language)

   Formal semantics is a subfield of logic, linguistics, and the
   philosophy of language. The discipline of semantics studies the meaning
   of language. Formal semantics uses formal tools from the fields of
   symbolic logic and mathematics to give precise theories of the meaning
   of natural language expressions. It understands meaning usually in
   relation to truth conditions, i.e. it examines in which situations a
   sentence would be true or false. One of its central methodological
   assumptions is the principle of compositionality. It states that the
   meaning of a complex expression is determined by the meanings of its
   parts and how they are combined. For example, the meaning of the verb
   phrase "walk and sing" depends on the meanings of the individual
   expressions "walk" and "sing". Many theories in formal semantics rely
   on model theory. This means that they employ set theory to construct a
   model and then interpret the meanings of expression in relation to the
   elements in this model. For example, the term "walk" may be interpreted
   as the set of all individuals in the model that share the property of
   walking. Early influential theorists in this field were Richard
   Montague and Barbara Partee, who focused their analysis on the English
   language.^[173]

Epistemology of logic

   [edit]

   The epistemology of logic studies how one knows that an argument is
   valid or that a proposition is logically true.^[174] This includes
   questions like how to justify that modus ponens is a valid rule of
   inference or that contradictions are false.^[175] The traditionally
   dominant view is that this form of logical understanding belongs to
   knowledge a priori.^[176] In this regard, it is often argued that the
   mind has a special faculty to examine relations between pure ideas and
   that this faculty is also responsible for apprehending logical
   truths.^[177] A similar approach understands the rules of logic in
   terms of linguistic conventions. On this view, the laws of logic are
   trivial since they are true by definition: they just express the
   meanings of the logical vocabulary.^[178]

   Some theorists, like Hilary Putnam and Penelope Maddy, object to the
   view that logic is knowable a priori. They hold instead that logical
   truths depend on the empirical world. This is usually combined with the
   claim that the laws of logic express universal regularities found in
   the structural features of the world. According to this view, they may
   be explored by studying general patterns of the fundamental sciences.
   For example, it has been argued that certain insights of quantum
   mechanics refute the principle of distributivity in classical logic,
   which states that the formula
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∧</mo> <mo
   stretchy="false">(</mo> <mi>B</mi> <mo>∨</mo> <mi>C</mi> <mo
   stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\land (B\lor
   C)}</annotation> </semantics> :MATH]
   {\displaystyle A\land (B\lor C)} is equivalent to
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo stretchy="false">(</mo>
   <mi>A</mi> <mo>∧</mo> <mi>B</mi> <mo stretchy="false">)</mo> <mo>∨</mo>
   <mo stretchy="false">(</mo> <mi>A</mi> <mo>∧</mo> <mi>C</mi> <mo
   stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle (A\land B)\lor (A\land
   C)}</annotation> </semantics> :MATH]
   {\displaystyle (A\land B)\lor (A\land C)} . This claim can be used as
   an empirical argument for the thesis that quantum logic is the correct
   logical system and should replace classical logic.^[179]

History

   [edit]

   Main article: History of logic

   Bust of Aristotle
   Portrait of Avicenna
   Portrait of William of Ockham
   Bust showing Gottlob Frege
   Top row: Aristotle, who established the canon of western
   philosophy;^[108] and Avicenna, who replaced Aristotelian logic in
   Islamic discourse.^[180] Bottom row: William of Ockham, a major figure
   of medieval scholarly thought;^[181] and Gottlob Frege, one of the
   founders of modern symbolic logic.^[182]

   Logic was developed independently in several cultures during antiquity.
   One major early contributor was Aristotle, who developed term logic in
   his Organon and Prior Analytics.^[183] He was responsible for the
   introduction of the hypothetical syllogism^[184] and temporal modal
   logic.^[185] Further innovations include inductive logic^[186] as well
   as the discussion of new logical concepts such as terms, predicables,
   syllogisms, and propositions. Aristotelian logic was highly regarded in
   classical and medieval times, both in Europe and the Middle East. It
   remained in wide use in the West until the early 19th century.^[187] It
   has now been superseded by later work, though many of its key insights
   are still present in modern systems of logic.^[188]

   Ibn Sina (Avicenna) was the founder of Avicennian logic, which replaced
   Aristotelian logic as the dominant system of logic in the Islamic
   world.^[189] It influenced Western medieval writers such as Albertus
   Magnus and William of Ockham.^[190] Ibn Sina wrote on the hypothetical
   syllogism^[191] and on the propositional calculus.^[192] He developed
   an original "temporally modalized" syllogistic theory, involving
   temporal logic and modal logic.^[193] He also made use of inductive
   logic, such as his methods of agreement, difference, and concomitant
   variation, which are critical to the scientific method.^[191] Fakhr
   al-Din al-Razi was another influential Muslim logician. He criticized
   Aristotelian syllogistics and formulated an early system of inductive
   logic, foreshadowing the system of inductive logic developed by John
   Stuart Mill.^[194]

   During the Middle Ages, many translations and interpretations of
   Aristotelian logic were made. The works of Boethius were particularly
   influential. Besides translating Aristotle's work into Latin, he also
   produced textbooks on logic.^[195] Later, the works of Islamic
   philosophers such as Ibn Sina and Ibn Rushd (Averroes) were drawn on.
   This expanded the range of ancient works available to medieval
   Christian scholars since more Greek work was available to Muslim
   scholars that had been preserved in Latin commentaries. In 1323,
   William of Ockham's influential Summa Logicae was released. It is a
   comprehensive treatise on logic that discusses many basic concepts of
   logic and provides a systematic exposition of types of propositions and
   their truth conditions.^[196]

   In Chinese philosophy, the School of Names and Mohism were particularly
   influential. The School of Names focused on the use of language and on
   paradoxes. For example, Gongsun Long proposed the white horse paradox,
   which defends the thesis that a white horse is not a horse. The school
   of Mohism also acknowledged the importance of language for logic and
   tried to relate the ideas in these fields to the realm of ethics.^[197]

   In India, the study of logic was primarily pursued by the schools of
   Nyaya, Buddhism, and Jainism. It was not treated as a separate academic
   discipline and discussions of its topics usually happened in the
   context of epistemology and theories of dialogue or
   argumentation.^[198] In Nyaya, inference is understood as a source of
   knowledge (pramāṇa). It follows the perception of an object and tries
   to arrive at conclusions, for example, about the cause of this
   object.^[199] A similar emphasis on the relation to epistemology is
   also found in Buddhist and Jainist schools of logic, where inference is
   used to expand the knowledge gained through other sources.^[200] Some
   of the later theories of Nyaya, belonging to the Navya-Nyāya school,
   resemble modern forms of logic, such as Gottlob Frege's distinction
   between sense and reference and his definition of number.^[201]

   The syllogistic logic developed by Aristotle predominated in the West
   until the mid-19th century, when interest in the foundations of
   mathematics stimulated the development of modern symbolic logic.^[202]
   Many see Gottlob Frege's Begriffsschrift as the birthplace of modern
   logic. Gottfried Wilhelm Leibniz's idea of a universal formal language
   is often considered a forerunner. Other pioneers were George Boole, who
   invented Boolean algebra as a mathematical system of logic, and Charles
   Peirce, who developed the logic of relatives. Alfred North Whitehead
   and Bertrand Russell, in turn, condensed many of these insights in
   their work Principia Mathematica. Modern logic introduced novel
   concepts, such as functions, quantifiers, and relational predicates. A
   hallmark of modern symbolic logic is its use of formal language to
   precisely codify its insights. In this regard, it departs from earlier
   logicians, who relied mainly on natural language.^[203] Of particular
   influence was the development of first-order logic, which is usually
   treated as the standard system of modern logic.^[204] Its analytical
   generality allowed the formalization of mathematics and drove the
   investigation of set theory. It also made Alfred Tarski's approach to
   model theory possible and provided the foundation of modern
   mathematical logic.^[205]

See also

   [edit]

     * Philosophy portal

     * Glossary of logic
     * Outline of logic – Overview of and topical guide to logic
     * Critical thinking – Analysis of facts to form a judgment
     * List of logic journals
     * List of logic symbols – List of symbols used to express logical
       relations
     * List of logicians
     * Logic puzzle – Puzzle deriving from the mathematics field of
       deduction
     * Logical reasoning – Process of drawing correct inferences
     * Logos – Concept in philosophy, religion, rhetoric, and psychology
     * Vector logic

References

   [edit]

Notes

   [edit]

    1. ^ However, there are some forms of logic, like imperative logic,
       where this may not be the case.^[42]
    2. ^ Conductive arguments present reasons in favor of a conclusion
       without claiming that the reasons are strong enough to decisively
       support the conclusion.

Citations

   [edit]

    1. ^ Velleman 2006, pp. 8, 103.
    2. ^ Vickers 2022.
    3. ^ Nunes 2011, pp. 2066–2069.
    4. ^ Pépin 2004, Logos; Online Etymology Staff.
    5. ^ Hintikka 2019, lead section, §Nature and varieties of logic.
    6. ^ Hintikka 2019, §Nature and varieties of logic; Haack 1978,
       pp. 1–10, Philosophy of logics; Schlesinger, Keren-Portnoy & Parush
       2001, p. 220.
    7. ^ Hintikka & Sandu 2006, p. 13; Audi 1999b, Philosophy of logic;
       McKeon.
    8. ^ Blair & Johnson 2000, pp. 93–95; Craig 1996, Formal and informal
       logic.
    9. ^ Craig 1996, Formal and informal logic; Barnes 2007, p. 274;
       Planty-Bonjour 2012, p. 62; Rini 2010, p. 26.
   10. ^ MacFarlane 2017; Corkum 2015, pp. 753–767; Blair & Johnson 2000,
       pp. 93–95; Magnus 2005, pp. 12–4, 1.6 Formal languages.
   11. ^ ^a ^b McKeon; Craig 1996, Formal and informal logic.
   12. ^ Hintikka & Sandu 2006, p. 13.
   13. ^ Magnus 2005, Proofs, p. 102.
   14. ^ Hintikka & Sandu 2006, pp. 13–16; Makridis 2022, pp. 1–2; Runco &
       Pritzker 1999, p. 155.
   15. ^ Gómez-Torrente 2019; Magnus 2005, 1.5 Other logical notions, p.
       10.
   16. ^ ^a ^b Hintikka & Sandu 2006, p. 16.
   17. ^ Honderich 2005, logic, informal; Craig 1996, Formal and informal
       logic; Johnson 1999, pp. 265–268.
   18. ^ Craig 1996, Formal languages and systems; Simpson 2008, p. 14.
   19. ^ Craig 1996, Formal languages and systems.
   20. ^ Hintikka & Sandu 2006, pp. 22–3; Magnus 2005, pp. 8–9, 1.4
       Deductive validity; Johnson 1999, p. 267.
   21. ^ Haack 1978, pp. 1–2, 4, Philosophy of logics; Hintikka & Sandu
       2006, pp. 16–17; Jacquette 2006, Introduction: Philosophy of logic
       today, pp. 1–12.
   22. ^ Haack 1978, pp. 1–2, 4, Philosophy of logics; Jacquette 2006,
       pp. 1–12, Introduction: Philosophy of logic today.
   23. ^ Haack 1978, pp. 5–7, 9, Philosophy of logics; Hintikka & Sandu
       2006, pp. 31–2; Haack 1996, pp. 229–30.
   24. ^ Haack 1978, pp. 1–10, Philosophy of logics; Groarke 2021, lead
       section; 1.1 Formal and Informal Logic.
   25. ^ Johnson 2014, pp. 228–9.
   26. ^ Groarke 2021, lead section; 1. History; Audi 1999a, Informal
       logic; Johnson 1999, pp. 265–274.
   27. ^ Craig 1996, Formal and informal logic; Johnson 1999, p. 267.
   28. ^ Blair & Johnson 2000, pp. 93–97; Craig 1996, Formal and informal
       logic.
   29. ^ Johnson 1999, pp. 265–270; van Eemeren et al., pp. 1–45, Informal
       Logic.
   30. ^ Groarke 2021, 1.1 Formal and Informal Logic; Audi 1999a, Informal
       logic; Honderich 2005, logic, informal.
   31. ^ Blair & Johnson 2000, pp. 93–107; Groarke 2021, lead section; 1.1
       Formal and Informal Logic; van Eemeren et al., p. 169.
   32. ^ Oaksford & Chater 2007, p. 47.
   33. ^ Craig 1996, Formal and informal logic; Walton 1987, pp. 2–3, 6–8,
       1. A new model of argument; Engel 1982, pp. 59–92, 2. The medium of
       language.
   34. ^ Blair & Johnson 1987, pp. 147–51.
   35. ^ Falikowski & Mills 2022, p. 98; Weddle 2011, pp. 383–8, 36.
       Informal logic and the eductive-inductive distinction; Blair 2011,
       p. 47.
   36. ^ Vickers 2022; Nunes 2011, pp. 2066–9, Logical Reasoning and
       Learning.
   37. ^ Johnson 2014, p. 181; Johnson 1999, p. 267; Blair & Johnson 1987,
       pp. 147–51.
   38. ^ ^a ^b Vleet 2010, pp. ix–x, Introduction; Dowden; Stump.
   39. ^ Maltby, Day & Macaskill 2007, p. 564; Dowden.
   40. ^ Craig 1996, Formal and informal logic; Johnson 1999, pp. 265–270.
   41. ^ ^a ^b Audi 1999b, Philosophy of logic; Honderich 2005,
       philosophical logic.
   42. ^ Haack 1974, p. 51.
   43. ^ ^a ^b ^c ^d ^e Audi 1999b, Philosophy of logic.
   44. ^ Falguera, Martínez-Vidal & Rosen 2021; Tondl 2012, p. 111.
   45. ^ Olkowski & Pirovolakis 2019, pp. 65–66.
   46. ^ Audi 1999b, Philosophy of logic; Pietroski 2021.
   47. ^ Audi 1999b, Philosophy of logic; Kusch 2020; Rush 2014, pp. 1–10,
       189–190.
   48. ^ ^a ^b King 2019; Pickel 2020, pp. 2991–3006.
   49. ^ ^a ^b ^c Honderich 2005, philosophical logic.
   50. ^ Pickel 2020, pp. 2991–3006.
   51. ^ Honderich 2005, philosophical logic; Craig 1996, Philosophy of
       logic; Michaelson & Reimer 2019.
   52. ^ Michaelson & Reimer 2019.
   53. ^ Hintikka 2019, §Nature and varieties of logic; MacFarlane 2017.
   54. ^ Gómez-Torrente 2019; MacFarlane 2017; Honderich 2005,
       philosophical logic.
   55. ^ Gómez-Torrente 2019; Jago 2014, p. 41.
   56. ^ Magnus 2005, pp. 35–38, 3. Truth tables; Angell 1964, p. 164;
       Hall & O'Donnell 2000, p. 48.
   57. ^ Magnus 2005, pp. 35–45, 3. Truth tables; Angell 1964, p. 164.
   58. ^ Tarski 1994, p. 40.
   59. ^ ^a ^b Hintikka 2019, lead section, §Nature and varieties of
       logic; Audi 1999b, Philosophy of logic.
   60. ^ Blackburn 2008, argument; Stairs 2017, p. 343.
   61. ^ Copi, Cohen & Rodych 2019, p. 30.
   62. ^ Hintikka & Sandu 2006, p. 20; Backmann 2019, pp. 235–255; IEP
       Staff.
   63. ^ Hintikka & Sandu 2006, p. 16; Backmann 2019, pp. 235–255; IEP
       Staff.
   64. ^ Groarke 2021, 1.1 Formal and Informal Logic; Weddle 2011,
       pp. 383–8, 36. Informal logic and the eductive-inductive
       distinction; van Eemeren & Garssen 2009, p. 191.
   65. ^ Evans 2005, 8. Deductive Reasoning, p. 169.
   66. ^ McKeon.
   67. ^ Hintikka & Sandu 2006, pp. 13–4.
   68. ^ Hintikka & Sandu 2006, pp. 13–4; Blackburn 2016, rule of
       inference.
   69. ^ Blackburn 2016, rule of inference.
   70. ^ Dick & Müller 2017, p. 157.
   71. ^ Hintikka & Sandu 2006, p. 13; Backmann 2019, pp. 235–255; Douven
       2021.
   72. ^ Hintikka & Sandu 2006, p. 14; D'Agostino & Floridi 2009,
       pp. 271–315.
   73. ^ Hintikka & Sandu 2006, p. 14; Sagüillo 2014, pp. 75–88; Hintikka
       1970, pp. 135–152.
   74. ^ Hintikka & Sandu 2006, pp. 13–6; Backmann 2019, pp. 235–255; IEP
       Staff.
   75. ^ Rocci 2017, p. 26; Hintikka & Sandu 2006, pp. 13, 16; Douven
       2021.
   76. ^ IEP Staff; Douven 2021; Hawthorne 2021.
   77. ^ IEP Staff; Hawthorne 2021; Wilbanks 2010, pp. 107–124.
   78. ^ ^a ^b ^c ^d Douven 2021.
   79. ^ Groarke 2021, 4.1 AV Criteria; Possin 2016, pp. 563–593.
   80. ^ Scott & Marshall 2009, analytic induction; Houde & Camacho 2003,
       Induction.
   81. ^ ^a ^b Borchert 2006b, Induction.
   82. ^ ^a ^b Douven 2021; Koslowski 2017, Abductive reasoning and
       explanation.
   83. ^ ^a ^b Cummings 2010, Abduction, p. 1.
   84. ^ Hansen 2020; Chatfield 2017, p. 194.
   85. ^ Walton 1987, pp. 7, 1. A new model of argument; Hansen 2020.
   86. ^ Hansen 2020.
   87. ^ Hansen 2020; Walton 1987, pp. 63, 3. Logic of propositions.
   88. ^ Sternberg; Stone 2012, pp. 327–356.
   89. ^ Walton 1987, pp. 2–4, 1. A new model of argument; Dowden; Hansen
       2020.
   90. ^ Engel 1982, pp. 59–92, 2. The medium of language; Mackie 1967;
       Stump.
   91. ^ Stump; Engel 1982, pp. 143–212, 4. Fallacies of presumption.
   92. ^ Stump; Mackie 1967.
   93. ^ ^a ^b Hintikka & Sandu 2006, p. 20.
   94. ^ Hintikka & Sandu 2006, p. 20; Pedemonte 2018, pp. 1–17; Hintikka
       2023.
   95. ^ Boris & Alexander 2017, p. 74; Cook 2009, p. 124.
   96. ^ Flotyński 2020, p. 39; Berlemann & Mangold 2009, p. 194.
   97. ^ Gensler 2006, p. xliii; Font & Jansana 2017, p. 8.
   98. ^ Haack 1978, pp. 1–10, Philosophy of logics; Hintikka & Sandu
       2006, pp. 31–32; Jacquette 2006, pp. 1–12, Introduction: Philosophy
       of logic today.
   99. ^ Moore & Carling 1982, p. 53; Enderton 2001, pp. 12–13, Sentential
       Logic.
   100. ^ Lepore & Cumming 2012, p. 5.
   101. ^ Wasilewska 2018, pp. 145–6; Rathjen & Sieg 2022.
   102. ^ Sider 2010, pp. 34–42; Shapiro & Kouri Kissel 2022; Bimbo 2016,
       pp. 8–9.
   103. ^ Restall & Standefer 2023, pp. 91; Enderton 2001, pp. 131–146,
       Chapter 2.5; van Dalen 1994, Chapter 1.5.
   104. ^ Jacquette 2006, pp. 1–12, Introduction: Philosophy of logic
       today; Smith 2022; Groarke.
   105. ^ Haack 1996, 1. 'Alternative' in 'Alternative Logic'.
   106. ^ Haack 1978, pp. 1–10, Philosophy of logics; Haack 1996, 1.
       'Alternative' in 'Alternative Logic'; Wolf 1978, pp. 327–340.
   107. ^ Smith 2022; Groarke; Bobzien 2020.
   108. ^ ^a ^b Groarke.
   109. ^ Smith 2022; Magnus 2005, 2.2 Connectives.
   110. ^ Smith 2022; Bobzien 2020; Hintikka & Spade, Aristotle.
   111. ^ Westerståhl 1989, pp. 577–585.
   112. ^ ^a ^b Smith 2022; Groarke.
   113. ^ Smith 2022; Hurley 2015, 4. Categorical Syllogisms; Copi, Cohen
       & Rodych 2019, 6. Categorical Syllogisms.
   114. ^ Groarke; Hurley 2015, 4. Categorical Syllogisms; Copi, Cohen &
       Rodych 2019, 6. Categorical Syllogisms.
   115. ^ Hurley 2015, 4. Categorical Syllogisms.
   116. ^ Spriggs 2012, pp. 20–2.
   117. ^ Hintikka 2019, §Nature and varieties of logic, §Alternative
       logics; Hintikka & Sandu 2006, pp. 27–8; Bäck 2016, p. 317.
   118. ^ Shapiro & Kouri Kissel 2022.
   119. ^ Burgess 2009, 1. Classical logic.
   120. ^ Jacquette 2006, pp. 1–12, Introduction: Philosophy of logic
       today; Borchert 2006c, Logic, Non-Classical; Goble 2001,
       Introduction.
   121. ^ Brody 2006, pp. 535–536.
   122. ^ Klement 1995b.
   123. ^ Shapiro & Kouri Kissel 2022; Honderich 2005, philosophical
       logic; Michaelson & Reimer 2019.
   124. ^ Nolt 2021; Magnus 2005, 4 Quantified logic.
   125. ^ Bunnin & Yu 2009, p. 179; Garson 2023, Introduction.
   126. ^ Garson 2023; Sadegh-Zadeh 2015, p. 983.
   127. ^ Fitch 2014, p. 17.
   128. ^ Garson 2023; Carnielli & Pizzi 2008, p. 3; Benthem.
   129. ^ ^a ^b Garson 2023.
   130. ^ Rendsvig & Symons 2021.
   131. ^ Audi 1999b, Philosophy of logic; Väänänen 2021; Ketland 2005,
       Second Order Logic.
   132. ^ Audi 1999b, Philosophy of logic; Väänänen 2021; Daintith &
       Wright 2008, Predicate calculus.
   133. ^ Audi 1999b, Philosophy of logic; Ketland 2005, Second Order
       Logic.
   134. ^ Haack 1996, 1. 'Alternative' in 'Alternative Logic'; Wolf 1978,
       pp. 327–340.
   135. ^ ^a ^b Moschovakis 2022; Borchert 2006c, Logic, Non-Classical.
   136. ^ Borchert 2006c, Logic, Non-Classical; Bridges et al. 2023,
       pp. 73–74; Friend 2014, p. 101.
   137. ^ Sider 2010, Chapter 3.4; Gamut 1991, 5.5; Zegarelli 2010, p. 30.
   138. ^ Hájek 2006.
   139. ^ Borchert 2006c, Logic, Non-Classical; Priest, Tanaka & Weber
       2018; Weber.
   140. ^ Priest, Tanaka & Weber 2018; Weber; Haack 1996, Introduction.
   141. ^ Hansen 2020; Korb 2004, pp. 41–42, 48; Ritola 2008, p. 335.
   142. ^ Hansen 2020; Korb 2004, pp. 43–44; Ritola 2008, p. 335.
   143. ^ Walton 1987, pp. 2–3, 1. A new model of argument; Ritola 2008,
       p. 335.
   144. ^ ^a ^b Walton 1987, pp. 3–4, 18–22, 1. A new model of argument.
   145. ^ Walton 1987, pp. 3–4, 11, 18, 1. A new model of argument; Ritola
       2008, p. 335.
   146. ^ Hansen 2020; Walton 1987, pp. 3–4, 18–22, 3. Logic of
       propositions.
   147. ^ Ritola 2008, p. 335.
   148. ^ Hansen 2020; Korb 2004, pp. 43, 54–55.
   149. ^ ^a ^b Siegel & Biro 1997, pp. 277–292.
   150. ^ Hansen 2020; Korb 2004, pp. 41–70.
   151. ^ Mackie 1967; Siegel & Biro 1997, pp. 277–292.
   152. ^ Hansen 2020; Moore & Cromby 2016, p. 60.
   153. ^ Olsson 2018, pp. 431–442, Bayesian Epistemology; Hájek & Lin
       2017, pp. 207–232; Hartmann & Sprenger 2010, pp. 609–620, Bayesian
       Epistemology.
   154. ^ Shermer 2022, p. 136.
   155. ^ Korb 2004, pp. 41–42, 44–46; Hájek & Lin 2017, pp. 207–232;
       Talbott 2016.
   156. ^ Hintikka 2019, §Logic and other disciplines; Haack 1978,
       pp. 1–10, Philosophy of logics.
   157. ^ Hintikka 2019, lead section, §Features and problems of logic;
       Gödel 1984, pp. 447–469, Russell's mathematical logic; Monk 1976,
       pp. 1–9, Introduction.
   158. ^ Jacquette 2006, pp. 1–12, Introduction: Philosophy of logic
       today.
   159. ^ Hintikka 2019, §Problems of ontology.
   160. ^ Jacquette 2006, pp. 1–12, Introduction: Philosophy of logic
       today; Burgess 2009, 1. Classical logic.
   161. ^ Goble 2001, Introduction; Hintikka & Sandu 2006, pp. 31–32.
   162. ^ Gensler 2006, pp. xliii–xliv; Sider 2010, pp. 4–6; Schagrin.
   163. ^ Irvine 2022.
   164. ^ Li 2010, p. ix; Rautenberg 2010, p. 15; Quine 1981, p. 1;
       Stolyar 1984, p. 2.
   165. ^ Stolyar 1984, pp. 3–6.
   166. ^ Hintikka & Spade, Gödel's incompleteness theorems; Linsky 2011,
       p. 4; Richardson 1998, p. 15.
   167. ^ Bagaria 2021; Cunningham.
   168. ^ Borchert 2006a, Computability Theory; Leary & Kristiansen 2015,
       p. 195.
   169. ^ Paulson 2018, pp. 1–14; Castaño 2018, p. 2; Wile, Goss & Roesner
       2005, p. 447.
   170. ^ Clocksin & Mellish 2003, pp. 237–238, 252–255, 257, The Relation
       of Prolog to Logic; Daintith & Wright 2008, Logic Programming
       Languages.
   171. ^ O'Regan 2016, p. 49; Calderbank & Sloane 2001, pp. 768.
   172. ^ Daintith & Wright 2008, Logic Gate.
   173. ^ Janssen & Zimmermann 2021, pp. 3–4; Partee 2016; King 2009,
       pp. 557–8; Aloni & Dekker 2016, pp. 22–23.
   174. ^ Warren 2020, 6. The Epistemology of Logic; Schechter.
   175. ^ Warren 2020, 6. The Epistemology of Logic.
   176. ^ Schechter.
   177. ^ Gómez-Torrente 2019.
   178. ^ Warren 2020, 6. The Epistemology of Logic; Gómez-Torrente 2019;
       Warren 2020, 1. What is Conventionalism.
   179. ^ Chua 2017, pp. 631–636; Wilce 2021; Putnam 1969, pp. 216–241.
   180. ^ Lagerlund 2018.
   181. ^ Spade & Panaccio 2019.
   182. ^ Haaparanta 2009, pp. 4–6, 1. Introduction; Hintikka & Spade,
       Modern logic, Logic since 1900.
   183. ^ Kline 1972, "A major achievement of Aristotle was the founding
       of the science of logic", p. 53; Łukasiewicz 1957, p. 7; Liu & Guo
       2023, p. 15.
   184. ^ Lear 1980, p. 34.
   185. ^ Knuuttila 1980, p. 71; Fisher, Gabbay & Vila 2005, p. 119.
   186. ^ Berman 2009, p. 133.
   187. ^ Frede; Groarke.
   188. ^ Ewald 2019; Smith 2022.
   189. ^ Hasse 2008; Lagerlund 2018.
   190. ^ Washell 1973, pp. 445–50; Kneale & Kneale 1962, pp. 229, 266.
   191. ^ ^a ^b Goodman 2003, p. 155.
   192. ^ Goodman 1992, p. 188.
   193. ^ Hintikka & Spade, Arabic Logic.
   194. ^ Iqbal 2013, pp. 99–115, The Spirit of Muslim Culture.
   195. ^ Marenbon 2021, Introduction; 3. The Logical Text-Books; Hintikka
       & Spade.
   196. ^ Hintikka & Spade; Hasse 2008; Spade & Panaccio 2019.
   197. ^ Willman 2022; Rošker 2015, pp. 301–309.
   198. ^ Sarukkai & Chakraborty 2022, pp. 117–8.
   199. ^ Dasti, Lead section; 1b. Inference; Mills 2018, p. 121.
   200. ^ Emmanuel 2015, pp. 320–2; Vidyabhusana 1988, p. 221.
   201. ^ Chakrabarti 1976, pp. 554–563.
   202. ^ Groarke; Haaparanta 2009, pp. 3–5, 1. Introduction.
   203. ^ Haaparanta 2009, pp. 4–6; Hintikka & Spade, Modern logic, Logic
       since 1900.
   204. ^ Ewald 2019.
   205. ^ Ewald 2019; Schreiner 2021, p. 22.

Bibliography

   [edit]

     * Aloni, Maria; Dekker, Paul (7 July 2016). The Cambridge Handbook of
       Formal Semantics. Cambridge University Press. pp. 22–23.
       ISBN 978-1-316-55273-5.
     *

   Angell, Richard B. (1964). Reasoning and Logic. Ardent Media. p. 164.
   OCLC 375322.

     Audi, Robert (1999a). "Informal logic". The Cambridge Dictionary of
   Philosophy. Cambridge University Press. p. 435. ISBN 978-1-107-64379-6.
   Archived from the original on 14 April 2021. Retrieved 29 December
   2021.

     Audi, Robert (1999b). "Philosophy of logic". The Cambridge Dictionary
   of Philosophy. Cambridge University Press. pp. 679–681.
   ISBN 978-1-107-64379-6. Archived from the original on 14 April 2021.
   Retrieved 29 December 2021.

     Backmann, Marius (1 June 2019). "Varieties of Justification—How (Not)
   to Solve the Problem of Induction". Acta Analytica. 34 (2): 235–255.
   doi:10.1007/s12136-018-0371-6. ISSN 1874-6349. S2CID 125767384.

     Bagaria, Joan (2021). "Set Theory". The Stanford Encyclopedia of
   Philosophy. Metaphysics Research Lab, Stanford University. Retrieved 23
   September 2022.

     Barnes, Jonathan (25 January 2007). Truth, etc.: Six Lectures on
   Ancient Logic. Clarendon Press. p. 274. ISBN 978-0-19-151574-3.

     Benthem, Johan van. "Modal Logic: Contemporary View: 1. Modal Notions
   and Reasoning Patterns: a First Pass". Internet Encyclopedia of
   Philosophy. Retrieved 11 March 2023.

     Berlemann, Lars; Mangold, Stefan (10 July 2009). Cognitive Radio and
   Dynamic Spectrum Access. John Wiley & Sons. p. 194.
   ISBN 978-0-470-75443-6.

     Berman, Harold J. (1 July 2009). Law and Revolution, the Formation of
   the Western Legal Tradition. Harvard University Press.
   ISBN 978-0-674-02085-6.

     Bimbo, Katalin (2 April 2016). J. Michael Dunn on Information Based
   Logics. Springer. pp. 8–9. ISBN 978-3-319-29300-4.

     Blackburn, Simon (1 January 2008). "argument". The Oxford Dictionary
   of Philosophy. Oxford University Press. ISBN 978-0-19-954143-0.
   Archived from the original on 8 January 2022. Retrieved 8 January 2022.

     Blackburn, Simon (24 March 2016). "rule of inference". The Oxford
   Dictionary of Philosophy. Oxford University Press.
   ISBN 978-0-19-954143-0. Archived from the original on 8 January 2022.
   Retrieved 8 January 2022.

     Blair, J. Anthony; Johnson, Ralph H. (1987). "The Current State of
   Informal Logic". Informal Logic. 9 (2): 147–51.
   doi:10.22329/il.v9i2.2671. Archived from the original on 30 December
   2021. Retrieved 2 January 2022.

     Blair, J. Anthony; Johnson, Ralph H. (2000). "Informal Logic: An
   Overview". Informal Logic. 20 (2): 93–107. doi:10.22329/il.v20i2.2262.
   Archived from the original on 9 December 2021. Retrieved 29 December
   2021.

     Blair, J. Anthony (20 October 2011). Groundwork in the Theory of
   Argumentation: Selected Papers of J. Anthony Blair. Springer Science &
   Business Media. p. 47. ISBN 978-94-007-2363-4.

     Bobzien, Susanne (2020). "Ancient Logic: 2. Aristotle". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Archived from the original on 28 August 2018. Retrieved 3
   January 2022.

     Borchert, Donald, ed. (2006a). "Computability Theory". Macmillan
   Encyclopedia of Philosophy Volume 2 (2nd ed.). Macmillan. pp. 372–390.
   ISBN 978-0-02-865782-0.

     Borchert, Donald (2006b). "Induction". Macmillan Encyclopedia of
   Philosophy Volume 4 (2nd ed.). Macmillan. pp. 635–648.
   ISBN 978-0-02-865784-4. Archived from the original on 12 January 2021.
   Retrieved 4 January 2022.

     Borchert, Donald (2006c). "Logic, Non-Classical". Macmillan
   Encyclopedia of Philosophy Volume 5 (2nd ed.). Macmillan. pp. 485–492.
   ISBN 978-0-02-865785-1. Archived from the original on 12 January 2021.
   Retrieved 4 January 2022.

     Boris, Kulik; Alexander, Fridman (30 November 2017). N-ary Relations
   for Logical Analysis of Data and Knowledge. IGI Global. p. 74.
   ISBN 978-1-5225-2783-1.

     Bridges, Douglas; Ishihara, Hajime; Rathjen, Michael; Schwichtenberg,
   Helmut (30 April 2023). Handbook of Constructive Mathematics. Cambridge
   University Press. pp. 73–4. ISBN 978-1-316-51086-5.

     Brody, Boruch A. (2006). Encyclopedia of Philosophy. Vol. 5. Donald
   M. Borchert (2nd ed.). Thomson Gale/Macmillan Reference US.
   pp. 535–536. ISBN 978-0-02-865780-6. OCLC 61151356. "The two most
   important types of logical calculi are propositional (or sentential)
   calculi and functional (or predicate) calculi. A propositional calculus
   is a system containing propositional variables and connectives (some
   also contain propositional constants) but not individual or functional
   variables or constants. In the extended propositional calculus,
   quantifiers whose operator variables are propositional variables are
   added."

     Bunnin, Nicholas; Yu, Jiyuan (27 January 2009). The Blackwell
   Dictionary of Western Philosophy. John Wiley & Sons. p. 179.
   ISBN 978-1-4051-9112-8.

     Burgess, John P. (2009). "1. Classical logic". Philosophical Logic.
   Princeton, NJ: Princeton University Press. pp. 1–12.
   ISBN 978-0-691-15633-0. Archived from the original on 16 December 2021.
   Retrieved 4 January 2022.

     Bäck, Allan T. (2016). Aristotle's Theory of Predication. Brill.
   p. 317. ISBN 978-90-04-32109-0.

     Calderbank, Robert; Sloane, Neil J. A. (April 2001). "Claude Shannon
   (1916–2001)". Nature. 410 (6830): 768. doi:10.1038/35071223.
   ISSN 1476-4687. PMID 11298432. S2CID 4402158.

     Carnielli, Walter; Pizzi, Claudio (2008). Modalities and
   Multimodalities. Springer Science & Business Media. p. 3.
   ISBN 978-1-4020-8590-1.

     Castaño, Arnaldo Pérez (23 May 2018). Practical Artificial
   Intelligence: Machine Learning, Bots, and Agent Solutions Using C#.
   Apress. p. 2. ISBN 978-1-4842-3357-3.

     Chakrabarti, Kisor Kumar (June 1976). "Some Comparisons Between
   Frege's Logic and Navya-Nyaya Logic". Philosophy and Phenomenological
   Research. 36 (4): 554–563. doi:10.2307/2106873. JSTOR 2106873.

     Chatfield, Tom (2017). Critical Thinking: Your Guide to Effective
   Argument, Successful Analysis and Independent Study. Sage. p. 194.
   ISBN 978-1-5264-1877-7.

     Chua, Eugene (2017). "An Empirical Route to Logical
   'Conventionalism'". Logic, Rationality, and Interaction. Lecture Notes
   in Computer Science. Vol. 10455. pp. 631–636.
   doi:10.1007/978-3-662-55665-8_43. ISBN 978-3-662-55664-1.

     Clocksin, William F.; Mellish, Christopher S. (2003). "The Relation
   of Prolog to Logic". Programming in Prolog: Using the ISO Standard.
   Springer. pp. 237–257. doi:10.1007/978-3-642-55481-0_10.
   ISBN 978-3-642-55481-0.

     Cook, Roy T. (2009). Dictionary of Philosophical Logic. Edinburgh
   University Press. p. 124. ISBN 978-0-7486-3197-1.

     Copi, Irving M.; Cohen, Carl; Rodych, Victor (2019). Introduction to
   Logic. Routledge. ISBN 978-1-351-38697-5.

     Corkum, Philip (2015). "Generality and Logical Constancy". Revista
   Portuguesa de Filosofia. 71 (4): 753–767.
   doi:10.17990/rpf/2015_71_4_0753. ISSN 0870-5283. JSTOR 43744657.

     Craig, Edward (1996). Routledge Encyclopedia of Philosophy.
   Routledge. ISBN 978-0-415-07310-3. Archived from the original on 16
   January 2021. Retrieved 29 December 2021.

     Cummings, Louise (2010). "Abduction". The Routledge Pragmatics
   Encyclopedia. Routledge. p. 1. ISBN 978-1-135-21457-9.

     Cunningham, Daniel. "Set Theory". Internet Encyclopedia of
   Philosophy. Retrieved 23 September 2022.

     D'Agostino, Marcello; Floridi, Luciano (2009). "The Enduring Scandal
   of Deduction: Is Propositional Logic Really Uninformative?". Synthese.
   167 (2): 271–315. doi:10.1007/s11229-008-9409-4. hdl:2299/2995.
   ISSN 0039-7857. JSTOR 40271192. S2CID 9602882.

     Daintith, John; Wright, Edmund (2008). A Dictionary of Computing.
   OUP. ISBN 978-0-19-923400-4.

     van Dalen, Dirk (1994). Logic and Structure. Springer. Chapter 1.5.
   ISBN 978-0-387-57839-2.

     Dasti, Matthew R. "Nyaya". Internet Encyclopedia of Philosophy.
   Retrieved 12 March 2023.

     Dick, Anthony S.; Müller, Ulrich (2017). Advancing Developmental
   Science: Philosophy, Theory, and Method. Taylor & Francis. p. 157.
   ISBN 978-1-351-70456-4.

     Douven, Igor (2021). "Abduction". The Stanford Encyclopedia of
   Philosophy. Metaphysics Research Lab, Stanford University. Archived
   from the original on 7 September 2021. Retrieved 24 August 2021.

     Dowden, Bradley. "Fallacies". Internet Encyclopedia of Philosophy.
   Archived from the original on 29 April 2010. Retrieved 19 March 2021.

     van Eemeren, Frans H.; Garssen, Bart (2009). Pondering on Problems of
   Argumentation: Twenty Essays on Theoretical Issues. Springer Science &
   Business Media. p. 191. ISBN 978-1-4020-9165-0.

     van Eemeren, Frans H.; Garssen, Bart; Krabbe, Erik C. W.; Snoeck
   Henkemans, A. Francisca; Verheij, Bart; Wagemans, Jean H. M. (2021).
   "Informal Logic". Handbook of Argumentation Theory. Springer
   Netherlands. pp. 1–45. doi:10.1007/978-94-007-6883-3_7-1.
   ISBN 978-94-007-6883-3. Archived from the original on 31 December 2021.
   Retrieved 2 January 2022.

     van Eemeren, Frans H.; Grootendorst, Rob; Johnson, Ralph H.; Plantin,
   Christian; Willard, Charles A. (2013). Fundamentals of Argumentation
   Theory: A Handbook of Historical Backgrounds and Contemporary
   Developments. Routledge. p. 169. ISBN 978-1-136-68804-1.

     Emmanuel, Steven M. (2015). A Companion to Buddhist Philosophy. John
   Wiley & Sons. pp. 320–2. ISBN 978-1-119-14466-3.

     Enderton, Herbert (2001). A Mathematical Introduction to Logic.
   Elsevier. ISBN 978-0-12-238452-3.

     Engel, S. Morris (1982). With Good Reason an Introduction to Informal
   Fallacies. St. Martin's Press. ISBN 978-0-312-08479-0. Archived from
   the original on 1 March 2022. Retrieved 2 January 2022.

     Evans, Jonathan St. B. T. (2005). "8. Deductive Reasoning". In
   Morrison, Robert (ed.). The Cambridge Handbook of Thinking and
   Reasoning. Cambridge University Press. p. 169. ISBN 978-0-521-82417-0.

     Ewald, William (2019). "The Emergence of First-Order Logic". The
   Stanford Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Retrieved 12 March 2023.

     Falguera, José L.; Martínez-Vidal, Concha; Rosen, Gideon (2021).
   "Abstract Objects". The Stanford Encyclopedia of Philosophy.
   Metaphysics Research Lab, Stanford University. Archived from the
   original on 22 January 2021. Retrieved 7 January 2022.

     Falikowski, Anthony; Mills, Susan (2022). Experiencing Philosophy
   (2nd ed.). Broadview Press. p. 98. ISBN 978-1-77048-841-0.

     Fisher, Michael David; Gabbay, Dov M.; Vila, Lluis (2005). Handbook
   of Temporal Reasoning in Artificial Intelligence. Elsevier. p. 119.
   ISBN 978-0-08-053336-0.

     Fitch, G. W. (18 December 2014). Saul Kripke. Routledge. p. 17.
   ISBN 978-1-317-48917-7.

     Flotyński, Jakub (7 December 2020). Knowledge-Based Explorable
   Extended Reality Environments. Springer Nature. p. 39.
   ISBN 978-3-030-59965-2.

     Font, Josep Maria; Jansana, Ramon (2017). A General Algebraic
   Semantics for Sentential Logics. Cambridge University Press. p. 8.
   ISBN 978-1-107-16797-1.

     Frede, Michael. "Aristotle". Michigan Technological University.
   Retrieved 1 November 2022.

     Friend, Michele (2014). Introducing Philosophy of Mathematics.
   Routledge. p. 101. ISBN 978-1-317-49379-2.

     Gamut, L.T.F. (1991). Logic, Language and Meaning Vol 1: Introduction
   to Logic. University of Chicago Press. 5.5. ISBN 978-0-226-28085-1.

     Garson, James (2023). "Modal Logic". The Stanford Encyclopedia of
   Philosophy. Metaphysics Research Lab, Stanford University. Retrieved 11
   March 2023.

     Gensler, Harry J. (2006). The A to Z of Logic. Scarecrow Press.
   pp. xliii–xliv. ISBN 978-1-4617-3182-5.

     Goble, Lou (2001). "Introduction". The Blackwell Guide to
   Philosophical Logic. Wiley-Blackwell. pp. 1–8. ISBN 978-0-631-20692-7.
   Archived from the original on 7 December 2021. Retrieved 4 January
   2022.

     Goodman, Lenn Evan (1992). Avicenna. Routledge. p. 188.
   ISBN 978-0-415-01929-3.

     Goodman, Lenn Evan (2003). Islamic Humanism. Oxford University Press.
   p. 155. ISBN 978-0-19-513580-0.

     Groarke, Louis F. "Aristotle: Logic". Internet Encyclopedia of
   Philosophy. Archived from the original on 29 December 2021. Retrieved 1
   January 2022.

     Groarke, Leo (2021). "Informal Logic". The Stanford Encyclopedia of
   Philosophy. Metaphysics Research Lab, Stanford University. Archived
   from the original on 12 January 2022. Retrieved 31 December 2021.

     Gómez-Torrente, Mario (2019). "Logical Truth". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Archived from the original on 2 October 2021. Retrieved 22
   November 2021.

     Gödel, Kurt (1984). "Russell's mathematical logic". In Benacerraf,
   Paul; Putnam, Hilary (eds.). Philosophy of Mathematics: Selected
   Readings (2nd ed.). Cambridge University Press. pp. 447–469.
   ISBN 978-0-521-29648-9. Archived from the original on 11 January 2022.
   Retrieved 9 January 2022.

     Hájek, Petr (3 September 2006). "Fuzzy Logic". Stanford Encyclopedia
   of Philosophy. Metaphysics Research Lab, Stanford University. Retrieved
   19 July 2023.

     Hájek, Alan; Lin, Hanti (2017). "A Tale of Two Epistemologies?". Res
   Philosophica. 94 (2): 207–232. doi:10.11612/resphil.1540.
   S2CID 160029122. Archived from the original on 4 January 2022.
   Retrieved 4 January 2022.

     Hall, Cordelia; O'Donnell, John (2000). Discrete Mathematics Using a
   Computer. Springer Science & Business Media. p. 48.
   ISBN 978-1-85233-089-7.

     Houde, R.; Camacho, L. (2003). "Induction". New Catholic
   Encyclopedia. ISBN 978-0-7876-4004-0. Archived from the original on 8
   January 2022. Retrieved 8 January 2022.

     Haack, Susan (1974). Deviant Logic: Some Philosophical Issues. CUP
   Archive. p. 51. ISBN 978-0-521-20500-9.

     Haack, Susan (1978). "1. 'Philosophy of logics'". Philosophy of
   Logics. London and New York: Cambridge University Press. pp. 1–10.
   ISBN 978-0-521-29329-7. Archived from the original on 7 December 2021.
   Retrieved 29 December 2021.

     Haack, Susan (1996). Deviant Logic, Fuzzy Logic: Beyond the
   Formalism. University of Chicago Press. ISBN 978-0-226-31133-3.

     Haaparanta, Leila (2009). "1. Introduction". The Development of
   Modern Logic. Oxford University Press. pp. 4–6. ISBN 978-0-19-513731-6.

     Hansen, Hans (2020). "Fallacies". The Stanford Encyclopedia of
   Philosophy. Metaphysics Research Lab, Stanford University. Archived
   from the original on 29 March 2021. Retrieved 18 March 2021.

     Hartmann, Stephan; Sprenger, Jan (2010). "Bayesian Epistemology". The
   Routledge Companion to Epistemology. London: Routledge. pp. 609–620.
   ISBN 978-0-415-96219-3. Archived from the original on 16 May 2021.
   Retrieved 4 January 2022.

     Hasse, Dag Nikolaus (2008). "Influence of Arabic and Islamic
   Philosophy on the Latin West". The Stanford Encyclopedia of Philosophy.
   Metaphysics Research Lab, Stanford University. Retrieved 19 July 2023.

     Hawthorne, James (2021). "Inductive Logic". The Stanford Encyclopedia
   of Philosophy. Metaphysics Research Lab, Stanford University. Archived
   from the original on 21 January 2022. Retrieved 6 January 2022.

     Hintikka, Jaakko J. (2019). "Philosophy of logic". Encyclopædia
   Britannica. Archived from the original on 28 April 2015. Retrieved 21
   November 2021.

     Hintikka, Jaakko J. (2023). "Logical systems". Encyclopædia
   Britannica. Archived from the original on 7 December 2021. Retrieved 4
   December 2021.

     Hintikka, Jaakko (1970). "Information, Deduction, and the A Priori".
   Noûs. 4 (2): 135–152. doi:10.2307/2214318. ISSN 0029-4624.
   JSTOR 2214318.

     Hintikka, Jaakko; Sandu, Gabriel (2006). "What is Logic?". In
   Jacquette, D. (ed.). Philosophy of Logic. North Holland. pp. 13–39.
   ISBN 978-0-444-51541-4. Archived from the original on 7 December 2021.
   Retrieved 29 December 2021.

     Hintikka, Jaakko J.; Spade, Paul Vincent. "History of logic".
   Encyclopædia Britannica. Retrieved 23 September 2022.

     Honderich, Ted (2005). The Oxford Companion to Philosophy. Oxford
   University Press. ISBN 978-0-19-926479-7. Archived from the original on
   29 January 2021. Retrieved 2 January 2022.

     Hurley, Patrick J. (2015). "4. Categorical Syllogisms". Logic: The
   Essentials. Wadsworth. pp. 189–237. ISBN 978-1-305-59041-0.

     IEP Staff. "Deductive and Inductive Arguments". Archived from the
   original on 28 May 2010. Retrieved 6 January 2022.

     Iqbal, Mohammad (2013). "The Spirit of Muslim Culture". The
   Reconstruction of Religious Thought in Islam. Stanford University
   Press. pp. 99–115. ISBN 978-0-8047-8686-7.

     Irvine, Andrew David (2022). "Bertrand Russell". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Retrieved 29 September 2022.

     Jacquette, Dale (2006). "Introduction: Philosophy of logic today".
   Philosophy of Logic. North Holland. pp. 1–12. ISBN 978-0-444-51541-4.
   Archived from the original on 7 December 2021. Retrieved 29 December
   2021.

     Jago, Mark (2014). The Impossible: An Essay on Hyperintensionality.
   OUP Oxford. p. 41. ISBN 978-0-19-101915-9.

     Janssen, Theo M. V.; Zimmermann, Thomas Ede (2021). "Montague
   Semantics". The Stanford Encyclopedia of Philosophy. Metaphysics
   Research Lab, Stanford University. pp. 3–4. Retrieved 10 March 2023.

     Johnson, Ralph H. (1999). "The Relation Between Formal and Informal
   Logic". Argumentation. 13 (3): 265–274. doi:10.1023/A:1007789101256.
   S2CID 141283158. Archived from the original on 7 December 2021.
   Retrieved 2 January 2022.

     Johnson, Ralph H. (15 July 2014). The Rise of Informal Logic: Essays
   on Argumentation, Critical Thinking, Reasoning and Politics. University
   of Windsor. ISBN 978-0-920233-71-9.

     Ketland, Jeffrey (2005). "Second Order Logic". Macmillan Encyclopedia
   of Philosophy Volume 8. Macmillan Reference USA. pp. 707–708.
   ISBN 978-0-02-865788-2. Archived from the original on 7 December 2021.
   Retrieved 4 January 2022.

     King, Jeffrey C. (2 September 2009). "Formal Semantics". The Oxford
   Handbook of Philosophy of Language. pp. 557–8.
   doi:10.1093/oxfordhb/9780199552238.003.0023. ISBN 978-0-19-955223-8.

     King, Jeffrey C. (2019). "Structured Propositions". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Archived from the original on 25 October 2021. Retrieved 4
   December 2021.

     Klement, Kevin C. (1995b). "Propositional Logic". Internet
   Encyclopedia of Philosophy. ISSN 2161-0002. Retrieved 23 September
   2022.

     Kline, Morris (1972). Mathematical Thought From Ancient to Modern
   Times. Oxford University Press. ISBN 978-0-19-506135-2.

     Kneale, William; Kneale, Martha (1962). The Development of Logic.
   Clarendon Press. ISBN 978-0-19-824773-9.

     Knuuttila, Simo (1980). Reforging the Great Chain of Being: Studies
   of the History of Modal Theories. Springer Science & Business Media.
   p. 71. ISBN 978-90-277-1125-0.

     Korb, Kevin (2004). "Bayesian Informal Logic and Fallacy". Informal
   Logic. 24 (1): 41–70. doi:10.22329/il.v24i1.2132. Archived from the
   original on 10 November 2021. Retrieved 2 January 2022.

     Koslowski, Barbara (2017). "Abductive Reasoning and Explanation".
   International Handbook of Thinking and Reasoning. Routledge.
   pp. 366–382. doi:10.4324/9781315725697. ISBN 978-1-315-72569-7.
   Archived from the original on 8 January 2022. Retrieved 8 January 2022.

     Kusch, Martin (2020). "Psychologism". The Stanford Encyclopedia of
   Philosophy. Metaphysics Research Lab, Stanford University. Archived
   from the original on 29 December 2020. Retrieved 30 November 2021.

     Lagerlund, Henrik (27 September 2018). "Review of The Aftermath of
   Syllogism: Aristotelian Logical Argument from Avicenna to Hegel". Notre
   Dame Philosophical Reviews. Retrieved 19 July 2023.

     Lear, Jonathan (1980). Aristotle and Logical Theory. CUP Archive.
   p. 34. ISBN 978-0-521-31178-6.

     Leary, Christopher C.; Kristiansen, Lars (2015). A Friendly
   Introduction to Mathematical Logic. Suny. p. 195.
   ISBN 978-1-942341-07-9.

     Lepore, Ernest; Cumming, Sam (14 September 2012). Meaning and
   Argument: An Introduction to Logic Through Language. John Wiley & Sons.
   p. 5. ISBN 978-1-118-45521-0.

     Li, Wei (26 February 2010). Mathematical Logic: Foundations for
   Information Science. Springer Science & Business Media. p. ix.
   ISBN 978-3-7643-9977-1.

     Linsky, Bernard (2011). The Evolution of Principia Mathematica:
   Bertrand Russell's Manuscripts and Notes (2nd ed.). Cambridge
   University Press. p. 4. ISBN 978-1-139-49733-6.

     Liu, Shiyong; Guo, Kaizhong (7 March 2023). Error Logic: Paving
   Pathways for Intelligent Error Identification and Management. Springer
   Nature. p. 15. ISBN 978-3-031-00820-7.

     Łukasiewicz, Jan (1957). Aristotle's Syllogistic from the Standpoint
   of Modern Formal Logic (2nd ed.). Oxford University Press. p. 7.
   OCLC 656161566.

     MacFarlane, John (2017). "Logical Constants". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Archived from the original on 17 March 2020. Retrieved 21
   November 2021.

     Mackie, J. L. (1967). "Fallacies". encyclopedia.com. Archived from
   the original on 15 April 2021. Retrieved 19 March 2021.

     Magnus, P. D. (2005). Forall X: An Introduction to Formal Logic.
   Victoria, BC, Canada: State University of New York Oer Services.
   pp. 8–9. ISBN 978-1-64176-026-3. Archived from the original on 7
   December 2021. Retrieved 29 December 2021.

     Makridis, Odysseus (2022). Symbolic Logic. Springer Nature. pp. 1–2.
   ISBN 978-3-030-67396-3.

     Maltby, John; Day, Liz; Macaskill, Ann (2007). Personality,
   Individual Differences and Intelligence. Prentice Hall.
   ISBN 978-0-13-129760-9.

     Marenbon, John (2021). "Anicius Manlius Severinus Boethius". The
   Stanford Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University.

     McKeon, Matthew. "Logical Consequence". Internet Encyclopedia of
   Philosophy. Archived from the original on 12 November 2021. Retrieved
   20 November 2021.

     Michaelson, Eliot; Reimer, Marga (2019). "Reference". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Archived from the original on 7 December 2021. Retrieved 4
   December 2021.

     Mills, Ethan (2018). Three Pillars of Skepticism in Classical India:
   Nagarjuna, Jayarasi, and Sri Harsa. Rowman & Littlefield. p. 121.
   ISBN 978-1-4985-5570-8. "... for Nyāya all inference is ultimately
   rooted in perception ... Naiyāyikas typically accept four means of
   knowledge: perception, inference, comparison, and testimony."

     Monk, J. Donald (1976). "Introduction". Mathematical Logic. Springer.
   pp. 1–9. doi:10.1007/978-1-4684-9452-5_1. ISBN 978-1-4684-9452-5.
   Archived from the original on 9 January 2022. Retrieved 9 January 2022.

     Moore, Kevin; Cromby, John (8 August 2016). How Best to 'Go On'?
   Prospects for a 'Modern Synthesis' in the Sciences of Mind. Frontiers
   Media SA. p. 60. ISBN 978-2-88919-906-8.

     Moore, Terence; Carling, Christine (1982). Understanding Language:
   Towards a Post-Chomskyan Linguistics. Springer. p. 53.
   ISBN 978-1-349-16895-8.

     Moschovakis, Joan (2022). "Intuitionistic Logic". The Stanford
   Encyclopedia of Philosophy: Introduction. Metaphysics Research Lab,
   Stanford University. Retrieved 11 March 2023.

     Nolt, John (2021). "Free Logic: 1. The Basics". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Retrieved 10 September 2022.

     Nunes, Terezinha (2011). "Logical Reasoning and Learning". In Seel,
   Norbert M. (ed.). Encyclopedia of the Sciences of Learning. Springer
   Science & Business Media. pp. 2066–2069. ISBN 978-1-4419-1427-9.

     O'Regan, Gerard (2016). Introduction to the History of Computing: A
   Computing History Primer. Springer. p. 49. ISBN 978-3-319-33138-6.

     Oaksford, Mike; Chater, Nick (2007). Bayesian Rationality: The
   Probabilistic Approach to Human Reasoning. OUP Oxford. p. 47.
   ISBN 978-0-19-852449-6.

     Olkowski, Dorothea; Pirovolakis, Eftichis (31 January 2019). Deleuze
   and Guattari's Philosophy of Freedom: Freedom's Refrains. Routledge.
   pp. 65–66. ISBN 978-0-429-66352-9.

     Olsson, Erik J. (2018). "Bayesian Epistemology". Introduction to
   Formal Philosophy. Springer. pp. 431–442. ISBN 978-3-030-08454-7.
   Archived from the original on 16 May 2021. Retrieved 4 January 2022.

     Online Etymology Staff. "Logic". etymonline.com. Archived from the
   original on 29 December 2021. Retrieved 29 December 2021.

     Partee, Barbara H. (2016). Aloni, Maria; Dekker, Paul (eds.). The
   Cambridge Handbook of Formal Semantics. Cambridge University Press.
   ISBN 978-1-107-02839-5.

     Paulson, Lawrence C. (February 2018). "Computational Logic: Its
   Origins and Applications". Proceedings of the Royal Society A:
   Mathematical, Physical and Engineering Sciences. 474 (2210): 1–14.
   arXiv:1712.04375. Bibcode:2018RSPSA.47470872P.
   doi:10.1098/rspa.2017.0872. PMC 5832843. PMID 29507522. S2CID 3805901.

     Pedemonte, Bettina (25 June 2018). "Strategic vs Definitory Rules:
   Their Role in Abductive Argumentation and their Relationship with
   Deductive Proof". Eurasia Journal of Mathematics, Science and
   Technology Education. 14 (9): 1–17. doi:10.29333/ejmste/92562.
   ISSN 1305-8215. S2CID 126245285. Archived from the original on 7
   December 2021. Retrieved 8 January 2022.

     Pickel, Bryan (1 July 2020). "Structured Propositions and Trivial
   Composition". Synthese. 197 (7): 2991–3006.
   doi:10.1007/s11229-018-1853-1.
   hdl:20.500.11820/3427c028-f2cb-4216-a199-9679a49ce71c. ISSN 1573-0964.
   S2CID 49729020.

     Pietroski, Paul (2021). "Logical Form: 1. Patterns of Reason". The
   Stanford Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Archived from the original on 2 October 2021. Retrieved 4
   December 2021.

     Planty-Bonjour, Guy (2012). The Categories of Dialectical
   Materialism: Contemporary Soviet Ontology. Springer Science & Business
   Media. p. 62. ISBN 978-94-010-3517-0.

     Possin, Kevin (2016). "Conductive Arguments: Why is This Still a
   Thing?". Informal Logic. 36 (4): 563–593. doi:10.22329/il.v36i4.4527.
   Archived from the original on 8 January 2022. Retrieved 8 January 2022.

     Priest, Graham; Tanaka, Koji; Weber, Zach (2018). "Paraconsistent
   Logic". The Stanford Encyclopedia of Philosophy. Metaphysics Research
   Lab, Stanford University. Retrieved 14 December 2021.

     Pépin, Jean (2004). "Logos". Encyclopedia of Religion.
   ISBN 978-0-02-865733-2. Archived from the original on 29 December 2021.
   Retrieved 29 December 2021.

     Putnam, H. (1969). "Is Logic Empirical?". Boston Studies in the
   Philosophy of Science. Vol. 5. pp. 216–241.
   doi:10.1007/978-94-010-3381-7_5. ISBN 978-94-010-3383-1.

     Quine, Willard Van Orman (1981). Mathematical Logic. Harvard
   University Press. p. 1. ISBN 978-0-674-55451-1.

     Rathjen, Michael; Sieg, Wilfried (2022). "Proof Theory". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Retrieved 4 March 2023.

     Rautenberg, Wolfgang (1 July 2010). A Concise Introduction to
   Mathematical Logic. Springer. p. 15. ISBN 978-1-4419-1221-3.

     Rendsvig, Rasmus; Symons, John (2021). "Epistemic Logic". The
   Stanford Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Retrieved 11 March 2023.

     Restall, Greg; Standefer, Shawn (2023). Logical Methods. MIT Press.
   p. 91. ISBN 978-0-262-54484-9.

     Richardson, Alan W. (1998). Carnap's Construction of the World: The
   Aufbau and the Emergence of Logical Empiricism. Cambridge University
   Press. p. 15. ISBN 978-0-521-43008-1.

     Rini, Adriane (13 December 2010). Aristotle's Modal Proofs: Prior
   Analytics A8-22 in Predicate Logic. Springer Science & Business Media.
   p. 26. ISBN 978-94-007-0050-5.

     Ritola, Juho (1 December 2008). "Walton's Informal Logic: A Pragmatic
   Approach". Informal Logic. 28 (4): 335. doi:10.22329/il.v28i4.2856.

     Rocci, Andrea (8 March 2017). Modality in Argumentation: A Semantic
   Investigation of the Role of Modalities in the Structure of Arguments
   with an Application to Italian Modal Expressions. Springer. p. 26.
   ISBN 978-94-024-1063-1.

     Rošker, Jana S. (May 2015). "Classical Chinese Logic: Philosophy
   Compass". Philosophy Compass. 10 (5): 301–309. doi:10.1111/phc3.12226.

     Runco, Mark A.; Pritzker, Steven R. (1999). Encyclopedia of
   Creativity. Academic Press. p. 155. ISBN 978-0-12-227075-8.

     Rush, Penelope (2014). "Introduction". The Metaphysics of Logic.
   Cambridge University Press. pp. 1–10. ISBN 978-1-107-03964-3. Archived
   from the original on 7 December 2021. Retrieved 8 January 2022.

     Sadegh-Zadeh, Kazem (2015). Handbook of Analytic Philosophy of
   Medicine. Springer. p. 983. ISBN 978-94-017-9579-1.

     Sagüillo, José M. (2014). "Hintikka on Information and Deduction".
   Teorema: Revista Internacional de Filosofía. 33 (2): 75–88.
   ISSN 0210-1602. JSTOR 43047609.

     Sarukkai, Sundar; Chakraborty, Mihir Kumar (2022). Handbook of
   Logical Thought in India. Springer Nature. pp. 117–8.
   ISBN 978-81-322-2577-5.

     Schagrin, Morton L. "Metalogic". Encyclopædia Britannica. Retrieved
   23 September 2022.

     Schechter, Joshua. "Epistemology of Logic – Bibliography".
   PhilPapers. Retrieved 11 September 2022.

     Schlesinger, I. M.; Keren-Portnoy, Tamar; Parush, Tamar (1 January
   2001). The Structure of Arguments. John Benjamins Publishing. p. 220.
   ISBN 978-90-272-2359-3.

     Schreiner, Wolfgang (2021). Thinking Programs: Logical Modeling and
   Reasoning About Languages, Data, Computations, and Executions. Springer
   Nature. p. 22. ISBN 978-3-030-80507-4.

     Scott, John; Marshall, Gordon (2009). "analytic induction". A
   Dictionary of Sociology. Oxford University Press.
   ISBN 978-0-19-953300-8. Archived from the original on 8 January 2022.
   Retrieved 8 January 2022.

     Shapiro, Stewart; Kouri Kissel, Teresa (2022). "Classical Logic". The
   Stanford Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Retrieved 19 July 2023.

     Shermer, Michael (25 October 2022). Conspiracy: Why the Rational
   Believe the Irrational. JHU Press. ISBN 978-1-4214-4445-1.

     Sider, Theodore (2010). Logic for Philosophy. Oxford University
   Press. ISBN 978-0-19-957558-9.

     Siegel, Harvey; Biro, John (1997). "Epistemic Normativity,
   Argumentation, and Fallacies". Argumentation. 11 (3): 277–292.
   doi:10.1023/A:1007799325361. S2CID 126269789. Archived from the
   original on 28 February 2022. Retrieved 4 January 2022.

     Simpson, R. L. (2008). Essentials of Symbolic Logic (3rd ed.).
   Broadview Press. p. 14. ISBN 978-1-77048-495-5.

     Smith, Robin (2022). "Aristotle's Logic". The Stanford Encyclopedia
   of Philosophy. Metaphysics Research Lab, Stanford University. Retrieved
   11 March 2023.

     Spade, Paul Vincent; Panaccio, Claude (2019). "William of Ockham".
   The Stanford Encyclopedia of Philosophy. Metaphysics Research Lab,
   Stanford University.

     Spriggs, John (2012). GSN – The Goal Structuring Notation: A
   Structured Approach to Presenting Arguments. Springer Science &
   Business Media. pp. 20–22. ISBN 978-1-4471-2312-5.

     Stairs, Allen (2017). A Thinker's Guide to the Philosophy of
   Religion. Routledge. p. 343. ISBN 978-1-351-21981-5.

     Sternberg, Robert J. "Thought". Encyclopædia Britannica. Archived
   from the original on 13 October 2021. Retrieved 14 October 2021.

     Stolyar, Abram Aronovich (1 January 1984). Introduction to Elementary
   Mathematical Logic. Courier Corporation. ISBN 978-0-486-64561-2.

     Stone, Mark A. (2012). "Denying the Antecedent: Its Effective Use in
   Argumentation". Informal Logic. 32 (3): 327–356.
   doi:10.22329/il.v32i3.3681. Archived from the original on 28 February
   2022. Retrieved 8 January 2022.

     Stump, David J. "Fallacy, Logical". encyclopedia.com. Archived from
   the original on 15 February 2021. Retrieved 20 March 2021.

     Talbott, William (2016). "Bayesian Epistemology". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Archived from the original on 1 April 2021. Retrieved 6
   March 2021.

     Tarski, Alfred (1994). Introduction to Logic and to the Methodology
   of the Deductive Sciences. Oxford University Press. p. 40.
   ISBN 978-0-19-802139-1.

     Tondl, L. (2012). Problems of Semantics: A Contribution to the
   Analysis of the Language Science. Springer Science & Business Media.
   p. 111. ISBN 978-94-009-8364-9.

     Velleman, Daniel J. (2006). How to Prove It: A Structured Approach.
   Cambridge University Press. p. 8, 103. ISBN 978-0-521-67599-4.

     Vickers, John M. (2022). "Inductive Reasoning". Oxford
   Bibliographies. Oxford University Press. Retrieved 18 January 2023.

     Vidyabhusana, Satis Chandra (1988). A History of Indian Logic:
   Ancient, Mediaeval and Modern Schools. Motilal Banarsidass Publisher.
   p. 221. ISBN 978-81-208-0565-1.

     Vleet, Van Jacob E. (2010). "Introduction". Informal Logical
   Fallacies: A Brief Guide. Upa. pp. ix–x. ISBN 978-0-7618-5432-6.
   Archived from the original on 28 February 2022. Retrieved 2 January
   2022.

     Väänänen, Jouko (2021). "Second-order and Higher-order Logic". The
   Stanford Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Archived from the original on 30 October 2021. Retrieved 23
   November 2021.

     Walton, Douglas N. (1987). Informal Fallacies: Towards a Theory of
   Argument Criticisms. John Benjamins. ISBN 978-1-55619-010-0. Archived
   from the original on 2 March 2022. Retrieved 2 January 2022.

     Warren, Jared (2020). Shadows of Syntax: Revitalizing Logical and
   Mathematical Conventionalism. Oxford University Press.
   ISBN 978-0-19-008615-2.

     Washell, Richard F. (1973). "Logic, Language, and Albert the Great".
   Journal of the History of Ideas. 34 (3): 445–50. doi:10.2307/2708963.
   JSTOR 2708963.

     Wasilewska, Anita (2018). Logics for Computer Science: Classical and
   Non-Classical. Springer. pp. 145–6. ISBN 978-3-319-92591-2.

     Weber, Zach. "Paraconsistent Logic". Internet Encyclopedia of
   Philosophy. Retrieved 12 December 2021.

     Weddle, Perry (2011). "Chapter 36. Informal logic and the
   eductive-inductive distinction". Across the Lines of Disciplines. De
   Gruyter Mouton. pp. 383–388. doi:10.1515/9783110867718.383.
   ISBN 978-3-11-086771-8. Archived from the original on 31 December 2021.
   Retrieved 2 January 2022.

     Westerståhl, Dag (1989). "Aristotelian Syllogisms and Generalized
   Quantifiers". Studia Logica. 48 (4): 577–585. doi:10.1007/BF00370209.
   S2CID 32089424. Archived from the original on 4 January 2022. Retrieved
   4 January 2022.

     Wilbanks, Jan J. (1 March 2010). "Defining Deduction, Induction, and
   Validity". Argumentation. 24 (1): 107–124.
   doi:10.1007/s10503-009-9131-5. ISSN 1572-8374. S2CID 144481717.
   Archived from the original on 8 January 2022. Retrieved 8 January 2022.

     Wilce, Alexander (2021). "Quantum Logic and Probability Theory: 2.1
   Realist Quantum Logic". The Stanford Encyclopedia of Philosophy.
   Metaphysics Research Lab, Stanford University. Retrieved 11 March 2023.

     Wile, Bruce; Goss, John; Roesner, Wolfgang (2005). Comprehensive
   Functional Verification: The Complete Industry Cycle. Elsevier. p. 447.
   ISBN 978-0-08-047664-3.

     Willman, Marshall D. (2022). "Logic and Language in Early Chinese
   Philosophy". The Stanford Encyclopedia of Philosophy. Metaphysics
   Research Lab, Stanford University. Introduction. Retrieved 11 March
   2023.

     Wolf, Robert G. (1978). "Are Relevant Logics Deviant?". Philosophia.
   7 (2): 327–340. doi:10.1007/BF02378819. S2CID 143697796. Archived from
   the original on 16 December 2021. Retrieved 4 January 2022.

     Zegarelli, Mark (2010). Logic For Dummies. John Wiley & Sons. p. 30.
   ISBN 978-1-118-05307-2.

External links

   [edit]

   Listen to this article (1 hour and 9 minutes)
   Spoken Wikipedia icon
   This audio file was created from a revision of this article dated
   5 November 2023 (2023-11-05), and does not reflect subsequent edits.
   (Audio help · More spoken articles)

   Logic at Wikipedia's sister projects
     * Definitions from Wiktionary
     * Media from Commons
     * News from Wikinews
     * Quotations from Wikiquote
     * Texts from Wikisource
     * Textbooks from Wikibooks
     * Resources from Wikiversity

   Library resources about
   Logic
     __________________________________________________________________

     * Resources in your library
     * Resources in other libraries

     * v
     * t
     * e

   Logic

     * Outline
     * History

   Major fields

     * Computer science
     * Formal semantics (natural language)
     * Inference
     * Philosophy of logic
     * Proof
     * Semantics of logic
     * Syntax

   Logics
     * Classical
     * Informal
          + Critical thinking
          + Reason
     * Mathematical
     * Non-classical
     * Philosophical

   Theories
     * Argumentation
     * Metalogic
     * Metamathematics
     * Set

   Foundations

     * Abduction
     * Analytic and synthetic propositions
     * Antecedent
     * Consequent
     * Contradiction
          + Paradox
          + Antinomy
     * Deduction
     * Deductive closure
     * Definition
     * Description
     * Entailment
          + Linguistic
     * Form
     * Induction
     * Logical truth
     * Name
     * Necessity and sufficiency
     * Premise
     * Probability
     * Proposition
     * Reference
     * Statement
     * Substitution
     * Truth
     * Validity

   Lists

   topics
     * Mathematical logic
     * Boolean algebra
     * Set theory

   other
     * Logicians
     * Rules of inference
     * Paradoxes
     * Fallacies
     * Logic symbols

     * Philosophy portal
     * Category
     * WikiProject (talk)
     * changes

     * v
     * t
     * e

   Philosophy

   Branches
   Branches
     * Applied philosophy
     * Logic
     * Metaphilosophy
     * Philosophy of information
     * Philosophy of language
     * Philosophy of mathematics
     * Philosophy of religion
     * Philosophy of science
     * Political philosophy
     * Practical philosophy
     * Social philosophy
     * Theoretical philosophy

   Aesthetics
     * Aesthetic response
     * Formalism
     * Institutionalism

   Epistemology
     * Empiricism
     * Fideism
     * Naturalism
     * Particularism
     * Rationalism
     * Skepticism
     * Solipsism

   Ethics
     * Consequentialism
     * Deontology
     * Virtue

   Free will
     * Compatibilism
     * Determinism
          + Hard
     * Incompatibilism
          + Hard
     * Libertarianism

   Metaphysics
     * Atomism
     * Dualism
     * Idealism
     * Monism
     * Naturalism
     * Realism

   Mind
     * Behaviorism
     * Eliminativism
     * Emergentism
     * Epiphenomenalism
     * Functionalism
     * Objectivism
     * Subjectivism

   Normativity
     * Absolutism
     * Particularism
     * Relativism
     * Nihilism
     * Skepticism
     * Universalism

   Ontology
     * Action
     * Event
     * Process

   Reality
     * Anti-realism
     * Conceptualism
     * Idealism
     * Materialism
     * Naturalism
     * Nominalism
     * Physicalism
     * Realism

   By era
   By era
     * Ancient
     * Western
          + Medieval
          + Renaissance
          + Early modern
          + Modern
          + Contemporary

   Ancient
   Chinese
     * Agriculturalism
     * Confucianism
     * Legalism
     * Logicians
     * Mohism
     * Chinese naturalism
     * Taoism
     * Yangism

   Greco-Roman
     * Presocratic
          + Ionians
          + Pythagoreans
          + Eleatics
          + Atomists
          + Sophists
     * Cyrenaics
     * Cynicism
     * Eretrian school
     * Megarian school
     * Academy
     * Peripatetic school
     * Hellenistic philosophy
          + Pyrrhonism
          + Stoicism
          + Epicureanism
          + Academic Skepticism
     * Middle Platonism
     * School of the Sextii
     * Neopythagoreanism
     * Second Sophistic
     * Neoplatonism
     * Church Fathers

   Indian
     * Hindu
          + Samkhya
          + Nyaya
          + Vaisheshika
          + Yoga
          + Mīmāṃsā
          + Ājīvika
          + Ajñana
          + Cārvāka
     * Jain
          + Anekantavada
          + Syādvāda
     * Buddhist
          + Abhidharma
          + Sarvāstivadā
          + Pudgalavada
          + Sautrāntika
          + Madhyamaka
          + Svatantrika and Prasangika
          + Śūnyatā
          + Yogacara
          + Tibetan

   Persian
     * Mazdakism
     * Mithraism
     * Zoroastrianism
     * Zurvanism

   Medieval
   East Asian
     * Neotaoism
     * Tiantai
     * Huayan
     * Chan
     * Zen
     * Neo-Confucianism
     * Korean Confucianism

   European
     * Christian
     * Augustinianism
     * Scholasticism
     * Thomism
     * Scotism
     * Occamism
     * Renaissance humanism

   Indian
     * Vedanta
          + Acintya bheda abheda
          + Advaita
          + Bhedabheda
          + Dvaita
          + Nimbarka Sampradaya
          + Shuddhadvaita
          + Vishishtadvaita
     * Navya-Nyāya

   Islamic
     * Aristotelianism
     * Averroism
     * Avicennism
     * Illuminationism
     * ʿIlm al-Kalām
     * Sufi

     Jewish
     * Judeo-Islamic

   Modern
     * Anarchism
     * Classical Realism
     * Collectivism
     * Conservatism
     * Determinism
     * Dualism
     * Edo neo-Confucianism
     * Empiricism
     * Existentialism
     * Foundationalism
     * Historicism
     * Holism
     * Humanism
          + Anti-
     * Idealism
          + Absolute
          + British
          + German
          + Objective
          + Subjective
          + Transcendental
     * Individualism
     * Kokugaku
     * Liberalism
     * Materialism
     * Modernism
     * Monism
     * Naturalism
     * Natural law
     * Nihilism
     * New Confucianism
     * Neo-scholasticism
     * Pragmatism
     * Phenomenology
     * Positivism
     * Reductionism
     * Rationalism
     * Social contract
     * Socialism
     * Transcendentalism
     * Utilitarianism

   People
     * Cartesianism
     * Kantianism
          + Neo
     * Kierkegaardianism
     * Krausism
     * Hegelianism
     * Marxism
     * Newtonianism
     * Nietzscheanism
     * Spinozism

   Contemporary
   Analytic
     * Applied ethics
     * Analytic feminism
     * Analytical Marxism
     * Communitarianism
     * Consequentialism
     * Critical rationalism
     * Experimental philosophy
     * Falsificationism
     * Foundationalism / Coherentism
     * Internalism and externalism
     * Logical positivism
     * Legal positivism
     * Meta-ethics
     * Moral realism
     * Quinean naturalism
     * Normative ethics
     * Ordinary language philosophy
     * Postanalytic philosophy
     * Quietism
     * Rawlsian
     * Reformed epistemology
     * Systemics
     * Scientism
     * Scientific realism
     * Scientific skepticism
     * Transactionalism
     * Contemporary utilitarianism
     * Vienna Circle
     * Wittgensteinian

   Continental
     * Critical theory
     * Deconstruction
     * Existentialism
     * Feminist
     * Frankfurt School
     * Hermeneutics
     * Neo-Marxism
     * New Historicism
     * Phenomenology
     * Posthumanism
     * Postmodernism
     * Post-structuralism
     * Social constructionism
     * Structuralism
     * Western Marxism

   Miscellaneous
     * Kyoto School
     * Objectivism
     * Postcritique
     * Russian cosmism
     * more...

     * By region

   By region
   African
     * Bantu
     * Egyptian
     * Ethiopian
     * Africana

   Eastern
     * Buddhist
     * Chinese
     * Indian
     * Indonesian
     * Japanese
     * Korean
     * Taiwanese
     * Vietnamese

   Middle Eastern
     * Iranian
     * Islamic
     * Jewish
     * Pakistani
     * Turkish

   Western
     * American
     * Australian
     * British
          + Scottish
     * Canada
     * Czech
     * Danish
     * Dutch
     * Finland
     * French
     * German
     * Greek
     * Italian
     * Maltese
     * Polish
     * Slovene
     * Spanish

   Miscellaneous
     * Amerindian
     * Aztec
     * Romanian
     * Russian
     * Yugoslav

     * Philosophy portal
     * Category

   Authority control databases Edit this at Wikidata
   National
     * Germany
     * United States
     * France
     * BnF data
     * Japan
     * Czech Republic
     * Spain
     * Latvia
     * Israel

    Other
     * İslâm Ansiklopedisi

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Logic&oldid=1266818857"

   Categories:
     * Logic
     * Formal sciences

   Hidden categories:
     * Articles with short description
     * Short description matches Wikidata
     * Featured articles
     * Use dmy dates from July 2021
     * Pages using multiple image with auto scaled images
     * Articles with hAudio microformats
     * Spoken articles
     * Pages using Sister project links with default search
     * Pages that use a deprecated format of the math tags

     * This page was last edited on 2 January 2025, at 10:23 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   #E-International Relations » Feed E-International Relations » Comments
   Feed JSON oEmbed (JSON) oEmbed (XML)

     * Articles
     * Books
     * Features
     * Students
     * More
          + About us
          + Donate
          + Advertise
          + Join our team
          + Republication and referencing
          + Weekly newsletter
          + Submissions
          + RSS feed

   Submissions
   ____________________

   ____________________

     * Articles
     * Books
     * Features
     * Students

     * About us
     * Submissions
     * Donate
     * Advertise
     * Join our team
     * Republication and referencing
     * Weekly newsletter

Filling the Gap: The Moral Purpose of the State and the Duty to Intervene

   Joost Hendrik Pietschmann
   Download PDF
   Jun 6 2021 •
   1,301
   views
   This content was originally written for an undergraduate or Master's
   program. It is published as part of our mission to showcase
   peer-leading papers written by students during their studies. This work
   can be used for background reading and research, but should not be
   cited as an expert source or used in place of scholarly articles/books.
   WikiImages/Pixabay
   WikiImages/Pixabay

   What responsibilities do governments have for the human rights of
   people living under the jurisdiction of other states? For instance, is
   there a reason for intervention on humanitarian grounds when a
   political regime is (i) harming its own citizens or (ii) unable to
   prevent harm imposed on its citizens by another actor? When, given the
   importance of state sovereignty in international law, can intervention
   in such cases be regarded as legal, and is there a scenario in which it
   is morally permissible to engage in illegal humanitarian intervention?
   If there is a moral and/or legal right to intervene, does this also
   constitute an obligation for states to intervene?

   The above questions have now concerned scholars since the establishment
   of the modern state in the wake of the Westphalian peace. However, they
   still have not lost any of their urgency as situations continue to
   arise frequently in which human rights violations are taking place
   within the jurisdiction of sovereign states. For most of this time, the
   debate revolved around the question of permissibility and thus if
   intervention can be considered as either a moral or a legal right or
   both. Yet, in recent years the scholarly dialogue has shifted from
   questioning and/or positing a right to intervene towards questioning
   and/or positing a duty to intervene (Bagnoli 2006: 118). One reason for
   why this shift occurred is undoubtedly the release of the report by the
   International Commission on Intervention and State Sovereignty
   (ICISS)[1] in 2001, The Responsibility to Protect (R2P), and the
   ratification of parts of it by all member states of the United Nations
   at the 2005 World Summit.[2]

   The report develops the idea that the notion of sovereignty as control
   (meaning that a state has total authority over its own people) should
   be replaced by understanding sovereignty as responsibility (meaning
   that the state carries a duty of safeguarding the basic human rights of
   its citizens) (ICISS 2001: 2.14, 2.15). On this account, it follows
   that the sovereignty of a state can be temporarily suspended in cases
   in which it is rendered unable or is unwilling to meet its
   responsibility of protecting the human rights of its citizens (e.g. in
   the case of genocide, war crimes, ethnic cleansing, and crimes against
   humanity). In such cases, the ‘responsibility to protect’ these
   citizens is automatically reassigned to the international community
   which carries a ‘responsibility to react’ that may involve humanitarian
   intervention given the fact that all non-military means have been
   exhausted first (ICISS: 4.1; Pattison 2008: 262). What is astonishing
   is the fact that R2P argues both that a state’s sovereignty is
   contingent on its ability to protect the basic human rights of its
   citizens and that intervention becomes a moral obligation for outside
   actors once a state fails at upholding its ‘responsibility to protect’.
   As a result, the report moves away from regarding humanitarian
   intervention as something that is permissible under certain
   circumstances – a right – towards viewing it as a responsibility that
   falls on the international society – a duty (Pattison 2008: 263;
   Pattison 2013: 571).

   In this regard, however, the report does not explain why an
   intervention, just by virtue of being permissible, also generates a
   duty that obliges international society ‘to protect’. Instead, it
   simply assumes that this ‘international responsibility to protect’
   arises once the principle of non-intervention is overridden (Tan 2006:
   88). There is obviously a gap in this reasoning. In order to posit a
   duty to protect human rights that yields an obligation for states to
   intervene in the affairs of other states, there has to be proof of a
   positive duty[3] created by these rights that applies to all states in
   the same way. However, I believe that one can certainly produce the
   proof that is missing here. In order to evidence my assertion, I will
   present a constructivist argument for (i) why it makes sense to replace
   the notion of sovereignty as control with sovereignty as responsibility
   and (ii) for why intervention becomes a duty that falls on
   international society once we acknowledge the political reality of (i).
   Following from this, I am going to explain that states should intervene
   in the affairs of other states in order to defend human rights.

   My argument proceeds in three steps. First, by comparing realist,
   liberal and constructivist conceptions of human rights, I will show how
   the constructivist understanding is the only one of the “big three”
   metatheories that acknowledges the political reality of human rights,
   that is, defining standards of conduct applicable to political
   arrangements. Second, I will show that sovereignty can be thought of in
   a similar way to human rights which means that it also has a
   functional, political reality that must be recognised. Here, drawing on
   the work of Christian Reus-Smit, I will explain that the function it
   fulfils is guarding the ‘moral purpose of the state’ which is the
   protection of human rights. This enables me to prove that the political
   realities of human rights and sovereignty are co-dependent. Finally, as
   a third step, I will explain how this co-dependency yields a positive
   duty on the side of international society to intervene in the affairs
   of sovereign states to protect human rights. In this regard, I will
   further present evidence for why discharging such duty can also happen
   for practical instead of moral reasons whereby I am going to provide
   two examples: (i) status enhancement, and (ii) prevention of
   international insecurity.

   Sovereignty as Responsibility

   (i) How should human rights be conceived?

   Let us begin by taking a closer look at what can be termed the realist
   perspective of human rights. In this regard, it is important to note
   first that realists themselves have paid very little attention to human
   rights. For this lack of interest, there are at least two reasons.
   First of all, realists understand human rights as being part of ethics
   and thus belonging to domestic politics, the working of which they
   regard to be diametrically opposed to international politics (Casla
   2018: 143). This assumption is closely tied to the realist notion of
   the international realm being characterised by anarchy and thus an
   environment in which ethics has no place, meaning that an act being
   right or wrong only depends on the result of the act itself. As a
   consequence, the realist tradition has tended to view human rights as a
   secondary state goal that is subordinate to security (Wagner 2014:
   2).[4] A second reason is that realists are generally sceptical towards
   the concept of international law (Morgenthau 1940; Krasner 2002), and
   the idea that there is something akin to a universal morality that
   could figure as a bedrock for an international legal regime that
   incorporates the protection of human rights (Morgenthau 1948). Realists
   consider such aspects of international politics to be simply
   epiphenomenal which means that they mirror the balance of power, but do
   not restrict or shape state behaviour referring to the fact that norms
   get subsumed ‘in the material structure of the international system’
   (Mearsheimer 1995: 91). Accordingly, realists argue that states may
   establish and enforce international legal norms and institutions to
   protect human rights yet that it is not the norms themselves that shape
   the particular way in which a state acts but instead it is the
   underlying material interests and power relations that determine the
   state’s behaviour (Slaughter 2011).

   Their scepticism thus stems, first and foremost, from a worry that
   admonitions to obey such legal and institutional norms might be used
   malevolently by states to hide the pursuit of narrow selfish interests
   (Dunne and Hanson 2016: 63; Donnelly 1999). In this sense, realists
   criticise human rights policies for inevitably having a tendency to be
   selective and biased.[5] For example, states might stress the
   significance of human rights when dealing with some states but not with
   others with whom they have certain kinds of links (e.g. close trade
   relations). This shows, the objection runs, that states are
   self-interested actors that inevitably take a partial approach to
   further their own goals illustrating that they are not really ever
   worried about human rights (Caney 2005: 93-94). Consequently, realists
   regard human rights and individuals’ interests as largely peripheral to
   international relations. They perceive of morality as an appropriate
   standard for judging individual relations, but not the relations of
   states as the latter remains to be governed by the logic of power and
   interest. It follows that, from a realist perspective, individuals are
   objects, rather than subjects, of international politics. Thus, they
   certainly have no claim, beyond a moral claim, on other states or
   international society which is why the most that they can hope for is
   that their own state will act on their behalf (Donnelly 1993: 617).

   However, if human rights are secondary to the study of international
   relations as they do not determine state behaviour but only figure as a
   veil behind which states can hide their self-interest, why would these
   states adopt something like R2P which ultimately waves the
   irrevocability of the principle of non-intervention (which is at the
   heart of realism), thus forfeiting some of their sovereignty in the
   name of human rights? Moreover, if states are pursuing their interests
   in anarchic conditions, why would they be concerned with their
   legitimacy from a human rights perspectives as evidenced by jointly
   establishing human rights bodies at the international and regional
   level, and endowing these bodies with rights to enforcement?[6] In this
   regard, it appears, human rights have proven to be anything but
   marginal to international relations as their repeated violation has
   triggered debates questioning the limit of state rule over society and
   national sovereignty. Accordingly, human rights issues even pose a
   particularly potent challenge to the central logic of a system of
   independent, sovereign states under anarchy and thus to one of the key
   assumptions of realism whereby such development cannot be explained by
   a logic of self-interest (Sikkink 1998: 517).

   Then, since the realist perspective ignores the fact that human rights
   matter for the study of international relations in so far as they seem
   to be able to drive and/or shape state behaviour, it is now time to
   consider a second approach that is more sensitive towards this reality:
   liberalism. While liberal thinking differs, the central idea is that
   individuals have a set of basic rights that they enjoy by virtue of
   being human.[7] Accordingly, the liberal perspective of human rights
   adopts what has been termed moral universalism. On this view there are
   some moral values that are valid across the world. If X is morally
   universal, then X applies to all persons. Thus, the liberal perspective
   considers defending human rights as defending natural claims of human
   beings. It follows, that for adherents of the liberal perspective the
   function of human rights can be separated from the existing political
   reality of human rights. Then, to determine whether X qualifies as a
   human right, one does not need to look at the purpose X is supposed to
   serve in real-world politics. Rather, one only needs to consider if X
   is a ‘normatively salient interest attached to our status as human
   beings’ that is profound enough to place a duty of respect and
   protection on others (Valentini 2012b: 180; Raz 1986: ch. 7).As
   evidence for this conception liberals point to the fact that moral
   universalism has been increasingly embedded into the practice of
   international politics since the birth of the Enlightenment. Starting
   off from Europe, over time, the rights of citizens became enshrined in
   legal constitutions all over the world, the slave trade was abolished
   and criminalised, workers’ rights became acknowledged, and
   international humanitarian law was expanded. These advances finally
   became codified in the Universal Declaration of Human Rights (UDHR) in
   1948 which is regarded by liberals as the ratification or rather the
   acknowledgement of the existence of moral universalism (Dunne and
   Hanson 2016: 63).

   The liberal conception of human rights, however, suffers from a serious
   weakness: namely the fact that it is insensitive towards the function
   of human rights. As Valentini explains, “human rights are a
   political-legal construct that emerged under particular circumstances
   and which places constraints primarily on the conduct of states and
   their officials, rather than on that of individuals” (Valentini 2012a:
   576). However, on the liberal perspective this functional reality gets
   lost as it assumes human rights to be something that exists
   independently of the relationship between states and individuals. Thus,
   the liberal perspective regards the implementation of these rights as a
   moral obligation rather than an illustration of a particular consensus
   that exists among actors and institutions in international society and
   which has some function: that is, to define standards of conduct
   applicable to political arrangements. That the latter instead of the
   former is the political reality was probably illustrated best by Hannah
   Arendt’s reflections on the refugees and rejects that have been
   expelled from their political communities as a consequence of World War
   II:

     The conception of human rights based upon the assumed existence of a
     human being as such broke down at the very moment when those who
     professed to believe in it were for the first time confronted with
     people who had indeed lost all other qualities and specific
     relationships – except that they were still human. The world found
     nothing sacred in the abstract nakedness of being human.
     – Hannah Arendt (1951: 299)[8]

   Thus, it seems that human rights matter only in the context of
   political arrangements (such as states) and that individuals are
   deprived of them once they are failed by these arrangements. This,
   again, highlights the political reality of human rights (i.e. serving a
   function) as these rights predominantly matter for the conduct of the
   state towards its citizens or in the case when a state breaks down or
   is threatened by civil war. A further illustration of this reality can
   be provided by the fact that many of the rights postulated by the UDHR
   have a limited scope that only applies to the territory of the state to
   which the right holder belongs or in which she resides. The idea of a
   human right to free elementary education (§26.1 UDHR) or the right to
   equal access to public service (§21.2 UDHR), for example, only make
   sense when there exists a state-supported school system and public
   service. Beyond that, these rights are generally understood as not
   imposing duties upon foreigners. For example, the right to equal pay
   for equal work (§23.2 UDHR) does not impose any duty on foreigners to
   help maintain such equality within some country X or internationally
   (Pogge 2000: 47-48). Consequently, it is safe to say that the liberal
   perspective is also an insufficient starting point for considering if
   states should intervene in the affairs of other states in order to
   protect human rights as it ignores the reality of human rights in
   international relations. What is needed is a theory that is sensitive
   towards this reality and which does not disregard human rights as
   marginal or insignificant the way realism does. This theory, as I will
   argue, is constructivism.

   Constructivists perceive of international norms as “shared
   understandings as to the permissible limits of state action, and an
   acceptance that conduct should be justified and appraised in terms of
   that norm” (Wheeler 2002: 30).[9] In this regard, they are viewed as
   having a social ontological character meaning that they are social
   rather than natural facts. Accordingly, the application of
   international norms is regarded as a social construction co-constituted
   by the members of international society (Kuo 2014: 79). Viewing
   international politics according to this dynamic is helpful for
   understanding the development of human rights. Similar to social life,
   the international realm is constituted by a variety of contending sets
   of expectations as to how actors ought to behave (Dunne & Hanson 2016:
   64). Adopting a terminology created by John Rawls the rules of conduct
   that are reached despite this disunity can be referred to as an
   ‘overlapping consensus’. What is meant by this with regard to human
   rights is that people of different faiths or secular traditions (what
   Rawls refers to as ‘comprehensive doctrines’) can still and do converge
   on some common moral values. They thus reach an ‘overlapping consensus’
   on a set of human rights even though they disagree on as to which moral
   theory is the most plausible to ground these rights (Caney 2005: 29;
   Donnelly 2007). Such consensus then is political rather than moral or
   religious which means that it is socially constructed rather than “by
   nature” of human rights itself. Understanding human rights in this
   sense, constructivists then argue that the inter-state order can be
   transformed by the social construction of norms (as their acceptance
   establishes that conduct should be justified and appraised in terms of
   these norms) and has in fact been transformed in this way by the
   emergence of a consensus on universal human rights in the form of the
   UDHR (this will become apparent in the next section) (Dunne & Hanson
   2016: 64). Thus, constructivism acknowledges both the fact that human
   rights are an integral part of international relations and the fact
   that these rights are, first and foremost, political insofar that they
   fulfil a function, that is, to define standards of conduct applicable
   to political arrangements. Having established the political reality of
   human rights in this way, it is now time to take an in-depth look at
   sovereignty in order to examine how it relates to the former.

   (ii) The co-dependency of human rights and sovereignty

   Recall the fact that the political reality of human rights is one of a
   social construct that is fulfilling a specific function which is
   defining standards of conduct applicable to political arrangements.
   Continuing to adopt a constructivist perspective, one can think of
   sovereignty in the same way.

   Although sovereignty and especially anarchy were once taken as enduring
   facts of the international realm, a number of authors has now shown
   that they are better understood as ‘social facts’ (Searle 1995) or
   ‘social kinds’ (Bhaskar 1979; Wendt 1999), that is, social constructs
   that are produced and reproduced through the practices of states (Lake
   2003: 308). Accordingly, sovereignty has to be understood as nothing
   exogenous to the system but as a principle of historical contingences
   meaning that “the division of sovereignty by territory (internal or
   external) and by identity (similar or different) is neither natural nor
   necessary but the result of several historical developments” (Kuo 2014:
   79).[10] In this regard, then, sovereignty is to be seen as also
   fulfilling a function. This has been illustrated most powerfully by
   Reus-Smit (1997; 1999; 2001) who links sovereignty to the ‘moral
   purpose of the state’ which is to be regarded as the embodiment of the
   constitutive values defining legitimate statehood and rightful action.
   Reus-Smit explains that “the idea of sovereignty did not emerge in a
   moral vacuum but had to be justified, and that justification has always
   taken the form of an appeal to higher-order values that define the
   identity or raison d’être of the state” (Reus-Smit 2001: 527). What is
   meant by this is that sovereignty has always been tied to a conviction
   on what the state’s purpose (i.e. its function) is as well as to its
   ability of fulfilling this purpose (Reus-Smit 1997: 566-571).
   Accordingly, sovereignty is to be understood as being contingent on
   fulfilling its function – that is guarding the ‘moral purpose of the
   state’. Obviously, what is associated with this purpose and thus what
   is considered as the threshold to be reached for an actor to be granted
   legitimate statehood has changed over time.[11] However, as evidenced
   by the UDHR consensus, the moral purpose of the state has come to be
   most commonly linked to the cultivation of an environment in which
   individuals can freely pursue their interests protected by a particular
   set of state-sanctioned ‘rights’ (Reus-Smit 1997: 571). These rights,
   then, are at minimum the basic civil and political rights agreed upon
   in the UDHR and thus a subset of the account of human rights on which
   there is an overlapping consensus in international society. It follows
   that, under the consensus of the UDHR (which resembles the contemporary
   agreement on the set of rights that constitute the moral purpose of the
   state), sovereignty and human rights are co-dependent as the latter
   enables and legitimizes the former while the former enables recognition
   and protection of the latter.

   Identifying and being aware of this relationship, then, provides the
   necessary justification for why sovereignty as control should be
   replaced by sovereignty as responsibility. This is the case, because
   framing sovereignty in this way acknowledges political reality which
   means that it is sensitive towards the fact that there is a consensus
   on the moral purpose of the state (i.e. the gateway for sovereignty)
   being the guardian of human rights. The sovereignty that is granted to
   a state by international society under the current consensus, thus, can
   be regarded as being dependent on this state fulfilling its
   responsibility towards its citizens. Failure, in this regard, will
   certainly result in this state being publicly condemned and its
   sovereignty being partially or fully revoked due to it losing its
   legitimacy. Examples for this include, first and foremost, the passage
   of resolutions in the UN (i) to publicly denounce the failure of a
   state to uphold its moral purpose (e.g. UNGA Resolution A/RES/74/246
   condemning human rights abuses against Myanmar’s Rohingya Muslims),
   (ii) to impose sanctions on such state (e.g. UNSC Resolution 181
   imposing an arms embargo on South Africa in response to its Apartheid
   policies) or (iii) to authorize military intervention (e.g. UNSC
   Resolution 1973 authorizing the intervention in Libya).

   Intervention

   After having provided a rationale for why sovereignty should be framed
   as responsibility in the previous section, what remains to be done is
   to prove that the co-dependency of human rights and sovereignty indeed
   yields a positive duty for states to intervene in the affairs of other
   states in order to defend human rights.

   Human rights (such as the right to life and freedom from violence and
   injury) are what is called Hohfeldian claim rights, that is, duties
   that are owed to other individuals (Hohfeld 1917). In this sense, as
   Valentini points out, they follow a particular logical structure: “For
   an agent A to have a right to X against another agent B is for A to
   have the standing, or authority, to demand X from B” (Feinberg 1970;
   Valentini 2016: 53). It follows, that the notion of a right is to be
   understood as combining a duty (a moral ‘ought’) with a structure of
   interpersonal accountability for the duty’s fulfilment (Valentini 2016:
   53). The political reality of this structure was revealed by the
   constructivist perspective which has shown that sovereignty is granted
   by the state discharging its duty to provide protection of human rights
   which has become regarded as fulfilling its moral purpose. Here, the
   structure of interpersonal accountability for the duty’s performance is
   given by the relationship between sovereignty and human rights where
   the latter enables and legitimizes the former while the former enables
   recognition and protection of the latter. Thus, individuals have a
   standing, or authority, to demand X from B where B is the state.
   However, what remains unclear is how this would create a positive duty
   on the side of other states to intervene when B fails to discharge its
   duty.

   In order to shed some light on this recall the fact that the
   overlapping consensus on the moral purpose of the state (that is
   illustrated by the UDHR and the acceptance of the R2P doctrine’s idea
   to replace sovereignty as control with sovereignty as responsibility)
   is used as a means to determine which states can justify their
   sovereignty and thus their legitimacy to international society by
   fulfilling their function of protecting individuals’ rights. Beyond
   that, as was shown in the previous section, what this consensus
   constitutes is that these rights are regarded to be universally agreed
   upon (even though the underlying comprehensive doctrines differ) what
   in turn establishes them as what is called a norm on the constructivist
   perspective (i.e. a shared understanding as to the permissible limits
   of state action, and an acceptance that conduct should be justified and
   appraised in terms of that norm) (Wheeler 2002: 30). The norm of human
   rights protection understood as the ‘moral purpose of the state’ is
   thus to be seen as one of the ordering principles of international
   society (a shared understanding which binds together it members)
   meaning that it is universal in scope with respect to the actors of
   international society. Then, if these rights are universal in scope and
   universally accepted as an international norm, they constitute a claim
   that is held against every agent and/or agency that is part of
   international society. It follows that in so far as these human rights
   are universal, they will have primary and secondary addressees in the
   sense that they yield a special positive perfect duty[12] in the
   domestic environment of the state and a general imperfect duty[13] in
   international society. What is meant by this is that their ‘claim
   against’ is directed at a particular agent (the state) in the domestic
   environment whereas such claim does not have a particular addressee in
   international society that could be held accountable.

   To illustrate this further, consider the addressees of the right to
   freedom from torture. Based on the moral purpose of the state, each
   government has the duty to safeguard people within its borders from
   torture and to take the necessary steps to prevent, deter, and stop
   torturing (Nickel 1993: 80-81). The states sovereignty being contingent
   on its ability to discharge such duty then highlights why it cannot
   refrain from doing so and why human rights protection constitutes a
   special positive perfect duty in the domestic nexus for which the state
   can be held accountable by its citizens. However, such an explicit
   structure of interpersonal accountability for the duty’s performance
   cannot be found in international society as citizens of some state A do
   not have a claim against any particular agent i of international
   society S in so far that they have not opted into a constitutional
   structure with i.

   However, the fact that human rights protection thus constitutes a
   general and imperfect duty with respect to international society does
   not revoke its validity. Being a shared understanding which binds
   together international society, the norm still acknowledges that human
   rights are to be protected. This means that it does not deny that
   someone ought to act but expounds that there simply is no identifiable
   agent who can be called upon to act (Tan 2006: 102). What is important
   is that the issue of agency here is thus not conceptual but strategic.
   Hence, even if it is not directed at any agent in particular, the duty
   of human rights protection still demands full coverage. As Shue
   explains, “universal rights, then, entail not universal duties but full
   coverage” (Shue 1988: 690). This means that, even though human rights
   (being understood as universal under the UDHR consensus) do not compel
   everyone in the same way to act to aid their protection as they compel
   everyone not to violate them, it is still the case that they compel
   action in general. This means that all international actors do have an
   obligation to cooperate and coordinate so that the duty of human rights
   protection canbe effectively discharged. In this sense, that is
   contributing towards the protection of human rights, intervention in
   the affairs of other states is a positive duty that falls on every
   state of international society respectively. Full coverage, then, is to
   be provided by a division of labour amongst duty-bearers (Shue 1988:
   690). Here, there are a number of actions that outside actors can
   undertake to comply with this default duty. They might publicly condemn
   the human rights violations, apply diplomatic pressure, or impose
   sanctions (both military and economic).

   However, in situations in which the last resort condition for military
   intervention is met by the seriousness and urgency of the human rights
   violations that are taking place (e.g. one of the four crimes outlined
   in R2P adopted by the UN), it seems reasonable to suggest that states
   would be morally obliged to effectively discharging their duty to
   protect by contributing to such intervention (e.g. by providing needed
   equipment, infrastructure or troops) (Glanville 2014: 52).
   Nevertheless, it needs to be mentioned that active participation in a
   military intervention is only a moral obligation so long as it does not
   bear excessive cost to oneself. What is meant by this is that it cannot
   be expected that states engage in intervention if such intervention
   would severely endanger their capacity to protect the rights of their
   own citizens. However, this does not undermine the positive duty of
   intervention as such but rather obliges international society to
   distribute the costs more evenly so that the universal protection of
   human rights may still be discharged (Glanville 2014: 56-57).

   Finally, as mentioned in the introduction, there are also practical
   reasons for why states can have an interest in discharging their
   positive duty of protecting human rights beyond their own borders. This
   again is linked to the political reality acknowledged by adopting a
   constructivist perspective. As Raymond Cohen has explained, “[j]ust as
   the relationship of the individual to society is defined by a network
   of norms and values, the relationship of the state to other actors in
   the international system can be thought of as being governed by a
   network of permissions and constraints” (Cohen 1980: 129). State
   identity, thus, is shaped by the mutual constitution of agential and
   structural interaction in international society by which the shared
   understandings as to the permissible limits of state action (i.e. the
   norms) are created. In this regard, then, international society is
   characterised by compliance and not by enforcement, which means that
   infringing upon the ‘rules’ seldomly leads to direct punishment but
   that sustained deviation from the standards, on which there is
   consensus in international society, may severely damage the reputation
   of a given political actor (Malcom 2009: 36-37). Hence, factors such as
   fearing infamy or desiring acceptance can be as potent as prevalence of
   economic or military influence in terms of their ability to incentivise
   compliant behaviour. It follows that discharging the positive duty of
   human rights protection abroad might just be a matter of a state’s
   interest in enhancing its status in international society[14] or making
   sure that it is not eroded because other actors deem inaction in the
   face of human rights violations as unacceptable.

   Yet, there is a second practical reason that should be mentioned. This
   reason is related to the fact that not acting in the face of gross
   human rights violations erodes the authority of the UN as the primary
   facilitator of international legitimacy. The UN having
   institutionalized the overlapping consensus on human rights (the UDHR),
   the fact that human rights and sovereignty are co-dependent (R2P), and
   the threshold for legitimate intervention (R2P) is to be regarded as
   bearing the duty to oversee international society’s most extensive
   moral commitments. Then, if it would fail to secure that these
   commitments are upheld there is a risk that states would start to
   attempt addressing this moral deficit by looking elsewhere or acting
   unilaterally (Gallagher 2013: 89-90). The threat that arises from this
   is not that unilateral action may not be able to prevent the human
   rights violations that are taking place, but that the UN’s authority
   may become damaged to the extent at which international instability
   will emerge as a result of the fact that the understanding of what
   constitutes rightful conduct and rightful authority with regard to the
   use of force (previously defined and monitored by the UN) has become
   open to interpretation. This would naturally lead to a heightened sense
   of insecurity in international society. It follows, that a state’s move
   on discharging its positive duty of human rights protection abroad can
   also be linked to this state wanting to guarantee that international
   order continues to be upheld and thus to its own security concerns.

   Conclusion

   According to the above, we can assert that the essay has successfully
   shown (i) why it makes sense to replace the notion of sovereignty as
   control with sovereignty as responsibility and (ii) why intervention
   becomes a duty that falls on international society once we acknowledge
   the political reality of (i). This was done by adopting a
   constructivist conception of human rights which ultimately has yielded
   a picture of human rights and sovereignty being co-dependent. In doing
   so, the essay was able to close a gap in the reasoning of the
   ‘Responsibility to Protect doctrine’ and further demonstrate why states
   should intervene in the affairs of other states in order to defend
   human rights. It was further illustrated why discharging the duty to
   protect can also happen for practical instead of moral reasons whereby
   two examples for such practical reasons were presented: (i) status
   enhancement, and (ii) prevention of international insecurity.

   References

   Arendt, H. (1951). The Origins of Totalitarianism. London: André
   Deutsch, 1989.

   Bagnoli, C. (2006). Humanitarian Intervention as a Perfect Duty: A
   Kantian Argument. Nomos, 47, 117-140.

   Bhaskar, R. (1979). The Possibility of Naturalism. Atlantic Highlands:
   Humanities Press.

   Bellamy, A. J. (2010). The Responsibility to Protect: Five Years On.
   Ethics & International Affairs, 24(2), 143-169.

   Bellamy, A. J. (2011). Libya and the Responsibility to Protect: The
   Exception and the Norm. Ethics & International Affairs, 25(3), 263-269.

   Breakey, H. (2015). Positive Duties and Human Rights: Challenges,
   Opportunities and Conceptual Necessities. Political Studies, 63,
   1198-1215.

   Brown, C. (2002). On Morality, Self-Interest and Foreign Policy.
   Government and Opposition, 37(2), 173-189.

   Bull, H. (1977). The Anarchical Society: A Study of Order in World
   Politics. New York: Columbia University Press.

   Caney, S. (2005). Justice Beyond Borders: A Global Political Theory.
   Oxford: Oxford University Press

   Casla, K. (2018). Realism: Human Rights Foe? In D. Orsi, J. R. Avgustin
   & M. Nurnus (Eds.), Realism in Practice: An Appraisal (pp. 143-155),
   Bristol: E-International Relations.

   Cohen, R. (1980). Rules of the Game in International Politics.
   International Studies Quarterly, 24(1), 129-150.

   Donnelly, J. (1993). Human rights, humanitarian crisis, and
   humanitarian intervention. International Journal, 48(4), 607- 640.

   Donnelly, J. (1999). The social construction of human rights. In T.
   Dunne & N. Wheeler (Eds.), Human Rights in Global Politics (pp.71-102),
   Cambridge: Cambridge University Press.

   Donnelly, J. (2007). The Relative Universality of Human Rights. Human
   Rights Quarterly, 29(2), 281-306.

   Dunne, T. & Hanson, M. (2016). Human Rights in International Relations.
   In M. Goodhart (Eds.), Human Rights: Politics and Practice, Oxford:
   Oxford University Press.

   Evans, G. & Sahnoun, M. (2001). The Responsibility to Protect. Ottawa:
   International Commission on Intervention and State Sovereignty.

   Feinberg, J. (1966). Duties, Rights, Claims. American Philosophical
   Quarterly, 3(2), 137-144.

   Feinberg, J. (1970). The Nature and Value of Rights. The Journal of
   Value Inquiry, 4(4),  243-260.

   Finnemore, M. & Sikkink, K. (1998). International Norm Dynamic and
   Political Change. International Organization, 52(4), 887-917.

   Fredman, S. (2008). Human Rights Transformed: Positive Rights and
   Positive Duties. Oxford: Oxford University Press.

   Glanville, L. (2014). Is Just Intervention Morally Obligatory? In C. E.
   Gentry & A. E. Eckert (Eds.), The Future of Just War: New Critical
   Essays (pp. 48-61), Athens: University of Georgia Press.

   Hohfeld, W. (1917). Fundamental Legal Conceptions as Applied in
   Judicial Reasoning. The Yale Law Journal, 26(8), 710-770.

   Humphreys, J. (2016). Stop Kidding yourself, you have no human rights.
   Retrieve from
   https://www.irishtimes.com/opinion/joe-humphreys-stop-kidding-yourself-
   you-have-no-human-rights-1.2602455

   Jeske, D. (2019). Special Obligations. The Stanford Encyclopedia of
   Philosophy (Fall 2019 Edition), Edward N. Zalta (ed.), URL =
   <https://plato.stanford.edu/archives/fall2019/entries/special-obligatio
   ns/>.

   Johnston, A. I. (2008). Social States: China in International
   Institutions, 1980–2000. Princeton: Princeton University Press.

   Kant, I. (1795). Perpetual Peace. New York: Columbia University Press
   (1939).

   Krasner, S. (2002). Realist Views of International Law. Proceedings of
   the Annual Meeting (American Society of International Law), 96,
   265–268.

   Kuo, H.-C. (2014). The Social Construction of the Norms of
   “Responsibility to Protect” and “Humanitarian Interventions” under the
   United Nations: A Constructivist Perspectives. Taiwan Journal of
   Political Science, 62, 79-114.

   Lake, D. A. (2003). The New Sovereignty in International Relations.
   International Studies Review, 5(3), 303-323.

   Mearsheimer, J. (1995). A Realist Reply. International Security, 20(1):
   82–93.

   Malcom, C. (2009). Being and Becoming: Humanitarian Intervention and
   the Constructed Duty of Justice. Ann Arbor: ProQuest LLC

   Morgenthau, H. (1940). Positivism, Functionalism, and International
   Law. The American Journal of International Law, 34(2), 260–284.

   Morgenthau, H. (1948). The Twilight of International
   Morality. Ethics 58(2), 79–99.

   Nickel, J. W. (1993). Human Rights Generate Duties to Protect and
   Provide. Human Rights Quarterly, 15(1), 77-86.

   Pattison, J. (2008). Whose Responsibility to Protect? The Duties of
   Humanitarian Intervention. Journal of Military Ethics, 7(4), 262-283.

   Pattison, J. (2013). Is There a Duty to Intervene? Intervention and the
   Responsibility to Protect. Philosophy Compass, 8(6), 570-579.

   Paul, T. V., Larson, D. W. & Wohlforth, W. C. (2014). Status in World
   Politics. Cambridge: Cambridge University Press

   Philpott, D. (2001). Revolutions in Sovereignty: How Ideas Shaped
   Modern International Relations. Princeton, NJ: Princeton University
   Press.

   Pogge, T. (2000). The International Significance of Human Rights. The
   Journal of Ethics, 4(2), 45-69.

   Raz, J. (1986). The Morality of Freedom. Oxford: Clarendon.

   Reus-Smit, C. (1997). The Constitutional Structure of International
   Society and the Nature of Fundamental Institutions. International
   Organization, 51(4), 555-589.

   Reus-Smit, C. (1999). The Moral Purpose of the State: Culture, Social
   Identity, and Institutional Rationality in International Relations.
   Princeton: Princeton University Press.

   Reus-Smit, C. (2001). Human Rights and the Social Construction of
   Sovereignty. Review of International Studies. 27, 519-538.

   Ruggie, J. (1993). Territoriality and beyond: problematizing modernity
   in international relations. International Organization, 47(1), 139-174.

   Schmitt, C. (1932). The Concept of the Political. Chicago and London:
   Chicago University Press (1996).

   Searle, J. (1995). The Construction of Social Reality. New York: Free
   Press.

   Shue, H. (1988). Mediating Duties. Ethics, 98(4), 687-704.

   Sikkink, K. (1998). Transnational Politics, International Relations
   Theory, and Human Rights. PS: Political Science and Politics, 31(3),
   516-523.

   Slaughter, A.-M. (2011). International Relations, Principal Theories.
   May Planck Encyclopedia of Public International Law.

   Tan, K.-C. (2006). The Duty to Protect. Nomos, 47, 84-116.

   Tannewald, N. (2007). The Nuclear Taboo: The United States and the
   Non-Use of Nuclear Weapons Since 1945. Cambridge: Cambridge University
   Press.

   The United Nations (1948). Universal Declaration of Human Rights.
   Paris: The United Nations.

   Valentini, L. (2012a). Human Rights, Freedom, and Political Authority.
   Political Theory, 40(5), 573-601.

   Valentini, L. (2012b). In What Sense are Human Rights Political? A
   Preliminary Exploration. Political Studies, 60, 180-194.

   Valentini, L. (2016). On the Justification of Basic Rights. Netherlands
   Journal of Legal Philosophy, 45(3), 52-63.

   Wagner, W. (2014). International Relations Theories and Human Rights.
   In A. Mihr & M. Gibney (Eds.), The SAGE Handbook of Human Rights,
   London: SAGE Publications Ltd.

   Wenar, L. (2020). Rights. The Stanford Encyclopedia of
   Philosophy (Spring 2020 Edition), Edward N. Zalta (ed.), URL =
   <https://plato.stanford.edu/archives/spr2020/entries/rights/>.

   Wendt, A. (1999). Social Theory of International Relations. New York:
   Cambridge University Press.

   Wheeler, N. J. (2002). The Humanitarian Responsibilities of
   Sovereignty: Explaining the Development of a New Norm of Military
   Intervention for Humanitarian Purposes in International Society. In J.
   M. Welsh (Eds.), From Right to Responsibility: Humanitarian
   Intervention and International Society, Oxford: Oxford University
   Press.
     __________________________________________________________________

   [1] The International Commission on Intervention and State Sovereignty
   was a commission established by the Canadian government to answer Kofi
   Annan’s question on how the international community should respond to
   gross and systematic violations of human rights if humanitarian
   intervention is, indeed, an unacceptable assault on sovereignty
   (Bellamy 2010).

   [2] However, there were some notable differences between the ICISS
   report and the way R2P was adopted by the UN. Here the most notable
   differences are (i) that R2P adopted by the UN only applies to mass
   atrocity crimes (genocide, war crimes, crimes against humanity and
   ethnic cleansing), rather than human rights violations in general, (ii)
   that there was no mention of the criteria of intervention, and (iii)
   that the UN Security Council was implemented as the only body with the
   authority to legitimize intervention (A/RES/60/1 2005 World Summit
   Outcome: paragraphs 138 and 139).

   [3] A positive duty is a duty that obliges its bearer to actively
   perform actions or pursue goals (such as the police’s duty to protect
   citizens). Accordingly, such duties differ from negative duties which
   only prohibit actions (such as the duty to refrain from torture)
   (Breaky 2014: 1198).

   [4] For realists, the survival of the state is closely tied to the idea
   of sovereignty meaning that any limits on sovereignty imposed on the
   state by outside actors (e.g. in the form of human rights obligations)
   are seen by realist as potentially threatening the state’s security as
   they offer an entry point that could be used by opponents to intervene
   in the state’s affairs.

   [5] The point also has been raised forcefully by Carl Schmitt: “When a
   state fights its political enemy in the name of humanity, it is not a
   war for the sake of humanity, but a war wherein a particular state
   seeks to usurp a universal concept against its military opponent. At
   the expense of its opponent, it tries to identify itself with humanity
   in the same way as one can misuse peace, justice, progress, and
   civilization in order to claim these as one’s own and to deny the same
   to the enemy. The concept of humanity is an especially useful
   ideological instrument of imperialist expansion, and in its ethical
   humanitarian form it is a specific vehicle of economic imperialism.
   Here one is reminded of a somewhat modified expression of Proudhon’s:
   whoever invokes humanity wants to cheat”. (Schmitt 1932: 54).

   [6] Examples for this include, among others, the European Convention on
   Human Rights, the American Convention on Human Rights, and the African
   Charter – the (Banjul) Charter on Human and Peoples’ Rights as they all
   have yielded the establishment of judicial or quasi-judicial bodies
   which deal with violations of the human rights they specify committed
   by states.

   [7] Following from this, while realists tend to look to Hobbes and
   Machiavelli in order to justify the promotion of national
   self-interest, liberals draw heavily on the works of Locke and Kant. In
   this respect, especially Kant’s ‘Perpetual Peace’ (1795) has been a
   lodestar for the theory as it develops an idea of international
   liberalism emphasizing that all individuals have equal moral worth
   which is why an abuse of rights in one part of the world is ‘felt
   everywhere’ (Dunne and Hanson 2016: 63).

   [8] Something similar can be observed today at Europe’s borders as we
   watch refugees get rejected and deported back to Turkey under an
   EU-sponsored migration deal (Humphreys 2016).

   [9] For a detailed discussion of the role of norms in international
   politics, see also Finnemore and Sikkink (1998), Tannenwald (2007) and
   Johnston (2008).

   [10] The same point has been raised by Ruggie (1993) and Philpott
   (2001).

   [11] For example, in ancient Greece the moral purpose of the state was
   seen in “the cultivation of bios politikos”, which is a distinctive
   form of communal life; Renaissance Italians linked it to the “terms of
   the pursuit of civic glory”; in Europe during the age of absolutism it
   was tied it to “the preservation of a divinely ordained, rigidly
   hierarchical social order”; and since the Enlightenment, the moral
   purpose of the state has been understood as “the protection of
   individuals’ rights” (Reus-Smit 2001: 527-528).

   [12] Special duties are owed to a specific set of persons, whereas
   general duties are owed to all persons simply qua persons. In this
   regard, special duties are usually understood as duties we have to
   those peoples we stand in some sort of special relationship to (e.g.
   friends, family members, colleagues, fellow citizens) and those to whom
   we have made promises or commitments of some sort (Jeske 2019).

   [13] In the case of perfect duties there is “no latitude for discretion
   in when, how, where and toward whom the duty should be performed”
   (Breakey 2015: 1200). Imperfect duties, however, usually do not specify
   when, how, where and toward whom the duty should be performed.

   [14] See Paul et al. (2014) for a detailed discussion of status
   concerns as an element of international politics.

Further Reading on E-International Relations

     * “The Crime He Committed Was to Steal a Cow”: Moral Luck and Gacaca
     * Humanitarianism and Securitisation: Contradictions in State
       Responses to Migration
     * Do Assassinations Serve Little Purpose Other than to Communicate
       Resolve?
     * Virtual Invasion: ‘Just War’ and Orientalism in Call of Duty:
       Modern Warfare
     * Australia: Challenges to the Settler State’s Pursuit of
       Transitional Justice
     * The Responsibility to Protect: A Disputed Matter

   [logo--symbol-core@2x.png]
   Donate to E-IR Republication & Citations Get our Newsletter

   All content on the website (with the exception of images) is published
   under the following Creative Commons License

   Copyright © — E-International Relations. All Rights Reserved

   (BUTTON)

Please Consider Donating

   Before you download your free e-book, please consider donating to
   support open access publishing.

   E-IR is an independent non-profit publisher run by an all volunteer
   team. Your donations allow us to invest in new open access titles and
   pay our bandwidth bills to ensure we keep our existing titles free to
   view. Any amount, in any currency, is appreciated. Many thanks!
   PayPal – The safer, easier way to pay online.

   Donations are voluntary and not required to download the e-book - your
   link to download is below.
   [icon-w315-h398-pdf-file.png]
   Download PDF
   #MCLC Resource Center » Feed MCLC Resource Center » Comments Feed MCLC
   Resource Center » Titanic in China: Transnational Capitalism as
   Official Ideology? Comments Feed JSON oEmbed (JSON) oEmbed (XML)

Ohio State nav bar

   Skip to main content

   The Ohio State University
     * Help
     * BuckeyeLink
     * Map
     * Find People
     * Webmail
     * Search Ohio State

   The Ohio State University
   MCLC Resource Center
   Modern Chinese Literature and Culture

     * Journal
          + Current Issue
          + Back Issues
          + Editorial Board
          + Submissions
          + Subscriptions
          + Advertising
          + Special Issue Calls for Papers
     * Reviews
     * Web Pubs
     * Blog
          + Blog
          + Subscribe
          + Submit a Post
     * Bibliographies
          + Catalogs
          + Education
          + Image Archive
          + Institutions/Personal
          + Journals
          + Literature
          + Media/Film
          + Music
          + Online Resources
          + Visual Arts
     * Video Lectures
          + Login
          + Register

   Titanic in China: Transnational
   Capitalism as Official Ideology?

   By Jonathan Noble
     __________________________________________________________________

   Modern Chinese Literature and Culture, vol. 12, no. 1, pp.164-198
     __________________________________________________________________

   In April 1998, Titanic garnered the accolade of becoming China’s
   all-time blockbuster by shattering former box-office records. The
   “Titanic miracle,” as the film’s unprecedented commercial success was
   dubbed in the Chinese media, provides copious material with which to
   explore numerous issues at stake in China’s contemporary culture
   industry, including questions concerning the globalization and
   commercialization of the culture industry within the context of China’s
   domestic market reforms and official Party ideology. How is China
   participating in and recreating global culture? How are China’s
   expanding market reforms affecting the production and consumption of
   culture? What is the role of the Party’s official ideology in relation
   to the commercialization and globalization of culture? How are
   alliances being constructed along the axis of capital across national
   borders?

   Exploration of these questions is based on research conducted in China
   centered on investigating the commercial practices and discursive
   rhetoric which propelled and shaped the “Titanic miracle.” It appears
   that the film industry in China is predominately governed by a
   commercial logic dictated by profit maximization, as adopted by both
   official cultural policies and commercial practices. As played out by
   the “Titanic miracle,” we observe how culture remains an ideological
   tool for the Party whose central maxim appears to be commercial
   enterprise and economic growth. Whereas cultural artifacts during the
   Maoist era, as dictated by the Party, ideologically opposed capitalism,
   today’s culture industry embraces the market and “what sells in
   accordance with official cultural policy.” In the case of the film
   industry, Hollywood films are eagerly adopted to fulfill the commercial
   and official objective of making money. In the end, as the “Titanic
   miracle” illustrates, China’s film industry is marked by an unexpected
   collusion between Hollywood movie-moguls and high-ranking Leninist
   officials, whose ideological differences and national loyalties are
   negotiated by their homage to the accumulation of capital.

   denton.2@osu.edu
   The MCLC Resource Center
   Managed and operated by Kirk Denton

Social Media Links

     * RSS
     * pages/MCLC/185091461514265 on Facebook
     * mclclist on Twitter

   If you have a disability and experience difficulty accessing this
   content, please email u@osu.edu or call 614-292-5000 for assistance.

   The content of this site is published by the site owner(s) and is not a
   statement of advice, opinion, or information pertaining to The Ohio
   State University. Neither text, nor links to other websites, is
   reviewed or endorsed by The Ohio State University.
     __________________________________________________________________

   Search the MCLC Resource Center:
   ___________________________________
   Search
     __________________________________________________________________

   IFRAME: https://www.googletagmanager.com/ns.html?id=GTM-P8MKDW6

   Log in
   Home
   Robert Payne
   Home>Academics>Faculty>Faculty Directory>
   Home
   Home
   MAIN MENU
   Close

Search form

   Search _______________
   Search
     * About AUP
          + History of AUP
               o Location
               o Honorary Degree Recipients
               o AUP History Timeline
               o Faces of AUP - Dr. Lloyd A. DeLamater
               o Faces of AUP - Marie Louise Viborel DeLamater
               o Faces of AUP - Col. Karl S. Cate
               o Faces of AUP - Raymond D. Flowers
               o Faces of AUP - Walter J. Brennan
          + Mission & Core Values
          + Vision and Leadership
               o Vision Statement
               o President
                    # About the President
                    # Past Presidents
                    # The Presidential Award for Distinguished Achievement
               o Leadership
                    # Board of Trustees
                    # Officers
                    # President's Alumni Advisory Council
                         @ PAAC Members
               o Strategic Plan
          + AUP Recognition
               o Delivering Academic Excellence
               o Accreditation
                    # Memberships
               o Partnerships and Consortia
               o Institutional Effectiveness
                    # Institutional Research
                    # Assessment
                         @ Assessment Structure
                         @ Assessment Process
                         @ Assessment Calendar
                         @ Assessment Resources
                    # Middle States Commission on Higher Education
                    # Steering Committee
                    # The Office of Institutional Research, Assessment and
                      Effectiveness
               o Awards
               o Retention and Graduation Rates
               o Student Right to Know
               o State Nonprofit Disclosures
               o Publications
               o Gender Equality Plan
          + Alumni Success
               o Undergraduate Outcomes
               o Graduate Outcomes
          + Campus Development
               o Online Campus Tour
               o Campus Development History
                    # Combes Student Life Center
                    # Grenelle Teaching and Mentoring Center
                    # Quai d'Orsay Learning Commons
                    # The Monttessuy Center for the Arts
          + Arts at AUP
               o AUP Fine Arts Gallery
                    # Permanent Collection
                    # History
                    # Curators
                    # Past Exhibitions
                    # Policies
                    # Call for Submissions
          + Policies & Guidelines
     * Academics
          + Undergraduate
               o Majors & Minors
               o Global Liberal Arts Core Curriculum
                    # Integrative Inquiry for the Global Explorer
                    # Critical Inquiry and Expression
                    # Quantitative and Experimental Reasoning
                    # Expression Française
                    # AUP Capstone
                    # Prior General Education Program
               o Core Capabilities
               o Firstbridge
                    # English Courses
               o The First-Year Success Program
          + Graduate Programs
               o MA in Diplomacy and International Law
                    # Program Requirements
                    # Career Outcomes
                    # Faculty
               o MA in Global Communications
                    # Program Requirements
                    # Development Communications Track
                         @ Program Requirements
                    # Digital Cultures and Industries Track
                         @ Program Requirements
                    # Fashion Track
                         @ Program Requirements
                         @ Fashion Studies at AUP
                    # Career Outcomes
                    # Faculty
               o MSc in Human Rights and Data Science
                    # Program Requirements
               o MA in International Affairs
                    # Program Requirements
                    # Career Outcomes
                    # Faculty
               o MA in International Affairs, Conflict Resolution, and
                 Civil Society Development
                    # Program Requirements
                    # Career Outcomes
                    # Faculty
               o MSc in International Management
                    # Program Requirements
                    # NGO & Mission Based Management Track
                         @ Program Requirements
                    # Sustainability Systems Track
                         @ Program Requirements
                    # Faculty
                    # Career Outcomes
               o MSc in Strategic Brand Management
               o Find Your Thesis Advisor
               o Previous Programs
          + Cultural Program
               o Cultural Programs History
               o Study Trips
               o Cultural Excursions
               o Coup de Pouce
               o Summer Trips and Excursions
               o Cultural Program Videos
               o FAQ
          + Faculty
               o Faculty Achievements
                    # Books
                    # Conferences & Talks
                    # Publications
               o Faculty Directory
               o Faculty Emeriti
          + Summer School
          + Research Centers
               o The Center for Critical Democracy Studies
                    # Upcoming Events
                    # Research Projects
                         @ De-Radicalisation in Europe and Beyond
                              - Coordinated Reports
                              - EU Horizon Grant
                         @ OppAttune – Countering Oppositional Political
                           Extremism
                         @ CO3 – Continuous Construction of Resilient
                           Social Contracts
                    # Fellows’ Publications
                    # Publishing
                    # Curriculum
                         @ Democracy Labs (D.Labs)
                         @ Prison Education Workshop
                         @ Tocqueville Challenge
                         @ Tocqueville Conversations
                    # Community
                    # Visiting Scholars
                    # CCDS Highlights
                         @ Critical Theory 101: Future Directions and New
                           Challenges
                         @ Martti Koskenniemi on “The Law of International
                           Society: A Road not Taken”
                         @ Academic Freedom Symposium
                         @ Tocqueville Colloque 2023
                         @ Violent Turns Conference
                         @ Degenerations of Democracy
                         @ DEMOS21 Inaugural Event
                         @ What Demos for the 21st Century?
                         @ The Paris Centennial Conference
                         @ Justice Stephen Breyer
                         @ Civic Jazz - The Launch of the Center
                    # Past Events
               o The Center for Writers and Translators
                    # The Work of the Center
                         @ Cahiers Series
                         @ The Muriel Sparks' Letters
                         @ Beckett Letters
                         @ Music & Literature
                         @ The White Review
                         @ That Other Word
                    # An Interview with Dan Gunn
                    # Community: Writers, Translators & Artists
                    # Past Events
                    # Press Coverage
               o The George and Irina Schaeffer Center for the Study of
                 Genocide, Human Rights and Conflict Prevention
                    # The Work of the Center
                         @ Figuring Memory Seminar
                         @ Upcoming Events
                         @ Past Events
                              - Words that Kill Conference 2018
                                   = About the Conference
                                   = Keynote Speakers
                                   = Abstracts and Program
                                   = Hotels and Restaurants
                         @ The Archives
                         @ Fellowships, Grants and Scholarships
                              - Fellowships for Faculty, Staff and
                                Students
                              - Research Scholarship for Undergraduate
                                Students
                    # Community
                    # International Conferences & Workshops
                    # Study Trips & Classes
                    # Event Replays
                    # The Justice Lab
                         @ Courts and Global Challenges
                              - International Courts
                              - Terrorism Courts
                              - Migration Courts
                         @ Strategic Lawyering
                         @ "On the Edge" Project
                         @ Who We Are
                         @ Justice Lab Talks
                         @ Publications
               o The Joy and Edward Frieman Environmental Science Center
                    # The Work of the Center
                         @ Beetle Kinship Project
                         @ Climate Change Project
                         @ Podcast: Water Is Not Just Water
                    # Community
                         @ An Interview with Claudio Piani
               o The Center for Media, Communication & Global Change
                    # Upcoming Events & Highlights
                    # Past Events
                    # News
                    # MCGC Working Podcasts
                    # Affiliations and Partnerships
                    # People
                    # Civic Media Lab Archive [2017-2022]
                         @ Archived Projects
                              - Coexist: Culture and Conflict
                              - Media Art, Sound & Listening
                              - Sensory Studies
                              - Building Bridges
                              - Migration, Exile, Identities
                              - Civic Engagement in the Workplace: Working
                                for a Better World
                              - Tactical Media
                              - Gender: Taking Action
                              - Mapping Power, Studying Crisis: Keeping an
                                Eye on the World
                         @ Past Events
          + Departments
               o Art History and Fine Arts
               o Comparative Literature and English
                    # Career Outcomes
               o Computer Science, Mathematics, and Environmental Science
               o French Studies and Modern Languages
                    # French Writing Lab
                    # French Honor Society
                    # FfIRE - Forum francophone interdépartemental de
                      recherches et d'enseignement
               o Psychology, Health & Gender
               o Communication, Media and Culture
                    # Fashion Studies
                         @ Student - Erin Garry
                         @ Student - Linnea Wingerup
               o Economics and Management
                    # Economics and Management Highlights
               o History and Politics
          + Academic Resources
               o Academic Affairs
                    # Academic Policies and Procedures
                    # Faculty Governance
                         @ Executive Committee of the Faculty Senate
                         @ Committee for Rank and Promotion
                         @ Curriculum Committee
                         @ GLACC Committee
                         @ Ethics Committee
                         @ Institutional Review Board
                         @ Council of Chairs
                         @ Graduate Program Review Board
                         @ Council of Directors of Research Centers
                         @ Appeals Committee
                         @ Budget Committee
                    # Faculty Support
                    # Curricular Proposal Documents
                    # Department Chair and Graduate Program Director
                      Resources
               o Academic Calendar
               o Academic Resource Center
                    # Academic Integrity
                         @ Plagiarism
                    # Blackboard
                    # Information for Faculty
                    # Information for Students
                    # Peer Tutoring
                    # Writing Lab
                         @ Writing Resources
                         @ Research
                         @ Writing in the Disciplines
                         @ AUP Writes
                         @ ...And More
               o Library
               o Registrar's Office
                    # Returning Student Registration
                    # Scheduling Information
                    # Check-in
                    # Transcripts
                         @ Request Form
                    # Certificates
                         @ Request Form
                    # Academic Forms
                         @ Administrative Forms
                              - Graduate Thesis and Capstone Forms
                    # External Course Pre-Approval
                    # Room Reservation
                    # Diplomas
                    # Transferring out
                    # FERPA Information
                    # Registrar’s Office: FAQs
               o Teaching and Learning Center
                    # Teaching Resources
                    # Center in Action
                    # Past Events
               o Employer Network
               o Accessibility & Accommodation Services
                    # Services & Accommodations
                    # Documentation & Registering
                    # Policies & Procedures
                    # Faculty Involvement
                    # Resources & Forms
                    # Paris and Accessibility
                    # Frequently Asked Questions & Definition
               o AI@AUP: A Campus-Level Initiative
                    # Project Overview and Scope
                    # Learning about AI
               o Quai D'Orsay Learning Commons
          + Paris as Classroom
          + ACE Center
               o Student Pathways
                    # Internship Spotlights
               o Academic Planning
                    # Degree Requirements & Worksheets
                    # Academic Advisor Assignments
                    # Forms, Information and Useful Links for Students
                    # First Year Abroad and Visiting Students
                    # Transfer Students
                    # Bachelor's/Master's Program
                    # External Language Study
               o GPS Program
                    # GPS & Academics
                    # Global Professional Skills Workshops
                    # GPS Panel Presentations
                    # GPS Award
                    # AUP Engage
               o Study Abroad
                    # Requirements
                    # Pre-Approval Paperwork
               o Career & Internship Planning
               o Global Talent Profile
               o Global Mentoring Program
               o Fellowships, Scholarships & Grants
               o Services
                    # Students
                         @ Career and Internship Services
                         @ Job and Internship Databases
                         @ Global Professional Skills (GPS) Program
                         @ Career and Internship Resources for Students
                    # ACE Newsletter Archives
                    # Alumni
                         @ Career Services
                         @ Mentor an AUP Student
                         @ Job Databases
                         @ Engage With AUP
                    # Parents
                         @ How You Can Help
                         @ FAQ
                    # Employers
                         @ Global Talent Portal
                         @ Share a Job or Internship Opportunity
                         @ AUP Internship Program
                         @ Get Involved With AUP
                    # Faculty Collaboration
               o ACE Team
     * Admissions
          + Undergraduate
               o How to Apply
               o Tuition & Costs
                    # Estimated Living Expenses
               o Scholarships & Financial Aid
                    # IB Diploma Scholarships
               o Transfer Students
                    # Course Transfer Tool
               o Credit Transfer
               o Part-time Studies
               o Homeschooled Students
               o Deferring Your Offer
          + Graduate
               o How to Apply
               o Tuition & Costs
                    # 38 Credit Programs
                    # 42 Credit Programs
                    # 48 Credit Programs: MADIL
                    # 48 Credit Programs: MAGC
                    # 48 Credit Program: MSIM
                    # 48 Credit Program: SBM
               o Financial Aid
               o Deferring Your Offer
          + Summer School
               o Summer Courses
                    # French Immersion
                    # Creative Writing
                    # Mutual Learning in Prison Education
               o How to Apply
               o Tuition & Costs
               o Summer Trips & Excursions
               o Summer Housing
               o Summer Calendar
               o Prepare for Arrival
          + Study Abroad
               o How to Apply: Gap Year Visitor
               o How to Apply: Independent Study Abroad
               o How to Apply: Study Abroad Partner
               o Tuition & Costs
               o Financial Aid
          + Veterans & Military Families
               o Veterans Scholarship
               o Applying for Benefits
               o Yellow Ribbon Program
          + Contact and Meet AUP
               o Request Information
               o Find Your Counselor
               o Counselor Advisory Board
                    # Information for High School Counselors
          + Admissions Calendar
          + Online Campus Tour
               o Quai d’Orsay Learning Commons
               o Combes Student Life Center
               o Grenelle Teaching and Mentoring Center
               o La Tour-Maubourg Administration Building
               o Passage Landrieu
               o Saint Dominique
               o The Monttessuy Center for the Arts
          + Visit the Campus
          + Online Application
          + Formation Continue
               o Validation des Acquis de l'Experience
     * Student Life
          + Campus
               o Housing Office
                    # Your Housing Options
                    # AUP Housing
                    # Housing Database
                    # Searching on Your Own & Housing Resources
                    # Meet the Team
                    # Summer Housing
               o AMEX
                    # History
                    # The Food
               o Bookstore
               o IT Services
               o Campus Map
               o Campus Security
               o Emergency Services
               o AUP Store
          + Student Leadership & Involvement
               o Student Leadership Office
               o Student Government
                    # Staff and Faculty Advisors to Student Senate
                    # Minutes & Reports
               o Student Advisor Program
               o Sophomore Mentoring Program
               o Physical Activities & Self-Care
                    # Competitive Sports
                    # Clubs & Classes
                    # Gym Memberships
               o Student Organizations
               o AUP Student Media
                    # Print Media
                    # Digital Media
                    # Broadcast Media
                    # Audio Media
                    # The Board
               o Service Organizations
               o AUP Engage
               o Advisory Board on Environmental Sustainability
               o Student Leadership Awards
          + Paris
               o Banking
               o Safety in Paris
               o Cultural Excursions
               o Student Jobs
               o Daily Life
                    # Transportation
                    # Food & Shopping
                    # Inexpensive Entertainment
                    # Settling In
               o Leaving Paris
          + Support Services
               o Student Development Help Desk
               o Student Accounting Services
                    # Undergraduate Tuition & Fees
                    # Graduate Tuition & Fees
                    # Payments and Procedures
                    # Tuition Refunds
                    # U.S. Tax Information
                    # Services
                    # Taxes for non EU packages
                    # Scholarships, Awards & Grants
                         @ Slosberg Travel Grant
                              - Apply for Slosberg Travel Grant
                         @ The Barbara Reno Senior Prize for Excellence in
                           Filmmaking
                         @ Sin-ming Shaw Award for Excellence
                         @ Third-Party Payments / 529 Plans
                    # FAQ
               o Student Immigration Services
                    # New Students
                    # Returning Students
                    # Under-18 Students
                    # Summer Students
                    # Part-Time Students
                    # EU Students and Dual citizenship (non EU - EU)
               o Student Grievance Procedure
               o Diversity and Inclusion
                    # LGBTQ+
                    # Diversity Council
          + Health & Well-being
               o Health Care Plan
                    # Cost
                    # Opting out
                    # Reimbursement
                    # Hospitalization
                    # Useful Tips
               o Finding Medical Providers
               o Immunization
               o Guidance Counseling
                    # Counseling Program - Policies, Procedures and
                      Confidentiality
               o Additional Counseling Resources
                    # Suicide Prevention
                    # Sexual Misconduct Prevention
                    # Alcohol and Substance Abuse
                    # Support for our Diverse Communities
                    # Time Management
               o Wellness
          + Digital Student Handbook
     * News
          + Publications
     * Events
          + Events Calendar
          + Past Conferences
               o Presidential Lecture Series
               o Fashion Education
                    # About the 2022 Fashion Education Conference
                    # Fashion Education Resources
                    # Fashion Education Podcast
               o Demos21 Lecture Series
               o The Psychology of Global Crises
                    # Schedule
                    # Keynote Speakers
                    # About the Conference
                    # Conference Committee
               o The Digital Multilogue on Fashion Education 2020
               o Paris Centennial Conference
     * AUP Giving
          + Contact
          + Why Give?
               o Jessica Newman '01
               o Craig Brown G'11
               o Wanja Laiboni '07
          + Philanthropic Priorities
               o The Monttessuy Center for the Arts
               o The Quai d'Orsay Learning Commons
               o Student Scholarships
               o The Cultural Program
               o Centers
          + Get Involved
          + Give Now
          + Donor Recognition
               o AUP Donors
               o Career Mentors
               o PAAC Members
               o Parent Ambassadors
               o Board of Trustees
          + Giving Tuesday 2018
               o Jasmine Paul '18
               o Lavinia Stanescu
               o Slosberg Travel Grant
          + Giving Tuesday 2019
               o Rome
               o Cairo
               o Iceland
               o Fez
               o India
               o Faith Toran G'18
               o Professor Tresilian
               o Clark Marchese
     * Housing Offer for 2024-2025
          + Housing Requirement
          + How to Register
          + Payment and Refund Policies
          + Important Dates
          + Residences
               o AUP Musset
               o AUP Annonciation
               o AUP BLUM
               o AUP Champs Élysées
               o AUP Heliopolis
               o AUP Jouffroy d'Abbans
               o Cambronne
               o Studelites Le Marechal
               o YouFirst La Defense
               o YouFirst Tolbiac
          + Housing Prices
     * IT Services
          + Get started
          + Service Catalog
          + News
          + Security, policies and procedures
          + Meet the Team
          + Get IT Help
     * Alumni
          + Alumni Benefits
          + Alumni Stories
          + Career Resources
          + Get Involved

     * Apply
     * Contact Us
     * My AUP

     * Admitted Students
     * Current Students
     * Alumni
     * Faculty & Staff
     * Prospective Students
     * Parents & Families

     * Facebook
     * Twitter
     * Instagram
     * Youtube
     * Linkedin
     * all

     * About AUP
          + History of AUP
               o Location
               o Honorary Degree Recipients
               o AUP History Timeline
               o Faces of AUP - Dr. Lloyd A. DeLamater
               o Faces of AUP - Marie Louise Viborel DeLamater
               o Faces of AUP - Col. Karl S. Cate
               o Faces of AUP - Raymond D. Flowers
               o Faces of AUP - Walter J. Brennan
          + Mission & Core Values
          + Vision and Leadership
               o Vision Statement
               o President
                    # About the President
                    # Past Presidents
                    # The Presidential Award for Distinguished Achievement
               o Leadership
                    # Board of Trustees
                    # Officers
                    # President's Alumni Advisory Council
                         @ PAAC Members
               o Strategic Plan
          + AUP Recognition
               o Delivering Academic Excellence
               o Accreditation
                    # Memberships
               o Partnerships and Consortia
               o Institutional Effectiveness
                    # Institutional Research
                    # Assessment
                         @ Assessment Structure
                         @ Assessment Process
                         @ Assessment Calendar
                         @ Assessment Resources
                    # Middle States Commission on Higher Education
                    # Steering Committee
                    # The Office of Institutional Research, Assessment and
                      Effectiveness
               o Awards
               o Retention and Graduation Rates
               o Student Right to Know
               o State Nonprofit Disclosures
               o Publications
               o Gender Equality Plan
          + Alumni Success
               o Undergraduate Outcomes
               o Graduate Outcomes
          + Campus Development
               o Online Campus Tour
               o Campus Development History
                    # Combes Student Life Center
                    # Grenelle Teaching and Mentoring Center
                    # Quai d'Orsay Learning Commons
                    # The Monttessuy Center for the Arts
          + Arts at AUP
               o AUP Fine Arts Gallery
                    # Permanent Collection
                    # History
                    # Curators
                    # Past Exhibitions
                    # Policies
                    # Call for Submissions
          + Policies & Guidelines
     * Academics
          + Undergraduate
               o Majors & Minors
               o Global Liberal Arts Core Curriculum
                    # Integrative Inquiry for the Global Explorer
                    # Critical Inquiry and Expression
                    # Quantitative and Experimental Reasoning
                    # Expression Française
                    # AUP Capstone
                    # Prior General Education Program
               o Core Capabilities
               o Firstbridge
                    # English Courses
               o The First-Year Success Program
          + Graduate Programs
               o MA in Diplomacy and International Law
                    # Program Requirements
                    # Career Outcomes
                    # Faculty
               o MA in Global Communications
                    # Program Requirements
                    # Development Communications Track
                         @ Program Requirements
                    # Digital Cultures and Industries Track
                         @ Program Requirements
                    # Fashion Track
                         @ Program Requirements
                         @ Fashion Studies at AUP
                    # Career Outcomes
                    # Faculty
               o MSc in Human Rights and Data Science
                    # Program Requirements
               o MA in International Affairs
                    # Program Requirements
                    # Career Outcomes
                    # Faculty
               o MA in International Affairs, Conflict Resolution, and
                 Civil Society Development
                    # Program Requirements
                    # Career Outcomes
                    # Faculty
               o MSc in International Management
                    # Program Requirements
                    # NGO & Mission Based Management Track
                         @ Program Requirements
                    # Sustainability Systems Track
                         @ Program Requirements
                    # Faculty
                    # Career Outcomes
               o MSc in Strategic Brand Management
               o Find Your Thesis Advisor
               o Previous Programs
          + Cultural Program
               o Cultural Programs History
               o Study Trips
               o Cultural Excursions
               o Coup de Pouce
               o Summer Trips and Excursions
               o Cultural Program Videos
               o FAQ
          + Faculty
               o Faculty Achievements
                    # Books
                    # Conferences & Talks
                    # Publications
               o Faculty Directory
               o Faculty Emeriti
          + Summer School
          + Research Centers
               o The Center for Critical Democracy Studies
                    # Upcoming Events
                    # Research Projects
                         @ De-Radicalisation in Europe and Beyond
                         @ OppAttune – Countering Oppositional Political
                           Extremism
                         @ CO3 – Continuous Construction of Resilient
                           Social Contracts
                    # Fellows’ Publications
                    # Publishing
                    # Curriculum
                         @ Democracy Labs (D.Labs)
                         @ Prison Education Workshop
                         @ Tocqueville Challenge
                         @ Tocqueville Conversations
                    # Community
                    # Visiting Scholars
                    # CCDS Highlights
                         @ Critical Theory 101: Future Directions and New
                           Challenges
                         @ Martti Koskenniemi on “The Law of International
                           Society: A Road not Taken”
                         @ Academic Freedom Symposium
                         @ Tocqueville Colloque 2023
                         @ Violent Turns Conference
                         @ Degenerations of Democracy
                         @ DEMOS21 Inaugural Event
                         @ What Demos for the 21st Century?
                         @ The Paris Centennial Conference
                         @ Justice Stephen Breyer
                         @ Civic Jazz - The Launch of the Center
                    # Past Events
               o The Center for Writers and Translators
                    # The Work of the Center
                         @ Cahiers Series
                         @ The Muriel Sparks' Letters
                         @ Beckett Letters
                         @ Music & Literature
                         @ The White Review
                         @ That Other Word
                    # An Interview with Dan Gunn
                    # Community: Writers, Translators & Artists
                    # Past Events
                    # Press Coverage
               o The George and Irina Schaeffer Center for the Study of
                 Genocide, Human Rights and Conflict Prevention
                    # The Work of the Center
                         @ Figuring Memory Seminar
                         @ Upcoming Events
                         @ Past Events
                         @ The Archives
                         @ Fellowships, Grants and Scholarships
                    # Community
                    # International Conferences & Workshops
                    # Study Trips & Classes
                    # Event Replays
                    # The Justice Lab
                         @ Courts and Global Challenges
                         @ Strategic Lawyering
                         @ "On the Edge" Project
                         @ Who We Are
                         @ Justice Lab Talks
                         @ Publications
               o The Joy and Edward Frieman Environmental Science Center
                    # The Work of the Center
                         @ Beetle Kinship Project
                         @ Climate Change Project
                         @ Podcast: Water Is Not Just Water
                    # Community
                         @ An Interview with Claudio Piani
               o The Center for Media, Communication & Global Change
                    # Upcoming Events & Highlights
                    # Past Events
                    # News
                    # MCGC Working Podcasts
                    # Affiliations and Partnerships
                    # People
                    # Civic Media Lab Archive [2017-2022]
                         @ Archived Projects
                         @ Past Events
          + Departments
               o Art History and Fine Arts
               o Comparative Literature and English
                    # Career Outcomes
               o Computer Science, Mathematics, and Environmental Science
               o French Studies and Modern Languages
                    # French Writing Lab
                    # French Honor Society
                    # FfIRE - Forum francophone interdépartemental de
                      recherches et d'enseignement
               o Psychology, Health & Gender
               o Communication, Media and Culture
                    # Fashion Studies
                         @ Student - Erin Garry
                         @ Student - Linnea Wingerup
               o Economics and Management
                    # Economics and Management Highlights
               o History and Politics
          + Academic Resources
               o Academic Affairs
                    # Academic Policies and Procedures
                    # Faculty Governance
                         @ Executive Committee of the Faculty Senate
                         @ Committee for Rank and Promotion
                         @ Curriculum Committee
                         @ GLACC Committee
                         @ Ethics Committee
                         @ Institutional Review Board
                         @ Council of Chairs
                         @ Graduate Program Review Board
                         @ Council of Directors of Research Centers
                         @ Appeals Committee
                         @ Budget Committee
                    # Faculty Support
                    # Curricular Proposal Documents
                    # Department Chair and Graduate Program Director
                      Resources
               o Academic Calendar
               o Academic Resource Center
                    # Academic Integrity
                         @ Plagiarism
                    # Blackboard
                    # Information for Faculty
                    # Information for Students
                    # Peer Tutoring
                    # Writing Lab
                         @ Writing Resources
                         @ Research
                         @ Writing in the Disciplines
                         @ AUP Writes
                         @ ...And More
               o Library
               o Registrar's Office
                    # Returning Student Registration
                    # Scheduling Information
                    # Check-in
                    # Transcripts
                         @ Request Form
                    # Certificates
                         @ Request Form
                    # Academic Forms
                         @ Administrative Forms
                    # External Course Pre-Approval
                    # Room Reservation
                    # Diplomas
                    # Transferring out
                    # FERPA Information
                    # Registrar’s Office: FAQs
               o Teaching and Learning Center
                    # Teaching Resources
                    # Center in Action
                    # Past Events
               o Employer Network
               o Accessibility & Accommodation Services
                    # Services & Accommodations
                    # Documentation & Registering
                    # Policies & Procedures
                    # Faculty Involvement
                    # Resources & Forms
                    # Paris and Accessibility
                    # Frequently Asked Questions & Definition
               o AI@AUP: A Campus-Level Initiative
                    # Project Overview and Scope
                    # Learning about AI
               o Quai D'Orsay Learning Commons
          + Paris as Classroom
          + ACE Center
               o Student Pathways
                    # Internship Spotlights
               o Academic Planning
                    # Degree Requirements & Worksheets
                    # Academic Advisor Assignments
                    # Forms, Information and Useful Links for Students
                    # First Year Abroad and Visiting Students
                    # Transfer Students
                    # Bachelor's/Master's Program
                    # External Language Study
               o GPS Program
                    # GPS & Academics
                    # Global Professional Skills Workshops
                    # GPS Panel Presentations
                    # GPS Award
                    # AUP Engage
               o Study Abroad
                    # Requirements
                    # Pre-Approval Paperwork
               o Career & Internship Planning
               o Global Talent Profile
               o Global Mentoring Program
               o Fellowships, Scholarships & Grants
               o Services
                    # Students
                         @ Career and Internship Services
                         @ Job and Internship Databases
                         @ Global Professional Skills (GPS) Program
                         @ Career and Internship Resources for Students
                    # ACE Newsletter Archives
                    # Alumni
                         @ Career Services
                         @ Mentor an AUP Student
                         @ Job Databases
                         @ Engage With AUP
                    # Parents
                         @ How You Can Help
                         @ FAQ
                    # Employers
                         @ Global Talent Portal
                         @ Share a Job or Internship Opportunity
                         @ AUP Internship Program
                         @ Get Involved With AUP
                    # Faculty Collaboration
               o ACE Team
     * Admissions
          + Undergraduate
               o How to Apply
               o Tuition & Costs
                    # Estimated Living Expenses
               o Scholarships & Financial Aid
                    # IB Diploma Scholarships
               o Transfer Students
                    # Course Transfer Tool
               o Credit Transfer
               o Part-time Studies
               o Homeschooled Students
               o Deferring Your Offer
          + Graduate
               o How to Apply
               o Tuition & Costs
                    # 38 Credit Programs
                    # 42 Credit Programs
                    # 48 Credit Programs: MADIL
                    # 48 Credit Programs: MAGC
                    # 48 Credit Program: MSIM
                    # 48 Credit Program: SBM
               o Financial Aid
               o Deferring Your Offer
          + Summer School
               o Summer Courses
                    # French Immersion
                    # Creative Writing
                    # Mutual Learning in Prison Education
               o How to Apply
               o Tuition & Costs
               o Summer Trips & Excursions
               o Summer Housing
               o Summer Calendar
               o Prepare for Arrival
          + Study Abroad
               o How to Apply: Gap Year Visitor
               o How to Apply: Independent Study Abroad
               o How to Apply: Study Abroad Partner
               o Tuition & Costs
               o Financial Aid
          + Veterans & Military Families
               o Veterans Scholarship
               o Applying for Benefits
               o Yellow Ribbon Program
          + Contact and Meet AUP
               o Request Information
               o Find Your Counselor
               o Counselor Advisory Board
                    # Information for High School Counselors
          + Admissions Calendar
          + Online Campus Tour
               o Quai d’Orsay Learning Commons
               o Combes Student Life Center
               o Grenelle Teaching and Mentoring Center
               o La Tour-Maubourg Administration Building
               o Passage Landrieu
               o Saint Dominique
               o The Monttessuy Center for the Arts
          + Visit the Campus
          + Online Application
          + Formation Continue
               o Validation des Acquis de l'Experience
     * Student Life
          + Campus
               o Housing Office
                    # Your Housing Options
                    # AUP Housing
                    # Housing Database
                    # Searching on Your Own & Housing Resources
                    # Meet the Team
                    # Summer Housing
               o AMEX
                    # History
                    # The Food
               o Bookstore
               o IT Services
               o Campus Map
               o Campus Security
               o Emergency Services
               o AUP Store
          + Student Leadership & Involvement
               o Student Leadership Office
               o Student Government
                    # Staff and Faculty Advisors to Student Senate
                    # Minutes & Reports
               o Student Advisor Program
               o Sophomore Mentoring Program
               o Physical Activities & Self-Care
                    # Competitive Sports
                    # Clubs & Classes
                    # Gym Memberships
               o Student Organizations
               o AUP Student Media
                    # Print Media
                    # Digital Media
                    # Broadcast Media
                    # Audio Media
                    # The Board
               o Service Organizations
               o AUP Engage
               o Advisory Board on Environmental Sustainability
               o Student Leadership Awards
          + Paris
               o Banking
               o Safety in Paris
               o Cultural Excursions
               o Student Jobs
               o Daily Life
                    # Transportation
                    # Food & Shopping
                    # Inexpensive Entertainment
                    # Settling In
               o Leaving Paris
          + Support Services
               o Student Development Help Desk
               o Student Accounting Services
                    # Undergraduate Tuition & Fees
                    # Graduate Tuition & Fees
                    # Payments and Procedures
                    # Tuition Refunds
                    # U.S. Tax Information
                    # Services
                    # Taxes for non EU packages
                    # Scholarships, Awards & Grants
                         @ Slosberg Travel Grant
                         @ The Barbara Reno Senior Prize for Excellence in
                           Filmmaking
                         @ Sin-ming Shaw Award for Excellence
                         @ Third-Party Payments / 529 Plans
                    # FAQ
               o Student Immigration Services
                    # New Students
                    # Returning Students
                    # Under-18 Students
                    # Summer Students
                    # Part-Time Students
                    # EU Students and Dual citizenship (non EU - EU)
               o Student Grievance Procedure
               o Diversity and Inclusion
                    # LGBTQ+
                    # Diversity Council
          + Health & Well-being
               o Health Care Plan
                    # Cost
                    # Opting out
                    # Reimbursement
                    # Hospitalization
                    # Useful Tips
               o Finding Medical Providers
               o Immunization
               o Guidance Counseling
                    # Counseling Program - Policies, Procedures and
                      Confidentiality
               o Additional Counseling Resources
                    # Suicide Prevention
                    # Sexual Misconduct Prevention
                    # Alcohol and Substance Abuse
                    # Support for our Diverse Communities
                    # Time Management
               o Wellness
          + Digital Student Handbook
     * News
          + Publications
     * Events
          + Events Calendar
          + Past Conferences
               o Presidential Lecture Series
               o Fashion Education
                    # About the 2022 Fashion Education Conference
                    # Fashion Education Resources
                    # Fashion Education Podcast
               o Demos21 Lecture Series
               o The Psychology of Global Crises
                    # Schedule
                    # Keynote Speakers
                    # About the Conference
                    # Conference Committee
               o The Digital Multilogue on Fashion Education 2020
               o Paris Centennial Conference
     * AUP Giving
          + Contact
          + Why Give?
               o Jessica Newman '01
               o Craig Brown G'11
               o Wanja Laiboni '07
          + Philanthropic Priorities
               o The Monttessuy Center for the Arts
               o The Quai d'Orsay Learning Commons
               o Student Scholarships
               o The Cultural Program
               o Centers
          + Get Involved
          + Give Now
          + Donor Recognition
               o AUP Donors
               o Career Mentors
               o PAAC Members
               o Parent Ambassadors
               o Board of Trustees
          + Giving Tuesday 2018
               o Jasmine Paul '18
               o Lavinia Stanescu
               o Slosberg Travel Grant
          + Giving Tuesday 2019
               o Rome
               o Cairo
               o Iceland
               o Fez
               o India
               o Faith Toran G'18
               o Professor Tresilian
               o Clark Marchese
     * Housing Offer for 2024-2025
          + Housing Requirement
          + How to Register
          + Payment and Refund Policies
          + Important Dates
          + Residences
               o AUP Musset
               o AUP Annonciation
               o AUP BLUM
               o AUP Champs Élysées
               o AUP Heliopolis
               o AUP Jouffroy d'Abbans
               o Cambronne
               o Studelites Le Marechal
               o YouFirst La Defense
               o YouFirst Tolbiac
          + Housing Prices
     * IT Services
          + Get started
          + Service Catalog
          + News
          + Security, policies and procedures
          + Meet the Team
          + Get IT Help
     * Alumni
          + Alumni Benefits
          + Alumni Stories
          + Career Resources
          + Get Involved

     * About AUP
          + History of AUP
               o Location
               o Honorary Degree Recipients
               o AUP History Timeline
               o Faces of AUP - Dr. Lloyd A. DeLamater
               o Faces of AUP - Marie Louise Viborel DeLamater
               o Faces of AUP - Col. Karl S. Cate
               o Faces of AUP - Raymond D. Flowers
               o Faces of AUP - Walter J. Brennan
          + Mission & Core Values
          + Vision and Leadership
               o Vision Statement
               o President
                    # About the President
                    # Past Presidents
                    # The Presidential Award for Distinguished Achievement
               o Leadership
                    # Board of Trustees
                    # Officers
                    # President's Alumni Advisory Council
                         @ PAAC Members
               o Strategic Plan
          + AUP Recognition
               o Delivering Academic Excellence
               o Accreditation
                    # Memberships
               o Partnerships and Consortia
               o Institutional Effectiveness
                    # Institutional Research
                    # Assessment
                         @ Assessment Structure
                         @ Assessment Process
                         @ Assessment Calendar
                         @ Assessment Resources
                    # Middle States Commission on Higher Education
                    # Steering Committee
                    # The Office of Institutional Research, Assessment and
                      Effectiveness
               o Awards
               o Retention and Graduation Rates
               o Student Right to Know
               o State Nonprofit Disclosures
               o Publications
               o Gender Equality Plan
          + Alumni Success
               o Undergraduate Outcomes
               o Graduate Outcomes
          + Campus Development
               o Online Campus Tour
               o Campus Development History
                    # Combes Student Life Center
                    # Grenelle Teaching and Mentoring Center
                    # Quai d'Orsay Learning Commons
                    # The Monttessuy Center for the Arts
          + Arts at AUP
               o AUP Fine Arts Gallery
                    # Permanent Collection
                    # History
                    # Curators
                    # Past Exhibitions
                    # Policies
                    # Call for Submissions
          + Policies & Guidelines
     * Academics
          + Undergraduate
               o Majors & Minors
               o Global Liberal Arts Core Curriculum
                    # Integrative Inquiry for the Global Explorer
                    # Critical Inquiry and Expression
                    # Quantitative and Experimental Reasoning
                    # Expression Française
                    # AUP Capstone
                    # Prior General Education Program
               o Core Capabilities
               o Firstbridge
                    # English Courses
               o The First-Year Success Program
          + Graduate Programs
               o MA in Diplomacy and International Law
                    # Program Requirements
                    # Career Outcomes
                    # Faculty
               o MA in Global Communications
                    # Program Requirements
                    # Development Communications Track
                         @ Program Requirements
                    # Digital Cultures and Industries Track
                         @ Program Requirements
                    # Fashion Track
                         @ Program Requirements
                         @ Fashion Studies at AUP
                    # Career Outcomes
                    # Faculty
               o MSc in Human Rights and Data Science
                    # Program Requirements
               o MA in International Affairs
                    # Program Requirements
                    # Career Outcomes
                    # Faculty
               o MA in International Affairs, Conflict Resolution, and
                 Civil Society Development
                    # Program Requirements
                    # Career Outcomes
                    # Faculty
               o MSc in International Management
                    # Program Requirements
                    # NGO & Mission Based Management Track
                         @ Program Requirements
                    # Sustainability Systems Track
                         @ Program Requirements
                    # Faculty
                    # Career Outcomes
               o MSc in Strategic Brand Management
               o Find Your Thesis Advisor
               o Previous Programs
          + Cultural Program
               o Cultural Programs History
               o Study Trips
               o Cultural Excursions
               o Coup de Pouce
               o Summer Trips and Excursions
               o Cultural Program Videos
               o FAQ
          + Faculty
               o Faculty Achievements
                    # Books
                    # Conferences & Talks
                    # Publications
               o Faculty Directory
               o Faculty Emeriti
          + Summer School
          + Research Centers
               o The Center for Critical Democracy Studies
                    # Upcoming Events
                    # Research Projects
                         @ De-Radicalisation in Europe and Beyond
                         @ OppAttune – Countering Oppositional Political
                           Extremism
                         @ CO3 – Continuous Construction of Resilient
                           Social Contracts
                    # Fellows’ Publications
                    # Publishing
                    # Curriculum
                         @ Democracy Labs (D.Labs)
                         @ Prison Education Workshop
                         @ Tocqueville Challenge
                         @ Tocqueville Conversations
                    # Community
                    # Visiting Scholars
                    # CCDS Highlights
                         @ Critical Theory 101: Future Directions and New
                           Challenges
                         @ Martti Koskenniemi on “The Law of International
                           Society: A Road not Taken”
                         @ Academic Freedom Symposium
                         @ Tocqueville Colloque 2023
                         @ Violent Turns Conference
                         @ Degenerations of Democracy
                         @ DEMOS21 Inaugural Event
                         @ What Demos for the 21st Century?
                         @ The Paris Centennial Conference
                         @ Justice Stephen Breyer
                         @ Civic Jazz - The Launch of the Center
                    # Past Events
               o The Center for Writers and Translators
                    # The Work of the Center
                         @ Cahiers Series
                         @ The Muriel Sparks' Letters
                         @ Beckett Letters
                         @ Music & Literature
                         @ The White Review
                         @ That Other Word
                    # An Interview with Dan Gunn
                    # Community: Writers, Translators & Artists
                    # Past Events
                    # Press Coverage
               o The George and Irina Schaeffer Center for the Study of
                 Genocide, Human Rights and Conflict Prevention
                    # The Work of the Center
                         @ Figuring Memory Seminar
                         @ Upcoming Events
                         @ Past Events
                         @ The Archives
                         @ Fellowships, Grants and Scholarships
                    # Community
                    # International Conferences & Workshops
                    # Study Trips & Classes
                    # Event Replays
                    # The Justice Lab
                         @ Courts and Global Challenges
                         @ Strategic Lawyering
                         @ "On the Edge" Project
                         @ Who We Are
                         @ Justice Lab Talks
                         @ Publications
               o The Joy and Edward Frieman Environmental Science Center
                    # The Work of the Center
                         @ Beetle Kinship Project
                         @ Climate Change Project
                         @ Podcast: Water Is Not Just Water
                    # Community
                         @ An Interview with Claudio Piani
               o The Center for Media, Communication & Global Change
                    # Upcoming Events & Highlights
                    # Past Events
                    # News
                    # MCGC Working Podcasts
                    # Affiliations and Partnerships
                    # People
                    # Civic Media Lab Archive [2017-2022]
                         @ Archived Projects
                         @ Past Events
          + Departments
               o Art History and Fine Arts
               o Comparative Literature and English
                    # Career Outcomes
               o Computer Science, Mathematics, and Environmental Science
               o French Studies and Modern Languages
                    # French Writing Lab
                    # French Honor Society
                    # FfIRE - Forum francophone interdépartemental de
                      recherches et d'enseignement
               o Psychology, Health & Gender
               o Communication, Media and Culture
                    # Fashion Studies
                         @ Student - Erin Garry
                         @ Student - Linnea Wingerup
               o Economics and Management
                    # Economics and Management Highlights
               o History and Politics
          + Academic Resources
               o Academic Affairs
                    # Academic Policies and Procedures
                    # Faculty Governance
                         @ Executive Committee of the Faculty Senate
                         @ Committee for Rank and Promotion
                         @ Curriculum Committee
                         @ GLACC Committee
                         @ Ethics Committee
                         @ Institutional Review Board
                         @ Council of Chairs
                         @ Graduate Program Review Board
                         @ Council of Directors of Research Centers
                         @ Appeals Committee
                         @ Budget Committee
                    # Faculty Support
                    # Curricular Proposal Documents
                    # Department Chair and Graduate Program Director
                      Resources
               o Academic Calendar
               o Academic Resource Center
                    # Academic Integrity
                         @ Plagiarism
                    # Blackboard
                    # Information for Faculty
                    # Information for Students
                    # Peer Tutoring
                    # Writing Lab
                         @ Writing Resources
                         @ Research
                         @ Writing in the Disciplines
                         @ AUP Writes
                         @ ...And More
               o Library
               o Registrar's Office
                    # Returning Student Registration
                    # Scheduling Information
                    # Check-in
                    # Transcripts
                         @ Request Form
                    # Certificates
                         @ Request Form
                    # Academic Forms
                         @ Administrative Forms
                    # External Course Pre-Approval
                    # Room Reservation
                    # Diplomas
                    # Transferring out
                    # FERPA Information
                    # Registrar’s Office: FAQs
               o Teaching and Learning Center
                    # Teaching Resources
                    # Center in Action
                    # Past Events
               o Employer Network
               o Accessibility & Accommodation Services
                    # Services & Accommodations
                    # Documentation & Registering
                    # Policies & Procedures
                    # Faculty Involvement
                    # Resources & Forms
                    # Paris and Accessibility
                    # Frequently Asked Questions & Definition
               o AI@AUP: A Campus-Level Initiative
                    # Project Overview and Scope
                    # Learning about AI
               o Quai D'Orsay Learning Commons
          + Paris as Classroom
          + ACE Center
               o Student Pathways
                    # Internship Spotlights
               o Academic Planning
                    # Degree Requirements & Worksheets
                    # Academic Advisor Assignments
                    # Forms, Information and Useful Links for Students
                    # First Year Abroad and Visiting Students
                    # Transfer Students
                    # Bachelor's/Master's Program
                    # External Language Study
               o GPS Program
                    # GPS & Academics
                    # Global Professional Skills Workshops
                    # GPS Panel Presentations
                    # GPS Award
                    # AUP Engage
               o Study Abroad
                    # Requirements
                    # Pre-Approval Paperwork
               o Career & Internship Planning
               o Global Talent Profile
               o Global Mentoring Program
               o Fellowships, Scholarships & Grants
               o Services
                    # Students
                         @ Career and Internship Services
                         @ Job and Internship Databases
                         @ Global Professional Skills (GPS) Program
                         @ Career and Internship Resources for Students
                    # ACE Newsletter Archives
                    # Alumni
                         @ Career Services
                         @ Mentor an AUP Student
                         @ Job Databases
                         @ Engage With AUP
                    # Parents
                         @ How You Can Help
                         @ FAQ
                    # Employers
                         @ Global Talent Portal
                         @ Share a Job or Internship Opportunity
                         @ AUP Internship Program
                         @ Get Involved With AUP
                    # Faculty Collaboration
               o ACE Team
     * Admissions
          + Undergraduate
               o How to Apply
               o Tuition & Costs
                    # Estimated Living Expenses
               o Scholarships & Financial Aid
                    # IB Diploma Scholarships
               o Transfer Students
                    # Course Transfer Tool
               o Credit Transfer
               o Part-time Studies
               o Homeschooled Students
               o Deferring Your Offer
          + Graduate
               o How to Apply
               o Tuition & Costs
                    # 38 Credit Programs
                    # 42 Credit Programs
                    # 48 Credit Programs: MADIL
                    # 48 Credit Programs: MAGC
                    # 48 Credit Program: MSIM
                    # 48 Credit Program: SBM
               o Financial Aid
               o Deferring Your Offer
          + Summer School
               o Summer Courses
                    # French Immersion
                    # Creative Writing
                    # Mutual Learning in Prison Education
               o How to Apply
               o Tuition & Costs
               o Summer Trips & Excursions
               o Summer Housing
               o Summer Calendar
               o Prepare for Arrival
          + Study Abroad
               o How to Apply: Gap Year Visitor
               o How to Apply: Independent Study Abroad
               o How to Apply: Study Abroad Partner
               o Tuition & Costs
               o Financial Aid
          + Veterans & Military Families
               o Veterans Scholarship
               o Applying for Benefits
               o Yellow Ribbon Program
          + Contact and Meet AUP
               o Request Information
               o Find Your Counselor
               o Counselor Advisory Board
                    # Information for High School Counselors
          + Admissions Calendar
          + Online Campus Tour
               o Quai d’Orsay Learning Commons
               o Combes Student Life Center
               o Grenelle Teaching and Mentoring Center
               o La Tour-Maubourg Administration Building
               o Passage Landrieu
               o Saint Dominique
               o The Monttessuy Center for the Arts
          + Visit the Campus
          + Online Application
          + Formation Continue
               o Validation des Acquis de l'Experience
     * Student Life
          + Campus
               o Housing Office
                    # Your Housing Options
                    # AUP Housing
                    # Housing Database
                    # Searching on Your Own & Housing Resources
                    # Meet the Team
                    # Summer Housing
               o AMEX
                    # History
                    # The Food
               o Bookstore
               o IT Services
               o Campus Map
               o Campus Security
               o Emergency Services
               o AUP Store
          + Student Leadership & Involvement
               o Student Leadership Office
               o Student Government
                    # Staff and Faculty Advisors to Student Senate
                    # Minutes & Reports
               o Student Advisor Program
               o Sophomore Mentoring Program
               o Physical Activities & Self-Care
                    # Competitive Sports
                    # Clubs & Classes
                    # Gym Memberships
               o Student Organizations
               o AUP Student Media
                    # Print Media
                    # Digital Media
                    # Broadcast Media
                    # Audio Media
                    # The Board
               o Service Organizations
               o AUP Engage
               o Advisory Board on Environmental Sustainability
               o Student Leadership Awards
          + Paris
               o Banking
               o Safety in Paris
               o Cultural Excursions
               o Student Jobs
               o Daily Life
                    # Transportation
                    # Food & Shopping
                    # Inexpensive Entertainment
                    # Settling In
               o Leaving Paris
          + Support Services
               o Student Development Help Desk
               o Student Accounting Services
                    # Undergraduate Tuition & Fees
                    # Graduate Tuition & Fees
                    # Payments and Procedures
                    # Tuition Refunds
                    # U.S. Tax Information
                    # Services
                    # Taxes for non EU packages
                    # Scholarships, Awards & Grants
                         @ Slosberg Travel Grant
                         @ The Barbara Reno Senior Prize for Excellence in
                           Filmmaking
                         @ Sin-ming Shaw Award for Excellence
                         @ Third-Party Payments / 529 Plans
                    # FAQ
               o Student Immigration Services
                    # New Students
                    # Returning Students
                    # Under-18 Students
                    # Summer Students
                    # Part-Time Students
                    # EU Students and Dual citizenship (non EU - EU)
               o Student Grievance Procedure
               o Diversity and Inclusion
                    # LGBTQ+
                    # Diversity Council
          + Health & Well-being
               o Health Care Plan
                    # Cost
                    # Opting out
                    # Reimbursement
                    # Hospitalization
                    # Useful Tips
               o Finding Medical Providers
               o Immunization
               o Guidance Counseling
                    # Counseling Program - Policies, Procedures and
                      Confidentiality
               o Additional Counseling Resources
                    # Suicide Prevention
                    # Sexual Misconduct Prevention
                    # Alcohol and Substance Abuse
                    # Support for our Diverse Communities
                    # Time Management
               o Wellness
          + Digital Student Handbook
     * News
          + Publications
     * Events
          + Events Calendar
          + Past Conferences
               o Presidential Lecture Series
               o Fashion Education
                    # About the 2022 Fashion Education Conference
                    # Fashion Education Resources
                    # Fashion Education Podcast
               o Demos21 Lecture Series
               o The Psychology of Global Crises
                    # Schedule
                    # Keynote Speakers
                    # About the Conference
                    # Conference Committee
               o The Digital Multilogue on Fashion Education 2020
               o Paris Centennial Conference
     * AUP Giving
          + Contact
          + Why Give?
               o Jessica Newman '01
               o Craig Brown G'11
               o Wanja Laiboni '07
          + Philanthropic Priorities
               o The Monttessuy Center for the Arts
               o The Quai d'Orsay Learning Commons
               o Student Scholarships
               o The Cultural Program
               o Centers
          + Get Involved
          + Give Now
          + Donor Recognition
               o AUP Donors
               o Career Mentors
               o PAAC Members
               o Parent Ambassadors
               o Board of Trustees
          + Giving Tuesday 2018
               o Jasmine Paul '18
               o Lavinia Stanescu
               o Slosberg Travel Grant
          + Giving Tuesday 2019
               o Rome
               o Cairo
               o Iceland
               o Fez
               o India
               o Faith Toran G'18
               o Professor Tresilian
               o Clark Marchese
     * Housing Offer for 2024-2025
          + Housing Requirement
          + How to Register
          + Payment and Refund Policies
          + Important Dates
          + Residences
               o AUP Musset
               o AUP Annonciation
               o AUP BLUM
               o AUP Champs Élysées
               o AUP Heliopolis
               o AUP Jouffroy d'Abbans
               o Cambronne
               o Studelites Le Marechal
               o YouFirst La Defense
               o YouFirst Tolbiac
          + Housing Prices
     * IT Services
          + Get started
          + Service Catalog
          + News
          + Security, policies and procedures
          + Meet the Team
          + Get IT Help
     * Alumni
          + Alumni Benefits
          + Alumni Stories
          + Career Resources
          + Get Involved

Robert Payne

   Home>Academics>Faculty>Faculty Directory>

Primary tabs

     * View(active tab)
     * Contact

Robert Payne

   Professor, Department Chair – Communication, Media and Culture
     * Department: Communication, Media and Culture
     * Graduate Program(s): Global Communications
     * Office Hours:
       By appointment
     *

See Courses >>

   Professor Payne joined The American University of Paris in 2008 after
   teaching for several years at universities in his home
   country, Australia. In his research, he is primarily interested in
   gender and sexuality in media and popular culture, and how queer theory
   can generate new approaches for media studies scholarship. He has
   published widely in these fields, focusing on such topics as the
   construction of masculinity on gay dating websites and Australian TV,
   the circulation of panic in the mediation of gender and sexuality, the
   inherent queerness of social media discourses, and the queer potential
   of deteriorated media experiences.
   Payne has published two monographs. The first, The Promiscuity of
   Network Culture: Queer Theory and Digital Media (Routledge 2015) takes
   as a point of departure the resignification of "viral" circulation for
   a digital media context. The book examines the multiple intimacies that
   characterize network culture, including the everyday practices of
   "sharing" on social media. Interrogating a wide range of examples, from
   Facebook to viral celebrity to the Abu Ghraib photos, the book uncovers
   the queer and entrepreneurial logic governing what circulates in
   digital networks and how we talk about them.

   His second monograph, L'Homme blessé, published in the Queer Film
   Classics series by McGill-Queen's University Press (2022), is a
   book-length study of the pioneering 1983 French film by director
   Patrice Chéreau, paying particular attention to the film's visual
   grammar of queer desire, the social and political circumstances of the
   film's production, and its reception in various international
   contexts.

   Payne's current research explores the materialities of everyday media,
   in particular the spaces, infrastructures, objects, and affects that
   characterise and make possible our encounters with media.

Education/Degrees

     * PhD, University of Sydney, Australia
     * BA (Hons I), University of Sydney, Australia

Publications

Books

   L'Homme Blesse L'Homme blessé (Queer Film Classics). McGill-Queen's
   University Press, 2022.



   The Promiscuity of Network Culture.jpg The Promiscuity of Network
   Culture: Queer Theory and Digital Media. Routledge, 2015.






Journal articles and book chapters

   "Queer by numbers, or what is happening to popular discourses of LGBTQ+
   media representation?" Queer Studies in Media and Popular Culture, vol
   9, no. 2, 2024, pp. 183-199. https://doi.org/10.1386/qsmpc_00128_1

   "Like Living in a Different Time Zone: SBS's Queer
   Orientations." Television Studies in Queer Times, edited by F. Hollis
   Griffin, Routledge, 2023, pp. 51-64.

   “Productivity and Promiscuity: Paying Undivided Attention” in
   Communication in the Era of Attention Scarcity. Ed. Waddick Doyle and
   Claudia Roda. Palgrave, 2019, 129-139.

   "Lossy Media: Queer Encounters with Infrastructure", Open Cultural
   Studies 2 (2018). Available online at:
   https://www.degruyter.com/view/j/culture.2018.2.issue-1/culture-2018-00
   48/culture-2018-0048.xml?format=INT

   "Je suis Charlie": Viral Circulation and the Ambivalence of Affective
   Citizenship, International Journal of Cultural Studies (2016):
   doi:10.1177/1367877916675193

   “Frictionless sharing and digital promiscuity”, Communication and
   Critical/Cultural Studies (2014). DOI: 10.1080/14791420.2013.873942

   “Virality 2.0: Networked promiscuity and the sharing subject”, Cultural
   Studies 27.4 (2013): 540-560.

   "But what about the dinosaurs?: A Response to Damien Riggs",
   Contemporary Issues in Early Childhood 14.1 (2013): 94-98.

   "Introduction: Citizenship and Queer Critique", Sexualities 15.3-4
   (2012): 251-256 (co-authored with Cristyn Davies).

   "Grid Failure: Metaphors of Subcultural Time and Space" in Queer and
   Subjugated Knowledges: Generating Subversive Imaginaries. Ed. Kerry
   Robinson and Cristyn Davies. Bentham e-books, 2012.

   “Dancing with the ordinary: masculine celebrity performance on
   Australian TV”, Continuum 23.3 (2009): 295-306.

   “Performing the Ethics of Conversation: a review of Judith Butler in
   Conversation: Analyzing the Texts and Talk of Everyday Life”, GLQ 15.1
   (2009): 177-179.

   “Virtual panic: children online and the transmission of harm” in Moral
   Panics over Contemporary Children and Youth. Ed. Charles Krinsky.
   Aldershot: Ashgate, 2008, 31-46.

   “Skylarking: homosexual panic and the death of Private Kovco”, Cultural
   Studies Review 14.2 (2008): 34-48.

   “Str8acting”, Social Semiotics 17.4 (2007): 525-538.

   "Grid: On Being-as-Transmission and Normativity." M/C Journal 9.1
   (2006). http://journal.media-culture.org.au/0603/06-payne.php

   “Digital memories, analogues of affect”, SCAN: Journal of media arts
   culture 1.3 (2004).
   http://scan.net.au/scan/journal/display.php?journal_id=42

   “Virtually: the refreshment of interface value”, Postmodern Culture
   14.3 (2004). http://www3.iath.virginia.edu/pmc

   “Confessing the Violent: Projected Deviance in American Psycho and Talk
   Show TV”, Anatomies of Violence: an Interdisciplinary Investigation.
   Ed. R. Walker, et al. Sydney: Research Institute for Humanities and
   Social Sciences, University of Sydney, 2000, 169-79.



Edited journal issues

   “Citizenship and queer critique”, special issue of Sexualities 15.3-4
   (2012), co-edited with Cristyn Davies.

   “Panic”, special issue of Cultural Studies Review 14.2 (2008), co-
   edited with Cristyn Davies

Research Areas

   * Digital media

   * Social media and network culture

   * Gender studies and queer theory

   * Gender and sexuality in media and popular culture

   *Affect theory

   *Materiality and media
     * Facebook
     * Twitter
     * Instagram
     * Youtube
     * all

     * Directory
     * Map
     * Employment
     * Contact
     * Mentions Légales
     * Policies & Guidelines

   THE AMERICAN UNIVERSITY OF PARIS ©
      Start Geo Dictionary | Overview | Topics | Groups | Categories |
                             Bookmark this page.


   geology dictionary - geography encyclopedia

                             Full text search :
   Enter search term_____________________________________________________
                                     Search

           A   B   C   D   E   F   G   H   I   J   K   L   M   N   O   P   Q
   R   S   T   U   V   W   X   Y   Z   #




society



     \'There is\', a former British prime minister once famously claimed,
   \'no such thing as society.\' This remarkable assertion had at least
   two ideological goals. One was the refusal to accept anything other
   than the nature and behaviour of individuals as explanations for human
   action; another was the displacement of socially constructed forms of
   social reproduction through distinctive and formative sets of social
   relations as a significant influence upon the trajectory of human
   society. The intersection of individuals, tainted only by their
   internal nature, through markets was seen as the dynamic of a liberal
   and free society: the world is all agents and one structure â€” the
   market formed in the liberal view simply through the free interaction
   of those agents.
   And yet human being is impossible outside some form of society (e.g.
   Lee, 1989) â€” even non-human society. Society is both an identifiable
   cluster of socially constructed individuals, institutions,
   relationships, forms of conduct, material and social practices and
   discourses that are reproduced and reconstituted across time and space,
   and the condition under which such phenomena are formed. The stress
   here upon relationships, institutions and conduct underlines the point
   that societies are far more than the individuals which comprise them
   but it does not imply that they are unitary or determinant totalities.
   For one thing, the social relations which give direction and evaluative
   norms to practices of social reproduction are difficult, if not
   impossible, to resist â€” at least in the short term and over all but
   the most restricted geographical spaces â€” and, for another,
   Foucauldian notions of regimes of truth (McDowell, 1995) refer to the
   temporary and partial geographies of stabilization of discursive
   formations, the nature of which are definable only in terms of their
   own power/ knowledge.
   At least four levels of meaning may be ascribed to society: (a) human
   (or nonhuman) society in general; (b) historically distinct types of
   society, e.g. feudal society (see feudalism), capitalist society (see
   capitalism), defined in terms of a particular set of social relations;
   (c) particular instances of society, e.g. national societies â€”
   sometimes thought of as national social formations â€” Arabian society,
   Christian society; and (d) particular interest groups (e.g.
   geographical societies) which represent and proselytize the
   significance of discourses related closely to the narrow confines of
   their specific interest. The formative relationships between (a) and
   (c) are problematic and highly complex and involve intersections
   between these different instances.
   Human life is necessarily social in organization, if only for the most
   basic reason that it could not be reproduced outside society (Lee,
   1989). Equally, human life is necessarily part of nature, and nature
   and society are conjoined in the labour process (Gregory, 1978). But
   material production is rarely merely instinctive. It cannot somehow
   predate systems of meaning or significance. Systems of meaning direct
   and endow significance upon material practice. Even in the most
   desperate circumstances of material deprivation, human beings respond
   emotionally as well as physiologically to their plight and try to make
   sense of or protest at the nonsense of their predicament. Social being
   certainly determines consciousness but whether material production
   determines social being is another matter altogether (see economic
   geography). Similarly, the question of \'social being\' itself is
   problematic in that it may presuppose nothing more than adherence to a
   particular discourse or regime of truth.
   Society is always in a process of becoming as a result of the conscious
   actions of human beings â€” including their representations of their
   own circumstances. Indeed, the term social formation carries with it
   the notion that society is an ever-changing process. Human actions are
   informed by society itself, by the understandings held of society â€”
   which may be no more than acceptance of particular discourses â€”
   although these are social practices which presuppose, therefore, some
   prior social, if only competing, discourses, and by the relationships
   between society and its knowledgeable participants. This means that the
   study of society cannot be reduced to the simplicities of natural or
   physical science. We cannot divorce subject and object and alternative
   societies are always possible if we choose to construct them.
   Human beings create societies at the same time as they are created by
   them, and they are knowledgeable participants in this double process of
   creation (see structuration theory). Indeed, Godelier (1986, p. 1)
   argues (italics in original) that
   human beings, in contrast to other social animals, do not just live in
   society, they produce society in order to live. In the course of their
   existence, they invent new ways of thinking and acting â€” both upon
   themselves and upon the nature which surrounds them. They therefore
   produce culture and create history â€¦and he should have added that the
   production of culture and history is predicated upon the making of
   geographies as an essential condition of human existence.
   An alternative view (Mann, 1986, p. 14) of the relationship between
   people and society is that whilst human beings \'need to enter into
   social power relations, â€¦ they do not need social totalities\'. Here
   the very notion of society as \'a bounded and patterned social
   totality\' is questioned whilst, at the same time, the inherent
   sociability of human beings is acknowledged in the recognition of the
   inherency of social relations (Lee, 1989). Michael Mann (1986, p. 5)
   describes the relationship between people and society thus:
   Human goals require both intervention in nature â€” a material life in
   the widest sense â€” and social cooperation. It is difficult to imagine
   any of our pursuits or satisfactions occurring without these. Thus the
   characteristics of nature and the characteristics of social relations
   become relevant to, and may indeed structure, motivations. They have
   emergent properties of their own.Resnick and Wolff (1987) also shy away
   from the idea of a patterned social totality in their rejection of
   determinist and essentialist forms of analysis (cf. essentialism). They
   stress instead the multiple determinations involved in the complex of
   interactions between natural, economic, political and cultural
   processes, each of which may be subdivided into what they call class
   (production, appropriation and distribution of surplus production) and
   the wide (almost limitless) range of non-class processes (e.g.
   commodity exchange, friendship, social intercourse).
   However, it would be a profound mistake to conclude from such arguments
   that human beings are not influenced in a quite fundamental fashion by
   the societies into which they are born and in which they live. Norms
   and values, direction and purpose are social constructs and the social
   relations which articulate such constructs and enable individuals to
   engage with them are inescapable for human involvement in society even
   if they become nothing other than the object of opposition. But again
   such norms and values and so on, are socially constructed not merely
   through social and material practice but through discursive practice
   which endows the social and the material with meaning and purpose.
   The systems of meanings to which people refer help to define the
   society to which they, in practice, belong. In one sense, societies are
   the means and the consequence of communication between human subjects.
   The breakdown of communication signals the breakdown of society in time
   and space and so offers one means of defining particular societies.
   However, it follows that no pure form of society can exist and that no
   clear social boundaries based upon a particular set of criteria may,
   realistically, be drawn (see time-space distanciation).
   Even societies defined in terms of production relations never exist in
   a pure state. They are always mixed with other forms of social
   relations (see social formation). And even within, say, capitalist
   societies there is great scope for cultural, political, moral and
   ideological differentiation. The struggle for hegemony â€” for
   sustainable regimes of truth which in turn reside in practice and in
   the social relations through which people attempt to make sense of
   their lives (Lee, 1989) â€” is, therefore, a fundamental driving force
   in human society. An alternative interpretation which assumes social
   determination and closure and treats society as a system with clearly
   defined boundaries is associated with the writings of Talcott Parsons
   (see functionalism).
   Distinctions may be drawn between economy, state and society. The
   intention of so doing is to try to separate the idea of an association
   of free individuals from the coercion of economic imperatives or state
   power. John Urry (1981), for example, refers to \'civil society\' and
   defines it as \'that set of social practices outside the relations and
   forces of production in which agents are both constituted as subjects
   and which presuppose the actions of such subjects\' in struggling to
   sustain their conditions of existence. This is a helpful concept
   because it recognizes the interdependence but extreme variability of
   social practices which both make up and transform society (Bauman,
   1991).
   Society remains a contested concept. Some fear the implication that to
   admit to society means to accept a form of social determinism, the
   denial of individual responsibility in the making of geography and
   history or, in opposition to such a view, the failure to recognize that
   \'an individual subject is constructed through a grid of discourse and
   practice\' (McDowell, 1995, p. 288) which, nevertheless and by
   definition, accepts the existence of the social even if it is only ever
   constructed instantly and fleetingly. Others object to the possibility
   that society implies a form of totalizing discourse taking place,
   somehow, behind the backs of knowing subjects. As an example, Peter
   Jackson (1989, p. 18) notes that Carl Sauer adopted a super-organic
   approach to culture which asserts that \'culture is an entity at a
   higher level than the individual, that it is governed by a logic of its
   own and that it actively constrains human behaviour\' (see Berkeley
   School). Such an approach \'severely limits the questions that may be
   asked\' as the answer is offered before the question is posed.
   Questions of the formation of identity and social practice through
   discourse become irrelevant. But notions of super-organicism do force
   the issue of memory and the path dependency of historical geographies
   â€” socially constructed as they always are.
   Paradoxically, neo-classical economics, that most asocial of social
   theory, makes massive assumptions about the sociability of people.
   Communication is assumed to be perfect, instantaneous and unproblematic
   in the market economy. If ever there was a totalizing discourse which
   limits questioning, it is this doctrine so beloved of liberal champions
   of individual freedom.Â (RL)
   References Bauman, Z. 1991: Intimations of post modernity. London and
   New York: Routledge.Â Godelier, M. 1986: The mental and the material.
   London and New York: Verso.Â Gregory, D. 1978: Ideology, science and
   human geography. London: Hutchinson.Â Jackson, P. 1989: Maps of
   meaning. London and Winchester, MA: Unwin Hyman.Â Lee, R. 1989: Social
   relations and the geography of material life. In D. Gregory and R.
   Walford, Horizons in human geography. London: Macmillan; New York: St.
   Martin\'s Press, 152-69.Â Mann, M. 1986: The sources of social power,
   volume I: A history of power from the beginning to Â A.D. 1760.
   Cambridge and New York: Cambridge University Press.Â McDowell, L. 1995:
   Understanding diversity: the problem of/for \'theory\'. In R.J.
   Johnston, P.J. Taylor and M.J. Watts, eds, Geographies of global
   change: remapping the world in the late twentieth century, ch. 17.
   Oxford and Cambridge, MA: Blackwell.Â Resnick, S.A. and Wolff, R.D.
   1987: Knowledge and class: a Marxian critique of political economy.
   Chicago and London: University of Chicago Press.Â Urry, J. 1981: The
   anatomy of capitalist societies. London and Basingstoke: Macmillan;
   Atlantic Highlands, NJ: Humanities Press.
   Suggested Reading Giddens, A. 1982: Sociology: a brief but critical
   introduction. London and Basingstoke: Macmillan; New York: Harcourt
   Brace Jovanovich, ch. 1.Â Giddens, A. 1996: Sociology. 2nd edn, Oxford:
   Polity Press, ch. 2.Â Lee (1989).Â McDowell (1995).






                             Bookmark this page:








                                                               << former term



next term >>

                                                                    socialism



sovereignty




   Other Terms : substitutionism | social exclusion | externalities
   Imprint
   Home |  Add new article  |  Your List |  Tools |  Become an Editor |
   Tell a Friend |  Links |  Awards |  Testimonials |  Press |  News |
   About
   Copyright ©2009 GeoDZ. All rights reserved.  Terms of Use  |  Privacy
   Policy  |  Contact Us
   Skip to main content

   (BUTTON) Menu
   Search this site ____________________ (BUTTON) Submit Search
     * Books
       (BUTTON)
          + Subjects
          + Series
          + Imprints (BUTTON)
               o Stanford Business Books
               o Redwood Press
          + Award Winners
          + Catalogs
     * Journals
     * For Authors
     * About
       (BUTTON)
          + Mission Statement
          + Press History
          + Fundraising
          + AI Policy
          + Code of Conduct
          + Sales Representatives
          + Partners
          + Contact Information
          + Email Alerts
          + Employment
          + Directions to the Press
          + Help
          + Copyright Information
     *

The Power of Privilege

   Yale and America's Elite Colleges
   Joseph A. Soares
   Back to Books

The Power of Privilege

   Yale and America's Elite Colleges
   Joseph A. Soares
   April 2007
   256 Pages
   Hardcover ISBN: 9780804756372
   Paperback ISBN: 9780804756389
   Ebook ISBN: 9780804768283
   Do not fill with any information ____________________

   Format

   (*) HardcoverUS/CAN ( ) PaperbackUS/CAN

   Region

   (*) US/Canada ( ) International

   (BUTTON) Add to cart

Also Available from

     * Amazon Kindle
     * Apple Books

   Desk, Examination, or Review Copy Requests
   (BUTTON) Description (BUTTON) Reviews (BUTTON) About the Author

   It is widely assumed that admission to elite U.S. universities is based
   solely on academic merit—the best and brightest are admitted to
   Harvard, Yale, and their peer institutions as determined by test scores
   and GPA, and not by lineage or family income. But does reality support
   those expectations? Or are admissions governed by a logic that rewards
   socioeconomic status while disguising it as personal merit?

   The Power of Privilege examines the nexus between social class and
   admissions at America's top colleges from the vantage point of Yale
   University, a key actor in the history of higher education. It is a
   documented history of the institutional gatekeepers, confident of the
   validity of socially biased measures of merit, seeking to select
   tomorrow's leadership class from among their economically privileged
   clientele. Acceptance in prestigious colleges still remains beyond the
   reach of most students except those from high-income professional
   families. Ultimately, the author suggests reforms that would move
   America's top schools toward becoming genuine academic meritocracies.
   "This close examination of admissions, always carefully contextualized
   in the broad historical trends in elite higher education of which they
   were a part (just a few of the connections that the book fruitfully
   explores are anti-Semitism, forays into eugenics, the rise of
   standardized tests, and the quantification of character), draws our
   focus to the hidden mechanisms by which reproduction is effected. This
   is important work and will likely be the book's most lasting
   contribution... This well-written and often fascinating book exhorts
   readers to look vigilantly behind the rhetoric of meritocracy and to
   pay closer attention to the real effects of admissions
   policies."—American Journal of Sociology
   "[An] excellent 'sociological account' of a highly selective
   institutional gatekeeper: Yale University... Soares's history of Yale
   admissions is tragically amusing. He chronicles an embarrassing past
   that includes Yale's enthusiasm for the early SAT as a tool of eugenics
   and the college's participation, until 1968, in the Ivy League practice
   of taking nude pictures of freshmen men to study the relationship
   between body type and ability."—Chronicle of Higher Education
   "Soares presents compelling evidence that the Scholastic Assessment
   Test (SAT, later renamed the Scholastic Achievement Test) not only
   opened ivy-covered doors to a more academically talented and diverse
   student body but also assured the continued selection of students from
   the highest economic stratum... He provides an interesting social
   history of admissions at one institution and a window into a world
   that, if Soares is correct, most readers likely were never intended or
   permitted to set foot."—Review of Higher Education
   "'Even Americans unfamiliar with the word embrace meritocracy as if it
   were a birthright,' writes Soares, who taught sociology at Yale and
   uses the university as a test case for a stinging indictment of how far
   Yale and similar colleges fall short of the meritocratic ideal. He also
   offers provocative suggestions for reform."— Yale Alumni Magazine
   "Soares has become something of an expert on the social transformations
   of universities. His first book, also from Stanford, was The Decline of
   Privilege: The Modernization of Oxford University, which traced the way
   Oxford evolved from its Brideshead Revisited image to an institution
   that had meritocratic values. In an interview, Soares said he wanted to
   do an American companion and started off assuming he would find the
   same sort of evolution in the United States. But with a focus at Yale,
   that's not what he found. Given that Yale has described itself
   repeatedly as having gone through such an evolution, this was
   surprising to Soares, and he argues that the differences between myth
   and reality point to important steps for a number of colleges to
   consider today."—Inside Higher Ed
   "The Power of Privilege is a provocative critique of theories of
   meritocracy in admission decisions at elite American universities.
   Distinguishing between factors that influence who applies to elite
   schools and those that increase the odds of admission, Soares draws
   nuanced inferences about class reproduction. This is must reading for
   anyone interested in understanding admission policies and practices in
   elite universities."—Francisco Ramirez, Stanford University
   "The Power of Privilege clarifies the dynamics of elite reproduction,
   shows how privilege and social inequality are deeply embedded in
   institutions, and demonstrates the important role that meritocratic
   schools plays in society. This book is masterful. Joseph Soares has
   established himself as one of the most promising social critics."
   —Judith Blau, author of Justice in the United States, Professor of
   Sociology, University of North Carolina
   "The Power of Privilege is a welcome addition to the literature on
   elite colleges, educational stratification, and the meritocratic myth
   in college admissions. This is a story not just of SAT scores, but also
   of admissions processes that favor legacies, athletes, and nebulous
   qualities of leadership and character in which the interests of the
   wealthy and professional classes in securing advantages for their
   children indeed are well served! Fundamental change may be unlikely
   anytime soon, but Soares nevertheless advances some interesting
   proposals for opening the gates a bit wider." —Karl Alexander, Johns
   Hopkins University
   "[The Power of Privilege] shows to anyone without experience in college
   admissions the ambiguity of constructing admissions policies and
   converting how someone is presented 'on paper' into a judgment of that
   individual's potential for future success. One of the book's strengths
   is Soares' engaging writing style, which captures the complexity of the
   issue but is nonetheless highly readable. This broadens its appeal
   beyond experts in the field to an audience perhaps less familiar with
   the scholarly body of work pertaining to questions of meritocracy and
   social reproduction.... The Power of Privilege provides an engaging
   counterargument to claims by Lemann (1999) and others that pure
   academic merit prevails over socioeconomic privilege in current college
   admissions."—Teachers College Record
   Joseph A. Soares is Associate Professor of Sociology at Wake Forest
   University. He is the author of The Decline of Privilege (Stanford,
   1999), which received the prize for outstanding book from the Culture
   Section of the American Sociological Association.

Related Subjects

     * Sociology / Education and Society
     * Sociology / Inequality

Explore more

     *

The Conditions for Admission
       Access, Equity, and the Social Contract of Public Universities
       John Aubrey Douglass
     * Award winner

The Decline of Privilege
       The Modernization of Oxford University
       Joseph A. Soares
     *

Questions and Admissions
       Reflections on 100,000 Admissions Decisions at Stanford
       Jean H. Fetter
     *

Remaking College
       The Changing Ecology of Higher Education
       Edited by Michael W. Kirst and Mitchell L. Stevens
     *

Reconstructing the University
       Worldwide Shifts in Academia in the 20th Century
       David John Frank and Jay Gabler

   (BUTTON) Return to Top

Books

     * Imprints
     * Subjects
     * Series

Open Access

Journals

Digital Projects

     *
     * Catalogs
     * Conferences
     * Newsletter Signup
     * Blog

For Authors

     * Acquisitions Editors
     * Submit a Book Proposal
     * Final Manuscript Guidelines
     * List of Authors

Resources

     * Accessibility Files
     * Desk/Exam/Review Copies
     * Permissions
     * Subrights & Translations

Subjects

     * Anthropology
     * Asian American Studies
     * Asian Studies
     * Business
     * History
     * Jewish Studies
     * Latin American Studies
     * Law
     * Literary Studies
     * Media Studies
     * Middle East Studies
     * Politics
     * Sociology
     * Theory and Philosophy
     *
     * All Subjects

About

     * Press History
     * Employment
     * Privacy Policy
     * Code of Conduct
     * Fundraising

Contact

     * Address
     * Acquisitions Editors
     * Media Requests
     * Sales Inquiries
     * Staff Directory

   © 2024 Stanford University Press.
   All rights reserved.
     * Join the conversation on Facebook
     * Subscribe to our Instagram feed
     * Join the conversation on Bluesky
     * Author interviews, readings, TED talks, and more
     * Follow SUP on LinkedIn
Résumé for Neil Moore

   Mailing Address:
   Neil Moore
   321 E Maxwell St
   Lexington, KY 40508-2701

   Phone: 859-317-9772

   Email: neil@s-z.org

EDUCATION

   Ph.D. in Computer Science, University of Kentucky, 2003–2012.
   Dissertation Multihierarchical Documents and Fine-Grained Access
   Control.

   Undergraduate, University of Kentucky, 1997–2002. Majored in computer
   science and mathematics. College of Engineering Dean's List Fall 1997,
   Spring 1998, Fall 1998, Spring 1999, Fall 1999, Spring 2000, and Spring
   2001. Graduated December 2002, receiving a B.S. Cum Laude in Computer
   Science and a B.S. Cum Laude in Mathematics with departmental honors.

HONORS

   April 2007. Excellence in Contribution to the Computer Science
   Enrichment Programs award, University of Kentucky Department of
   Computer Science.

   April 2004. Awarded First Place Graduate Student Talk at Eastern
   Kentucky University's 18th Annual Symposium in Mathematics,
   Statistical, and Computer Sciences, for "A Geometric Approach to
   Efficient Implementation of Concurrent XML Markup".

   March 2001: Member of the University of Kentucky Programming Team,
   which advanced to the world finals of the 25th annual ACM International
   Collegiate Programming Contest, Vancouver, BC, Canada.

EXPERIENCE

   September 2009–
   present

   IS technical support specialist IV (research support in
   bioinformatics), University of Kentucky.

   Worked as lead developer and system administrator/database
   administrator for the Epichloë festucae Genome Project. Developed,
   maintained, and enhanced web-based tools and databases for viewing,
   managing, and annotating many gigabytes of bioinformatic data covering
   ten strains and nine species of fungal endophytes in the family
   Clavicipitaceae. Worked extensively with GBrowse, MAKER, BioPerl and
   other bioinformatics tools and libraries. Administered GNU/Linux and
   Mac OS X Server systems, including Apache, MySQL, RAID/NAS/NFS backups,
   and LDAP user management. Assisted in research, including co-authoring
   scholarly papers.

   January 2008–
   September 2009

   Research assistant, University of Kentucky.

   Worked as lead developer and system administrator/database
   administrator for the Epichloë festucae Genome Project. Coordinated a
   small team of developers (3–4 members) to develop, maintain, and
   enhance web-based tools and databases for viewing, managing, and
   annotating over 5 GiB of bioinformatic data. Worked extensively with
   GBrowse, BioPerl and other bioinformatics tools and libraries.
   Administered GNU/Linux and Mac OS X Server systems, including Apache,
   MySQL, RAID/NAS/NFS backups, LDAP user management. Assisted in
   research, including co-authoring scholarly papers.

   January–
   May 2007
   July–
   August 2007
   August–
   December 2007
   January–
   May 2008

   Teaching assistant, University of Kentucky.

   Primary lecturer for the evening section of CS 215, "Introduction to
   Program Design, Abstraction, and Problem Solving", Spring 2007.
   Responsible for delivering lectures, guiding student laboratory work,
   preparing examinations, and grading.

   Primary lecturer for the summer section of CS 115, "Introduction to
   Computer Programming", Second Summer Session 2007. Responsible for
   preparing and delivering lectures, designing programming and laboratory
   assignments, guiding student laboratory work, preparing examinations,
   and grading.

   Primary lecturer for the evening section, and teaching assistant for a
   day section, of CS 215, Fall 2007. Responsible for delivering lectures
   (night section only), guiding student laboratory work, preparing
   examinations, and grading.

   Teaching assistant for two day sections of CS 215, Spring 2008.
   Responsible for guiding student laboratory work, preparing
   examinations, and grading.

   July 2003–
   August 2006

   Research assistant, University of Kentucky.

   Worked in a team environment to develop infrastructure for producing
   image-based electronic editions of manuscripts. Designed and
   implemented a library for storing, modifying, and querying
   multi-hierarchical XML. Participated in the design of a framework to
   facilitate the sharing of markup and other data among a number of
   independently-developed modules. Participated in the implementation,
   testing, and integration of these modules as plugins for the Eclipse
   application framework. Assisted in research, including authoring
   scholarly papers.

   September 2001–
   August 2003

   Lead developer, BigTrends.com (Headley Investment Analysis).

   Designed and implemented a distributed application for financial
   charting and analysis, using Java, Perl, and MySQL. Developed a number
   of web-based applications for financial charting and analysis, using
   Perl and MySQL. Co-maintained three GNU/Linux servers to provide
   database and web services for these applications.

   November 1998–
   May 2002

   Undergraduate research, University of Kentucky CS department.

   Logic programming and nonmonotonic reasoning systems; distributed
   computing. Translation and conversion of logic programs to default
   theories. Analysis of logic programs, including stratification,
   well-founded semantics, and stable model semantics. Wrote a number of
   logic programs, many encoding graph-theoretical problems. Developed and
   optimized a distributed implementation of the stable model semantics
   using PVM (Parallel Virtual Machine).

   June 1998–
   August 1998

   Teaching assistant, Institute for the Academic Advancement of Youth
   (IAAY), Johns Hopkins University.

   Served as a teaching assistant for two three-week sessions of IAAY's
   Center for Talented Youth (CTY) program. Assisted the instructor of a
   Digital Logic class for talented and gifted middle school and high
   school students. Prepared classroom materials, graded papers and exams,
   and supervised electronics laboratory assignments for approximately 30
   students ranging in age from 13 to 16.

   I have performed volunteer work for the ACM International Collegiate
   Programming Contest (Mid-Central region, University of Kentucky
   Satellite site) for the past seven years now (since 2005). Tasks have
   included configuring and preparing the contest server, administering
   the PC^2 contest software, developing and preparing bootable live CDs
   providing a uniform and secure environment for contestants, and leading
   the troubleshooting and technical support team.

SKILLS

   Operating systems
          PCs running GNU/Linux, Solaris, and Windows 2000/XP/Server 2003;
          Apple computers running Mac OS X (including OS X Server); and
          other UNIX and POSIX systems.

   Software (configuration and administration)
          Apache, Sendmail, exim, BIND, MySQL, PostgreSQL, Samba, NFS.

   Programming languages
          Expert with Perl, C, C++, POSIX/Bourne shell, and bash. Very
          familiar with Python and SQL. Moderately familiar with
          JavaScript, PHP, Java, Scheme, and Common Lisp.

   Other information technology
          Web development with HTML, CSS, XML, XPath, and DOM; CGI scripts
          and Java Servlets; git, Subversion, CVS and other source code
          management systems; database design and optimization, including
          systems with gigabytes of data and millions of records; and core
          Internet protocols including TCP/IP, HTTP, FTP, DNS, and SMTP.

   In addition to the core technical competencies listed above, I have
   wide-ranging experience with other technologies. I am eager to widen my
   experience, and am capable of learning programming languages, operating
   systems, and other software with minimal guidance.

PUBLICATIONS

   R. A. Finkel, V. W. Marek, N. Moore and M. Truszczyński. Computing
   Stable Models in Parallel. In Answer Set Programming: Towards Efficient
   and Scalable Knowledge Representation and Reasoning. AAAI Press, Palo
   Alto, CA, pp. 72–76, 2001.

   J. W. Jaromczyk and N. Moore. Geometric data structures for
   multihierarchical XML tagging of manuscripts. In Proc. 20th European
   Workshop on Computational Geometry. Seville, Spain, March 2004.

   N. Moore. A Geometric Approach to Efficient Implementation of
   Concurrent XML Markup. Eastern Kentucky University 18th Annual
   Symposium in Mathematics, Statistical, and Computer Sciences. Richmond,
   KY, April 2004.

   A. Dekhtyar, I. E. Iacob, J. W. Jaromczyk, K. Kiernan, N. Moore, and D.
   C. Porter. Database Support for Image-based Electronic Editions. Proc.
   Int'l Workshop on Multimedia Information Systems (MIS 2004). College
   Park, MD, August 2004.

   J. W. Jaromczyk, M. Kowaluk, N. Moore. On Visualization of Complex
   Image-Based Markup. In Proc. Int'l Conf. on Computer Vision and
   Geometry. Warsaw, Poland, September 2004.

   J. W. Jaromczyk, M. Kowaluk, N. Moore. A Web Interface to Image-Based
   Concurrent Markup Using Image Maps. In Proc. 6th ACM Int'l Workshop on
   Web Information and Data Management (WIDM 2004). Washington, DC,
   November 2004.

   A. Dekhtyar, I. E. Iacob, J. W. Jaromczyk, K. Kiernan, N. Moore, D. C.
   Porter. Support for XML Markup of Image-based Electronic Editions.
   Int'l Journal on Digital Libraries 6(1): 55–69, 2006.

   K. Kiernan, D. Porter, A. Dekhtyar, I. E. Iacob, J. W. Jaromczyk, N.
   Moore. The Edition Production Technology (EPT) and the ARCHway and
   Electronic Boethius Projects. 17th Joint International Conference of
   the Association for Computers and the Humanities and the Association
   for Literary and Linguistic Computing (ACH/ALLC). Victoria, BC, June
   2005.

   J. W. Jaromczyk, N. Moore. The ARCHway Software Infrastructure: a Demo
   of a Platform and Utilities for Building Applications for Electronic
   Editions. Demo at 17th Joint International Conference of the
   Association for Computers and the Humanities and the Association for
   Literary and Linguistic Computing (ACH/ALLC). Victoria, BC, June 2005.

   A. Dekhtyar, I. E. Iacob, J. Jaromczyk, K. Kiernan, N. Moore, D. C.
   Porter. Building Image-based Electronic Editions using the Edition
   Production Technology. Poster at ACM/IEEE Joint Conference on Digital
   Libraries (JCDL 2005). Denver, CO, June 2005.

   E. G. Arnaoudova, P. J. Bowens, R. G. Chui, R. D. Dinkins, U. Hesse, J.
   W. Jaromczyk, M. Martin, P. Maynard, N. Moore, C. L. Schardl.
   Visualizing and sharing results in bioinformatics projects: GBrowse and
   GenBank exports. BMC Bioinformatics 10(S-7), 2009.

   N. Moore. The Halting Problem and Undecidability of Document Generation
   under Access Control for Tree Updates. 3rd Int'l Conference on Language
   and Automata Theory and Applications (LATA 2009). Tarragona, Spain,
   April 2009.

   E. G. Arnaoudova, J. W. Jaromczyk, N. Moore, C. L. Schardl, R. Yoshida.
   Phylotree—a toolkit for computing experiments with distance-based
   methods for genome coevolution. BMC Bioinformatics 11(S-4): P6, 2010.

   E. G. Arnaoudova, D. C. Haws, P. Huggins, J. W. Jaromczyk, N. Moore, C.
   L. Schardl, R. Yoshida. Statistical phylogenetic tree analysis using
   differences of means. Frontiers in Neuroscience 4:47, 2010.

   N. Moore. Reconciling two models of multihierarchical markup. 13th
   Int'l Workshop on the Web and Databases (WebDB 2010). Indianapolis, IN,
   June 2010.

   N. Moore. Computational complexity of the problem of tree generation
   under fine-grained access control policies. J. Information and
   Computation 209(3): 548–567, 2011.

   N. Moore, J.W. Jaromczyk. Finding a longest open reading frame of an
   alternatively spliced gene. In Proc. IEEE International Conference on
   Bioinformatics and Biomedicine (BIBM), Workshops, November 2011.

   J.W. Jaromczyk, N. Moore, C.L. Schardl. A linear-time algorithm for
   finding a maximum-length ORF in a splice graph. Int'l J. of
   Computational Biology and Drug Design 5(3/4): 284–297, 2012.

   R. J. O'Connell, M. R. Thon, S. Hacquard, S. G. Amyotte, J. Kleeman, M.
   F. Torres, U. Damm, E. A. Buiate, L. Eppstein, N. Alkan, J. Altmüller,
   L. Alvarado-Balderrama, C. A. Bauser, C. Becker, B. W. Birren, Z. Chen,
   J. Choi, J. A. Crouch, J. P. Duvick, M. A. Farman, P. Gan, D. Heiman,
   B. Henrissat, R. J. Howard, M. Kabbage, C. Koch, B. Kracher, Y. Kubo,
   A. D. Law, M.-H. Lebrun, Y.-H. Lee, I. Miyara, N. Moore, U. Neumann, K.
   Nordström, D. G. Panaccione, R. Panstruga, M. Place, R. H. Proctor, D.
   Prusky, G. Reich, R. Reinhardt, J. A. Rollins, S. Rounsley, C. L.
   Schardl, D. C. Schwartz, N. Shenoy, K. Shirasu, U. R. Sikhakolli, K.
   Stüber, S. A. Sukno, J. A. Sweigard, Y. Takano, H. Takahara, F. Trail,
   H. C. van der Does, L. M. Voll, I. Will, S. Young, Q. Zeng, J. Zhang,
   S. Zhou, M. B. Dickman, P. Schulze-Lefert, E. V. L. van Themaat, L.-J.
   Ma, L. J. Vaillancourt. Lifestyle transitions in plant pathogenic
   Colletotrichum fungi deciphered by genome and transcriptome analyses.
   Nature Genetics 44(9):1060–5, 2012.

   C. L. Schardl, C. A. Young, U. Hesse, S. G. Amyotte, K. Andreeva, P. J.
   Calie, D. J. Fleetwood, D. C. Haws, N. Moore, B. Oeser, D. G.
   Panaccione, K. K. Schweri, C. R. Voisey, M. L. Farman, J. W. Jaromczyk,
   B. A. Roe, D. M. O'Sullivan, B. Scott, P. Tudzynski, Z. An, E. G.
   Arnaoudova, C. T. Bullock, N. D. Charlton, L. Chen, M. Cox, R. D.
   Dinkins, S. Florea, A. E. Glenn, A. Gordon, U. Güldener, D. R. Harris,
   W. Hollin, J. Jaromczyk, R. D. Johnson, A. K. Khan, E. Leistner, A.
   Leuchtmann, C. Li, J. Liu, J. Liu, M. Liu, W. Mace, C. Machado, P.
   Nagabhyru, J. Pan, J. Schmid, K. Sugawara, U. Steiner, J. E. Takach, E.
   Tanaka, J. S. Webb, E. V. Wilson, J. L. Wiseman, R. Yoshida, Z. Zeng.
   Plant-symbiotic fungi as chemical engineers: multi-genome analysis of
   the clavicipitaceae reveals dynamics of alkaloid loci. PLoS Genetics
   9(2), 2013.

   C. L. Schardl, C.A. Young, N. Moore, N. Krom, P.-Y. Dupont, J. Pan, S.
   Florea, J. S. Webb, J. Jaromczyk, J. W. Jaromczyk, M. P. Cox, M. L.
   Farman. Genomes of plant-associated Clavicipitaceae. Advances in
   Botanical Research 70:291–327, 2014.

   C. A. Young, C. L. Schardl, D. G. Panaccione, S. Florea, J. E. Takach,
   N. D. Charlton, N. Moore, J. S. Webb, J. Jaromczyk. Genetics, Genomics
   and Evolution of Ergot Alkaloid Diversity. Toxins 7(4):1273–1302, 2015.

   M. F. Torres, N. Ghaffari, E. A. S. Buiate, N. Moore, S. Schwartz, C.
   D. Johnson, L. J. Vaillancourt. A Colletotrichum graminicola mutant
   deficient in the establishment of biotrophy reveals early
   transcriptional events in the maize anthracnose disease interaction.
   BMC Genomics 8:17(1):202.Epub, 2016.
      F E A T U R E S    Issue 2.09 - September 1996


                           Five Go Nuts in Cambridge

By Tom Loosemore

    Acorn's crack techies thrive on new challenges, but their company doesn't.
    The Network Computer proves the point.


     Peter Higgins is not pleased. Microsoft's senior vice president for
     desktop applications has flown half way around the world to preach
     Chairman Bill's Internet Gospel (2nd Edition) to a mixed bag of
     British journalists, only to discover that a new Messiah named Larry
     has nipped in first and left them all speaking in tongues about his
     new Network Computer. Higgins does not bother to hide his scorn. "I
     just don't get what it is you're so excited about. I mean, look
     who's going to make them. "Acorn". Acorn!!"

     Acorn. To many, the very name is synonymous with failure, albeit
     failure of the heroic kind. Time after time during its rollercoaster
     18-year life, the Acorn Computer Group has developed world-beating
     technology, only to fritter away its hard-won technical advantage
     through a mixture of bad luck, dreadful timing and almost
     unimaginable marketing ineptitude. The company has been described as
     the Sisyphus of the computer industry, forever rolling a stone
     uphill until it is within sight of greatness only for it to slide
     right back again. So when Larry Ellison, CEO of database giant
     Oracle, decided to entrust Acorn with the crucial task of producing
     the design for the new Network Computer ([trademark] Oracle) the
     choice appeared somewhere between the quixotic and the suicidal.

     Except to some. Malcolm Bird, now CEO of Acorn's network computing
     division, thinks the decision always made perfect sense. "I think
     Oracle saw what Acorn had to offer them and thought Christmas had
     come early. We had exactly the technology they were after. And I
     think they also recognised that we've got some of the best engineers
     in the world working for us." Not an idle boast. Acorn has never
     really got the knack of making the right boxes, or selling them. But
     it does make boxes that work. And although Bird and everyone else at
     Acorn would come to see the Network Computer as something more,
     perhaps as a last, best chance at the big time, that was all Ellison
     wanted: a box that worked.

     At least, that was all he wanted from Acorn. At another level, he
     wanted to change the world. Ellison, Oracle's visionary-in-chief,
     had long had a dream of a simple, cheap device capable of managing
     everyday computing tasks - email, word processing, spreadsheets, Web
     browsing - without the cost or the complexity of the PC. The Network
     Computer is the first physical manifestation of his dream. It's not
     aimed at those wanting to do desktop publishing or CAD; they need
     more power, which - in the short term, at least - only PCs can
     provide. Rather, Ellison's dream is of a true plug-and-play,
     mass-market connectivity device. Plug an NC into the power socket
     for electrons, into the TV for photons, into the telephone socket
     for bits, and away you go. No manuals, no setting up, no conflicting
     winsock.dll insanity. You plug it in, and away you play. Ellison
     wanted a computer that his mother could operate - ultra easy to use,
     and even easier to maintain and upgrade via the network.

     Eliminating the local hard disk is one solution to the maintenance
     problem, both for Larry's mum and for corporate support departments,
     who spend an estimated £3,000 a year maintaining and upgrading the
     applications and data on desktop PCs. NCs have their operating
     systems and core applications etched into cheap-and-cheerful ROM
     memory chips; the device is useless without a network connection.
     All documents are stored on remote network drives, managed either
     (for home users) by an Internet service provider (ISP), or, for
     corporate users, by the IT department. And, critically, any NC
     anywhere in the world can be transformed into your personal machine
     merely by introducing a smartcard. Instead of hauling your portable
     around the world with you, you just take your card; it then manages
     your network connections, routing you to your own storage space on
     your own service provider's network server via local NC-aware ISPs.
     With the advent of the Network Computer standard, Sun Microsystems'
     oft-derided mantra "the network is the computer" would become
     day-to-day reality. But the closer you look, the more complex that
     vision becomes - and the bigger a gamble it seems.

     The Great NC Gamble is not Oracle's. The world's number two software
     company has plenty of other full-uddered cash cows in the form of
     relational databases and server software. No, the gamble is Larry
     Ellison's. The NC concept is his submission for a place in history
     as The Man Who Broke The Wintel Oligarchy. History is not on his
     side; software companies have traditionally found the murky waters
     of hardware harsh and unforgiving, even Microsoft daring only to
     make a small if extremely profitable mouse. But Ellison seems to be
     jumping in at the very deepest end by attempting to engineer a whole
     new genus of computer. So why has he been willing to place so much
     faith in an oddball British company like Acorn?

     A number of reasons. Acorn does have world class techies. It has a
     background in technologies very similar to that of the NC. And it
     has a pleasing lack of status. While Ellison was dashing round the
     globe on his NC blitzkrieg-cum-evangelical mission, Acorn's low
     media profile meant that it could work in relative obscurity - away
     from the prying eyes and pressures of Silicon Valley.

     Oracle also hoped that Acorn's small size (1995 sales of £54
     million, compared to Oracle's £1.8 billion) would allow it to be
     sufficiently responsive to come up with a product at breakneck
     speed. After all, it had done so before, if to little effect.

     Back in the early 1980s, Acorn gained - and squandered - a massive
     head start in the emerging microcomputer business. It won the
     contract to build the million-selling BBC Micro, but only five years
     later failed miserably to exploit its own revolutionary
     RISC-powered, fully 32-bit Archimedes computer, the first - and for
     several years the only - genuine multi-media home computer. Now,
     Archimedes computers and their descendants constitute a tiny
     fraction of the European PC market; almost all sales are made to
     British schools and colleges.

     And nearly a decade later, Acorn was one of the first to fall victim
     to the false prophet that was - and is - video- on-demand (VOD). It
     demonstrated that it could develop affordable, workable set-top-box
     technology, but a sizeable Cambridge trial, and the massive consumer
     indifference that followed, blew Acorn and its resurgent technology
     out of the water.

     By early 1995 Acorn Group's owners, which include Olivetti Telemedia
     and Cambridge techno-Svengali Hermann Hauser, faced a dilemma.
     Losses for the previous year totalled over £4 million, and once the
     VOD bubble had burst they needed a new project to occupy their
     talented, if perennially underachieving, ward. They would take
     whatever was on offer. What they didn't expect was an offer quite as
     exciting as the one they got.

    Something clicky

     The gospel according to Ellison did not reach Acorn on tablets of
     stone, or even over the Net. It arrived on a video cassette. In
     October 1995 BBC TV's The Money Programme screened an interview with
     Larry Ellison. The interview stands up well as a piece of pure
     entertainment; Ellison was a man with a mission, and his message
     struck a chord with many in the computer industry, Acorn employees
     included. His vision of a pared-down, diskless, sub-$500 Network
     Computer was bold and exciting - but at that time, wholly
     impractical.

     Such a computer needed a completely new design, one free of the
     proprietary architectures that have so hindered the development of
     today's desktop computers. Ellison had an opportunity to define a
     brand new set of rules, and to create a new culture in which his new
     device could flourish. The reference design for the Network Computer
     - the blueprint that defines what a Network Computer should be and
     how it should work - would determine every aspect of the machine,
     including networking, audio and video specs and smartcard design. It
     would be available to third-party hardware manufacturers, who would
     then build their own machines. But to make all this happen, Oracle
     needed to produce a working machine, one which could instruct and
     inspire other companies. And for that Oracle needed help from a
     serious hardware engineer.

     Malcolm Bird was the man to offer it. Bird was one of the first to
     take the VHS of Ellison's Money Programme home from the offices of
     Acorn Online Media, a division set up in 1994 to exploit the
     projected VODboom. A well-built, imposing man in his mid-40s, Bird
     is an engineers' engineer. At our first meeting, shortly after the
     first Acorn NC prototype had been completed in an absurdly small
     time-frame, it required several minutes of prompting to get him to
     admit to being proud of what he and his team had achieved. "Mmm, I
     suppose you could say we're pretty pleased with ourselves." This is
     not false modesty - rather it is a case of misplaced English
     embarrassment when confronted with success. One of the junior
     members of his team had this to say of his boss: "Malcolm's a great
     engineer. He defines the problem, and then finds the least bad
     solution. He's brilliant at it. But, well, put it this way - he
     doesn't waste much time chatting with us about the footie."

     Bird gives the strong impression that straightforward logic governs
     large chunks of his life, both at work and at home. In contrast to
     the cynicism and flippancy prevalent among those working for him,
     Bird treats frustration as just another problem to solve - step by
     step, working from the beginning. He is also an entirely
     arrogance-free zone. His grasp of technical minutiae is legendary,
     the respect afforded him total. At the launch of the Acorn NC,
     Hermann Hauser described him as "the man who knows more about how an
     NC works than anyone else on the planet."

     Bird does not carry his many responsibilities lightly. During our
     meetings I set myself the challenge of making him laugh (ten points)
     or smile (five points). My final tally came to a meagre twenty-five.
     But despite his sober, rather earnest demeanour, all those on the
     second floor knew exactly where the buck stopped, and the freedom
     this afforded Bird's small team to take risks and speak their minds
     was to prove invaluable during the trials ahead.

     The Online Media team is composed of a lot of old Acorn hands
     quartered in a two storey building on the outskirts of town - and a
     million miles from the city's courts-and-cloisters ideal. They have
     seen a lot of technologies come and go, and they are as cynical
     about new developments as it's possible to be. And yet, when their
     turn came to watch Ellison's BBC sermon, something clicked. His
     proposed Network Computer needed things Acorn already possessed in
     spades: a cheap, powerful processor in the form of the ARM 7500; a
     compact ROM-based operating system, RISCOS; TV compatibility. But
     best of all, Acorn had already built an NC. The ill-starred Acorn
     Online Media Set Top Box, designed as an affordable consumer
     appliance for the now-moribund VOD market, was an NC in all but
     name. Watching the VHS, Bird knew that Ellison had Acorn in mind
     when formulating his vision; it was just that Ellison didn't know
     it. Yet.

    Larry does Geneva

     October 1995. The Larry Ellison NC Roadshow hits Geneva for the
     Telecom '95 conference. After treating the assembled suits to his
     now-famous Microsoft-baiting NC stand-up routine, Ellison is
     buttonholed by Elsorino Piol, vice chairman of Olivetti. The gruff
     Italian has a notoriously impenetrable accent, but Ellison deciphers
     enough to realise that the two companies should talk further.
     Shortly afterwards, a video conference is arranged between Ellison,
     Andrew Laursen (the newly-appointed Oracle Network Computer VP),
     Hermann Hauser and Malcolm Bird, then MD of Acorn Online Media but
     soon to become CEO of the newly set-up Acorn Network Computing.

     A week after the hour-long "knowing-me, knowing-you" video
     conference, Bird found himself on a plane to San Francisco carrying
     with him the latest Acorn Set Top Box. "I think they were fairly
     impressed," Bird recollects with characteristic understatement. They
     must have been. By the autumn of 1995, it was an open secret that
     Oracle had talked at length with several heavyweight computer
     manufacturers - Sun and Apple included - about the contract for the
     all-important first NC, the blueprint machine for a new generation
     of personal computers. Rumours were also circulating that Oracle
     also had sizeable internal team working on its own reference design.

     When Bird returned to the UK, Ellison followed. By the time Ellison
     left, Acorn had a verbal agreement. Contracts and budgets could wait
     until later; both parties were confident that a bond of trust had
     been forged. For Acorn, it was a major coup. It would have its own
     machine built and on sale before anyone else. And even if it chose
     not to market its own machines, the royalties from the reference
     design alone could make Acorn a cash-rich company for years to come.
     The exact deal Acorn struck with Oracle is still under wraps, but if
     Ellison is right in predicting that the NC will outsell the PC by
     the end of the century, then Acorn's coffers will not be empty any
     time soon.

    Sophie's world

     As the company's chief scientist, Sophie Wilson is afforded
     near-guru status within Acorn. A Cambridge computer science graduate
     in the days when female ComSci graduates were decidedly thin on the
     ground, she accepted an invitation from Hermann Hauser to join what
     was then a fledgling computer sonsultancy way back in 1978. Socially
     awkward but extremely forthright, Wilson answers questions with a
     conciseness bordering on the curt. It's nearly impossible to hold a
     conversation with her when she is sat facing her radically
     customised Archimedes; she gives the impression - a misleading one,
     as it turns out - that she finds her beloved Archimedes both more
     interesting and more reliable than her fellow human beings.
     Underneath a layer of shyness she is incisive, dry and often
     caustically witty.

     Wilson designed and built the motherboard for the Acorn System One,
     Acorn's first home computer. During the early '80s, she created the
     all-important instruction set for Acorn's first RISC chip, the
     antecedent of the hugely successful ARM family of low-cost,
     high-performance microprocessors. She is also the resident expert on
     the company's world-beating font anti-aliasing and anti-twitter
     technologies, which both employ the same clever optical trick to
     make using a television as a computer screen altogether less painful
     than it might otherwise be. Unsurprisingly, younger and less
     experienced staff regard her with awe. Bird describes Wilson as a
     walking encyclopaedia, the embodiment of a vast body of knowledge
     culled from Acorn's previous adventures. This is not just technical
     know-how; Wilson has seen many Acorn projects run into difficulties
     due to confused, indecisive management and bloated teams, and she
     was not prepared to see the NC project fail for the same reasons.

     Even before an official deal had been struck, Wilson sent a
     prophetic email to other members of the team, detailing the
     shortcomings of the NC's technology and voicing reservations about
     the machine's progenitor. "Larry Ellison is a very hands-on person.
     He will become involved in many ways, and will leak to the press."
     Yet she had other, more positive messages to deliver. Among the many
     implications of the NC deal she elucidated, two words stood out:
     "World Stardom".

     Following their reconnaissance mission, Ellison left Andy Laursen
     behind to talk tech with Sophie Wilson. By the time Laursen returned
     to San Francisco in mid-November, the pair of them had thrashed out
     a draft NC specification. Wilson had "guesstimated" a timescale of
     just nine weeks to produce a working prototype, which she thought
     eminently manageable; "Hey - the BBC machine prototype was built in
     six days!"

     Nonetheless, they needed to move desperately quickly if they were to
     have a working NC in time for Ellison's first mediafest in
     mid-February 1996. Building a new computer from scratch is a
     non-trivial undertaking, even with many of the components at hand.
     The hardest parts of the process - planning the layout of the mother
     board, designing the case, writing the software - had to be done
     from scratch, and the July manufacturing date looked worryingly
     close.

     Malcolm Bird spent the final two weeks of November 1995 assembling a
     small team of old hands. Colin Watters, a quiet, hamster-like man in
     his early 40s, was appointed as the project manager. Acorn has been
     part, but not all, of his life for eleven years; an electrical
     engineer by training, he previously managed the successful
     Archimedes A5000 project to produce a low-cost educational version
     of the Archimedes. Also an avid radio-controlled model aircraft
     pilot, he recently flew for Great Britain, an honour he was
     extremely coy about revealing. The core team also consisted of Steve
     Cormie, a 29-year- old software expert with a sharp eye for detail
     and an even sharper wit, and Richard Sharples, an enthusiastic,
     jovial eccentric in his early 30s whose remit covered motherboard
     design and all things CAD. They were ready to go.

    "It's a design problem"

     After two manic weeks spent sourcing parts and finalising the exact
     prototype specification, the team hit a large - but not entirely
     unexpected - snag. Ellison had set his heart on a radical,
     imaginative design for the NC's casing. He had commissioned
     Seattle-based Frog Design, designers of his favourite Bang and
     Olufsen HiFi equipment and of the original Macintosh computer, to
     create a case that would capture the imagination of a public bored
     with standard-issue grey plastic PC boxes. But when the Cambridge
     team saw Frog's initial drawings, its members issued a collective
     groan. The cruciform shape was certainly eye-catching, but it would
     be a nightmare to manufacture.

     Oddly, designing the case is one of the most difficult parts of
     creating a new computer. Manufacturing a shell which both fits
     together and can be manufactured cheaply is in itself hard; the fact
     that its various elements look like they should all fit together in
     2D view does not mean that they will do so when the mock-ups are
     actually built. To make things worse for the Acorn team, Frog
     Design's planned casing would not leave enough room for the printed
     circuit board (PCB).

     Worried by this, Bird made a bold move. He commissioned a local
     two-man design company, Cambridge-based Design Edge, to come up with
     an alternative within 48 hours. And it did. Design Edge's planned
     casing would win no prizes for innovation or daring, but Bird was
     nonetheless pleased; it was tidy, it could be built cheaply and in a
     hurry. To appease Ellison, Richard Sharples persevered with Frog
     Design's proposed cas- ing, finally convincing Oracle that, pretty
     though it undoubtedly was, there was simply no way to fit the PCB
     inside the case without resorting to expensive right-angled
     daughterboards and consuming more precious time.

    Five get sloshed

     For Malcolm Bird, at least, the first week of January 1996 signalled
     an end to some of the uncertainty surrounding the project. The
     details of the contract between Acorn and Oracle had been finalised,
     and Sharples had completed the PCB design and had sent it off to be
     manufactured. The final drawings for the case were in the hands of
     Peter Manning, a professional model maker based in St Ives who had
     the fiendishly difficult job of transforming the subtle curves
     described on the Design Edge drawings into an exact 3D mould ready
     for casting. Within two weeks Manning delivered the goods, on time,
     and Cormie shipped the first batch of system software and demos over
     to the US. Unbelievably, they were actually ahead of schedule;
     although Watters never expressed as much to Bird, he was confident
     that they could have a working prototype ready two weeks early.

     In the third week of January, a five-man delegation arrived from
     Oracle. Bird kept them well away from the team while the newly
     arrived circuit boards were fitted and tested. "We knew it would
     work okay," Watters says. "Our main concern was that Richard had
     made some idiotic oversight and the bloody thing wouldn't fit
     together."

     In the event, the case didn't merely fit; it fitted like a dream.
     The Acorn team had designed and built a computer in seven weeks, and
     the astonished Oracle delegation returned to San Francisco carrying
     the world's first NC in a Tesco bag.

     The team celebrated with a Friday afternoon visit to the pub, where,
     Colin Watters freely admits, "we all got a little bit sloshed." But
     the cele- bration was short-lived. As a reward for their efforts,
     Oracle brought the whole schedule forward by two weeks as Ellison
     leaked a story to the press that the NC would ship in March. As
     Malcolm Bird puts it, "The March shipping date was a bit of a joke,
     really; it was both a slap on the back and a slap in the face."

     Then, Oracle suddenly wanted not one but twenty working NCs for the
     mid-February mediafest. The team immediately ran into
     component-sourcing problems; whereas previously the team had had no
     problem blagging five or six component samples from a supplier,
     things got a lot more complicated when it began asking for fifty.
     This time, things went right to the wire; at 2pm on February 16th,
     there were 20 NCs in the building. Unfortunately they were still in
     pieces, and a courier was due to arrive at 5pm to whisk the
     completed machines off to San Francisco. Turning the pieces into
     machines was simple enough - the whole office was put on
     assembly-line duty - but the real headache involved filling in the
     mass of customs forms required to import RAM into the US. Somehow
     they made it, with only minutes to spare; Sod's Law being what it
     is, the customs forms were never checked.

     By the time of my next visit in mid-April 1996, some far more
     serious problems had emerged. The atmosphere in the office had
     undergone a seismic shift; the excite- ment had passed, and the team
     was struggling for motivation. March had come and gone and there was
     no NC even close to being manufactured. Worst of all, the jewel in
     the NC's crown - the ARM7500 processor chip - had been found
     wanting.

    Battle stations

     The ARM7500 is the pocket battleship of processors, a little-known
     miracle in silicon. Roughly equivalent in power to an Intel 486-66,
     but around half the size and price, the chip requires astoundingly
     little power; Colin Watters claims that the 7500 could theoretically
     run off the waste heat generated by a Pentium chip. Indeed, the
     ARM7500 is actually too power-efficient, with an extra power-wastage
     resistor required to ensure that the AC-DC transformer transmits
     enough current to ensure a steady voltage. Miracle though it was in
     its own right, both Acorn and Oracle had come to the conclusion that
     the 7500 lacked sufficient horsepower. Bizarrely, Sophie Wilson had
     known this since the earliest days of the project - her original
     email to the team admitted that the 7500 is "old, has slow memory,
     slow CPU and no [floating point] hardware; it can't drive cheap
     colour LCDs." And she had anticipated pressure from Oracle to
     improve the chip.

     The LCD problem was especially serious, as LCD compatibility was
     essential for portable versions of the NC family, yet no work had
     been done on designing the 7500's successor. Belatedly, the decision
     was made to bolt a floating point processor to the ARM7500, speed up
     its on-chip cache, increase its overall speed to 40MHz and call it
     the 7500FE. There was, understandably, an air of impending panic.
     Even the usually phlegmatic Watters was concerned. "Yeah, I suppose
     it is, um ... rather high risk.... But if it's got to be done, then
     we'll knuckle down."

     As if that wasn't enough, the browser software, now ready to be
     incorporated into ROM, looked decidedly ropy. A derivative of the
     unpopular ANT browser, it still lacked support for frames and
     tables, features which were now integral to many Web sites. Steve
     Cormie remained grimly adamant that the final version would sup-
     port these as well as Java, but such an upgrade was a job for a
     whole team of software engineers, not one tired-looking individual.

     Why not just license Netscape? I asked Cormie, receiving in return
     the kind of withering look that software engineers reserve for those
     asking particularly dumb questions. "How much memory does the latest
     version of Netscape need to run? 4Mb? 8Mb? Whatever, it's more
     memory than will be in the whole bloody machine, ROM included. Who
     wants Netscape plug-ins anyway? Nah, ANT will have to do."

     Such an attitude betrayed one of the main weaknesses of the team as
     a whole. The Web, in all its ever-expanding, ever-mutating glory,
     was perceived as a childish distraction, an entertaining plaything
     for those unable to hack it at the cutting edge.

     Surfing was simply not their bag; a specialised Web-browser is a
     machine that they would never dream of using themselves. Sites
     designed with Netscape in mind looked abysmal when viewed with
     through the primitive, out-of-focus eyes of the ANT browser;
     technically wonderful though the Acorn NC is, it is certainly not
     the ultimate Web machine.

     At the end of May, the Oracle NC partnership was announced in San
     Francisco. Set against a room- ful of other NCs cobbled together
     around the early specification by Oracle's other partners, Acorn's
     machine - now branded as the NetStation - showed its peers a clean
     pair of heels, even without the 7500FE chip. And Steve Cormie and
     the ARM techies had managed to squeeze frames and tables into their
     tiny ROM-based browser. The team was in Cambridge, trying to get an
     NC into the shops by Christmas.

    Let's do launch

     On the day of the UK launch, June 18th, the 7500FE machine still
     isn't working. The launch goes ahead regardless, and it is
     immediately clear that the attitude of those charged with marketing
     the NetStation contrasts sharply with that of the team that built
     it. The event is a sham, an exercise in smoke and mirrors, as
     Hermmann Hauser and assorted cronies attempt to convince a deeply
     sceptical audience that this small, dull black box will challenge
     the TV as the chief entertainment device in the nation's living
     rooms.

     Web hype is now so frenzied that the NetStation will quite likely
     fly off the shelves when it hits the high streets in September. But
     what people will be buying is a half-finished gimmick, not the
     device that Larry Ellison described on The Money Programme. Later
     versions of the NC - whether they're made by Acorn or by Apple - may
     fulfil Ellison's true vision, but for the launch, the NetStation's
     marketeers have submerged the broader concept in a blind act of
     faith in the Web as a killer consumer app. Sadly, sales are likely
     to fall away before the hype does. Until there is serious bandwidth
     into the home, the NC is a non-starter as an entertainments device;
     that will come in time, but not by this Christmas.

     The great tragedy of all this is that having set the standards and
     built the first serious machine, Acorn will never be a serious
     competitor in the market for network computers. As it tries gamely
     to flog a turkey to people who don't yet need one, its competitors
     will clean up in more lucrative corporate markets where bandwidth is
     already available, but to which Acorn's marketing machine has little
     or no access.

     Does this worry the members of the Cambridge team? Not really.
     They've made a good machine, and they'll make others. It may rankle
     that the the inept antics of the marketeers have denied them the
     "world stardom" Sophie Wilson so eagerly anticipated, but so long as
     other meaty challenges remain to be tackled, they'll be happy at
     heart. Aside from the 7500FE chip's inevitable teething troubles,
     Wilson has already coaxed one of the new-generation 150MHz StrongARM
     chips into driving an NC, and other work is in progress. It's as if
     the marketing fiasco simply confirms that their own status quo has
     not been disrupted. All in a normal year's work at Acorn - and a box
     that works to prove it.

     Tom Loosemore is a section editor at Wired.
   #Slaw RSS Feed Slaw » Scalia Sets Out the Canons of Originalism
   Comments Feed JSON oEmbed (JSON) oEmbed (XML)

   Slaw
   Canada’s online legal magazine.
   Show Menu
   ____________________

     * Home
     * Columns

Slaw Columns
          + Administrative Law
          + Dispute Resolution
          + Intellectual Property
          + Justice Issues
          + Legal Education
          + Legal Ethics
          + Legal Information
          + Legal Marketing
          + Legal Publishing
          + Legal Technology
          + Practice of Law

Recently Published Columns All Columns
       Legal Publishing

Harsh Realities, Questionable Ethics and the Proliferation of Litigation in
Legal Information Provision
       by Robert McKay • Published January 7th, 2025
       Legal Marketing, Practice of Law

Strategic Growth in the Legal Services Market – Expansion or Contraction?
       by Heather Suttie • Published January 3rd, 2025
       Practice of Law

Stories
       by Tania Perlin • Published January 2nd, 2025
       Legal Information

New Year’s Legal Research Update
       by Judith Gaskell • Published December 31st, 2024
       Legal Technology, Practice of Law

AI’s Impact on Law: Why the Transformation Narrative Is Overstated
       by Guest Blogger • Published December 31st, 2024
       Practice of Law

2024 Year in Review
       by Ian Hu • Published December 30th, 2024

Today
          + Summaries Sunday
          + Monday's Mix
          + Tips Tuesday
          + Wednesday: What's Hot on CanLII
          + Thursday Thinkpiece
          + The Friday Fillip
     * Categories

Blog Post Categories
          + Administration of Slaw
          + Firm Guest Blogger
          + ulc_ecomm_list
          + Announcements
          + Case Comment
          + Education & Training
          + Education & Training: CLE/PD
          + Education & Training: Law Schools
          + Justice Issues
          + Legal Information
          + Book Reviews
          + Legal Information: Information Management
          + Legal Information: Libraries & Research
          + Legal Information: Publishing
          + Miscellaneous
          + Practice of Law
          + Practice of Law: Future of Practice
          + Practice of Law: Marketing
          + Practice of Law: Practice Management
          + Reading
          + Reading: Recommended
          + Substantive Law
          + International issues
          + International law
          + Substantive Law: Foreign Law
          + Substantive Law: Judicial Decisions
          + Substantive Law: Legislation
          + Technology
          + Technology: Internet
          + Technology: Office Technology
          + Vendor Quiz
          +
     * Archives

Archives Complete Archives

2025
          + January 2025

2024
          + January 2024
          + February 2024
          + March 2024
          + April 2024
          + May 2024
          + June 2024
          + July 2024
          + August 2024
          + September 2024
          + October 2024
          + November 2024
          + December 2024

2023
          + January 2023
          + February 2023
          + March 2023
          + April 2023
          + May 2023
          + June 2023
          + July 2023
          + August 2023
          + September 2023
          + October 2023
          + November 2023
          + December 2023

2022
          + January 2022
          + February 2022
          + March 2022
          + April 2022
          + May 2022
          + June 2022
          + July 2022
          + August 2022
          + September 2022
          + October 2022
          + November 2022
          + December 2022

2021
          + January 2021
          + February 2021
          + March 2021
          + April 2021
          + May 2021
          + June 2021
          + July 2021
          + August 2021
          + September 2021
          + October 2021
          + November 2021
          + December 2021
     * Contact

     * About

About Slaw
          + About Us
          + Advertise on Slaw
          + Our Bloggers
          + Our Columnists
          + Occasional Contributors
     * Subscribe
     * More

More from Slaw
          + Slaw Tips
          + Toronto Opinions Group (TOROG)
          + Canadian Law Blog Awards
          + Canadian Law Blogs Search Engine
          + Canadian Law Blogs Directory
          + The Friday Fillip (Archived)

   [Osgoode-banner-Jan1-2025-L.gif]
   [Slaw-jobs-banner.png]

   August 10 th 2012 2 Comments
   Share
     * Email
     * Twitter
     * Google+
     * Facebook
     * LinkedIn

   Posted in:
     * Reading

Scalia Sets Out the Canons of Originalism

   by Michael Lines
   More posts by Michael »

   Today, a brief interview on PBS with US Supreme Court Justice Scalia,
   who published in June Reading Law: The Interpretation of Legal Texts.
   In the interview he says the book sets out in detail the full range of
   originalism as he understands it (with the help of co-author Bryan
   Garner, Editor of Black’s Law Dictionary). The first part is a
   rationale, reportedly, and the second a how-to. To my knowledge, this
   is quite novel for a sitting judge.

   Originalism does not have much purchase in Canada, apparently, on the
   grounds that it is unnecessary to conceal the policy making of the
   courts behind elaborately wrought fig leaves (see A. M. Dodek (2009),
   46 S.C.L.R. (2d) at n. 9 for some good leads into scholarly
   acknowledgements of this reality).

   « Previous: Update: British Columbia Court Upholds Woman’s Exemption
   From Doctor-Assisted Suicide Ban Next: Be Cause – for Those Who Care »

Comments

    1. Adam Dodek
       August 10th, 2012 at 9:21 pm
       Michael thanks for the mention of my article on the policy making
       role of the Supreme Court.
    2. m. diane kindree
       August 13th, 2012 at 3:29 pm
       There is no doubt in my mind that Justice Scalia is an influential
       polemicist because of his adamant position on textualism and
       originalism. From my limited perspective, I see the life of law (J.
       Scalia doesn’t agree with the term “living” because paper and ink
       are inanimate objects) governed by logic and experience (“text,
       history, tradition, precedent”) but also by contextuality and
       contemporary circumstances (“purpose and consequences” Justice
       Becker). It seems to me this approach supports both intrepretative
       law and comparative law equally (with consideration given to
       limitation of statutes)? If one were to move beyond the wrought fig
       leaves, does his book have some relevant insight on how to guard
       the boundaries and preserve the democratic process by interpreting
       words alone?
       I am curious and so I guess he has sold a book.

The Count

   19,105 posts and 21,285 comments

   [LN-SB-banner-July30-2024.jpg]

   [Slaw-AD-sidebar.jpg]

Most Recent Comments

     * Anne Freed on Med-Arb Revisited – Using OMAP (Opt-Out Med-Arb
       Process) as a Process Option:
       This is a superb, well thought out and academically sound article
       Colm. Thank You for this ! I will bring… more »
     * Verna Milner on Tackling Access to Justice: The Maryland Example:
       It appears Maryland is going back to the original intent of the
       courthouse, very interesting. As former U.S. Supreme Court… more »
     * Kari Boyle on Med-Arb Revisited – Using OMAP (Opt-Out Med-Arb
       Process) as a Process Option:
       This is really interesting Colm. I love how the field is evolving
       existing processes and adding new ones to meet… more »
     * Katarina Daniels on We Should All Be Teaching Comparative Law Now
       More Than Ever:
       A wonderful article, Marcelo! Your students and your home
       institution are lucky to have you to lead these studies. more »

   + -

Recent Columns

   Legal Publishing

Harsh Realities, Questionable Ethics and the Proliferation of Litigation in
Legal Information Provision

   by Robert McKay • January 7th, 2025
   Legal Marketing, Practice of Law

Strategic Growth in the Legal Services Market – Expansion or Contraction?

   by Heather Suttie • January 3rd, 2025
   Practice of Law

Stories

   by Tania Perlin • January 2nd, 2025
   Legal Information

New Year’s Legal Research Update

   by Judith Gaskell • December 31st, 2024
   Legal Technology, Practice of Law

AI’s Impact on Law: Why the Transformation Narrative Is Overstated

   by Guest Blogger • December 31st, 2024
   All Columns »

   Latest Slaw Jobs Postings

Slaw Columns

     * Administrative Law
     * Dispute Resolution
     * Intellectual Property
     * Justice Issues
     * Legal Education
     * Legal Ethics
     * Legal Information
     * Legal Marketing
     * Legal Publishing
     * Legal Technology
     * Practice of Law

Today

     * Summaries Sunday
     * Monday's Mix
     * Tips Tuesday
     * Wednesday: What's Hot on CanLII
     * Thursday Thinkpiece
     * Friday Roundup: SlawJobs

Connect to Slaw

     * About Slaw
     * Our Bloggers
     * Our Columnists
     * Post Archives
     * Subscribe to Updates
     * @slaw_dot_ca

SlawNET

   These are the blogs of Slaw's contributors.
     * Avoid A Claim Blog
     * Law21
     * Fleet Street Law Blog
     * eLegal Canton
     * First Reference Inc.

     * Law Firm Web Strategy
     * Heather Douglas: Law and Innovation
     * Library Boy
     * Off the Shelf
     * Thoughtful Legal Management

Slaw's Canadian Law Blogs Search

   Including 450+ blogs. Updated concurrently with lawblogs.ca
   More about this tool »
   ____________________
   Copyright © 2025 Slaw. All Rights Reserved. Published by Stem Legal.
   Member Login.
   HOME
   BIBLICA
   FILOLOGÍA NEOTESTAMENTARIA
     * HOME
     * BIBLICA
          + Instructions for Contributors
          + Subscribe to Biblica or Send books for review
          + Index by Authors
          + Index by Biblical Books
          + FAQ
          + Vol 97 (2016)
          + Vol 96 (2015)
          + Vol 95 (2014)
          + Vol 94 (2013)
          + Vol 93 (2012)
          + Vol 92 (2011)
          + Vol 91 (2010)
          + Vol 90 (2009)
          + Vol 89 (2008)
          + Vol 88 (2007)
          + Vol 87 (2006)
          + Vol 86 (2005)
          + Vol 85 (2004)
          + Vol 84 (2003)
          + Vol 83 (2002)
          + Vol 82 (2001)
          + Vol 81 (2000)
          + Vol 80 (1999)
          + Vol 79 (1998)
     * FILOLOGIA-NEOTESTAMENTARIA

   ____________________ Submit
   Home > Biblica > Vol 92 (2011)

     BIBLICA

     Instructions for Contributors

     Subscribe to Biblica or Send books for review

     Index by Authors

     Index by Biblical Books

     FAQ

     Vol 97 (2016)

     Vol 96 (2015)

     Vol 95 (2014)

     Vol 94 (2013)

     Vol 93 (2012)

     Vol 92 (2011)

     Vol 91 (2010)

     Vol 90 (2009)

     Vol 89 (2008)

     Vol 88 (2007)

     Vol 87 (2006)

     Vol 86 (2005)

     Vol 85 (2004)

     Vol 84 (2003)

     Vol 83 (2002)

     Vol 82 (2001)

     Vol 81 (2000)

     Vol 80 (1999)

     Vol 79 (1998)

   Vol 92 (2011)
       Mark Leuchter, «Eisodus as Exodus: The Song of the Sea (Exod 15)
       Reconsidered.», Vol. 92 (2011) 321-346
       This study continues a line of inquiry from the author’s previous
       essay regarding the 12^th century BCE battle traditions embedded in
       the Song of Deborah (Judg 5) as the basis for a nascent Exodus
       ideology surfacing in the Song of the Sea (Exod 15). Exod 15 is
       identified as developing an agrarian ideal into a basis for
       national identity: Israel’s successful struggles against competing
       Canaanite military forces echoing earlier Egyptian imperial
       hegemony is liturgized into a myth where YHWH defeats the Egyptian
       foe and then settles his own sacred agrarian estate.
       TAGS
          + Song of Deborah
          + Exodus Ideology
          + national identity
          + Song of the Sea
    See more by the same author
          + «Tyre’s “70 Years” in Isaiah 23,15-18» 2006 412-417
          + «Jeremiah’s 70-Year Prophecy and the ymq bl/K##Atbash Codes»
            2004 503-522
          + «'Why Tarry The Wheels of his Chariot?' (Judg 5,28): Canaanite
            Chariots and Echoes of Egypt in the Song of Deborah.» 2010
            256-268
          + «Inter-Levitical Polemics in the late 6th century BCE: The
            Evidence from Nehemiah 9» 2014 269-279
       [INS: :INS]

   [INS: :INS]
     * Page 329/346
     * ‹
     * 329
     * 330
     * 331
     * 332
     * 333
     * 334
     * 335
     * 336
     * 337
     * 338
     * ›

   Biblica_1:Layout 1 21-11-2011 12:59 Pagina 329 329 EISODUS AS EXODUS:
   THE SONG OF THE SEA tion of Deut 32 must have occurred at a time when
   these linguistic changes were already entrenched in the poem. If we
   accept a similar oral/cultic background to Exod 15, then the fact that
   its textual form shows no later linguistic features â€” a completely
   unique feature in the canon of biblical Hebrew poetry â€” can best be
   explained by the fact that it was committed to text at an early point
   in time, i.e., before later linguistic conventions could bleed into the
   normative form of the poem through prolonged recitation. There can be
   little doubt that Exod 15 continued to be recited orally down to the
   8th and 7th centuries; the fact that a later scribe in- corporated it
   into the Exodus narrative indicates that it continued to be well known
   in the scribeâ€™s time and that its inclusion would im- mediately
   command the attention of the scribeâ€™s intended audience 33. However,
   the linguistic features ossified in the canonical form of the poem
   reveal that an antique version of this work was utilized by this
   scribe. The scribe in question must have drawn from an archival tex-
   tual source rather than a contemporaneous oral rendition, the latter of
   which would have invariably included later linguistic forms from the
   scribeâ€™s own day 34. By contrast, the poemâ€™s early textualization
   33 This phenomenon is common to the incorporation of older poetry into
   narrative contexts elsewhere in the Hebrew Bible. J.W. WATTS, â€œSong
   and the Ancient Readerâ€, Perspectives in Religious Studies 22 (1995)
   146, puts the mat- ter well when he remarks: â€œthe inclusion of poetry
   within narrative expanded the latterâ€™s representational scope and,
   especially, its affective impact on hearers and readersâ€. The
   literary logic governing the inclusion of poetry into prose narrative
   changes over time, however. See S. WEITZMAN, Song and Story in Biblical
   Narrative. The history of a literary convention in Ancient Israel
   (Bloomington, IN 1997) for a full discussion. 34 On the matter of a
   textual archive available to the later â€“ probably priestly â€“ scribe
   who shaped the Exodus account, see VAN DER TOORN, Scribal Culture,
   63-65, 69-70, 86-89. Van der Toorn notes the centrality of temple
   archives and temple-based scribal â€œworkshopsâ€ where sacred texts
   were preserved and trans- mitted over long periods of time in a variety
   of ancient loci, and there is no rea- son to suppose that this was not
   also the case in Jerusalem. This would especially be the case during
   the late pre-exilic period given the deep impact of both Egyptian and
   Mesopotamian political culture on the state institutions of Judah by
   that time. Carr, Tablet of the Heart, 168, is skeptical that texts
   produced by temple scribes in the late pre-exilic period would have
   been taken with the exiles to Babylon. However, if written works had
   obtained a ritual-iconic status as argued recently by J.W. WATTS,
   Ritual and Rhetoric in Leviticus. From Sac- rifice to Scripture (New
   York â€“ Cambridge 2007) 193-214, then it is reasonable to assume that
   some important written works were brought to Babylon by the

     * HOME

     * ABOUT US
     * CONTACTS
     * PRIVACY POLICY
     * [fb.png] FOLLOW US
     * Donate

     * Copyright © 2025

   [INS: :INS]
   [fict.gif]
   Quarterly Literary Review Singapore
   Issue illustration
   [fict.gif]

     Latest Issue:
   Vol. 23 No. 4 Oct 2024
   This Issue:
   Vol. 16 No. 3 Jul 2017
   All Issues
   Site Map

   [fict.gif]
   QLRS sections
   [fict.gif]

     Editorial
   Poetry
   Short Stories
   Essays
   Criticism
   Interviews
   Extra Media
   The Acid Tongue
   Letters


   [fict.gif]
   QLRS general
   [fict.gif]



   About Us
   News
   Forum
   Links
   Submissions
   Contributors' Notes
   Mailing List
   Advertising
   Site Map
   E-mail

   ____________ FIND


   Mirror Images
   A literary stalwart looks a little too deeply inwards

   By Andrea Yew

   An Equal Joy: Reflections on God, Death and Belonging
   Catherine Lim
   Marshall Cavendish (2017) / 212 pages / SGD24.30

   Catherine Lim's latest collection, An Equal Joy: Reflections on God,
   Death and Belonging, is a memento mori of sorts, a collection of essays
   written in response to Lim's realisation of her own mortality. Across a
   series of twenty-two essays, Lim explores questions of religion, death
   and science. In her collection, Lim sets out to answer her own
   questions that she has accumulated through life. As such, this
   collection charts a personal journey for Lim through the medium of
   narrative.

   From the outset, Lim opens up her collection with an unabashed
   admission of the solipsistic nature of this collection. As she states:

     It is thus a completely self-absorbed book, written to myself, for
     myself, about myself. Narcissism of the most unabashed kind! But
     since my readers have indulged me for so long, they may not mind one
     more display of the idiosyncrasy that has governed much of my
     writing.

   On one hand, the admission that it is a "self-absorbed book" can be
   off-putting as it rings of indulgence and suggests that the book is
   premised on Lim's existing popularity as an award-winning writer for
   its readership. As Lim herself states: "It consists of short chapters
   in no particular order of chronology or significance, with no overall
   connecting theme or tone." Indeed, the collection jumps between essays
   about science, early humans, and speculations on the private life of
   religious figures with seemingly no connection whatsoever. While it may
   chart Lim's personal treasure trove of knowledge, the jumps are
   jarring, making the collection seem like a random mishmash of thought.
   As such, at times, the collection can seem like the indulgent,
   solipsistic presentation of Lim's personal headspace. Even within each
   essay, the meandering prose makes it difficult to follow Lim's train of
   thought at times and, hence, the argument she puts forth, if any, is
   unclear. For instance, in 'Guilt', Lim begins her essay by describing
   the gods of her childhood, "the Taoist Tee Kong" and "the Christian God
   of her adult years". The essay describes the guilt she felt as a child
   for seemingly having caused misfortune to befall others through her own
   perceived blessings she has received in life. However, the essay
   mysteriously brings in Galileo at the end, the only connection of
   Galileo with her childhood guilt encapsulated in the sentence: "I
   wonder whether, in the case of Galileo, it was guilt or fear that
   finally left him a broken man." The link between Galileo and Lim is
   puzzling and thus comes across as quite a leap. Furthermore, the essay
   concludes with an even more puzzling link to Adam and Eve, as she
   remarks: "The story about our first parents Adam and Eve should have
   had a happy endingthe apple of knowledge should not have been forbidden
   in the first place, but readily available to all who sought it." The
   original portrayal of guilt is long lost at this point. Although each
   essay, like this, is characteristically bookended by Lim's conclusion,
   the essay seems to be governed by an internal logic that eludes the
   reader.

   Nevertheless, the collection is arguably Lim's final answer to the fear
   of death, which is the collection's central preoccupation. As the
   collection concludes with the final essay, 'An Equal Joy', the
   collection's namesake: "I have loved and lived life richly and deeply,
   and I embrace its closure with an equal joy." On one hand, it
   foregrounds the notion that the collection is very much a presentation
   of Lim's answers to the questions she has accumulated through life, the
   closing statement to a rich life. However, it is striking as the line
   is also intended to be Lim's own obituary. Art, represented through
   this collection, will always stand the test of time, and is Lim's
   response to the transience of life. As such, the collection is also a
   meditation on the relationship between art and mortality.

   An Equal Joy is very much a personal narrative space for Lim. As she
   states in her introductory essay: "This book is about the long and
   intense spiritual journey I have undertaken, with its many conflicts of
   head and heart, logic and feeling, joy and pain, certitude and doubt".
   True to her introduction, the collection is a working through of
   conflict as Lim answers the questions she presents herself. The
   collection is a space for catharsis, which is reflected in both its
   content and structure. Lim titles her essays with a mix of questions
   and personal conclusions. For instance, there are essays questioning
   'Did the Neanderthals Have Souls?' to doctrinal essays such as 'My
   Holy/ Holistic Trinity' or 'The Right To Die'.

   In Lim's collection, narratives are presented as a means of working
   through conflict. For instance, in 'A Bondmaid named Hoon', Lim
   responds to her own questions about her original work, The Bondmaid, in
   which a reader had asked "Why did you have to make Han die in the end?
   Why couldn't she have had a happy life after all that terrible
   suffering?" In response, Lim wrote 'A Bondmaid Named Hoon', an
   alternative parallel to The Bondmaid, in which Hoon exacts the justice
   her original protagonist did not. However, she had her own misgivings
   even after the story was finished. As Lim states: "And I certainly was
   not at all comfortable about Hoon. Why? I didn't know then, and I'm not
   sure I know now." Lim goes on to summarise the story of Hoon. However,
   what is significant is that through the retelling of the narrative, Lim
   also resolves some of her personal misgivings. As she states even
   before she summarises her story: "A summary of the abandoned story of
   the bondmaid Hoon may explain the reason for the abandonment of a novel
   that I had begun with such gusto." The choice of 'may explain' suggests
   that the author herself does not know what answers she might find, and
   hence points to a working through of conflict. And it is by the end of
   the essay that we see Lim's coming to terms with her own questions,
   finding the answer to her own question. As she states: "My discomfort
   with this character was, I think, due to a strong discomfort with
   myself for having created her" and, subsequently: "I had no choice but
   to admit to something that was worse than a mistake malice,
   small-mindedness and a pettiness unworthy of the serious business of
   writing". The shift in language from 'I think' to 'I had no choice but
   to admit' reflects Lim's working through of her own questions through
   narratives on multiple levels. At the first level, narrative is used as
   an emotional response to a question. We see this similarly reflected in
   Lim's speculations on the private life of Jesus as well, most aptly
   seen in 'Did Jesus Have A Sense of Humor?'. However, on another level,
   it is also through the medium of narrative or, rather, reflecting upon
   an alternative narrative that Lim also works through her own personal
   conflicts, moving from particular questions to more general answers
   about her views on writing. In this sense, the collection's structure
   can also be interpreted similarly. Lim's essays, whilst on one hand a
   direct emotional response to questions, also reflect a summation of her
   life philosophies, a compilation of her experiences and a synthesis of
   a lifetime of accumulated knowledge.

   However, while Lim's collection may have provided personal catharsis,
   it can isolate the reader at times, given that her answers are very
   specific to a set of questions she has defined, dictated by her
   idiosyncratic interests, such as her interest in the private lives of
   public or religious figures. For instance, the essay 'A Tale of
   Princess Diana' presents an alternate narrative predicated upon the
   idea of cloning princess Diana, and its social and legal implications.
   As Lim states:

     This story was written on a whim, has never been published and never
     will be. Hence I allowed myself to end it with any number of
     questions, some of them quite nonsensical, most of them
     unanswerable, because ultimately when the science clashes with
     social, ethical, psychological, philosophical and legal matters.

   However, given that the story is published as part of the collection,
   this sets up the reader's expectation that some conclusion is to be
   derived from it. This is not to say that all narratives must end on a
   conclusive note but, rather, there must be a point to the narrative
   that extends beyond the 'whim' of the writer, as to do otherwise seems
   rather arrogant and presumptuous. The merit of this collection should
   not depend on Lim's fame alone rather than its contribution to a body
   of literature. While the collection provides answers for Lim, as a work
   of art, it needs to go beyond the writer to resonate with the reader.
   Concluding a narrative spawned from a peculiar interest in the private
   life of Princess Diana with even more unanswered questions is
   frustrating at best for the reader. Even Lim's fascination with
   Princess Diana is puzzling. Perhaps something within Princess Diana's
   glamorous life resonated with Lim's colourful one, as she admits to
   being 'intrigued by the paradoxes in the princess's life'. Perhaps
   Lim's alternative narrative surrounding the implications of cloning is
   an exploration of the possibility and implications of immortality. This
   becomes an especially pertinent question, especially if Lim found
   parallels between her literary renown and Princess Diana's fame and,
   hence, Princess Diana's death is viewed as a timely reminder of Lim's
   own mortality. However, the reader can only speculate. The link between
   Lim, Princess Diana and cloning is tentative at best and frustrating at
   worst. Perhaps it is in the nature of the objective of this collection
   that comes across as a swansong of Lim's life experiences, consisting
   of both questions answered and unanswered. However, as a literary work,
   it leaves the reader expecting more.

   All in all, Lim's collection brings to mind Plato's wise words: "An
   unexamined life is not worth living." In the face of her own mortality,
   Lim's collection brings together a lifetime of experience and knowledge
   to present her own personal life philosophy, providing a sense of
   closure for a life well-lived. However, it is very much a collection
   written for herself.

                        Previous Page < ^ > Next Page

   QLRS Vol. 16 No. 3 Jul 2017

   _____

   About Andrea Yew
   Mail the editors
   Return to Vol. 16 No. 3 Jul 2017





   CRITICISM ELSEWHERE IN THIS ISSUE
   Going Local, Not Global
   Priscilla Gan reviews Balli Kaur Jaswal.
   For the record July 2017

   RELATED LINKS

   An Equal Joy
   External link to Marshall Cavendish.

   Overview of An Equal Joy
   External link to the Straits Times.

   Catherine Lim
   External link to Wikipedia.

   [fict.gif] [fict.gif] [fict.gif] [fict.gif] [fict.gif] [fict.gif]
   [fict.gif] [fict.gif] [fict.gif]
   [fict.gif]
                                 [fict.gif]

   Return to QLRS home
   [fict.gif]
   [fict.gif]

                     Copyright © 2001-2025 The Authors
                   Privacy Policy | Terms of Use | E-mail
   #Academics » Feed Academics » Comments Feed alternate alternate
   alternate

   Skip to main content
     *
     *

   Kalamazoo College

     * About K
     * K-Plan
     * Academics
     * Admission
     * Alumni
     * GIVE
     * News
     * Life at K
     * Athletics
     * APPLY
     * Close Navigation

Academics

   (BUTTON)
     * Areas of Study
     * The Faculty
     * GLCA Programs
     * Honors, Awards and Prizes
     * Academic Calendar
     * Academic Catalog
     * Course Schedule

Academics

   Shape your own path in the liberal arts and sciences with K’s
   innovative and integrated approach to academics.

   With 32 majors, 22 minors and 13 concentrations, students can customize
   their experiences for a personalized approach to their college
   education. There’s no need to follow a prescribed list of general
   education requirements with our open curriculum.

   Unsure of your major? Don’t worry.

   Kalamazoo College is one of the best colleges for undecided majors
   because our students wait until the second term of sophomore year to
   officially declare their majors⁠—while still typically graduating in
   four years.

   Find out how these academic programs and the K-Plan do more in four
   years so our students can do more in a lifetime.

Areas of Study (Majors, Minors, Concentrations and Programs)

   African Studies

African Studies

   Concentration
   American Studies

American Studies

   Concentration
   Anthropology and Sociology

Anthropology and Sociology

   Major Minor
   Arabic

Arabic

   Course Offerings
   Art and Art History

Art and Art History

   Major Minor
   Biological Physics

Biological Physics

   Concentration
   Biology

Biology

   Major Concentration

Careers in Health

   Pre-Professional Advising
   Chemistry and Biochemistry

Chemistry and Biochemistry

   Major Concentration
   Chinese

Chinese

   Minor
   Classics

Classics

   Greek, Latin, Classics, and Classical Civilization

   Major Minor

Community and Global Health

   Concentration
   Computer Science

Computer Science

   Major Minor
   Critical Ethnic Studies

Critical Ethnic Studies

   Major
   Critical Theory

Critical Theory

   Concentration
   East Asian Studies

East Asian Studies

   Major
   Economics and Business

Economics and Business

   Major
   3/2 Engineering

3/2 Engineering

   Program

English

   Major Minor
   Environmental Studies

Environmental Studies

   Concentration
   Film and Media Studies

Film and Media Studies

   Concentration
   French and Francophone Studies

French and Francophone Studies

   Major Minor
   German Studies

German Studies

   Major Minor
   History

History

   Major Minor
   International and Area Studies

International and Area Studies

   Major
   Japanese

Japanese

   Minor
   Jewish Studies

Jewish Studies

   Concentration

Mathematics

   Major Minor
   Music professor and student on trombone

Music

   Major Minor
   Neuroscience

Neuroscience

   Concentration
   Philosophy

Philosophy

   Major Minor
   Physical Education

Physical Education

   Course Offerings
   Physics

Physics

   Major Minor
   Political Science

Political Science

   Major Minor
   pre-law advising

Pre-Law Advising

   Pre-Professional Advising
   Psychology

Psychology

   Major Minor
   Public Policy and Urban Affairs

Public Policy and Urban Affairs

   Concentration

Religion

   Major Minor
   Spanish Language and Literature

Spanish Language and Literature

   Major Minor
   Theatre Arts

Theatre Arts

   Major Minor
   Women, Gender, and Sexuality

Women, Gender, and Sexuality

   Major Concentration

   Updated March 7, 2024

   K logo
   Contact Info

   Kalamazoo College
   1200 Academy Street
   Kalamazoo, Michigan
   49006-3295
   USA

   Information 269.337.7000
   Admission 800.253.3602

   Contact List
   Directories

   Search this site
   Sitemap
   Map and Directions
   Academic Calendars
   Employment
   Departments and Programs
   Library
   Registrar
   Bookstore
   For Parents
   Crisis Response
   Nondiscrimination Policy
   Title IX
   Bias Reporting
   Consumer Information
   Web Accessibility Policy
   Privacy Policy
   Official Disclaimer

   © Kalamazoo College All Rights Reserved 2018
I S K O

Encyclopedia of Knowledge Organization

   home about ISKO join ISKO Knowledge Organization journal ISKO events
   ISKO chapters ISKO people ISKO publications Encyclopedia KO literature
   KO institutions ⇗ KOS registry 🔒 members contact us edited by Birger
   Hjørland and Claudio Gnoli


Science mapping

     by Eugenio Petrovich

     Table of contents:
     1. Introduction
         1.1 Structure of the entry
         1.2 Three caveats about this entry
     2. A brief history of science mapping
         2.1 Ancestors of science maps
         2.2 Modern science mapping
     3. Building a science map: the general workflow
         3.1 Data sources for science mapping
         3.2 Field delineation
         3.3 Data cleaning and pre-processing
         3.4 Network extraction
     4. Types of science maps
         4.1 Citation-based maps: 4.1.1 The nodes in citation-based maps:
     publications and aggregates of publications; 4.1.2 The links in
     citation-based maps: direct citations, bibliographic coupling, and
     co-citations; 4.1.3 Normalization; 4.1.4 Visualization; 4.1.5
     Enriching the map
         4.2 Term-based maps: 4.2.1 Classic co-word analysis and the
     strategic diagrams; 4.2.2 Co-word analysis based on automatically
     extracted terms
         4.3 Other network-based maps: 4.3.1 Co-authorship networks;
     4.3.2 Interlocking editorship networks
         4.4 Other types of science maps: 4.4.1 Maps based on patents
     data; 4.4.2 Geographic maps of science
     5. The representation of time in science mapping
     6. Interpreting a science map
     7. Science maps and the philosophy of science
         7.1 On the objectivity of science maps
         7.2 Published science vs. science in the making
         7.3 The meaning of citations
     8. Science maps and science policy
     9. Conclusion
     Acknowledgments
     Endnotes
     References
     Appendix: Science mapping tools: (1) CiteSpace; (2) VOSviewer
     Colophon

     Abstract:
     Science maps are visual representations of the structure and
     dynamics of scholarly knowledge. They aim to show how fields,
     disciplines, journals, scientists, publications, and scientific
     terms relate to each other. Science mapping is the body of methods
     and techniques that have been developed for generating science maps.
     This entry is an introduction to science maps and science mapping.
     It focuses on the conceptual, theoretical, and methodological issues
     of science mapping, rather than on the mathematical formulation of
     science mapping techniques. After a brief history of science
     mapping, we describe the general procedure for building a science
     map, presenting the data sources and the methods to select, clean,
     and pre-process the data. Next, we examine in detail how the most
     common types of science maps, namely the citation-based and the
     term-based, are generated. Both are based on networks: the former on
     the network of publications connected by citations, the latter on
     the network of terms co-occurring in publications. We review the
     rationale behind these mapping approaches, as well as the techniques
     and methods to build the maps (from the extraction of the network to
     the visualization and enrichment of the map). We also present
     less-common types of science maps, including co-authorship networks,
     interlocking editorship networks, maps based on patents’ data, and
     geographic maps of science. Moreover, we consider how time can be
     represented in science maps to investigate the dynamics of science.
     We also discuss some epistemological and sociological topics that
     can help in the interpretation, contextualization, and assessment of
     science maps. Then, we present some possible applications of science
     maps in science policy. In the conclusion, we point out why science
     mapping may be interesting for all the branches of meta-science,
     from knowledge organization to epistemology.

                                                            [top of entry]

1. Introduction

   Science maps, also known as scientographs, bibliometric network
   visualizations, and knowledge domain maps, are visual representations
   of the structure and dynamics of scholarly knowledge. They aim to show
   how → disciplines, fields, specialties, authors, keywords, or
   publications relate to each other (Börner, Chen and Boyack 2005; Chen
   2013; Osinska and Malak 2016; Rafols, Porter and Leydesdorff 2010;
   Small 1999; Van Raan 2019). Science maps are usually generated based on
   the analysis of large collections of scientific → documents (Börner
   2010; Cobo et al. 2011b).

   Science mapping is the body of methods and techniques that have been
   developed to generate science maps. Science mapping has a long
   tradition in bibliometrics and scientometrics, i.e., the quantitative
   studies of science (Chen 2017; Van Raan 2019). In the last decades, it
   has increasingly become an interdisciplinary area, witnessing important
   contributions from → data science, where science mapping belongs to the
   larger and increasingly important area of information visualization
   (Börner, Chen and Boyack 2005).

   Science maps have several applications. They help to answer questions
   such as: What are the main topics within a certain scientific domain?
   How do these topics relate to each other? How has a certain scientific
   domain developed over time? Who are the key actors (researchers,
   institutions, journals) of a scientific field? Science maps help to
   investigate how the structural units of science relate one another at
   the micro and macro level (Leydesdorff 1987), what factors determine
   the emergence of new scientific fields and the development of
   interdisciplinary areas (Leydesdorff and Goldstone 2014), and, more
   generally, how scientific change functions (Leydesdorff 2001;
   Lucio-Arias and Leydesdorff 2009). At the same time, the information
   made accessible by science maps can be highly relevant for science
   policy purposes.

   Science maps, and especially the global maps, also known as “atlases of
   science” (see Section 3.2: Field delineation), can help to → classify
   the sciences by showing their mutual relationships (e.g., by showing
   the citation flows between fields). In this sense, science maps are
   useful tools in → knowledge organization and have been used to build
   classification systems with a bottom-up approach (see e.g., Waltman and
   van Eck 2012). However, standard methods of science mapping are not
   based on and do not result in semantic relationships between categories
   (e.g., genus-species relation) but association measures between units
   of analysis (e.g., co-citation strength between publications, or
   co-authorship association between authors). The closest to semantic
   relations that can be produced by standard science mapping approaches
   is the relation of inclusion obtained by clustering techniques, in
   which higher-order clusters include lower-order clusters (see Section
   4.1.5: Enriching the map). Science maps, hence, are not meant to
   replace taxonomies, classificatory schemes, ontologies, and other
   classic → knowledge organization systems (KOS) (Hjørland 2013;
   Mazzocchi 2018). Rather, they can integrate them by providing extra
   information on the structure of science based on the analysis of
   citation networks and other kinds of scientific networks. At the same
   time, the application of science maps is not restricted to knowledge
   organization but extends to the sociology of science and science
   policy.

                                                            [top of entry]

1.1 Structure of the entry

   This article is an introduction to science maps and science mapping
   methodology. It is structured as follows. Section 2 offers a brief
   overview of the history of science mapping. Section 3 presents the
   standard workflow behind a science map and the preliminary steps of
   science mapping: data collection, field delineation, data
   pre-processing, and network extraction. Section 4 examines the
   different types of science maps that can be generated from network
   data. Section 4.1 is devoted to citation-based maps, i.e., those maps
   that are based on publications (or aggregates of publications) and
   citations (or citation-based relations) between publications. This
   section describes in details some procedures that are common also to
   other science maps, such as the normalization of the raw relatedness
   scores, and the two most diffused visualization approaches, the
   graph-based and the distance-based. It also presents some techniques
   that can be used to complement the results of mapping and ease the
   interpretation of science maps, such as clustering. Section 4.2
   discusses term-based maps, i.e., those maps that are based on the
   analysis of the titles, abstracts, keywords or bibliographic
   descriptors of scientific publications. We will first present the
   classic co-word analysis as developed in the sociology of science and
   then focus on maps based on terms extracted automatically with natural
   language processing techniques. Section 4.3 briefly overviews science
   maps based on co-authorship and interlocking editorship networks,
   whereas Section 4.4 reviews science maps based on patents and
   geographic maps of science. Section 5 discusses different strategies to
   include the dimension of time into science maps. Section 6 is devoted
   to the last step in the science mapping workflow, namely
   interpretation, and to discuss some general issues of science mapping,
   such as the importance of the level of analysis and the applicability
   of science mapping to the humanities. In Section 7, some
   epistemological topics, which bridge across science mapping, sociology
   of science, and philosophy of science are discussed: the objectivity of
   science maps, the relationship between the published side of science
   and the scientific practice, and the meaning of citations. Section 8
   overviews the potential applications of science maps in science policy.
   Lastly, the Conclusion will sketch how science mapping may be of
   interest for all the disciplines that compose meta-science. In the
   Appendix, two tools currently available for producing science maps,
   CiteSpace and VOSviewer, are briefly reviewed.

                                                            [top of entry]

1.2 Three caveats about this entry

   This entry focuses on conceptual, theoretical, and methodological
   issues of science mapping rather than on the rigorous mathematical
   formulation of science mapping techniques, as the basic ideas behind
   the techniques can often be understood without reference to the formal
   machinery. Relevant technical literature will be pointed out in the
   references.

   Secondly, we will focus on the methodology of science mapping, rather
   than on specific exemplars of science maps. We aim to provide the
   readers with the tools to understand and independently assess the
   science maps they will encounter (or produce!), rather than offer our
   opinion on existing maps. A wonderful collection of science maps can be
   found in the Atlas of Science by Katy Börner (Börner 2010) and in the
   exhibit Places and Spaces: Mapping Science, which popularizes the topic
   of science mapping to the large public all over the world since 2005
   [1].

   Lastly, science mapping is not a static research field, but it is
   constantly moving forward. New mapping methods are developed, old
   algorithms are dismissed, science mapping tools are refined, larger
   maps are built as higher computing capacity becomes available.
   Therefore, it is not uncommon to find disagreement in the current
   science maps literature (e.g. Boyack and Klavans 2010). In this
   article, we will try as far as possible to remain neutral concerning
   these discussions, presenting to the reader the different options
   without taking a position.

                                                            [top of entry]

2. A brief history of science mapping

   Modern science mapping relies on the data provided by large,
   multidisciplinary databases that index vast portions of the scientific
   literature (see Section 3.1: Data sources for science mapping). Before
   the creation of these databases in the 1960s, it was virtually
   impossible to generate science maps in the modern sense. The idea of
   representing the structure of human knowledge by visual aids, however,
   dates far back in history.

                                                            [top of entry]

2.1 Ancestors of science maps

   Already in the Middle Age, the relationships between the seven liberal
   arts, comprising the trivium and quadrivium, were visually represented
   by allegories [2]. However, the most popular visual metaphor in history
   for visualizing knowledge has been the tree (Lima 2014). Its origins
   can be traced back to Aristotle, and to the Isagoge, an introduction to
   Aristotle’s logic written by Porphyry in the 3rd Century. In the 13th
   Century, Ramon Llull depicted a tree of the sciences in his Arbor
   Scientiae (1295). Descartes, in the Principia Philosophiae (1644), used
   the same image to explain the relationship between metaphysics,
   physics, and the applied sciences. During the Enlightenment, the famous
   Encyclopédie of Diderot and d’Alambert contained a tree-like taxonomy
   of human knowledge (“Système figuré des connaissances humaines”).
   Similar structures can be found also in the 19th Century, in
   philosophical treaties on the classification and organization of the
   sciences [3].

                                                            [top of entry]

2.2 Modern science mapping

   The tree-like representations of the sciences in the past had usually a
   philosophical aim. They served to reflect on the most general
   principles that underlie human knowledge. At the same time, they aimed
   at organizing scientific and scholarly disciplines, by creating
   hierarchies between them. Often, they were proposed with a normative
   spirit: more than describing the actual organization of knowledge, they
   wanted to reform and improve it. What they all shared was a “top-down”
   approach. Starting from a certain idea of human knowledge and a certain
   set of classificatory categories, a taxonomy was devised, which was
   then used to categorize the individual items of knowledge, such as
   books or scientific papers. The Dewey Decimal Classification, a →
   library classification system developed in 1876, epitomizes such a
   top-down approach.

   The creation of the Science Citation Index (SCI) in the 1960s by Eugene
   Garfield at the Institute for Scientific Information, allowed for a
   first time a bottom-up approach. As we will see better in the next
   sections (see Section 3.4: Network extraction), the SCI indexed the
   citation-links between the articles published in scientific journals.
   In this way, it allowed to reconstruct the network in which each
   scientific article is embedded, and, by connecting all these networks,
   to reconstruct the structure of entire scientific areas. In this way, a
   new method to map human knowledge became possible. The historian of
   science Derek De Solla Price was the first to suggest such an idea in
   1965 (Price 1965). Garfield himself proposed the method of
   historiographs to reconstruct the temporal development of scientific
   ideas by analyzing the citation links between publications (Garfield
   1973) (see Section 5: The representation of time in science mapping).

   In the 1960s and 1970s, two new techniques, both based on citations,
   were developed to measure the association of scientific papers:
   bibliographic coupling (Kessler 1963) and co-citation (Small 1973;
   Marshakova 1973). They soon became standard techniques for science
   mapping (see Section 4.1.2: The links in citation-based maps). Henry
   Small started to use co-citation analysis to map scientific areas and
   study their evolution over time. He generated the first science maps
   based on co-citation analysis in 1977 to study the field of collagen
   research (Small 1977).

   In the 1980s, new methods of analysis were developed, such as author
   co-citation analysis (White and Griffith 1981) and co-word analysis
   (Callon et al. 1983). At the same time, the technical aspects of
   science mapping were discussed and sometimes disputed (Leydesdorff
   1987). The 1990s saw important advancements in computer visualization
   techniques and, in 1991, the first science mapping program for the
   personal computer, SCI-map, was made available. In the 2000s, the
   improvement of computer capacity allowed to produce the first global
   maps of science, based on the analysis of thousands of journals and
   millions of publications. New user-friendly science mapping tools, such
   as CiteSpace and VOSviewer, were launched in the 2010s, so that
   nowadays also the non-experts can generate their own science maps. In
   the last twenty years, science mapping has become an increasingly
   interdisciplinary area, with important contributions from computer
   scientists and experts in information visualization, and the last ten
   years have seen what has been called a “Cambrian explosion of science
   maps” (Börner, Theriault and Boyack 2015) [4].

                                                            [top of entry]

3. Building a science map: the general workflow

   The construction of a science map follows a general workflow that
   comprises the following steps (Börner, Chen and Boyack 2005; Cobo et
   al. 2011b):
    1. Data collection. Based on the research question of the analyst, the
       data for the mapping are collected. In principle, any relational
       feature of the scientific activity can be collected by different
       methods. In practice, however, most science mapping studies are
       based on data stored in bibliographic data sources. Hence, the data
       collection consists in individuating appropriate queries to extract
       bibliographic data from those sources.
    2. Pre-processing. The raw data are cleaned and, if needed, further
       selected (for instance, only publications cited over a certain
       threshold are retained). This step is crucial since the goodness of
       the mapping depends on the quality of the underlying data.
    3. Network extraction. Depending on the chosen unit of analysis
       (publication, term, author, journal, institution, etc.) and the
       kind of analysis (direct linkage, co-citation, bibliographic
       coupling, co-word analysis, etc.) the corresponding network is
       extracted from the data.
    4. Normalization. Usually, the relatedness scores (e.g., the raw
       number of co-citations between publications) are not directly used
       to generate the science maps because experience and experimentation
       have shown that they can create distortions due to the different
       sizes of the items (Boyack and Klavans 2019). It is thus a common
       practice to perform normalization on the raw values using
       similarity measures.
    5. Visualization. There are different options to visualize the
       network. In graph-based visualizations, graph drawing algorithms
       are used. In distance-based visualizations, dimensionality
       reduction techniques are used to plot the data into a
       two-dimensional (or, more rarely, three-dimensional) layout, so
       that the distances between the points on the map reflect the
       similarity of the units of analysis.
    6. Enrichment. The elements of the map can be enriched to provide more
       information. Frequently, clustering techniques are used to find
       groups of similar nodes and colors are used to distinguish nodes
       belonging to different clusters.
    7. Interpretation. The science map is interpreted, usually with the
       help of experts in the mapped domain. The visual nature of the map
       enables the recognition of patterns and structures, which can
       provide an answer to research questions or help in addressing
       science policy issues.

   In the next sections, we focus on the first three steps of science
   mapping: data collection, data pre-processing, and network extraction.
   Based on the type of network extracted, different types of science maps
   can be generated. In Section 4, each type is examined in detail. Note
   that citation-based maps will allow us to describe the steps of
   normalization, visualization, and enrichment that recur also in the
   generation of other types of science maps. Section 5 is an excursus on
   how time can be represented in science maps, whereas Section 6
   discusses the last phase of science mapping, i.e., the interpretation.

                                                            [top of entry]

3.1 Data sources for science mapping

   Science mapping is a methodology that can be applied, in principle, to
   a variety of data regarding the scientific enterprise. In practice,
   however, the main data sources for science mapping are bibliographic
   databases. Other types of data must be collected by the analysts.

   Bibliographic databases used to this purpose are large
   multi-disciplinary databases that collect the → metadata of academic
   publications (authors, title, abstract, keywords, affiliation of the
   authors, publication year, etc.) along with their citations (hence
   their name of citation indexes). The main citation indexes are
   Clarivate’s Web of Science (WoS), Elseviers’ Scopus, and Google
   Scholar.

   Recently, two open bibliographic databases have joined Google Scholar:
   Microsoft Academic (launched in 2006, it stopped being updated in 2012
   and was relaunched in 2016 [5]) and Dimensions (launched in 2019 [6]).
   Moreover, in 2017 Crossref, a not-for-profit organization of
   publishers, has made its citation data openly available. Comparisons
   between the coverage of these new databases and the coverage of
   traditional databases are currently being undertaken by the
   bibliometric community (Visser, van Eck and Waltman 2020; Harzing
   2019).

   In addition to multi-disciplinary databases, there are also specialized
   databases, focusing on specific disciplines (e.g., PubMed for medicine,
   and PsycInfo for psychology). Patent data can be retrieved from
   specific data sources such as the United States Patent and Trademark
   Office [7], Google patents [8] and the database of the European Patent
   Office [9].

   More detailed information about these databases can be found in → the
   dedicated entry of this encyclopedia (Araújo, Castanha and Hjørland
   2020).

                                                            [top of entry]

3.2 Field delineation

   To produce a science map, we first need to individuate a set of
   publications that reasonably represent the target of the mapping. In
   bibliometrics, this step is often called field delineation. Field
   delineation is the collection of documents that are both relevant and
   specific for the purpose of the mapping (Zhao 2009).

   At this point, an important difference can be made between global and
   local maps of science. Global maps of science (also known as “atlases
   of science”) aim to map the whole science (Börner et al. 2012; Boyack,
   Klavans and Börner 2005; Boyack and Klavans 2019). To produce such
   maps, the main criteria is to maximize coverage. Local maps of science,
   on the other hand, focus on a limited portion of the scientific
   literature (Rafols, Porter and Leydesdorff 2010). Such a portion can be
   a scientific field, a specialty, a research topic, or the publication
   output of a university. In all these cases, the accurate selection of
   the target publications is a crucial step since an unrepresentative or
   wrong set of publications will produce a misrepresentation of the
   target.

   Following Zitt and colleagues, we distinguish three general strategies
   for field delineation: (A) rely on external formalized resources, such
   as ready-made science classifications; (B) create ad hoc information
   retrieval searches; (C) use network exploration resources (i.e.,
   science mapping itself) (Laurens, Zitt and Bassecoulard 2010; Zitt et
   al. 2019; Zitt and Bassecoulard 2006).

   The first strategy is based on ready-made classifications, such as the
   ones used by Web of Science or Scopus to classify their records. Other
   classificatory schemes are produced in institutional settings (e.g., by
   research evaluation agencies or by research councils) and, clearly, by
   libraries. Note that sometimes the journal, rather than the individual
   article, is the unit of classification, with the articles inheriting
   the category of the journals where they are published. Following this
   first strategy, representative literature is retrieved by using these
   ready-made classifications at different levels of granularity
   (scientific field, specialty, sub-area, etc.). An evident shortcoming
   of this strategy is that it heavily relies on the goodness of the
   chosen classifications.

   The second strategy is based on creating, usually in close interaction
   with domain experts, ad hoc searches to query the databases. These
   queries can potentially include any searchable part of the
   bibliographic records: words in titles and abstracts, keywords,
   authors, affiliations, journals, dates, references, and so on. A
   typical query combines a search for specialized journals and a lexical
   search in complement. Note that the starting queries can be refined,
   for instance by citation analysis. Once a core set of publications,
   journals or even key authors is determined, new records are added by
   following the citations (articles citing the core set) or the
   references (articles cited by the core set), in an iterative process.

   The third strategy relies on science mapping methods and, in
   particular, on clustering. The basic idea is to use bottom-up
   clustering techniques that group publications based not on a
   classificatory scheme, but on their reciprocal relations (for instance,
   their co-citation strength, see Section 4.1.2: The links in
   citation-based maps). Techniques of network analysis, as well as
   experts’ knowledge, are then used to select the relevant clusters. By
   iterating this procedure, an increasingly precise field delineation is
   obtained.

   All these approaches involve the double risk of losing relevant
   publications and introducing noise (not relevant publications) in the
   dataset (Zitt et al. 2019). In fact, there is no fit-to-all solution to
   field delineation. From an operative point of view, a good strategy is
   to combine recursively the different approaches, checking each time the
   set of retrieved publications and refining accordingly the queries (an
   example of this approach can be found in Chen 2017).

   However, it is important to remember that, from a theoretical point of
   view, there is no ground truth basis for defining research domains in a
   “purely objective” way. As the ongoing discussion about research areas
   definition and classification shows, research classification should be
   conceived as a social process involving multiple actors, from
   researchers to journals to research evaluation agencies, rather than as
   a static photograph of the structure of science. Classificatory schemes
   as well as the boundaries between areas are constantly negotiated and
   reshaped under the pressure of different social systems and
   infrastructures (Sugimoto and Weingart 2015). As these systems serve
   different purposes and are governed by different logics, frictions and
   inconsistences between the classificatory schemes they produce are to
   be expected (Åström, Hammarfelt and Hansson 2017). For instance, an
   article can be classified as belonging to research area X based on the
   institutional affiliation of its authors and to research area Y based
   on the topic of the journal where it is published. Even if field
   delineation is the first step in many bibliometric analyses, including
   science mapping, its theoretical stakes should not be underestimated.

                                                            [top of entry]

3.3 Data cleaning and pre-processing

   When the field delineation is completed and the datasets are retrieved
   from bibliographic databases, the data consist basically of large
   tables, in which each row corresponds to a publication and the columns
   represent the available meta-data of that publication (e.g., title,
   authors, abstract, publication year, journal, cited references, etc.).
   Retrieved data usually contain errors, for instance, misspelling of
   author names, errors in the cited references, journal titles, and so
   on. Cleaning the data is a pivotal step in the science mapping workflow
   because the quality of the results depends on the quality of the data.
   This task, however, can be highly time-consuming and can present
   difficult issues, such as the disambiguation of authors with homonym
   names and the merging of authors with multiple names (Strotmann and
   Zhao 2012).

   After the cleaning, the data can be pre-processed. They can be divided
   into different time sub-periods to carry out longitudinal studies (see
   Section 5: The representation of time in science mapping), or a portion
   of the retrieved data can be furtherly selected based on some measure,
   such as the most cited articles, the most productive authors, or the
   journals with the highest performance metrics.

                                                            [top of entry]

3.4 Network extraction

   In general, a network is a structure made of nodes (also called
   vertices) and links (also called edges). It can be represented as a
   graph or as a matrix. Networks are valuable tools to represent and
   study a great variety of natural and social phenomena, from the lineage
   of a family to patterns of contracts among firms, to the spreading of a
   virus (Barabási 2014).

   In science mapping, we are interested in those networks that can
   capture the structure of science at different levels and from different
   points of view. In fact, these networks are the basic structure on
   which science maps are built.

   From the same set of bibliographic records, it is possible to generate
   different networks, depending on the type of nodes and links we decide
   to focus on. The nodes will represent the unit of analysis of the final
   map, whereas the links will represent the type of relationship
   displayed.

                                                            [top of entry]

4. Types of science maps

   Science maps can be classified into different types depending on the
   kind of data, and hence the kind of network, they are based on. In
   principle, any feature of the scientific enterprise that can be
   represented in relational terms, i.e., as a network of nodes and links,
   can be used to generate a science map. In citation-based maps, the
   units of analysis (the nodes) are publications or aggregates of
   publications (e.g., journals or authors), and the relationships between
   them (the links) are citations or association measures based on
   citations (bibliographic coupling and co-citation). In term-based maps,
   the units of analysis are textual items (themes, keywords or terms) and
   the relationships are co-occurrence frequencies (e.g., the number of
   times two keywords are used together in a set of publications). In
   co-authorship maps, the units are the authors and the links are the
   number of co-authored publications. In interlocking editorship maps,
   the units are the journals and the links are the number of persons who
   are shared between the editorial boards of two journals). In addition
   to these, there are also science maps based on patents data and
   geographic maps of science, which will be the topic of Section 4.4.

                                                            [top of entry]

4.1 Citation-based maps

   4.1.1 The nodes in citation-based maps: publications and aggregates of
   publications

   In the most basic citation-based map, the nodes represent individual
   publications and the links the citations (reference-links) among them.
   An example of citation network is provided in Fig. 1, where it is
   visualized as a directed network in which nodes represent publications
   and arrows represent the reference-links (citations) between them. Some
   publications are both citing and cited (e.g., publication a), some
   publications are only cited (e.g., publication f), and some
   publications cite without being cited (e.g., publication e).

      Fig. 1: Example of citation network Figure 1: Example of citation
   network. Nodes represent document and arrows the citations between them

   The same information can be represented as an adjacency matrix, whose
   elements indicate whether pairs of nodes are connected (“adjacent”) in
   the network or not. When the publication in the row cites a publication
   in the column, the corresponding element in the matrix is 1, 0
   otherwise [10].

       a b c d e f g h
     a 0 1 1 1 0 0 0 0
     b 0 0 1 0 0 0 0 1
     c 0 0 0 0 0 1 1 0
     d 0 0 0 1 0 0 0 0
     e 1 0 1 0 0 0 1 0
     f 0 0 0 0 0 0 0 0
     g 0 0 0 0 0 0 0 0
     h 0 0 0 0 0 0 0 0

   Since publications are provided with meta-data, such as their authors
   or the journals in which they are published, it is possible to build
   aggregates of publications sharing the same meta-data (Radicchi,
   Fortunato and Vespignani 2012). By aggregating publications at a higher
   and higher level, we can reach higher units of the analysis and
   networks based on new types of nodes.

   To understand this mechanism, we show how to build a journal citation
   network (Leydesdorff 2004; McCain 1991) starting from the document
   citation network of Fig. 1. We start by coloring the nodes according to
   the journals where they are published, and the citation links according
   to the journal to which they point (Fig. 2).

      Fig. 2: Citation network with document-nodes colored based on the
       journal they were published in Figure 2: Citation network with
   document-nodes colored based on the journal they were published in. The
     color of the arrows corresponds to the color of the citing journal

   The journal citation network is obtained by substituting each article
   with its journal of publication and then using the journals as nodes of
   the network. A link between two journals is drawn when they exchange at
   least one citation. Note that in this new network, it is possible to
   provide links with weight, that is the number of citations that each
   journal receives from other journals (or from itself). In the previous
   network, there was not a proper weight but only an on/off relationship
   (presence of a reference-link or not). There are also some loops,
   produced by articles citing articles published in the same journal
   (these loops correspond to journal self-citations). The resulting
   journal citation network is shown in Fig. 3.

      Fig. 3: Example of journal citation network Figure 3: Example of
         journal citation network. Out-citations, in-citations, and
    self-citations between journals are colored, respectively, in green,
                             orange, and violet

   By the same aggregation process, we can construct author citation
   networks (e.g., McCain 1990; Radicchi et al. 2009), or reach higher
   units of analysis, such as institutions and even countries (e.g.,
   Glänzel 2001).

                                                            [top of entry]

4.1.2 The links in citation-based maps: direct citations, bibliographic
coupling, and co-citations

   Until now, we considered only citations as links in the citation
   network. The presence of a reference-link between two publications
   usually attests that they are somehow associated, for instance, that
   they share the same topic or research method (see Section 7.3: The
   meaning of citations). Maps in which the links are direct citations are
   called “direct-linkage” or “cross-citations” or “inter-citation” maps
   (Waltman and van Eck 2012). In science mapping, however, there are two
   other common techniques used to measure the relatedness or strength of
   association of publications (or their aggregates): bibliographic
   coupling (Kessler 1963) and co-citation (Small 1973; Marshakova 1973).

   In bibliographic coupling, a link between two publications is
   established when they share at least one publication in their
   respective bibliographies, i.e. when they have at least one reference
   in common. The weight of the link is proportional to the number of
   shared references. Co-citation is, in a certain sense, the reverse of
   bibliographic coupling. In a co-citation network, a link is drawn
   between two publications if they are cited together at least by a third
   publication, and the weight of the link (the so-called co-citation
   strength) is proportional to the number of common citations they gather
   (i.e., the number of co-citations).

   Fig. 4 shows the bibliographic coupling network generated from the
   citation network of Fig. 1. Note that publication f has no link with
   other publications because, in our example, it did not have any cited
   reference (i.e., no out-going link).

   Fig. 4: Bibliographic coupling network generated based on the citation
    network in Fig. 1 Figure 4: Bibliographic coupling network generated
   based on the citation network in Fig. 1. Nodes are publications, links
   show bibliographic coupling between publications. Note that publication
    f has no bibliographic coupling links with other publications in the
                                   network

   Fig. 5 shows the co-citation network. Analogously, publication e has no
   link with other publications because it had no citations (i.e., no
   incoming link).

   Fig. 5: Co-citation network generated based on the citation network in
    Fig. 1 Figure 5: Co-citation network generated based on the citation
      network in Fig. 1. Nodes are publications, links show co-citation
   between publications. Note that publication e has no co-citation links
                   with other publications in the network

   Note that citations are directed links because we can distinguish
   between a sender and a receiver of the citation. In network theory
   terminology, they are called arcs (Wasserman and Faust 1994). In
   contrast, bibliographic coupling and co-citation links are un-directed
   links because bibliographic couplings and co-citations are symmetrical.
   In network theory terminology, they are called edges (Wasserman and
   Faust 1994).

   Starting from a matrix whose rows are the citing publications and
   columns are the cited publications, it is possible to derive by matrix
   algebra operations the two co-occurrence matrices representing the
   bibliographic coupling network or the co-citation network (Van Raan
   2019).

   Note that direct citations, bibliographic coupling, and co-citation
   analysis can be applied not only to single publications, but also to
   aggregates of publications. For instance, if authors are used as units
   in co-citation analysis, we have author co-citation analysis (e.g.,
   White and McCain 1998; Kreuzman 2001), if journals are used as units,
   we have journal co-citation analysis (e.g., McCain 1991). By combining
   in this way methods and units of analysis, several types of
   bibliometric networks can be generated (Waltman and van Eck 2014). Fig.
   6 shows an example of co-citation map using individual publications as
   units of analysis.

   Fig. 6: Example of co-citation map (click to enlarge) Figure 6: Example
     of co-citation map (click to enlarge). The field mapped is analytic
   philosophy. The nodes represent documents. A link is drawn between two
   nodes when they are co-cited. Size of the nodes is proportional to the
   number of citations gathered by the document; thickness of the links is
   proportional to the co-citation strength; nodes’ colors indicate the
   cluster to which they are attributed by the clustering algorithm. Nodes
     are positioned according to their co-citation strength, so that the
   more frequently they are cited together, the closer they appear on the
             map. The visualization was produced with VOSviewer.

                                                            [top of entry]

4.1.3 Normalization

   Usually, the raw frequencies of citations, bibliographic couplings or
   co-citations are not directly used as input of the visualization
   process that leads to the final form of the science map. This is
   because the raw frequencies do not properly reflect the similarity
   between the items (van Eck and Waltman 2009). To understand why,
   suppose that department AA and department BB publish comparable
   articles, but department AA, having more researchers than department
   BB, publishes 10 times more articles. Other things being equal, one
   would expect that the articles from department AA will receive in total
   about ten times as many citations as the articles from department BB
   and thus to have about ten times as many co-citations with other
   departments in the same discipline as department BB. However, the fact
   that department AA has more co-citations with other departments than
   department BB does not indicate that it is more similar to other
   departments than department BB. It only shows that department AA
   publishes more articles than department BB because it is bigger. To
   correct such a distortion due to the different size of the units of
   analysis, we need to transform the raw co-citation scores, adjusting
   them by some stable quantity, an operation called “normalization” (Eck
   et al. 2010).

   In science mapping, similarity measures are used to perform such a
   normalization. Following Ahlgren and colleagues, we distinguish two
   main approaches to calculating these similarities: the local or direct
   and the global or indirect (Ahlgren, Jarneving and Rousseau 2003). In
   the former approach, the focus is on the co-occurrence frequencies of
   the items, that are then adjusted for different quantities. Examples
   include the cosine (the most popular one), the association strength
   (used in VOSviewer, see the Appendix), the inclusion index, and the
   Jaccard index (Eck and Waltman 2009). In the latter approach, the focus
   is on the way two items are related to all the other items in the
   dataset under study. This means that what is compared to obtain the
   similarity between two items are their entire profiles, i.e., the
   entire rows (or columns) of the co-occurrence matrix, and not their
   simple co-occurrence frequency. Pearson’s correlation coefficient (r),
   the cosine [11], and the chi-squared distance are examples of indirect
   similarity measure based on the global approach (McCain 1990; White and
   Griffith 1981). However, the reliability of Pearson’s r as a similarity
   measure has been contested (Ahlgren, Jarneving and Rousseau 2003; Eck
   and Waltman 2008).

   In general, there is no agreement on what the best normalization
   procedure is and on what similarity measures should be used in science
   mapping (Boyack and Klavans 2019; Leydesdorff 2008; Van Raan 2019). In
   the scientometric community, the discussion still goes on after 35
   years (e.g., Zhou and Leydesdorff 2016). However, it is important to
   remember that, depending on the chosen procedure, the resulting science
   maps can be rather different (Boyack, Klavans, and Börner 2005).

                                                            [top of entry]

4.1.4 Visualization

   Visualization is the step in the science mapping process in which the
   information contained in the network is displayed in a visual layout
   comprehensible to human understanding. Following Waltman and van Eck
   (2014), we distinguish two basic types of visualizations: graph-based
   and distance-based. They are not the only approaches available but are
   probably the most common in science mapping [12].

   In graph-based visualization, the network is visualized as a graph made
   of nodes and edges (Fig. 1, 2, 3, 4, and 5 are examples of graph-based
   visualizations). The edges (links between nodes) are displayed to
   indicate the relatedness of nodes. The most common technique for
   creating such graphs are force-directed graph drawing algorithms, such
   as the Kamada and Kawai and the Fruchterman and Reingold (Chen 2013).

   To understand the underlying mechanism of these algorithms, imagine the
   network as a physical system, in which the nodes are little balls
   electrically charged and the links are springs that connect them. The
   electric charge creates a repulsive force between the balls,
   counterbalanced by the attractive force generated by the springs. The
   algorithms basically simulate the network as such a physical system
   made of balls and springs and apply two opposite forces to the nodes,
   one attractive (proportional to the weight of the link between two
   nodes) and the other repulsive, until the system comes to a state of
   mechanical equilibrium. The final layout is the one corresponding to
   such an equilibrium state. Note that several configurations are
   possible since usually there is no unique equilibrium state.

   Force-directed graph drawing algorithms are implemented in software for
   network analysis and visualization, such as Gephi [13] and Pajek [14].
   An example of a graph-based science map created with Pajek and
   visualized with the Kamada and Kawai algorithm can be found in
   (Leydesdorff and Rafols 2009, fig. 4). An example of a graph-based
   science map created with Gephi can be found in (Weingart 2015, fig. 4)

   The other visualization approach is distance-based. In distance-based
   visualizations, the distance of nodes on the map reflects their
   similarity, so that similar nodes are placed closer and dissimilar
   nodes far away. Note that in graph-based visualization, on the other
   hand, the position of the nodes is not directly related to their
   similarities, but it is a product of the “pull and push” mechanism of
   the drawing algorithm. In distance-based visualizations, links can be
   shown or not.

   Distance-based visualizations are conceptually closer to geographic
   maps than graph-based visualizations. Geographic maps represent
   relationships in space by placing objects that are close in the
   physical space near on the maps and objects that are distant in the
   physical space further apart on the map. Distance-based maps have the
   same goals, but instead of being based on physical distances, they are
   based on similarities between objects.

   To produce a distance-based visualization, therefore, the similarities
   between the nodes must be transformed into distances [15]. The distance
   matrix that is thus obtained is conceptually analogous to the table
   reporting the distances between pairs of cities in a geographic atlas.
   The task consists of reconstructing from the relative distances the
   positions of the items on the map, i.e., in finding the coordinates of
   the items in a two-dimensional space starting from their reciprocal
   distances.

   To fulfill this task several statistical techniques have been
   developed. The most important belong to the family of multi-dimensional
   scaling (MDS) methods (Borg and Groenen 2010). They aim to find the
   coordinates of the points in a lower-dimensional space (usually, a
   plane) such that the distances of the points on the lower-dimensional
   space reflect as accurately as possible the original distances of the
   points. The average difference between the distances on the map and the
   original distances tells us how much the map distorts the original
   configuration. The amount of distortion is used to calculate the stress
   of the map. The various algorithms for MDS essentially adjust the
   positions of the points until a minimum value of stress is reached
   [16].

   It is important to underlie that distance-based visualizations can be
   rotated, flipped, and mirrored. Since the output of MDS is not a set of
   fixed coordinates but a set of relative distances between the points,
   any geometrical transformations that leave them unaltered can be
   applied. An example of distance-based visualization can be found in
   (White and McCain 1998, fig. 2).

   When interpreting the output of MDS, that is usually a two-dimensional
   map, is it very important to be aware that the algorithms can generate
   visual artifacts, i.e., structures or patterns that are visible on the
   map but that are not present in the original data. For instance, Eck
   and co-authors (2010) note that variants of MDS tend to produce
   quasi-circular layout when used on big matrices and that they tend to
   locate items with a high number of co-occurrences toward the center of
   the map.

   However, the trickiest artifacts have to do with the issue of
   dimensionality reduction, i.e. with the very core of MDS. Imagine that
   we have four points in a three-dimensional space, each one located at
   the same distance from the others, like the vertices of a three-sided
   pyramid, all sides of equal length (Borg and Groenen 2010, chap. 13.3).
   When we try to place the four points in a two-dimensional plane, we can
   respect the equal distance only for three points out of four. The
   fourth point will lie almost at the center of a bi-dimensional triangle
   (as if we were looking at the pyramid from the above) so that its
   distance from the other points will always be shorter than the
   distances between the three points themselves [17]. Without knowing the
   original three-dimensional structure and by looking only at the
   two-dimensional map, we would wrongly conclude that the fourth point is
   closer to the other three. The wrong conclusion raises from the fact
   that the two-dimensional map necessarily distorts the three-dimensional
   structure because it suppresses the third dimension, which however
   carries essential information (the equal distance between the fourth
   point and the other three points). By losing such information, it
   introduces an artifact. Interestingly, MDS can generate also the
   opposite artifact: points that are placed far away in the map can be
   however connected by “tunnels” in hidden dimensions (Leydesdorff and
   Rafols 2009). Imagine a paper sheet with two distant points on it: if
   we bend the sheet, we can make the two points very close in the third
   dimension, realizing a “tunnel” between them. If we consider only their
   distance on the two dimensions of the sheet, however, they will appear
   to be distant.

   In sum, dimensionality reduction techniques do allow us to obtain
   significant insights into the structure of bibliometric networks
   because they reveal the main features of such a structure. At the same
   time, since those features may lie in more than two dimensions, one
   must be aware of the inevitable distortions introduced by the
   dimensionality reduction itself.

                                                            [top of entry]

4.1.5 Enriching the map

   With the visualization of the network, we reach the basic form of the
   science map. At this point, the interpretation of the map can already
   begin. However, it is common to enrich the basic form by displaying
   further information on it.

   A first option is to use the size of the nodes and the width of the
   links to convey their properties. In a co-citation map, for instance,
   the size of the nodes can be used to represent the number of citations
   collected by the units of analysis (publication, journal, author, etc.)
   and the links can be drawn thicker or darker to express the strength of
   the connections (e.g., number of co-citations between two nodes).
   Alternatively, the size of the nodes can be used to represent the
   centrality of the nodes, using one of the different notions of
   centrality defined in network theory. The most common include degree
   centrality, betweenness centrality, closeness centrality, and
   eigenvector centrality (Wasserman and Faust 1994). The degree
   centrality of a node is proportional to the number of its links so that
   it is higher for highly connected nodes. Betweenness is a measure of
   brokerage of gatekeeping, that is of how much a node is an “obligatory
   passage” in the network. In science mapping, it is sometimes used to
   measure interdisciplinarity (Leydesdorff 2007). Closeness measures how
   close a node is to the other nodes in the network. Nodes with high
   closeness are the ones that can be reached with few steps [18] from any
   other node in the network. Lastly, eigenvector centrality is a measure
   of the influence of a node in the network. The underlying idea of
   eigenvector centrality is that the influence of a node depends on the
   influence of the nodes to which it is connected, so that a node
   connected with other central nodes increases its centrality.

   A further option to enrich the map is to use colors to distinguish
   visually different clusters of nodes. Networks typically display an
   internal organization in clusters or communities, that is groups of
   highly interconnected nodes (Radicchi, Fortunato and Vespignani 2012).
   In distance-based visualizations, clusters result as sets of close
   points, separated from other clusters by blank space. The techniques of
   cluster analysis can be used to detect such communities. One common
   method is hierarchical agglomerative clustering (Chen 2013). All the
   units of the map (the nodes) begin alone in groups of size one, then,
   at each iteration of the clustering algorithm, similar groups are
   merged, until all the nodes belong to one super-cluster. A resolution
   parameter controls the granularity of the clustering, i.e., the size of
   the communities. Different agglomerative methods are characterized by
   the definition of distance between clusters they use and by the metric
   employed to calculate the distances (there are lots of options besides
   the familiar Euclidian distance). In single-linkage clustering, the
   distance between two clusters is set equal to the distance between
   their closest nodes. In complete-linkage clustering, on the other hand,
   it is equal to the distance between the most distant nodes in the two
   clusters. Lastly, in centroid linkage clustering, it is equal to the
   distance between the “centers” or average points (centroids) of the
   clusters. These clustering procedures, however, are only a small
   fraction of the available techniques and algorithms for clustering and
   community detection. In the last years, the techniques based on
   modularity, originally developed in physics, are becoming increasingly
   popular (Thijs 2019) [19].

   Clusters can be labelled automatically by extracting terms from the
   titles, abstracts, and keywords of the publications in the clusters
   (Chen 2006) (see Section 4.2.2: Co-word analysis based on automatically
   extracted terms). Each cluster is thus provided with a word-profile and
   its most relevant words can be superimposed on the map to facilitate
   the interpretation of the clusters (Chen, Ibekwe-SanJuan and Hou 2010).

   A last method for enriching the science map is to use the overlay
   (Rafols, Porter and Leydesdorff 2010). In science overlay maps, the
   results of the mapping are laid over a background, that can be, for
   instance, a global map of science. The background serves as a reference
   system that facilitates the interpretation of the results. For
   instance, the scientific output of a university can be overlaid on a
   global map of science to get an insight into the scientific coverage of
   the university or its impact (see Section 8: Science maps and science
   policy).

                                                            [top of entry]

4.2 Term-based maps

   Term-based science maps are used to extract and visualize the
   intellectual content of a corpus of publications based on the analysis
   of the terms associated with those publications (Börner, Chen and
   Boyack 2005). These terms can be the keywords or descriptors of the
   publications, or they can be extracted automatically from titles and
   abstracts or even the full texts of articles. Term-based science maps
   allow to explore at a fine-grained level the intellectual content of
   publications since titles, abstracts, and keywords are meant to report
   the main topics, concepts, and results of scientific articles (He 1999;
   Van Raan and Tijssen 1993).

   An important advantage of term-based mapping compared to citation-based
   mapping is that it applies to fields characterized by the scarce
   presence of citations, such as applied research and technology (Callon
   et al. 1983).

   Depending on the method by which the terms characterizing a publication
   are extracted, we can distinguish two types of term-based maps. Classic
   co-word analysis, developed by Callon and colleagues, is based on
   human-assigned keywords. Natural language processing (NLP)-based
   co-word analysis, on the other hand, is based on terms that are
   automatically extracted from the texts by natural language processing
   techniques.

   Independently of the method, however, co-word analysis rests on some
   assumptions that have been contested. The main one is that words and
   terms have a stable meaning across fields and over time so that they
   can be used as reliable proxies of scientific concepts and ideas
   (Leydesdorff 1997). However, this assumption may be false, and
   historians of science have shown that the phenomenon of meaning-shift
   indeed occurs in science (Kuhn 2000). A possible reply to this
   criticism is that words in co-word analysis are not used as carriers of
   meaning but as simple links between texts (Courtial 1998). From an
   operative point of view, meaning shift can be avoided by restricting
   the time scope of the analysis to a relatively short period and
   semantically homogeneous areas (Mutschke and Quan-Haase 2001).

                                                            [top of entry]

4.2.1 Classic co-word analysis and the strategic diagrams

   The first term-based maps were developed in the 1980s by a team of
   sociologists of science based at the Centre de sociologie de
   l’innovation at the École des mines in Paris. They were designed to
   study the interaction between scientific knowledge and technological
   innovation, and, more generally, the relations between science and
   society (Callon et al. 1983). It is important to point out that the
   theoretical foundation of co-word analysis developed by Callon and
   others lies in the tradition of the science and technology studies, and
   in particular in the actor-network theory developed by Bruno Latour and
   others (Callon, Law and Rip 1998; Latour 2003). However, as a mapping
   method, co-word analysis can be employed without endorsing such a
   theoretical framework.

   Callon and colleagues focused in particular on the descriptors employed
   by documentation services to index the content of scientific and
   technological publications (Callon, Courtial and Laville 1991). The
   method of co-word analysis, then, consists first in collecting all the
   descriptors of the target documents. After a process of cleaning, in
   which variants and synonyms are merged and not relevant descriptors
   removed (see Section 3.3: Data cleaning and pre-processing), the
   co-occurrence frequency of each pair of descriptors is calculated. Two
   descriptors co-occur if they are used together in the description of a
   single document. A co-occurrence matrix reporting the co-occurrence
   frequencies of each pair of descriptors is thus produced, and the raw
   values are then normalized (see Section 4.1.3: Normalization).

   In the classic co-word methodology, as described by Callon and
   colleagues, the visualizations produced by co-word analysis are
   strategic diagrams (sometimes called cognitive maps), which are a
   special kind of science map that should not be confused with
   distance-based visualizations. To create a strategic diagram, clusters
   of frequently co-occurring descriptors or keywords are created by some
   clustering technique. Such clusters are called themes and are described
   by two characteristics: centrality and density. The centrality of a
   cluster is given by its external link, i.e., the number of links it has
   with other clusters. The density of a cluster is defined as the
   proportion between the links that are present in the keywords cluster
   and the number of possible links. Each theme is thus defined by two
   variables, centrality and density, that constitute its coordinates in
   the strategic diagram (He 1999). Then, the strategic diagram is divided
   into four quadrants (Mutschke and Quan-Haase 2001). The themes in the
   first quadrant are characterized by high density and high centrality
   and constitute the mainstream of the scientific field. The themes in
   the second quadrant, characterized by high centrality and low density,
   are unstructured themes that may be described as “bandwagon” themes.
   The themes in the third quadrant are characterized by high density and
   low centrality: they have a well-developed maturity but lacks ties to
   other themes in the field. They are the “ivory tower” themes. Lastly,
   the themes in the fourth quadrant, characterized by low centrality and
   low density, comprise both topics that are fading away and new topics
   that are emerging. In longitudinal analysis, the trajectory of a theme
   can be followed through the quadrants of the strategic diagram. An
   example of a strategic diagram can be found in (Cobo et al. 2011a, fig.
   6).

   The method of co-word analysis based on descriptors or other kinds of
   keywords may suffer from the so-called “indexer effect” (Law and
   Whittaker 1992). → Indexing may reflect the prejudices or points of
   view of the human indexers and may be inconsistent between different
   indexers or change over time. The indexer effect is a problem common to
   all human-based classifications. The study of research classification
   systems reveals that they cannot be taken at face value as they are the
   result of complex disciplinary negotiations in which both intellectual
   and academic interests are involved [20].

                                                            [top of entry]

4.2.2 Co-word analysis based on automatically extracted terms

   The indexer effect can be partially avoided by recurring to the
   automatic extraction of terms from titles, abstracts, or even the full
   texts of articles. However, even if this method does not rely on the
   choices of an indexer, it is not free of human intervention. In fact,
   it shifts from the choices of the indexer to the choices of the authors
   of scientific publications, who decide what words should be included in
   the titles and abstracts. The issue of meaning shift, therefore, is not
   solved.

   NLP techniques are used to extract terms from the textual data (Taheo
   2018). In general, terms are n-grams, i.e., sequences of n items
   (usually words). A special category of n-grams are noun-phrases, i.e.,
   sequences that consist exclusively of nouns and adjectives and that end
   with a noun (e.g., text mining, network analysis). Algorithms for term
   detection usually comprise several steps: first, the text is split up
   into sentences and sentences split up into single words (tokenization),
   then so-called stop-words are removed (words such as “and”, “or”,
   etc.), and the remaining words are assigned to a part of speech, such
   as verb, noun, adjective, etc. (part-of-speech tagging). Noun-phrases
   are then identified, and, lastly, variants (e.g., plurals) are merged
   into one form. Once the list of noun-phrases is obtained, a fraction of
   them is retained. A common strategy is to select only the most relevant
   noun-phrases. It is important not to confuse relevance with frequency:
   frequency is a brute measure of the occurrences of a term, whereas
   relevance can be conceived as a measure of how specific a term is
   (Spärck Jones 1972). To understand the difference between the two, take
   a term such as method. In the scientific literature, it is denoted by a
   high frequency; however, it is scarcely relevant to characterize a
   scientific article, since is occurs probably in most scientific
   articles. Knowing that an article contains the term method is a very
   thin indication of its content. Because of its being too generic,
   method therefore has a low relevance. A term such as cardiovascular, on
   the other hand, is less frequent than method but conveys more
   information about the specific topic of an article. Therefore, it has a
   high relevance. Relevance scores serve to discriminate generic from
   specific terms. A common metric used in text mining to calculate
   relevance scores is TF-IDF, short for “term frequency-inverse document
   frequency” (Salton and McGill 1983). The underlying idea is that the
   relevance of a term is proportional to its occurrences and inversely
   proportional to the number of documents in which it occurs. Terms that
   occur very frequently in a few documents will score higher on TF-IDF
   than terms that occur very frequently in most of the documents. From
   this basic idea, more refined metrics to calculate the TF-IDF have been
   developed (Thijs 2019).

   After the selection step, the number of documents in which each pair of
   terms appear is calculated and the corresponding co-occurrence matrix
   generated. The process is then the same as citation-based maps.
   Usually, the raw co-occurrence frequencies are normalized (see Section
   4.1.3: Normalization), and then the term map is obtained in the form of
   a distance- or graph-based visualization (see Section 4.1.4:
   Visualization). Further techniques, such as clustering, can be applied
   to enrich the map (see Section 4.1.5: Enriching the map). Note that
   term-based maps thus obtained are different from the strategic diagrams
   produced by classic co-word methodology. They represent the topics
   recurring in the set of publications analyzed, rather than the
   properties of their themes.

   An example of term-based map is shown in Fig. 7.

   Fig. 7: Example of term-based map (click to enlarge) Figure 7: Example
       of term-based map (click to enlarge). The field mapped is human
    geography. The nodes represent the most occurring terms in the field.
   Size of the nodes is proportional to the term’s occurrence. A link is
   drawn between two terms if they co-occur in the same title or abstract.
     The thickness of the link between two nodes is proportional to the
        number of co-occurrences of the terms. The color of the nodes
     corresponds to the cluster they are attributed to by the clustering
          algorithm. Nodes are positioned in the map based on their
   co-occurrences, so that terms frequently occurring together are closer
         on the map. The visualization was produced with VOSviewer.

                                                            [top of entry]

4.3 Other network-based maps

   Besides citation networks and term networks, several other networks can
   be used to generate science maps. In this section, we briefly present
   co-authorship networks and interlocking editorship networks.

                                                            [top of entry]

4.3.1 Co-authorship networks

   Co-authorship networks are science maps in which the nodes represent
   authors and the links the relation of co-authorship, i.e., the number
   of articles authored together by each pair of authors (Newman 2001).
   Since co-authorship usually implies a strong relationship of
   collaboration (Katz and Martin 1997; Liu et al. 2005), co-authorship
   networks are used to reconstruct and investigate the social networks of
   researchers, the so-called “invisible colleges” (Crane 1972). It must
   be remembered, however, that co-authorship is only a proxy of
   scientific collaboration and that some type of collaborative work
   occurring in research (e.g., the work of laboratory technicians) do not
   lead automatically to the authorship (Laudel 2002). More generally, the
   practice of authorship and the requirements for being awarded
   authorship varies in different areas (Larivière et al. 2016). Further
   issues that complicate the interpretation of co-authorship data are
   “ghost” and “honorary” authorship, as well as the phenomenon of
   “hyper-authorship” (Cronin 2001). Especially in bio-medical fields,
   there is evidence that sometimes scientists are included as co-authors
   of articles even if they did not contribute to the research process
   (“gift” or “honorary” authorship), while others are denied legitimately
   earned authorship (“ghost” authorship) (Wislar et al. 2011). Honorary
   authorship can artificially inflate the relevance of some researchers
   in the co-authorship network, whereas the ghost authors remain simply
   invisible to standard co-authorship analysis. Furthermore, in some
   areas such as high-energy physics and again biomedicine, the last years
   have witnessed massive levels of co-authorship. Cronin has coined the
   term hyper-authorship to describe such a growing phenomenon of
   publications with hundreds, if not thousands of co-authors. For
   instance, in 2015, a publication in high-energy physics counted 5000
   co-authors. Hyper-authorship does not only challenge the standard
   conception of authorship but also raises several issues about
   responsibility and accountability, which have been widely discussed by
   editors of biomedical journals (see e.g., ICMJE 2019). The presence of
   hyper-authorship is an important factor that must be considered when a
   field is investigated by of co-authorship networks.

   In sum, co-authorship networks are useful tools to investigate
   scientific collaboration, but, since they are based on formal
   authorship, they should be interpreted in the light of detailed
   knowledge of the authorship practices of the area under investigation,
   taking into consideration also possible distortions due to ghost,
   honorary and hyper-authorship.

                                                            [top of entry]

4.3.2 Interlocking editorship networks

   Interlocking editorship is a method to map relationships between
   journals. Two journals are connected in the interlocking editorship
   network when they have at least one member of the editorial board in
   common (Baccini and Barabesi 2010). The editors of a scientific journal
   play a relevant role as “gatekeepers” of scientific disciplines since
   they manage the peer review process and make the final decision on the
   publication of articles (Crane 1967). Therefore, interlocking
   editorship networks can be used to reveal groups of journals whose
   editors endorse similar policies. Interlocking editorship networks seem
   to be highly correlated with journal co-citation networks, showing that
   similar editorial policies may reflect similar intellectual approaches
   to the discipline (Baccini et al. 2019).

                                                            [top of entry]

4.4 Other types of science maps

   In a broader sense of the term, we can include into the category of
   science maps also other visual representations of science that are not
   directly based on networks of scientific publications or that integrate
   network data with other types of data. Maps based on the analysis of
   patents belong to the first category and geographic maps of science to
   the second.

                                                            [top of entry]

4.4.1 Maps based on patents data

   Several maps can be generated from the analysis of patents, which are
   especially interesting for studying the dynamics of technology systems
   and the interaction between science and technology (Jaffe and
   Trajtenberg 2002). A first kind of patent map is based on the patents’
   meta-data stored in patent databases. Patents, like publications, have
   several meta-data, such as the applications, the region where a patent
   is in force, the classification category, the application year, etc.
   Moreover, patents frequently include references to the scientific
   literature and other patents as well. All these meta-data can be used
   to generate networks of patents or networks of patent features
   (Federico et al. 2017). For instance, Boyack and Klavans created a map
   of patents based on the International Patent Classification (IPC). The
   map shows the relations between patents based on their
   co-classification: patents that are classified in the same category
   form clusters (Boyack and Klavans 2008). Other patent maps can be
   generated based on the citation network of patents, applying the
   equivalents of the direct linkage, bibliographic coupling, and
   co-citation methods to patents (Wartburg, Teichert and Rost 2005).
   Analyzing the references to scientific publications contained in
   patents allows tracing the links between scientific knowledge and
   technological applications (Meyer 2000), whereas, by studying the
   scientists that are both authors of scientific publications and
   inventors of patents, it is possible to map the overlap between
   scientific and technological literature (Murray 2002). In the last
   years, text-mining techniques (see Section 4.2.2: Co-word analysis
   based on automatically extracted terms) have increasingly been applied
   to patent mapping (Ranaei et al. 2019). These methods allow us to
   automatically extract keywords from patent documents and then built
   patent maps or term-maps of patents (Lee, Yoon and Park 2009; Tseng,
   Lin and Lin 2007).

                                                            [top of entry]

4.4.2 Geographic maps of science

   The science maps we presented so far focused on the abstract spaces of
   science, such as citation, term, and collaboration spaces. Classic
   science maps aim at visualizing patterns and trajectories occurring in
   these abstract dimensions. Science, however, is also a concrete
   activity occurring in specific places on our planet (Finnegan 2015). In
   fact, science is produced in geographic sites that are not equally
   distributed on the Earth but are concentrated in few, highly developed
   areas. From those sites, scientific knowledge travels, as publications
   and researchers move around the globe. Geographic maps of science aim
   at describing the spatial diffusion of scientific activities and the
   circulation of scientific knowledge in the geographic space. They are a
   key research topic in spatial scientometrics (Frenken, Hardeman and
   Hoekman 2009) and an important tool in the geography of science
   (Livingstone 2003). By showing the unequal spatial distribution of
   science and research in different countries, they offer interesting
   insights into the structure of the global research system (Wichmann
   Matthiessen, Winkel Schwarz and Find 2002).

   Geographic maps of science are created by locating on a geographic map,
   e.g., a map of the Earth, the nodes of the network we focus on. For
   instance, the authors of a co-authorship network can be placed on the
   map based on the coordinates of their research institutions. Or a
   network of cities collaborating in the production of scientific papers
   can be constructed and plotted on a map (Leydesdorff and Persson 2010).
   Or citation flows between universities can be geographically visualized
   (Börner et al. 2006). The tool CiteSpace (see the Appendix) provides a
   specific utility to generate geographic maps of science.

                                                            [top of entry]

5. The representation of time in science mapping

   There are different options to include the dimension of time into
   science maps. A first option consists in longitudinal mapping (Cobo et
   al. 2011a; Petrovich and Buonomo 2018; Petrovich and Tolusso 2019):
   based on the publication year of the bibliographic records, subsets of
   publications belonging to different timespans are created and each of
   them is mapped separately. Note that any mapping technique can be used,
   from co-citation analysis to co-word analysis. Each map will represent
   a sort of “photograph” of the field under investigation in a certain
   timespan. The sequence of maps allows visualizing the temporal dynamics
   of the field. A second option consists in representing on the same map
   the trajectories of the units that change their relative position is
   subsequent maps (White and McCain 1998). A third option is animating
   the map: instead of a static visualization, a short movie is created
   interpolating the layouts of the network in different moments
   (Leydesdorff and Schank 2008).

   The first maps including the temporal dimension, however, used a
   timeline to represent time. Garfield called them “historiographs”
   (Garfield 2004). In the timeline-based approach, each node of the
   network (classically, a publication in a citation network) is linked to
   a specific point in time (e.g., the publication year). The
   visualization, then, uses two dimensions: the vertical one is the
   timeline, whereas the horizontal one is used to represent the
   relatedness of the items (Waltman and van Eck 2014). The result is a
   citation network spread over a timeline. Garfield tested the validity
   of the historiographs as tools for reconstructing the history of
   science by comparing the narration of the discovery of the DNA written
   by Asimov with the historiograph based on the bibliographies of the
   corresponding publications (Garfield 1973). He found a good overlap
   between the two: the key events in the discovery according to Asimov
   appeared also in the historiograph.

   Alluvial maps are another form of timeline-based visualizations.
   Starting from different phases in the evolution of a network, the
   networks relative to each phase are divided into different clusters,
   and then the trajectories of corresponding clusters in subsequent
   networks are visualized as a stream. The fusions and fissions of
   clusters over time is visualized as multiple streams flow over time
   (Rosvall and Bergstrom 2010) [21].

   By combining co-citation mapping and temporal visualization, an amazing
   visualization of the temporal development of the journal Nature in the
   last 150 years was recently produced (Gates et al. 2019) [22].

                                                            [top of entry]

6. Interpreting a science map

   Interpreting a science map means linking the visual and geometrical
   properties of the map to substantive features of the mapped area or
   field. For instance, clusters of co-cited publications can be mapped to
   scientific sub-specialties or research topics, bibliographic coupling
   networks can be interpreted as the research fronts of scientific
   specialties, co-authorship networks as invisible colleges of
   scientists, and clusters of journals sharing many editors as structures
   of academic power. The interpretation of science maps typically
   involves close interaction with experts of the mapped domain, i.e.,
   experienced researchers that have a deep, albeit qualitative, knowledge
   of the structure of the target field (Tijssen 1993). Good science maps,
   however, should not be mere quantitative counterimages of the
   qualitative knowledge of the domain experts. They should provide also
   new insights and useful knowledge for science policy purposes.

   An important aspect to consider in the interpretation is the level of
   analysis of the science map, i.e., the units of analysis and the type
   of relationship displayed by the map. Units and relations do not only
   affect the scale of the map, but also the dimension of the scientific
   enterprise that is captured. Term-based maps and citation-based maps
   using the document as unit of analysis highlight the epistemic or
   cognitive dimension of science, what philosophers of science call the
   “context of justification” (Lucio-Arias and Leydesdorff 2009). They
   show the shared epistemic base of a field (Persson 1994). However, they
   can overemphasize the stability of scientific knowledge, overshadowing
   the continuous social negotiation of scientific claims (Knorr-Cetina
   2003). Co-authorship maps. author co-citation analysis, and
   interlocking editorship maps, on the other hand, shed light on the
   social network underlying science, i.e., the “context of discovery” in
   philosophical terms. When the journal is selected as unit of analysis,
   the communication system is highlighted (Cozzens 1989). Hence, the
   different methodologies of science mapping offer a partial
   representation of the multi-dimensional nature of science and
   scholarship, that should be considered during the interpretative phase.

   General theories and models of the structure and dynamics of science
   can also help in the interpretation of science maps, providing general
   interpretative insights (Boyack and Klavans 2019; Chen 2017;
   Scharnhorst, Börner and Besselaar 2012). At the same time, however, it
   is pivotal to consider the specific academic and epistemic cultures of
   the field under study. The interpretation of a science map of a social
   scientific area, for instance, cannot be based on exactly the same
   concepts than the interpretation of a science map of a biomedical area,
   as the social sciences and biomedicine differ in terms of research
   methods, epistemic culture, specialized terminology, use of the
   references, centrality of the journal system, and so on.

   The humanities are a good case in point to highlight the importance of
   the specificity of research areas. Science mapping and, more generally,
   scientometrics and bibliometrics have mainly focused on the sciences
   since the times of Price and Garfield (Franssen and Wouters 2019).
   Bibliometric methods such as citation analysis were tailored to the
   citation norms and practices of the sciences. In the humanities,
   however, citations are frequently used not only to refer to other
   scholars’ work but also to point out sources and primary materials, the
   equivalent of experimental data for the sciences (Hellqvist 2009).
   Negative or contradictory citations of the works of other scholars are
   relatively more common than in the sciences. In fields such as
   philosophy, where argumentation is the key epistemic practice, critical
   citations play a central role (Petrovich 2018). These field-specific
   citation practices must be considered in the interpretation of
   citation-based science maps of humanistic areas (Hammarfelt 2016).
   Moreover, publications in the humanities frequently do not target
   (only) fellow scholars, but also the wider public audience (Nederhof
   2006). This changes the level of specialized and standardized
   terminology used and, consequently, affect the capacity of term-based
   science maps to capture themes and topics [23]. To these interpretive
   caveats, one should add the limitations of the existing databases to
   adequately capture publications in the humanities, as they are often
   published as monographs and in national languages (Hammarfelt 2017).

                                                            [top of entry]

7. Science maps and the philosophy of science

   In this section, we deal with some epistemological and sociological
   topics related to science mapping. We start by asking in what sense
   science maps offer objective representations of science, then, we
   discuss the difference between the published side of science and
   science in the making, and, lastly, we examine in more detail the
   meaning of citations.

                                                            [top of entry]

7.1 On the objectivity of science maps

   Are science maps an objective representation of the structure and
   dynamics of science? Clearly, the answer greatly depends on the
   definition of objectivity we endorse (Daston and Galison 2007; Reiss
   and Sprenger 2017).

   In the previous sections, we saw how the creation of a science map
   involves several methodological and technical decisions from the
   science cartographer, such as the unit of analysis, the mapping
   technique, the normalization method, the visualization approach, the
   clustering algorithm, and so on (see Section 3: Building a science
   map). Each decision affects the results and lead to different science
   maps. Therefore, science maps, even when they are generated by computer
   software, should not be conceived as free of human intervention. Human
   choices occur frequently in the science map workflow and should be made
   transparent in order to warrant the reproducibility of science maps
   (Rafols, Porter and Leydesdorff 2010). Therefore, if we equate
   objectivity with the “lack of human intervention” (the so-called
   mechanical objectivity), then science maps, like any other map, are not
   “objective”. Rather, they result from a combination of the features of
   the mapped field, on the one hand, and the methodological decisions of
   the science cartographer on the other hand. However, we should
   acknowledge that no map — including geographic maps — is “objective” in
   this sense. On the other hand, if objectivity is intended as
   inter-subjective agreement, then science maps are objective in so far
   as they can be reproduced by different researchers, as long as that
   they follow the same methodology.

   A further sense of objectivity has not to do with a lack of human
   interventions but a lack of human biases. According to some authors,
   science maps are more objective than classic literature reviews
   precisely in the sense that science maps would avoid the potential
   biases of human experts (e.g., Catherine and Doehne 2018; Kreuzman
   2001; Small and Griffith 1974; Weingart 2015). The idea is that the
   expert’s knowledge of a research field is inevitably constrained by his
   or her reading capacity: for how many papers one can read, they will
   always represent no more than a tiny portion of the literature
   available in most of the scientific fields. Even if such limitations
   can be mitigated by recurring to teamwork and by integrating the
   knowledge of many experts, the view of scientific fields that can be
   achieved in this way will always be partial. Thus, there is the
   potential risk that the representations of the scientific fields are
   distorted by the experts’ viewpoint (if not prejudices). By contrast,
   the networks on which science maps are based are the result of millions
   of micro-actions performed by the scientific community itself, such as
   the choice of certain references or words. Science maps allow keeping
   track of this myriad of micro-actions. Consider for instance the
   bibliography of a research article. Since the authors cite other
   publications that are relevant to their work, the bibliography can be
   conceived as a (very partial) representation of the field to which the
   paper belongs. In so far as each new contribution must be related, by
   references, to the existing body of knowledge (the field), each paper
   can be compared to a mirror that reflects — albeit partially — the
   entire field (Amsterdamska and Leydesdorff 1989). It is a sort of
   “photograph” taken from a certain viewpoint. Hence, the aggregation of
   the bibliographies of thousands of articles that is performed to
   produce a citation-based map can be compared to the merging of
   thousands of partial photographs to make up a single, overall picture.
   In this aggregation process, different publications are related to one
   another “unwittingly” by the scientific community itself. According to
   some authors, when enough large aggregates of publications are
   considered, the biases occurring in the individual bibliographies
   cancel out and a balanced picture is obtained (Van Raan 1998). The
   underlying assumption is that, at least on average, the citation
   behavior of scientists follows a normative model, i.e., that citations
   are given because of the scientific content of the cited reference and
   not because of non-scientific motives (see Section 7.3: The meaning of
   citations).

   By the same token, the networks of words visualized in term-based maps
   allow reconstructing the terminology of a scientific field because they
   reflect thousands of terminological micro-choices made by the
   researchers when drafting the titles and abstracts of their papers. The
   relations between the different terms are the results of these choices.
   Idiosyncratic and non-standard terminological would again choices
   cancel out when enough publications are considered.

   In sum, science maps would be more objective than classic reviews
   because they are the result of a bottom-up approach (Petrovich 2019b).
   Instead of the traditional top-down approach that can potentially
   introduce biases in the field representation, science maps allow to
   represent “the point of view of the scientific community on itself”
   (Small 1973; Small and Griffith 1974). Once again, science maps are not
   objective because free of human choices. Rather, they are objective
   because they are based on thousands of human (micro)choices. The key
   difference between these micro-choices and the decisions taken by the
   experts in the top-down approach lies in the large number of the
   former. It is such a large amount that potentially guarantees the
   cancelling out of the biases and, thus, a more balanced representation
   of scientific fields. Far from being the “view from nowhere” on
   science, science maps are the collection of multiple, situated
   viewpoints on science.

   A last point about the objectivity of science maps is worth stressing:
   even if science maps provide bottom-up representations of science,
   nonetheless they remain partial from some points of view. First, a
   science map cannot represent more than what is contained in the data on
   which it is based. Since the scope of data depends on the scope of the
   bibliographic databases, science mapping techniques will deliver very
   partial representations for those scholarly fields that are scarcely
   covered by current databases, such as some areas in the social sciences
   and humanities or scholarly production in national languages (Franssen
   and Wouters 2019; Nederhof 2006). This does not mean that science maps
   provide false or distorted representations: rather that they ultimately
   depend on the scope and limits of the data on which they are generated.
   The second reason why science maps are partial is subtler, and it has
   to do with the nature of the bibliographic data and how they represent
   the scientific activity. We discuss this topic in the next paragraph.

                                                            [top of entry]

7.2 Published science vs. science in the making

   A defining trait of standard science maps is that they are generated
   based on the meta-data of scientific publications, as they are stored
   in bibliographic databases. However, publications (research articles,
   reviews, conference proceedings, patents, etc.) are only the final
   stage of a long and often rough research process. They are not meant
   and should not be considered as simple mirrors of the research
   practices themselves (Hyland and Salager-Meyer 2009; Wouters 1999a).
   The writing of a scientific paper involves the construction of a
   justificatory structure in which each experiment and analysis
   contribute to the justification of the paper’s claims (Gross et al.
   2002). As sociological and anthropological studies have revealed, real
   research practices can be a lot less smooth than the accounts we find
   in the scientific papers (Knorr-Cetina 2003; Latour and Woolgar 1986;
   Townsend and Burgess 2009). Real research is full of false starts,
   blind alleys, and mistakes. Discoveries may occur because of
   serendipity or intuition, the order of the experiments can be different
   both from the research plan and from the methodology described in the
   final paper, research targets may be affected by changes in funding,
   availability of materials and expertise, even academic circumstances.
   Moreover, scientific writing is a literary genre that follows precise
   rules, ranging from the format (e.g., the division of a research
   article into standard sections, such as Introduction, Methods, Results,
   and Discussion), to the writing style (in some fields, an impersonal
   style is recommended to increase the “objectivity” of the results)
   (Bazerman 1988; Hyland and Salager-Meyer 2009; Swales 2004). Journals’
   guidelines and peer-review reports can further affect the final form of
   a paper.

   Since standard science maps are based on the published side of science,
   they cannot be used to investigate any research practice that is not
   recorded in publications. Most of what Bruno Latour has called the
   “science-in-action”, thus, remains out of the reach of standard science
   mapping based on bibliographic databases. Note, however, that science
   mapping as a method can be potentially applied to any relational
   feature of the scientific enterprise. Other relational features,
   describing the science-in-action, could be mapped by new science
   mapping techniques (for instance, informal exchanges between scientists
   at scientific congresses, e-mail flows between laboratories, informal
   collaboration networks not resulting in co-authorship, etc.). However,
   new ad-hoc databases must be built to map these features, a costly and
   time-consuming enterprise (Boyack and Klavans 2019).

                                                            [top of entry]

7.3 The meaning of citations

   Citations are pivotal in science mapping: without the reference links
   connecting scientific publications, citation-based maps would be simply
   impossible. However, citations are a human product: they are the result
   of the choices made by the authors during the writing of their
   scientific papers. Why do scientists choose some references instead of
   others? Do they cite only because of the scientific merit of the cited
   works? How does the citation behavior of scientists change in different
   scientific fields? In traditional citation analysis and in standard
   science mapping, citations are treated equally, i.e., all have the same
   value. However, some cited papers are widely discussed, while others
   are perfunctorily cited. Some papers are even negatively cited. How can
   we capture the different functions and values of citations?

   Questions like these are discussed in scientometrics and sociology of
   science under the label of citation theory (Bornmann and Daniel 2008;
   Cronin 1984; Wouters 1999b). Most of them are discussed since the dawn
   of citation analysis and still do not have received definite answers. A
   complete overview of citation theories is out of the scope of the
   present article [24]. In this section, we will limit to present the two
   main approaches, in so far as they can help to interpret and
   contextualize the results of science mapping: the normative theory and
   the socio-constructivist theory.

   The normative theory was proposed within the framework of the normative
   sociology of science developed by Robert K. Merton and his school from
   the 1960s (Elkana et al. 1978; Kaplan 1965; Merton 1974). According to
   this theory, scientists cite to pay their intellectual debts: when they
   use the results obtained by other scientists in their research, the
   norms of science demand them to acknowledge the debt by explicitly
   citing the relevant papers. Citations count as “pellets of peer
   recognition” and play a fundamental role in the reward system of
   science: they serve to distribute prestige among scientists. An
   important consequence of the normative theory is that citations can be
   considered as reliable proxies of scientific quality or impact. Thus,
   the normative theory provides a theoretical justification for the use
   of citations in evaluative contexts. However, the main claim of the
   normative theory (i.e., that the citation reflects the scientific merit
   of the cited document, author, or journal) rests upon several
   assumptions, e.g., that citations are made to the best possible works,
   that all citations have equal weight, and that the citation of a
   document implies the use of the document by the citing author
   (Nicolaisen 2007). Both the main claim and the underlying assumptions
   have been criticized.

   The socio-constructivist approach to citations is grounded in the
   socio-constructivist sociology of science, a sociological paradigm that
   raised in different forms in the 1970s partly as a reaction to the
   normative school (Bloor 1991; Knorr-Cetina 2003; Latour 2003).
   According to socio-constructivists, scientific facts are the result of
   an intricate process of social negotiation among different actors. In
   the social arena of science, scientists use any means necessary to
   advance their claims and achieve a high status in the scientific
   community. No normative system, such as the one described by Merton,
   governs their actions. Socio-constructivists maintain that citations
   play a key role in the social negotiation of scientific facts. In
   particular, they are used as means of persuasion: scientists trade on
   the authority of the cited authors to strengthen their claims.
   Citations are rhetorical devices that can be compared to “defense
   lines” prepared by the scientists to defend their results from
   criticisms of adversary scientists. Socio-constructivists note also
   that scientists often distort the content of the documents they cite,
   in order to show agreement with authoritative sources even when no such
   an agreement exists. The reason is that scientists would be more
   interested in who they cite, rather than in what the cited documents
   say. Citations, therefore, would reflect the social dynamics of the
   scientific community, rather than the accumulation of scientific
   knowledge. An important consequence is that they cannot be used as
   proxies of scientific quality (MacRoberts and MacRoberts 2018).

   Empirical research has shown that neither the normative nor the
   socio-constructivist theory offer, alone, complete explanations of the
   citation behavior of scientists. The motivations for citing are complex
   and multi-dimensional: sometimes they reflect purely scientific
   reasons, as the normative theory holds, and sometimes obey to
   social-networking purposes, as the socio-constructivist theory holds
   (Tahamtan and Bornmann 2018). Besides the motivations of scientists,
   also the characteristics of the communication system of science
   (journals, publishers, and so on) affect the probability of receiving
   citations (Cozzens 1989). For instance, publications in languages
   different from English tend to receive, on average, fewer citations,
   whereas review articles tend to attract more citations than research
   articles (Bornmann and Daniel 2008). The citation links between
   documents and authors, therefore, are affected by many different
   factors, of which scientific merit is only one.

   When interpreting the results of citation-based science mapping, we
   should not overlook the complexity of the citation practices that
   determine the links in the citation network. An understanding of the
   “citation culture” (Wouters 1999a) of the mapped field helps to
   interpret correctly a science map.

                                                            [top of entry]

8. Science maps and science policy

   Since the first experiments in science mapping in the 1970s, science
   maps have been presented recurrently as helpful devices for science
   policy and research management. The idea is that, since science maps
   offer a panoramic viewpoint of the research landscape, they can also
   help to navigate it. Science maps would offer for the abstract space of
   science the same service of orientation that geographic maps provide
   for the physical space (Small 1999).

   Possible science policy topics that can be addressed with the help of
   science maps include (Boyack, Klavans and Börner 2005; Rafols, Porter
   and Leydesdorff 2010):
    1. Benchmarking: How is an organization performing compared to
       competitors?
    2. Collaboration strategy: Who are the potential collaborators that
       can complement the research mission of the organization?
    3. Development analysis: How do the research themes of an organization
       develop over time?
    4. “Hot areas” detection: What are the scientific areas that are
       growing faster? What is their potential for technological transfer?

   One important advantage of science maps compared to classic reviews is
   that they allow also the non-experts to grasp easily and quickly the
   main features of a scientific field because they rely on the
   recognition of visual patterns rather than on deep scientific
   expertise. Therefore, they can be used as a common base between
   researchers, science managers, analysts, and policymakers to discuss
   strategic decisions, such as the allocation of resources (Börner et al.
   2012; Noyons and Calero-Medina 2009).

   Nonetheless, science maps should be used in science policy contexts
   with a clear understanding of their limits: science maps can help the
   decision-making, but they do not provide automatic answers. From this
   point of view, science maps are not different from any scientometric
   indicator: they provide partial representations of science whose
   correct interpretation should take into account many different factors
   (see Section 7.1: On the objectivity of science maps) [25]. Not only
   science maps are error-prone (e.g., if they are generated based on an
   incorrect field delineation procedure, see Section 3.2: Field
   delineation), but, as we saw above, their production involves several
   technical decisions that can deeply influence the final maps (see
   Section 4.1.3: Normalization and Section 4.1.4: Visualization). It is
   pivotal that such decisions should be made transparent, and their
   consequences clear to the analysts and the policymakers, so that
   science maps do not turn into “black boxes” (Rafols, Porter and
   Leydesdorff 2010).

   Fortunately, science maps are usually perceived as more complex
   objects, compared to mono-dimensional scientometric indicators such as
   citation counts or the Journal Impact Factor. Thus, they tend to
   stimulate a higher level of reflexivity in their users compared to
   sheer numbers. Such reflexivity should always be preserved in science
   policy contexts, where science maps must not be treated as “oracles”,
   even when science politicians and research managers desire simple and
   straightforward answers. When using science maps, it must be remembered
   that science is a complex system, where simple, ready-made answers can
   be given very rarely.

                                                            [top of entry]

9. Conclusion

   In this entry, we have seen how the visual representation of science by
   science maps takes different forms, depending on the kind of data, the
   unit of analysis, the type of relation examined, and the overall
   mapping approach used. A science map can take both the form of a
   bibliometric network and that of a geographic map or of a patent map.
   Even artistic representations of the sciences have been called, in a
   derivate way, “science maps” (Börner 2010). Science maps find
   application in different domains, from sociology of science to science
   policy, from scientometrics to information visualization. As we have
   seen, science mapping, as a body of techniques, stands at the crossroad
   of numerous disciplines: scientometrics, → library and information
   science, citation analysis, text analysis, statistics, network
   analysis, among others.

   Given this manifold of methods, disciplines, and uses, it is difficult
   to find a common trait that identifies the uniqueness of science
   mapping. Perhaps, what most if not all science maps share is a
   bottom-up approach to the investigation of the structure and dynamics
   of science (Petrovich 2019b). Compared with top-down KOSs, science maps
   aim at representing science starting from the scientific products
   themselves rather than from more or less a priori conceptual schemes.
   In this sense, they may capture those structuration forces that shape
   the overall configuration of the scientific system and that may remain
   invisible to top-down KOSs. Science mapping may be valuable to shed
   light on the self-organizing properties of the scientific enterprise
   (Lucio-Arias and Leydesdorff 2009). Hence, we think that science maps
   can be of interest for all the branches of meta-science, from library
   and information science to sociology of science, from knowledge
   organization to epistemology.

                                                            [top of entry]

Acknowledgments

   I am grateful to Alberto Baccini, Emiliano Tolusso, two anonymous
   reviewers, and the editor for helpful comments and suggestions on a
   previous version of this entry. I gratefully acknowledge financial
   support from the Institute for New Economic Thinking (INET) under grant
   n. INO19-00023.

                                                            [top of entry]

Endnotes

   1. http://scimaps.org/home.html.

   2. https://en.wikipedia.org/wiki/Liberal_arts_education#/media/
   File:Hortus_Deliciarum,_Die_Philosophie_mit_den_sieben_freien_K%C3%BCns
   ten.JPG.

   3. Numerous examples of classifications and visual representations of
   the sciences over the centuries can be found and explored in the
   Interactive Atlas of the Disciplines
   (http://atlas-disciplines.unige.ch/).

   4. A detailed timeline with key milestones in science mapping history
   can be found in the Part 2 of Börner (2010).

   5. https://academic.microsoft.com/.

   6. https://www.dimensions.ai/.

   7. https://www.uspto.gov/.

   8. http://www.google.com/patents.

   9. http://www.epo.org/patents/patent-information.html.

   10. This is the adjacency matrix we obtain when we consider the network
   as directed, i.e., when we distinguish between the sender and the
   receiver of the citation. It is also possible to consider the citation
   network as undirected. In this case, the elements of the matrix will be
   set to 1 when there is a link between the publications, independently
   whether it is a citation (in-coming link) or a reference (out-going
   link), obtaining a symmetrical matrix:

       a b c d e f g h
     a 0 1 1 1 1 0 0 0
     b 1 0 1 0 0 0 0 1
     c 1 1 0 0 1 1 1 0
     d 1 0 0 0 0 0 1 0
     e 1 0 1 0 0 0 1 0
     f 0 0 1 0 0 0 1 0
     g 0 0 1 1 1 1 0 0
     h 0 1 0 0 0 0 0 0

   11. Note that there are two different similarity measures, a direct and
   an indirect, both called “cosine”. The indirect cosine — that
   corresponds to the original cosine introduce by Salton and McGill
   (Salton and McGill 1983) — is based on the angular distance between two
   vectors and it is calculated from the inner product of the vectors
   (Jones and Furnas 1987). The direct cosine is a simplified version of
   the indirect cosine and it corresponds to a variant of the Ochiai
   coefficient (Zhou and Leydesdorff 2016).

   12. An interesting alternative visualization, closely modelled on
   geographic maps, is based on the so-called self-organizing maps (SOM).
   We refer to Skupin, Biberstine and Börner (2013) for a detailed
   explanation of this technically advanced visualization method.

   13. https://gephi.org/

   14. http://mrvar.fdv.uni-lj.si/pajek/.

   15. Note that not all the similarity measures fulfill the requirements
   of a distance metric. For instance, negative similarity measures (such
   as the ones produced by Pearson’s r) cannot be used as distances
   because a negative distance is meaningless. The other conditions to be
   satisfied are that the distance of an object from itself should be
   zero, that the distance between A and B should be equal to the distance
   between B and A (symmetry), and that the distance from A to B is at
   most as large as the sum of the distance from A to C and the distance
   from C to B (triangle inequality).

   16. A technical but very clear explanation of MDS can be found in Borg
   and Groenen (2010, chaps 1–3) and in Eck et al. (2010).

   17. It is easy to see that it is a consequence of the triangle
   inequality mentioned in the note above.

   18. More precisely, shortest paths.

   19. Hennig et al. (2016) offers an overview and technical discussion of
   clustering techniques.

   20. From this point of view, the history of the JEL codes used in
   economics is very instructive (Cherrier 2017).

   21. A tool for generating alluvial maps starting from network data is
   available at https://www.mapequation.org/alluvial/.

   22. The map can be explored at
   https://www.nature.com/immersive/d41586-019-03165-4/. A video
   explaining the structure of the map is available at
   https://www.youtube.com/watch?v=GW4s58u8PZo.

   23. I am grateful to an anonymous reviewer for pointing me out this
   difference in the use of specific terminology between the sciences and
   humanities.

   24. See Tahamtan and Bornmann (2018; 2019) for an updated overview and
   Petrovich (2019a) for a systematization of the different theories.

   25. As it is well known, the use of scientometrics for evaluative
   purpose is a controversial topic that continue to raise heated
   discussions among researchers and policy makers. The presentation of
   this topic, however, falls beyond the scope of this article. See
   Aksnes, Langfeldt, and Wouters (2019) for an introduction.

                                                            [top of entry]

References

   Ahlgren, Per, Bo Jarneving, and Ronald Rousseau. 2003. ‘Requirements
   for a Cocitation Similarity Measure, with Special Reference to
   Pearson’s Correlation Coefficient’. Journal of the American Society for
   Information Science and Technology 54 no. 6: 550–60.
   https://doi.org/10.1002/asi.10242.

   Aksnes, Dag W., Liv Langfeldt, and Paul Wouters. 2019. ‘Citations,
   Citation Indicators, and Research Quality: An Overview of Basic
   Concepts and Theories’. SAGE Open 9 no. 1: 215824401982957.
   https://doi.org/10.1177/2158244019829575.

   Amsterdamska, Olga, and L. Leydesdorff. 1989. ‘Citations: Indicators of
   Significance?’ Scientometrics 15 no. 5–6: 449–71.
   https://doi.org/10.1007/BF02017065.

   Araújo, Paula Carina de, Renata Cristina Gutierres Castanha and Birger
   Hjørland. 2020. “Citation Indexing and Indexes”. Knowledge
   Organization, in press. Also available in ISKO Encyclopedia of
   Knowledge Organization, eds. Birger Hjørland and Claudio Gnoli,
   https://www.isko.org/cyclo/citation.

   Åström, Fredrik, Björn Hammarfelt, and Joachim Hansson. 2017.
   ‘Scientific Publications as Boundary Objects: Theorising the
   Intersection of Classification and Research Evaluation’. Information
   Research 22 no. 1: colis1623.
   http://informationr.net/ir/22-1/colis/colis1623.html.

   Baccini, Alberto, and Lucio Barabesi. 2010. ‘Interlocking Editorship. A
   Network Analysis of the Links between Economic Journals’.
   Scientometrics 82 no. 2: 365–89.
   https://doi.org/10.1007/s11192-009-0053-7.

   Baccini, Alberto, Lucio Barabesi, Yves Gingras, and Mahdi Kalfaoui.
   2019. ‘Intellectual and Social Similarity among Scholarly Journals: An
   Exploratory Comparison of the Networks of Editors, Authors and
   Co-Citations’.

   Barabási, Albert-László. 2014. Linked: How Everything Is Connected to
   Everything Else and What It Means for Business, Science, and Everyday
   Life. New York: Basic Books.

   Bazerman, Charles. 1988. Shaping Written Knowledge: The Genre and
   Activity of the Experimental Article in Science. Rhetoric of the Human
   Sciences. Madison, Wis.: University of Wisconsin Press.

   Bloor, David. 1991. Knowledge and Social Imagery. 2nd ed. Chicago:
   University of Chicago Press.

   Borg, Ingwer, and Patrick J. F Groenen. 2010. Modern Multidimensional
   Scaling: Theory and Applications. New York; London: Springer.

   Börner, Katy. 2010. Atlas of Science: Visualizing What We Know.
   Cambridge, Mass.: MIT Press.

   Börner, Katy, Chaomei Chen, and Kevin W. Boyack. 2005. ‘Visualizing
   Knowledge Domains’. Annual Review of Information Science and Technology
   37 no. 1: 179–255. https://doi.org/10.1002/aris.1440370106.

   Börner, Katy, Richard Klavans, Michael Patek, Angela M. Zoss, Joseph R.
   Biberstine, Robert P. Light, Vincent Larivière, and Kevin W. Boyack.
   2012. ‘Design and Update of a Classification System: The UCSD Map of
   Science’. Edited by Neil R. Smalheiser. PLoS ONE 7 no. 7: e39464.
   https://doi.org/10.1371/journal.pone.0039464.

   Börner, Katy, Shashikant Penumarthy, Mark Meiss, and Weimao Ke. 2006.
   ‘Mapping the Diffusion of Scholarly Knowledge among Major U.S. Research
   Institutions’. Scientometrics 68 no. 3: 415–26.
   https://doi.org/10.1007/s11192-006-0120-2.

   Börner, Katy, Todd N. Theriault, and Kevin W. Boyack. 2015. ‘Mapping
   Science Introduction: Past, Present and Future: Mapping Science
   Introduction: Past, Present and Future’. Bulletin of the Association
   for Information Science and Technology 41 no. 2: 12–16.
   https://doi.org/10.1002/bult.2015.1720410205.

   Bornmann, Lutz, and Hans-Dieter Daniel. 2008. ‘What Do Citation Counts
   Measure? A Review of Studies on Citing Behavior’. Journal of
   Documentation 64 no. 1: 45–80.
   https://doi.org/10.1108/00220410810844150.

   Boyack, Kevin W., and Richard Klavans. 2008. ‘Measuring
   Science–Technology Interaction Using Rare Inventor–Author Names’.
   Journal of Informetrics 2 no. 3: 173–82.
   https://doi.org/10.1016/j.joi.2008.03.001.

   Boyack, Kevin W., and Richard Klavans. 2010. ‘Co-Citation Analysis,
   Bibliographic Coupling, and Direct Citation: Which Citation Approach
   Represents the Research Front Most Accurately?’ Journal of the American
   Society for Information Science and Technology 61 no. 12: 2389–2404.
   https://doi.org/10.1002/asi.21419.

   Boyack, Kevin W., and Richard Klavans. 2019. ‘Creation and Analysis of
   Large-Scale Bibliometric Networks’. In Springer Handbook of Science and
   Technology Indicators, edited by Wolfgang Glänzel, Henk F. Moed, Ulrich
   Schmoch, and Mike Thelwall, 187–212. Springer Handbooks. Cham: Springer
   International Publishing. https://doi.org/10.1007/978-3-030-02511-3_8.

   Boyack, Kevin W., Richard Klavans, and Katy Börner. 2005. ‘Mapping the
   Backbone of Science’. Scientometrics 64 no. 3: 351–74.
   https://doi.org/10.1007/s11192-005-0255-6.

   Callon, Michel, J. P. Courtial, and F. Laville. 1991. ‘Co-Word Analysis
   as a Tool for Describing the Network of Interactions between Basic and
   Technological Research: The Case of Polymer Chemsitry’. Scientometrics
   22 no. 1: 155–205. https://doi.org/10.1007/BF02019280.

   Callon, Michel, J.-P. Courtial, W. A. Turner, and S. Bauin. 1983. ‘From
   Translations to Problematic Networks: An Introduction to Co-Word
   Analysis’. Social Science Information 22 no. 2: 191–235.
   https://doi.org/10.1177/053901883022002003.

   Callon, Michel, John Law, and Arie Rip, eds. 1998. Mapping the Dynamics
   of Science and Technology: Sociology of Science in the Real World.
   Transferred to digital printing. Houndmills: Macmillan.

   Catherine, Herfeld, and Malte Doehne. 2018. ‘Five Reasons for the Use
   of Network Analysis in the History of Economics’. Journal of Economic
   Methodology 25 no. 4: 311–28.
   https://doi.org/10.1080/1350178X.2018.1529172.

   Chen, Chaomei. 2006. ‘CiteSpace II: Detecting and Visualizing Emerging
   Trends and Transient Patterns in Scientific Literature’. Journal of the
   American Society for Information Science and Technology 57 no. 3:
   359–77. https://doi.org/10.1002/asi.20317.

   Chen, Chaomei. 2013. Mapping Scientific Frontiers: The Quest for
   Knowledge Visualization. Second Edition. London: Springer.

   Chen, Chaomei. 2017. ‘Science Mapping: A Systematic Review of the
   Literature’. Journal of Data and Information Science 2 no. 2: 1–40.
   https://doi.org/10.1515/jdis-2017-0006.

   Chen, Chaomei, Fidelia Ibekwe-SanJuan, and Jianhua Hou. 2010. ‘The
   Structure and Dynamics of Cocitation Clusters: A Multiple-Perspective
   Cocitation Analysis’. Journal of the American Society for Information
   Science and Technology 61 no. 7: 1386–1409.
   https://doi.org/10.1002/asi.21309.

   Cherrier, Beatrice. 2017. ‘Classifying Economics: A History of the JEL
   Codes’. Journal of Economic Literature 55 no. 2: 545–79.
   https://doi.org/10.1257/jel.20151296.

   Cobo, M.J., A.G. López-Herrera, E. Herrera-Viedma, and F. Herrera.
   2011a. ‘An Approach for Detecting, Quantifying, and Visualizing the
   Evolution of a Research Field: A Practical Application to the Fuzzy
   Sets Theory Field’. Journal of Informetrics 5 no. 1: 146–66.
   https://doi.org/10.1016/j.joi.2010.10.002.

   Cobo, M.J., A.G. López-Herrera, E. Herrera-Viedma, and F. Herrera.
   2011b. ‘Science Mapping Software Tools: Review, Analysis, and
   Cooperative Study among Tools’. Journal of the American Society for
   Information Science and Technology 62 no. 7: 1382–1402.
   https://doi.org/10.1002/asi.21525.

   Courtial, J. P. 1998. ‘Comments on Leydesdorff’s Article’. Journal of
   the American Society for Information Science 49 no. 1: 98.

   Cozzens, Susan E. 1989. ‘What Do Citations Count? The Rhetoric-First
   Model’. Scientometrics 15 no. 5–6: 437–47.
   https://doi.org/10.1007/BF02017064.

   Crane, Diana. 1967. ‘The Gatekeepers of Science: Some Factors Affecting
   the Selection of Articles for Scientific Journals’. The American
   Sociologist 2 no. 4: 195–201.

   Crane, Diana. 1972. Invisible Colleges; Diffusion of Knowledge in
   Scientific Communities. Chicago: University of Chicago Press.

   Cronin, Blaise. 1984. The Citation Process: The Role and Significance
   of Citations in Scientific Communication. London: T. Graham.

   Cronin, Blaise. 2001. ‘Hyperauthorship: A Postmodern Perversion or
   Evidence of a Structural Shift in Scholarly Communication Practices?’
   Journal of the American Society for Information Science and Technology
   52 no. 7: 558–69. https://doi.org/10.1002/asi.1097.

   Daston, Lorraine, and Peter Galison. 2007. Objectivity. New
   York-Cambridge, Mass.: Zone Books; Distributed by the MIT Press.

   Eck, Nees Jan van, and Ludo Waltman. 2008. ‘Appropriate Similarity
   Measures for Author Co-citation Analysis’. Journal of the American
   Society for Information Science and Technology 59 no. 10: 1653–61.
   https://doi.org/10.1002/asi.20872.

   Eck, Nees Jan van, and Ludo Waltman. 2009. ‘How to Normalize
   Cooccurrence Data? An Analysis of Some Well-Known Similarity Measures’.
   Journal of the American Society for Information Science and Technology
   60 no. 8: 1635–51. https://doi.org/10.1002/asi.21075.

   Eck, Nees Jan van, and Ludo Waltman. 2010. ‘Software Survey: VOSviewer,
   a Computer Program for Bibliometric Mapping’. Scientometrics 84 no. 2:
   523–38. https://doi.org/10.1007/s11192-009-0146-3.

   Eck, Nees Jan van, Ludo Waltman, Rommert Dekker, and Jan van den Berg.
   2010. ‘A Comparison of Two Techniques for Bibliometric Mapping:
   Multidimensional Scaling and VOS’. Journal of the American Society for
   Information Science and Technology 61 no. 12: 2405–16.
   https://doi.org/10.1002/asi.21421.

   Elkana, Yehuda, Joshua Laderberg, Robert K. Merton, Arnold Thackray,
   and Harriet Zuckerman, eds. 1978. Toward a Metric of Science: The
   Advent of Science Indicators. Science, Culture, and Society. New York:
   Wiley.

   Federico, Paolo, Florian Heimerl, Steffen Koch, and Silvia Miksch.
   2017. ‘A Survey on Visual Approaches for Analyzing Scientific
   Literature and Patents’. IEEE Transactions on Visualization and
   Computer Graphics 23 no. 9: 2179–98.
   https://doi.org/10.1109/TVCG.2016.2610422.

   Finnegan, Diarmid. 2015. ‘Science, Geography Of’. In International
   Encyclopedia of the Social & Behavioral Sciences, 21:236–40.

   Franssen, Thomas, and Paul Wouters. 2019. ‘Science and Its Significant
   Other: Representing the Humanities in Bibliometric Scholarship’.
   Journal of the Association for Information Science and Technology,
   March. https://doi.org/10.1002/asi.24206.

   Frenken, Koen, Sjoerd Hardeman, and Jarno Hoekman. 2009. ‘Spatial
   Scientometrics: Towards a Cumulative Research Program’. Journal of
   Informetrics 3 no. 3: 222–32.
   https://doi.org/10.1016/j.joi.2009.03.005.

   Garfield, Eugene. 1973. ‘Historiographs, Librarianship, and the History
   of Science’. In Toward a Theory of Librarianship, edited by Conrad H.
   Rawski, 380–402. Metuchen, NJ: Scarecrow Press.

   Garfield, Eugene. 2004. ‘Historiographic Mapping of Knowledge Domains
   Literature’. Journal of Information Science 30 no. 2: 119–45.
   https://doi.org/10.1177/0165551504042802.

   Gates, Alexander J., Qing Ke, Onur Varol, and Albert-László Barabási.
   2019. ‘Nature’s Reach: Narrow Work Has Broad Impact’. Nature 575 no.
   7781: 32–34. https://doi.org/10.1038/d41586-019-03308-7.

   Glänzel, Wolfgang. 2001. ‘National Characteristics in International
   Scientific Co-Authorship Relations’. Scientometrics 51 no. 1: 69–115.
   https://doi.org/10.1023/A:1010512628145.

   Gross, Alan G., Alan G. Gross, Joseph E. Harmon, and Michael S. Reidy.
   2002. Communicating Science: The Scientific Article from the 17th
   Century to the Present. Oxford-New York: Oxford University Press.

   Hammarfelt, Björn. 2016. ‘Beyond Coverage: Toward a Bibliometrics for
   the Humanities’. In Research Assessment in the Humanities, edited by
   Michael Ochsner, Sven E Hug, and Hans-Dieter Daniel, 115–31. Springer.

   Hammarfelt, Björn. 2017. ‘Four Claims on Research Assessment and Metric
   Use in the Humanities’. Bulletin of the Association for Information
   Science and Technology 43 no. 5: 33–38.

   Harzing, Anne-Wil. 2019. ‘Two New Kids on the Block: How Do Crossref
   and Dimensions Compare with Google Scholar, Microsoft Academic, Scopus
   and the Web of Science?’ Scientometrics 120 no. 1: 341–49.
   https://doi.org/10.1007/s11192-019-03114-y.

   He, Qin. 1999. ‘Knowledge Discovery through Co-Word Analysis’. Library
   Trends 48 no. 1: 133.

   Hellqvist, Björn. 2009. ‘Referencing in the Humanities and Its
   Implications for Citation Analysis’. Journal of the American Society
   for Information Science and Technology 61 no. 2: 310-318.
   https://doi.org/10.1002/asi.21256.

   Hennig, Christian M., Marina Meila, Fionn Murtagh, and Roberto Rocci,
   eds. 2016. Handbook of Cluster Analysis. Chapman & Hall/CRC Handbooks
   of Modern Statistical Methods 9. Boca Raton: CRC Press, Taylor &
   Francis Group.

   Hjørland, Birger. 2013. ‘Citation Analysis: A Social and Dynamic
   Approach to Knowledge Organization’. Information Processing &
   Management 49 no. 6: 1313–25.
   https://doi.org/10.1016/j.ipm.2013.07.001.

   Hyland, Ken, and Françoise Salager-Meyer. 2009. ‘Scientific Writing’.
   Annual Review of Information Science and Technology 42 no. 1: 297–338.
   https://doi.org/10.1002/aris.2008.1440420114.

   ICMJE, International Committee of Medical Journal Editors. 2019.
   ‘Recommendations for the Conduct, Reporting, Editing, and Publication
   of Scholarly Work in Medical Journals’.
   http://www.icmje.org/icmje-recommendations.pdf.

   Jaffe, Adam B., and Manuel Trajtenberg. 2002. Patents, Citations, and
   Innovations: A Window on the Knowledge Economy. Cambridge, Mass: MIT
   Press.

   Jones, William P, and George W Furnas. 1987. ‘Pictures of Relevance: A
   Geomatric Analysis of Similarity Measures’. Journal of the American
   Society for Information Science 38 no. 6: 420–42.

   Kaplan, N. 1965. ‘The Norms of Citation Behavior. Prolegomena to the
   Footnote’. American Documentation 16 no. 3: 179–87.

   Katz, J.Sylvan, and Ben R. Martin. 1997. ‘What Is Research
   Collaboration?’ Research Policy 26 no. 1: 1–18.
   https://doi.org/10.1016/S0048-7333(96)00917-1.

   Kessler, M.M. 1963. ‘Bibliographic Coupling Extended in Time: Ten Case
   Histories’. Information Storage and Retrieval 1 no. 4: 169–87.
   https://doi.org/10.1016/0020-0271(63)90016-0.

   Knorr-Cetina, K. 2003. Epistemic Cultures: How the Sciences Make
   Knowledge. Cambridge Mass. [etc.]: Harvard University Press.

   Kreuzman, Henry. 2001. ‘A Co-Citation Analysis of Representative
   Authors in Philosophy: Examining the Relationship between
   Epistemologists and Philosophers of Science’. Scientometrics 51 no. 3:
   525–39.

   Kuhn, Thomas S. 2000. The Road since Structure: Philosophical Essays,
   1970-1993, with an Autobiographical Interview. Edited by James Conant
   and John Haugeland. Chicago: University of Chicago Press.

   Larivière, Vincent, Nadine Desrochers, Benoît Macaluso, Philippe
   Mongeon, Adèle Paul-Hus, and Cassidy R. Sugimoto. 2016.
   ‘Contributorship and Division of Labor in Knowledge Production’. Social
   Studies of Science 46 no. 3: 417–35.
   https://doi.org/10.1177/0306312716650046.

   Latour, Bruno. 2003. Science in Action: How to Follow Scientists and
   Engineers through Society. 11. print. Cambridge, Mass: Harvard
   University Press.

   Latour, Bruno, and Steve Woolgar. 1986. Laboratory Life: The
   Construction of Scientific Facts. Princeton, N.J: Princeton University
   Press.

   Laudel, Grit. 2002. ‘What Do We Measure by Co-Authorships?’ Research
   Evaluation 11 no. 1: 3–15. https://doi.org/10.3152/147154402781776961.

   Laurens, Patricia, Michel Zitt, and Elise Bassecoulard. 2010.
   ‘Delineation of the Genomics Field by Hybrid Citation-Lexical Methods:
   Interaction with Experts and Validation Process’. Scientometrics 82 no.
   3: 647–62. https://doi.org/10.1007/s11192-010-0177-9.

   Law, J., and J. Whittaker. 1992. ‘Mapping Acidification Research: A
   Test of the Co-Word Method’. Scientometrics 23 no. 3: 417–61.
   https://doi.org/10.1007/BF02029807.

   Lee, Sungjoo, Byungun Yoon, and Yongtae Park. 2009. ‘An Approach to
   Discovering New Technology Opportunities: Keyword-Based Patent Map
   Approach’. Technovation 29 no. 6–7: 481–97.
   https://doi.org/10.1016/j.technovation.2008.10.006.

   Leydesdorff, Loet. 1987. ‘Various Methods for the Mapping of Science’.
   Scientometrics 11 no. 5–6: 295–324. https://doi.org/10.1007/BF02279351.

   Leydesdorff, Loet. 1997. ‘Why Words and Co-words Cannot Map the
   Development of the Sciences’. Journal of the American Society for
   Information Science 48 no. 5: 418.

   Leydesdorff, Loet. 2001. The Challenge of Scientometrics: The
   Development, Measurement, and Self-Organization of Scientific
   Communications. 2. ed. Parkland, Ill.: Universal Publ.

   Leydesdorff, Loet. 2004. ‘Clusters and Maps of Science Journals Based
   on Bi-connected Graphs in Journal Citation Reports’. Journal of
   Documentation 60 no. 4: 371–427.
   https://doi.org/10.1108/00220410410548144.

   Leydesdorff, Loet. 2007. ‘Betweenness Centrality as an Indicator of the
   Interdisciplinarity of Scientific Journals’. Journal of the American
   Society for Information Science and Technology 58 no. 9: 1303–19.
   https://doi.org/10.1002/asi.20614.

   Leydesdorff, Loet. 2008. ‘On the Normalization and Visualization of
   Author Co-Citation Data: Salton’s Cosine versus the Jaccard Index’.
   Journal of the American Society for Information Science and Technology
   59 no. 1: 77–85. https://doi.org/10.1002/asi.20732.

   Leydesdorff, Loet, and Robert L. Goldstone. 2014. ‘Interdisciplinarity
   at the Journal and Specialty Level: The Changing Knowledge Bases of the
   Journal Cognitive Science’. Journal of the Association for Information
   Science and Technology 65 no. 1: 164–77.
   https://doi.org/10.1002/asi.22953.

   Leydesdorff, Loet, and Olle Persson. 2010. ‘Mapping the Geography of
   Science: Distribution Patterns and Networks of Relations among Cities
   and Institutes’. Journal of the American Society for Information
   Science and Technology 61 no. 8: 1622-1634.
   https://doi.org/10.1002/asi.21347.

   Leydesdorff, Loet, and Ismael Rafols. 2009. ‘A Global Map of Science
   Based on the ISI Subject Categories’. Journal of the American Society
   for Information Science and Technology 60 no. 2: 348–62.
   https://doi.org/10.1002/asi.20967.

   Leydesdorff, Loet, and Thomas Schank. 2008. ‘Dynamic Animations of
   Journal Maps: Indicators of Structural Changes and Interdisciplinary
   Developments’. Journal of the American Society for Information Science
   and Technology 59 no. 11: 1810–18. https://doi.org/10.1002/asi.20891.

   Lima, Manuel. 2014. The Book of Trees: Visualizing Branches of
   Knowledge. First edition. New York: Princeton Architectural Press.

   Liu, Xiaoming, Johan Bollen, Michael L. Nelson, and Herbert Van de
   Sompel. 2005. ‘Co-Authorship Networks in the Digital Library Research
   Community’. Information Processing & Management 41 no. 6: 1462–80.
   https://doi.org/10.1016/j.ipm.2005.03.012.

   Livingstone, David N. 2003. Putting Science in Its Place: Geographies
   of Scientific Knowledge. Science.Culture. Chicago: University of
   Chicago Press.

   Lucio-Arias, Diana, and Loet Leydesdorff. 2009. ‘The Dynamics of
   Exchanges and References among Scientific Texts, and the Autopoiesis of
   Discursive Knowledge’. Journal of Informetrics 3 no. 3: 261–71.
   https://doi.org/10.1016/j.joi.2009.03.003.

   MacRoberts, Michael H., and Barbara R. MacRoberts. 2018. ‘The
   Mismeasure of Science: Citation Analysis’. Journal of the Association
   for Information Science and Technology 69 no. 3: 474–82.
   https://doi.org/10.1002/asi.23970.

   Marshakova, Irena. 1973. ‘System of Document Connections Based On
   References’. Nauchno-Tekhnicheskaya Informatsiya Seriya
   2-Informatsionnye Protsessy I Sistemy 2 no. 6: 3–8.

   Mazzocchi, Fulvio. 2018. ‘Knowledge Organization System (KOS)’.
   Knowledge Organization 45 no. 1: 54–78. Also available in ISKO
   Encyclopedia of Knowledge Organization, eds. Birger Hjørland and
   Claudio Gnoli, https://www.isko.org/cyclo/kos.

   McCain, Katherine W. 1990. ‘Mapping Authors in Intellectual Space: A
   Technical Overview’. Journal of the American Society for Information
   Science 41 no. 6: 433–43.

   McCain, Katherine W. 1991. ‘Mapping Economics through the Journal
   Literature: An Experiment in Journal Cocitation Analysis’. Journal of
   the American Society for Information Science 42 no. 4: 290–96.
   3.0.CO;2-9">https://doi.org/10.1002/(SICI)1097-4571(199105)42:4<290::AI
   D-ASI5>3.0.CO;2-9.

   Merton, Robert K. 1974. The Sociology of Science: Theoretical and
   Empirical Investigations. 4. Dr. Chicago: Univ. of Chicago Pr.

   Meyer, Martin. 2000. ‘Does Science Push Technology? Patents Citing
   Scientific Literature’. Research Policy 29 no. 3: 409–34.
   https://doi.org/10.1016/S0048-7333(99)00040-2.

   Moral-Munoz, Jose A., Antonio G. López-Herrera, Enrique Herrera-Viedma,
   and Manuel J. Cobo. 2019. ‘Science Mapping Analysis Software Tools: A
   Review’. In Springer Handbook of Science and Technology Indicators,
   edited by Wolfgang Glänzel, Henk F. Moed, Ulrich Schmoch, and Mike
   Thelwall, 159–85. Springer Handbooks. Cham: Springer International
   Publishing. https://doi.org/10.1007/978-3-030-02511-3_7.

   Murray, Fiona. 2002. ‘Innovation as Co-Evolution of Scientific and
   Technological Networks: Exploring Tissue Engineering’. Research Policy
   31 no. 8–9: 1389–1403. https://doi.org/10.1016/S0048-7333(02)00070-7.

   Mutschke, Peter, and Anabel Quan-Haase. 2001. ‘Collaboration and
   Cognitive Structures in Social Science Research Fields. Towards
   Socio-Cognitive Analysis in Information Systems.’ Scientometrics 52 no.
   3: 487–502.

   Nederhof, Anton J. 2006. ‘Bibliometric Monitoring of Research
   Performance in the Social Sciences and the Humanities: A Review’.
   Scientometrics 66 no. 1: 81–100.
   https://doi.org/10.1007/s11192-006-0007-2.

   Newman, M. E. 2001. ‘Scientific Collaboration Networks. I. Network
   Construction and Fundamental Results’. Physical Review. E, Statistical,
   Nonlinear, and Soft Matter Physics 64 no. 1: 16131.

   Nicolaisen, Jeppe. 2007. ‘Citation Analysis’. Annual Review of
   Information Science and Technology 41 no. 1: 609–41.
   https://doi.org/10.1002/aris.2007.1440410120.

   Noyons, Ed C. M., and Clara Calero-Medina. 2009. ‘Applying Bibliometric
   Mapping in a High Level Science Policy Context: Mapping the Research
   Areas of Three Dutch Universities of Technology’. Scientometrics 79 no.
   2: 261–75. https://doi.org/10.1007/s11192-009-0417-z.

   Osinska, Veslava and Piotr Malak. 2016. “Maps and Mapping in
   Scientometrics”. In Metody i narzędzia badań piśmiennictwa cyfrowego
   i jego użytkowników [Methods and Tools for Researching Digital
   Writing and Its Users]. Eds. Malgorzata Góralska and Agnieszka Wandel.
   Wrocław: Wrocław University, 59-72.

   Pan, Xuelian, Erjia Yan, Ming Cui, and Weina Hua. 2018. ‘Examining the
   Usage, Citation, and Diffusion Patterns of Bibliometric Mapping
   Software: A Comparative Study of Three Tools’. Journal of Informetrics
   12 no. 2: 481–93. https://doi.org/10.1016/j.joi.2018.03.005.

   Persson, Olle. 1994. ‘The Intellectual Base and Research Fronts of
   JASIS 1986–1990’. Journal of the American Society for Information
   Science 45 no. 1: 31–38.

   Petrovich, Eugenio. 2018. ‘Accumulation of Knowledge in Para-Scientific
   Areas: The Case of Analytic Philosophy’. Scientometrics 116 no. 2:
   1123–51. https://doi.org/10.1007/s11192-018-2796-5.

   Petrovich, Eugenio. 2019a. ‘The Fabric of Knowledge: Towards a
   Documental History of Late Analytic Philosophy’. Ph.D. Dissertation,
   Milan: University of Milan. https://air.unimi.it/handle/2434/613334.

   Petrovich, Eugenio. 2019b. ‘The Structure of Scientific Disciplines.
   Some Notes on the Epistemology of Algorithmic Representations of
   Disciplines’. In STOREP 2019. University of Siena.
   http://conference.storep.org/….

   Petrovich, Eugenio, and Valerio Buonomo. 2018. ‘Reconstructing Late
   Analytic Philosophy. A Quantitative Approach’. Philosophical Inquiries
   6 no. 1. https://doi.org/10.4454/philinq.v6i1.184.

   Petrovich, Eugenio, and Emiliano Tolusso. 2019. ‘Exploring Knowledge
   Dynamics in the Humanities. Two Science Mapping Experiments’. Journal
   of Interdisciplinary History of Ideas 8 no. 16: 1–30.
   http://dx.doi.org/10.13135/2280-8574/4304.

   Price, Derek J. de Solla. 1965. ‘Networks of Scientific Papers’.
   Science 149 no. 3683: 510–15.
   https://doi.org/10.1126/science.149.3683.510.

   Radicchi, F., S. Fortunato, and A Vespignani. 2012. ‘Citation
   Networks’. In Models of Science Dynamics: Encounters between Complexity
   Theory and Information Sciences, edited by Andrea Scharnhorst, Katy
   Börner, and Peter van den Besselaar. Understanding Complex Systems.
   Heidelberg-New York: Springer.

   Radicchi, F., Santo Fortunato, Benjamin Markines, and Alessandro
   Vespignani. 2009. ‘Diffusion of Scientific Credits and the Ranking of
   Scientists’. Physical Review E 80 no. 5: 056103.
   https://doi.org/10.1103/PhysRevE.80.056103.

   Rafols, Ismael, Alan L. Porter, and Loet Leydesdorff. 2010. ‘Science
   Overlay Maps: A New Tool for Research Policy and Library Management’.
   Journal of the American Society for Information Science and Technology
   61 no. 9: 1871–87. https://doi.org/10.1002/asi.21368.

   Ranaei, Samira, Arho Suominen, Alan Porter, and Tuomo Kässi. 2019.
   ‘Application of Text-Analytics in Quantitative Study of Science and
   Technology’. In Springer Handbook of Science and Technology Indicators,
   edited by Wolfgang Glänzel, Henk F. Moed, Ulrich Schmoch, and Mike
   Thelwall, 957–82. Springer Handbooks. Cham: Springer International
   Publishing. https://doi.org/10.1007/978-3-030-02511-3_39.

   Reiss, Julian, and Jan Sprenger. 2017. ‘Scientific Objectivity’. In The
   Stanford Encyclopedia of Philosophy, edited by Edward N. Zalta, Winter
   2017. Metaphysics Research Lab, Stanford University.
   https://plato.stanford.edu/archives/win2017/entries/scientific-objectiv
   ity/.

   Rosvall, Martin, and Carl T. Bergstrom. 2010. ‘Mapping Change in Large
   Networks’. Edited by Fabio Rapallo. PLoS ONE 5 no. 1: e8694.
   https://doi.org/10.1371/journal.pone.0008694.

   Salton, Gerard, and Michael J. McGill. 1983. Introduction to Modern
   Information Retrieval. McGraw-Hill Computer Science Series. New York:
   McGraw-Hill.

   Scharnhorst, Andrea, Katy Börner, and Peter van den Besselaar, eds.
   2012. Models of Science Dynamics: Encounters between Complexity Theory
   and Information Sciences. Understanding Complex Systems. Heidelberg-New
   York: Springer.

   Skupin, André, Joseph R. Biberstine, and Katy Börner. 2013.
   ‘Visualizing the Topical Structure of the Medical Sciences: A
   Self-Organizing Map Approach’. Edited by Matthias Dehmer. PLoS ONE 8
   no. 3: e58779. https://doi.org/10.1371/journal.pone.0058779.

   Small, Henry. 1973. ‘Co-Citation in the Scientific Literature: A New
   Measure of the Relationship between Two Documents’. Journal of the
   American Society for Information Science 24 no. 4: 265–69.
   https://doi.org/10.1002/asi.4630240406.

   Small, Henry. 1977. ‘A Co-Citation Model of a Scientific Specialty: A
   Longitudinal Study of Collagen Research’. Social Studies of Science 7
   no. 2: 139–66. https://doi.org/10.1177/030631277700700202.

   Small, Henry. 1999. ‘Visualizing Science by Citation Mapping’. Journal
   of the American Society for Information Science 50 no. 9: 799–813.
   3.0.CO;2-G">https://doi.org/10.1002/(SICI)1097-4571(1999)50:9<799::AID-
   ASI9>3.0.CO;2-G.

   Small, Henry, and Belver C. Griffith. 1974. ‘The Structure of
   Scientific Literatures I: Identifying and Graphing Specialties’.
   Science Studies 4 no. 1: 17–40.
   https://doi.org/10.1177/030631277400400102.

   Spärck Jones, Karen. 1972. ‘A statistical interpretation of term
   specificity and its application to retrieval’. Journal of Documentation
   28 no. 1: 11–21. https://doi.org/10.1108/eb026526.

   Strotmann, Andreas, and Dangzhi Zhao. 2012. ‘Author Name
   Disambiguation: What Difference Does It Make in Author-Based Citation
   Analysis?’ Journal of the American Society for Information Science and
   Technology 63 no. 9: 1820–33. https://doi.org/10.1002/asi.22695.

   Sugimoto, Cassidy R., and Scott Weingart. 2015. ‘The Kaleidoscope of
   Disciplinarity’. Journal of Documentation 71 no. 4: 775–94.
   https://doi.org/10.1108/JD-06-2014-0082.

   Swales, John M. 2004. Research Genres: Explorations and Applications.
   Cambridge Applied Linguistics Series. Cambridge, UK?; New York:
   Cambridge University Press.

   Tahamtan, Iman, and Lutz Bornmann. 2018. ‘Core Elements in the Process
   of Citing Publications: Conceptual Overview of the Literature’. Journal
   of Informetrics 12 no. 1: 203–16.
   https://doi.org/10.1016/j.joi.2018.01.002.

   Tahamtan, Iman, and Lutz Bornmann. 2019. ‘What Do Citation Counts
   Measure? An Updated Review of Studies on Citations in Scientific
   Documents Published between 2006 and 2018’. Scientometrics 121 no. 3:
   1635–84. https://doi.org/10.1007/s11192-019-03243-4.

   Taheo, Jo. 2018. Text Mining: Concepts, Implementation, and Big Data
   Challenge. Vol. 45. Studies in Big Data. New York, NY: Springer
   Science+Business Media.

   Thijs, Bart. 2019. ‘Science Mapping and the Identification of Topics:
   Theoretical and Methodological Considerations’. In Springer Handbook of
   Science and Technology Indicators, edited by Wolfgang Glänzel, Henk F.
   Moed, Ulrich Schmoch, and Mike Thelwall, 213–33. Springer Handbooks.
   Cham: Springer International Publishing.
   https://doi.org/10.1007/978-3-030-02511-3_9.

   Tijssen, R. J. W. 1993. ‘A Scientometric Cognitive Study of Neural
   Network Research: Expert Mental Maps versus Bibliometric Maps’.
   Scientometrics 28 no. 1: 111–36. https://doi.org/10.1007/BF02016288.

   Townsend, Keith, and John (K John) Burgess, eds. 2009. Method in the
   Madness? Research Stories You Won’t Find in a Textbook. Oxford:
   Chandos.

   Tseng, Yuen-Hsien, Chi-Jen Lin, and Yu-I Lin. 2007. ‘Text Mining
   Techniques for Patent Analysis’. Information Processing & Management 43
   no. 5: 1216–47. https://doi.org/10.1016/j.ipm.2006.11.011.

   Van Raan, Anthony F. J. 1998. ‘In Matters of Quantitative Studies of
   Science the Fault of Theorists Is Offering Too Little and Asking Too
   Much’. Scientometrics 43 no. 1: 129–39.
   https://doi.org/10.1007/BF02458401.

   Van Raan, Anthony F. J. 2019. ‘Measuring Science: Basic Principles and
   Application of Advanced Bibliometrics’. In Springer Handbook of Science
   and Technology Indicators, edited by Wolfgang Glänzel, Henk F. Moed,
   Ulrich Schmoch, and Mike Thelwall, 237–80. Springer Handbooks. Cham:
   Springer International Publishing.
   https://doi.org/10.1007/978-3-030-02511-3_10.

   Van Raan, Anthony F. J., and R. J. W. Tijssen. 1993. ‘The Neural Net of
   Neural Network Research: An Exercise in Bibliometric Mapping’.
   Scientometrics 26 no. 1: 169–92. https://doi.org/10.1007/BF02016799.

   Visser, Martijn, Nees Jan van Eck, and Ludo Waltman. 2020. ‘Large-Scale
   Comparison of Bibliographic Data Sources: Scopus, Web of Science,
   Dimensions, Crossref, and Microsoft Academic’. ArXiv:2005.10732 [Cs],
   May. http://arxiv.org/abs/2005.10732.

   Waltman, Ludo, and Nees Jan van Eck. 2012. ‘A New Methodology for
   Constructing a Publication-Level Classification System of Science’.
   Journal of the American Society for Information Science and Technology
   63 no. 12: 2378–92. https://doi.org/10.1002/asi.22748.

   Waltman, Ludo, and Nees Jan van Eck. 2014. ‘Visualizing Bibliometric
   Networks’. In Measuring Scholarly Impact: Methods and Practice,
   285–320. Springer.

   Waltman, Ludo, Nees Jan van Eck, and Ed C.M. Noyons. 2010. ‘A Unified
   Approach to Mapping and Clustering of Bibliometric Networks’. Journal
   of Informetrics 4 no. 4: 629–35.
   https://doi.org/10.1016/j.joi.2010.07.002.

   Wartburg, Iwan von, Thorsten Teichert, and Katja Rost. 2005. ‘Inventive
   Progress Measured by Multi-Stage Patent Citation Analysis’. Research
   Policy 34 no. 10: 1591–1607.
   https://doi.org/10.1016/j.respol.2005.08.001.

   Wasserman, Stanley, and Katherine Faust. 1994. Social Network Analysis:
   Methods and Applications. Structural Analysis in the Social Sciences 8.
   Cambridge-New York: Cambridge University Press.

   Weingart, Scott B. 2015. ‘Finding the History and Philosophy of
   Science’. Erkenntnis 80 no. 1: 201–13.
   https://doi.org/10.1007/s10670-014-9621-1.

   White, Howard D., and Belver C. Griffith. 1981. ‘Author Cocitation: A
   Literature Measure of Intellectual Structure’. Journal of the American
   Society for Information Science 32 no. 3: 163–71.
   https://doi.org/10.1002/asi.4630320302.

   White, Howard D., and Katherine W. McCain. 1998. ‘Visualizing a
   Discipline: An Author Co-Citation Analysis of Information Science, 1972
   - 1995’. Journal of the American Society for Information Science 49 no.
   4: 327.

   Wichmann Matthiessen, Christian, Annette Winkel Schwarz, and Søren
   Find. 2002. ‘The Top-Level Global Research System, 1997-99: Centres,
   Networks and Nodality. An Analysis Based on Bibliometric Indicators’.
   Urban Studies 39 no. 5–6: 903–27.
   https://doi.org/10.1080/00420980220128372.

   Wislar, J. S., A. Flanagin, P. B. Fontanarosa, and C. D. DeAngelis.
   2011. ‘Honorary and Ghost Authorship in High Impact Biomedical
   Journals: A Cross Sectional Survey’. BMJ 343 no. oct25 1: d6128–d6128.
   https://doi.org/10.1136/bmj.d6128.

   Wouters, Paul. 1999a. The Citation Culture. Unpublished PhD thesis.

   Wouters, Paul. 1999b. ‘Beyond the Holy Grail: From Citation Theory to
   Indicator Theories’. Scientometrics 44 no. 3: 561–80.
   https://doi.org/10.1007/BF02458496.

   Zhao, Dangzhi. 2009. ‘Mapping Library and Information Science: Does
   Field Delineation Matter?’ Proceedings of the American Society for
   Information Science and Technology 46 no. 1: 1–11.
   https://doi.org/10.1002/meet.2009.1450460279.

   Zhou, Qiuju, and Loet Leydesdorff. 2016. ‘The Normalization of
   Occurrence and Co-Occurrence Matrices in Bibliometrics Using Cosine
   Similarities and Ochiai Coefficients’. Journal of the Association for
   Information Science and Technology 67 no. 11: 2805–14.
   https://doi.org/10.1002/asi.23603.

   Zitt, Michel, and Elise Bassecoulard. 2006. ‘Delineating Complex
   Scientific Fields by an Hybrid Lexical-Citation Method: An Application
   to Nanosciences’. Information Processing & Management 42 no. 6:
   1513–31. https://doi.org/10.1016/j.ipm.2006.03.016.

   Zitt, Michel, Alain Lelu, Martine Cadot, and Guillaume Cabanac. 2019.
   ‘Bibliometric Delineation of Scientific Fields’. In Springer Handbook
   of Science and Technology Indicators, edited by Wolfgang Glänzel, Henk
   F. Moed, Ulrich Schmoch, and Mike Thelwall, 25–68. Springer Handbooks.
   Cham: Springer International Publishing.
   https://doi.org/10.1007/978-3-030-02511-3_2.

                                                            [top of entry]

Appendix: Science mapping tools

   Science maps can be generated by any general software of graph analysis
   and visualization, such as Pajek and Gephi. However, in the last years,
   several dedicated tools have been developed specifically for science
   mapping, such as VOSviewer, CiteSpace, HistCite, Sci2 Tool, SciMAT,
   Bibexcel, and CitNetExplorer. In this section, we briefly present
   CiteSpace and VOSviewer, the two most popular science mapping tools
   (Pan et al. 2018). They are both free, constantly updated, and provided
   with extended user-guides. A full description of these and other tools
   can be found in (Moral-Munoz et al. 2019).

CiteSpace

   CiteSpacei was developed by Chaomei Chen in 2004 at Drexel University
   (USA) (Chen 2006). Since its first version, it has a special focus on
   the temporal dynamics of scientific networks. Its primary goal is to
   detect emerging trends and bursts of interest in a knowledge domain.
   Therefore, the visualizations it produces pay special attention to the
   dynamical aspects of the mapped domain: for instance, the number of
   citations received by an article is visualized as “citation tree
   rings”, in which the thickness of each ring is proportional to the
   number of citation received in a given time slice. CiteSpace also
   highlights “pivotal points” in the emergence of new specialties, i.e.,
   articles denoted by high betweenness centrality that bridge across
   different co-citation clusters.

   After the dataset is downloaded from Web of Science, Scopus, or other
   compatible bibliographic databases, CiteSpace allows to manage the
   entire workflow of science mapping. The network can be extracted from
   the data choosing different entities as nodes (author, institution,
   journal, country, cited publication, terms, keywords, etc.). The
   dataset can be split into time slices and the most relevant items
   according to some threshold can be selected (e.g., top-cited papers in
   each time slice). CiteSpace offers different methods to normalize the
   raw values and to “prune” the network in order to retain the most
   relevant links. Maps can be generated both in the form of graph-based
   visualizations, and timeline-based visualizations. The visualization
   tool allows controlling each feature of the map, from the layout to the
   labels of nodes, links, and clusters, to navigate the map, and to
   select specific nodes by clicking on them. Tools for clustering,
   automatic extraction of clusters’ labels, citation burst detection, and
   other analyses are included.

   CiteSpace is a very powerful software and it produces aesthetically
   impressive visualizations. However, it needs some expertise to fully
   take advantage of all its features. We suggest it to advanced users who
   already have some skills in science mapping.

VOSviewer

   VOSviewerii was developed by Nees Jan van Eck and Ludo Waltman in 2010
   at the Center for Science and Technology Studies (CWTS) in Leiden (The
   Netherlands) (Eck and Waltman 2010). If the first versions of the tool
   focused only on the visualization of bibliometric networks, the new
   versions allow to manage the entire workflow of science mapping. A
   special feature of VOSviewer is that it produces only distance-based
   visualizations, using a dedicated technique called VOS mapping
   technique, where VOS stands for “visualization of similarity” (Eck et
   al. 2010). Such a technique is a variant of multi-dimensional scaling
   that avoids some visual artifacts generated by classic MDS methods (see
   Section 4.1.4: Visualization).

   VOSviewer can create maps based on any network data (e.g., Pajek
   network files) but it can also extract the network from bibliometric
   data. It supports data from Web of Science, Scopus, PubMed, and other
   databases. The “Create map wizard” allows the user to extract from the
   data several kinds of networks. Possible nodes include publications,
   journals, authors, research organizations, countries, keywords, terms.
   Links can be co-authorship, co-occurrence, direct citation,
   bibliographic coupling or co-citation links. Moreover, VOSviewer uses a
   dedicated clustering technique, based on modularity, to find groups of
   similar nodes (Waltman, van Eck and Noyons 2010). The nodes are then
   colored according to the cluster they belong to. The size of the nodes
   and links is used to show some nodes or links property, such as the
   number of citations and co-occurrences. VOSviewer offers three
   visualizations of a map: the network visualization, the overlay
   visualization, and the density visualization. Zooming and scrolling
   functionalities allow exploring in detail the map. In the overlay
   visualization, properties of the nodes different from their cluster
   (e.g., the Impact Factor of a journal in a journal map), can be shown
   in different colors.

   Compared to CiteSpace, VOSviewer is less focused on the dynamical
   aspects of knowledge domains and offers fewer tools for the analysis of
   science maps. However, it is very easy to use, the create map wizard is
   intuitive, and the distance-based visualization facilitates the
   interpretation of the maps. We suggest it to the novices and to
   professionals who need a user-friendly tool for science mapping.

                                                            [top of entry]


   Visited Hit Counter by Digits times.
     __________________________________________________________________

   Version 1.0 published 2020-06-10
   Version 1.1 published 2021-04-26: reference to Osinska and Malak added

   Article category: KO in different contexts and applications

   This article (version 1.0) is also published in Knowledge Organization.
   How to cite it:
   Petrovich, Eugenio. 2021. “Science mapping and science maps”. Knowledge
   Organization 48, no. 7-8: 535–562. Also available in ISKO Encyclopedia
   of Knowledge Organization, eds. Birger Hjørland and Claudio Gnoli,
   https://www.isko.org/cyclo/science-mapping

   ©2020 ISKO. All rights reserved.
    #The 5 Towns Jewish Times » Feed The 5 Towns Jewish Times » Comments
   Feed The 5 Towns Jewish Times » Real Clear Daf: Q & A Review Comments
   Feed alternate alternate

   [tr?id=312844246146134&ev=PageView &noscript=1] fbpx

     * Home
          + Authors
     * News & Politics
          + Foreign Affairs
          + U.S. News
          + Opinion
          + Feel good news
          + Education
     * Israel
     * 5 Towns Community
     * Opinion
          + Letters to the Editor
          + The Larry Gordon Show
          + Advice
          + Reviews
          + Analysis
     * Torah
     * Lifestyle
          + Food
          + Home
          + Travel
          + Health / Nutrition
          + Fashion
          + Family / Dating
          + Music & Simchas
               o Classifieds
     * Read Paper Online
          + This Week’s Paper
          + Last Week’s paper
          + Archives

   Search ____________________

   The 5 Towns Jewish Times
     * Home
          + Authors
     * News & Politics
          + Foreign Affairs
          + U.S. News
          + Opinion
          + Feel good news
          + Education
     * Israel
     * 5 Towns Community
     * Opinion
          + Letters to the Editor
          + The Larry Gordon Show
          + Advice
          + Reviews
          + Analysis
     * Torah
     * Lifestyle
          + Food
          + Home
          + Travel
          + Health / Nutrition
          + Fashion
          + Family / Dating
          + Music & Simchas
               o Classifieds
     * Read Paper Online
          + This Week’s Paper
          + Last Week’s paper
          + Archives

   ____________________ Search
   [passover_listings-2024.jpg]

Real Clear Daf: Q & A Review

   October 4, 2017
   126
   0
   Share on Facebook
   Tweet on Twitter

   A review of some of this week’s daf yomi key concepts (Shabbos Chol
   Ha’moed Sukkos – Sanhedrin)

   By Rabbi Shmuel Wise

   Q: What is the halachah if a “dead man” kills?

   A: We discussed this fascinating issue on 78a. By “dead man” we mean a
   person who has suffered a specific mortal injury (e.g. his esophagus
   has been severed) that defines him as a halachic “treifah.” Rava there
   states that if someone kills a treifah person he is not liable as a
   murderer, for the Torah regards this man as already dead! Rava then
   rules that if the treifah person kills, he is not subject to the death
   penalty (unless he literally committed the murder in front of the
   court). Why not? Because of the requirement that testimony always be
   subject to refutation through the system of hazamah.

   Namely, we require the possibility that future witnesses will come in
   and refute the first testimony by reporting that the earlier witnesses
   were with them at the time they claim to have witnessed the crime. The
   Torah decrees that the new testimony completely discredits the first
   testimony, and we administer to the original witnesses the punishment
   that they had conspired to bring about on their victim.

   Based on the above, we could never bring admissible testimony against
   this treifah person who allegedly committed murder. For in the event
   that new witnesses were to come and discredit the first testimony
   against the treifah, the Torah would not say to punish the false
   witnesses with the death penalty that they tried to bring against the
   treifah. That is because of the idea mentioned earlier that the Torah
   considers the treifah to be already dead. That being so, hazamah, which
   is defined as a reciprocal punishment for the false testimony, is
   inapplicable here where the false testimony merely sought to kill a
   person who was already considered dead (killing these healthy witnesses
   would not be reciprocal).

   Being that hazamah could never apply to this situation, the original
   testimony against the treifah can never be accepted to begin with. So
   this treifah murderer walks, scot-free (at least until he drops dead of
   his treifah injury!).

   Later in the Gemara, Rav Ashi takes this concept one step further and
   considers a case in which treifah witnesses testify that someone
   committed a capital offense, and subsequently other witnesses testify
   that the treifah witnesses’ testimony was false (“they were with us at
   the time”). Rav Ashi asserts that we would never reciprocate and impose
   the death penalty on the treifah witnesses because their testimony
   would never be accepted to begin with.

   Why not? Because if we take the case one more step, it is evident that
   their testimony could never subject them to a hazamah punishment. The
   treifah witnesses aren’t subject to hazamah, because the second set of
   witnesses aren’t subject to hazamah. This might sound puzzling: I
   thought it’s the first group of witnesses that is always refuted
   through hazamah; the second group is always the party responsible for
   falsifying the earlier group. But the truth is that in theory the
   tables could turn again if a third group of witnesses testifies that it
   cannot be true that group #2 was with group #1 because they (group #2)
   were with them (group #3) at that time.

   If this happened, the halachah would be that the original testimony of
   group #1 is restored and group #2 would be subject to the reciprocal
   hazamah punishment! In our case, however, we wouldn’t be able to punish
   group #2 since their false testimony (that the treifah witnesses are
   false witnesses and therefore deserve the hazamah punishment) would
   have killed people that are already considered dead!

   The bottom line of all of this, argues Rav Ashi, is that we could never
   kill treifah witnesses who attempt to falsely testify that someone
   committed a capital offense, because their testimony would never be
   accepted to begin with.

   Rava, however, does not agree with this. In Rava’s view, we would
   accept the testimony of treifah witnesses regarding a capital offense,
   and we would therefore kill them if they were exposed as false
   witnesses through hazamah. What of Rav Ashi’s point that group #2’s
   testimony isn’t subject to hazamah (and consequently should be rejected
   altogether, with the result that the treifah witnesses’ testimony
   should be rejected to begin with, as explained above)? Rashi explains
   that Rava is of the opinion that the requirement that testimony be
   subject to hazamah doesn’t apply to the testimony of the witnesses who
   are exposing the previous testimony as false (e.g. group #2).

   The logic for this is as follows. On the face of it, there is no
   rational way to explain the halachah of hazamah. For why should we
   believe the second group of witnesses any more than the first group,
   which obviously claims that it did witness this crime? Yet the Torah
   decreed that when subsequent witnesses refute the earlier testimony
   through hazamah, we regard the earlier witnesses as entirely
   discredited. So since the Torah evidently gave “superpowers” to the
   second testimony, it should come as no surprise that the Torah accepts
   this testimony even if it possesses the defect of not being subject to
   hazamah. In other words, if the Torah upholds this testimony in spite
   of the fact that two other credible witnesses have contradicted it,
   then it logically follows that this testimony can weather the
   relatively minor issue that it lacks the built-in deterrent that it be
   subject to refutation by hazamah.

   How would Rav Ashi respond to this argument? Perhaps Rav Ashi would say
   that you have no right to make any logical extensions from a law that
   is clearly not governed by logic. This viewpoint can be compared to the
   view that, ironically, is expressed by Rava back on 27a. The Gemara
   there explores the question of whether we apply the status of a witness
   whose testimony was refuted through hazamah retroactively. That is, do
   we consider any testimony he had given between the false testimony and
   the date on which he was falsified to be testimony given by a “liar”
   and consequently invalid testimony?

   Rava there states that we do not apply this false witness’s
   disqualified status retroactively. Why not? Because since (as explained
   above) the whole concept of hazamah defies logic, we cannot treat it as
   a regular case where we would certainly establish the person’s status
   from the moment of the crime itself. So Rav Ashi could apply this kind
   of argument: we have no right to extrapolate from hazamah and say that
   the Torah also exempted the requirement that testimony be subject to
   hazamah. We must stick with strictly what the actual verse states and
   not assume anything else.

   Which begs the question: how would Rava distinguish between the issue
   of 27a and our Gemara? Seemingly, Rava is playing both sides of the
   fence here. Perhaps Rava would say this: Indeed, as is clear from his
   view on 27a, we cannot take the teaching of hazamah beyond its
   bare-bones teaching, which is that when later witnesses refute these
   witnesses, we consider them false witnesses. Because this is a novel
   ruling, we can only apply it today and going forward. But on our page,
   Rava is asserting that logic compels us to say that an exemption from
   the normal requirement that testimony be subject to hazamah must have
   been included in the teaching itself. Much like the classic example of
   “if a guy can lift 100 pounds he must be able to lift 50,” the same,
   Rava argues, applies to the second set of witnesses; if the Torah gave
   them the power to override even actual witnesses then, perforce, they
   have the power to be accepted even without being subject to hazamah.

   With that, I wish you a joyful and meaningful chag.

   Rabbi Wise is maggid shiur of Real Clear Daf (realcleardaf.com), a
   website and mobile app (for iOS and Android) that offers free audio
   shiurim and other resources to assist your journey through Shas. To be
   a sponsor or to reach Rabbi Wise, please write to
   rabbiwise@realcleardaf.com or call 855-ASK-RCD-1 (275-7231).


   SHARE
   Facebook
   Twitter
     *

       IFRAME:
       http://www.facebook.com/plugins/like.php?href=https://www.5tjt.com/
       real-clear-daf-q-review-4/&layout=button_count&show_faces=false&wid
       th=105&action=like&colorscheme=light&height=21

     * tweet

   Previous articleWhat’s In A Dot? The ‘Hu’ vs. ‘Ho’ Conundrum
   Next articleStoryline: Ma’aser Kesafim For Esrog

RELATED ARTICLESMORE FROM AUTHOR

   Home

Starting The New Year With Congestion Pricing

   News & Politics

‘Hostages have to get out now’—Trump ups ante on Hamas

   Torah

The Sincerity Of Converts

LEAVE A REPLY Cancel reply


   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   Please enter your comment!
   ______________________________
   Please enter your name here
   ______________________________
   You have entered an incorrect email address!
   Please enter your email address here

   Post Comment

Our Newsletter

   SUBSCRIBE NOW!

   ____________________

   Subscribe to our newsletter and get notified about our newest projects
   and promotions.

   SUBMIT

   [X]
   Leave this field empty if you're human: ____________________
   - Advertisement -

Categories

   Commercial Real Estate for Rent (1)
   For Rent (4)
   Help Wanted (8)
   Miscellaneous (1)
   Real Estate for Sale (9)
   Services Provided (21)

Stay connected

   77,778FansLike
   1,530FollowersFollow
   1,292FollowersFollow

Latest article

Starting The New Year With Congestion Pricing

   Home January 7, 2025
   0
   The New Year tends to bring many new changes. There are changes in our
   health insurance plans, new laws, new tax categories, not to...

‘Hostages have to get out now’—Trump ups ante on Hamas

   News & Politics January 7, 2025
   0
   President-elect vows "hell to pay" if terrorists don't free American
   captives. EREZ LINN (Jan. 7, 2025 / Israel Hayom) U.S. President-elect
   Donald Trump again issued a stern...

The Sincerity Of Converts

   Torah January 7, 2025
   0
     Musings Of A Shliach From Montana One of the inevitable realities of
   shlichus is the many phone calls we get from people seeking to
   convert...

Weather

   New York
   clear sky
   ____________________ enter location
   25.8 ° F
   27.2 °
   24.2 °
   53%
   7.4mph
   0%
   Wed
   26 °
   Thu
   29 °
   Fri
   35 °
   Sat
   32 °
   Sun
   36 °

   [5tjt-small-logo.png]
   Contact us: dovi@5tjt.com
   or ygordon5t@gmail.com

Search 5TJT.com

Links

     * Read the Paper Online
     * About Us
     * Tehilim List
     * Newspaper
     * Advertise In 5TJT

Categories

     * News & Politics
     * Lifestyle
     * Media
     * Business
     * 5 Towns Community
     * Judaism/Spirituality

     * News & Politics
     * Lifestyle
     * Media
     * Business
     * 5 Towns Community
     * Judaism/Spirituality

   © Copyright © 2023 The 5 Towns Jewish Times. All rights reserved.

   MORE STORIES

Starting The New Year With Congestion Pricing

   Home January 7, 2025

‘Hostages have to get out now’—Trump ups ante on Hamas

   News & Politics January 7, 2025

The Sincerity Of Converts

   Torah January 7, 2025

Vayechi: Good and Pleasant

   Torah January 6, 2025

I Hope it’s a Mouse

   Humor January 6, 2025

A High Bar To Meet

   Advice January 6, 2025

   Edit with Live CSS

   .submitbtnclass_____________________________________________
   {___________________________________________________________
           padding: 15px;______________________________________
       color: #ffffff;_________________________________________
       background: #cb2f29;____________________________________
       text-transform: uppercase;______________________________
       /* float: right; */_____________________________________
       margin: 14px;___________________________________________
         margin: 14px;_________________________________________
       position: absolute;_____________________________________
       right: 0;_______________________________________________
       margin-right: 3px;______________________________________
       top: -39px;_____________________________________________
       ________________________________________________________
   }___________________________________________________________
   ____________________________________________________________
   @media (min-width:767px)____________________________________
   {___________________________________________________________
   .search .td_module_11 .td-module-thumb______________________
   {max-width:324px;}__________________________________________
   ____________________________________________________________
   .submitbtnclass_____________________________________________
   {___________________________________________________________
           padding: 15px;______________________________________
       color: #ffffff;_________________________________________
       background: #cb2f29;____________________________________
       text-transform: uppercase;______________________________
       /* float: right; */_____________________________________
       margin: 14px;___________________________________________
       position: absolute;_____________________________________
       right: 0;_______________________________________________
       margin-right: 37px;_____________________________________
       top: -43px;_____________________________________________
       ________________________________________________________
   }___________________________________________________________
   }___________________________________________________________
   @media (max-width:767px)____________________________________
   {___________________________________________________________
   .td-main-sidebar____________________________________________
   {margin-top:30px;}__________________________________________
   }___________________________________________________________
   .page-nav {_________________________________________________
         margin: 10px 0px -29px;_______________________________
   }___________________________________________________________
   ____________________________________________________________
   .newspaper .td_block_padding {______________________________
       padding:0px 16px ;______________________________________
       MARGIN-BOTTOM: 0px; }___________________________________
   .page-template-custom-templatestpl-newspaper-php .td-main-pa
      _________________________________________________________
   .newspaper .td_module_3 {___________________________________
       min-height: 280px;______________________________________
   }   ________________________________________________________
   .newspaper .td_module_3 img {_______________________________
       min-height: 205px;______________________________________
   }      _____________________________________________________
   ____________________________________________________________
   #efblcf , .home .ctcfm-sidebar , .advert-img , .advert-templ
   {display:none }_____________________________________________
   .td-grid-style-1.td-hover-1 .td-module-thumb a:last-child:be
   {background:transparent !important;}________________________
   .ui-datepicker-title select {_______________________________
       margin-top: 2.5%;_______________________________________
       color: #000;____________________________________________
   }___________________________________________________________
   .adverts-flexbox-title {____________________________________
       font-weight: normal !important;_________________________
       padding: 0.5em 0 0.5em 0 ;______________________________
       line-height: 19px !important;___________________________
   }___________________________________________________________
   .adverts-flexbox-icon {_____________________________________
       color: #2e5390 !important;______________________________
   }___________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   @font-face {________________________________________________
     font-family: 'adverts-glyphs';____________________________
     src: url('https://www.5tjt.com/wp-content/plugins/wpadvert
     src: url('https://www.5tjt.com/wp-content/plugins/wpadvert
          url('https://www.5tjt.com/wp-content/plugins/wpadvert
          url('https://www.5tjt.com/wp-content/plugins/wpadvert
          url('//d16cunm4ue8a76.cloudfront.net/wp-content/plugi
     font-weight: normal;______________________________________
     font-style: normal;_______________________________________
   }___________________________________________________________
   ____________________________________________________________
   .fa {_______________________________________________________
       padding: 0px 10px 0px 0px !important;___________________
   }___________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   .lbanner {width: 19%; position: absolute !important; _______
   padding-right:0 !important;}________________________________
   .lbanner .wpb_wrapper {max-width:323px;}____________________
   @media (max-width: 1695px) {________________________________
   .lbanner {__________________________________________________
   width: 15%;_________________________________________________
   }___________________________________________________________
   }___________________________________________________________
   @media (max-width: 1543px) {________________________________
   .lbanner {__________________________________________________
   width: 11%;_________________________________________________
   }___________________________________________________________
   }___________________________________________________________
   @media (max-width: 1380px){_________________________________
       .lbanner {display: none !important;}____________________
   }___________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
    #td-mobile-nav {___________________________________________
       background: #1b2d4f !important;_________________________
   }___________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   .worldnews .td-module-meta-info time, ______________________
   .worldnews .td-module-meta-info .td-module-comments,________
   .worldnews .td-animation-stack .td-module-thumb,____________
   .worldnews .td-excerpt, .worldnews .td-block-span6 .td-excer
   .worldnews .td_module_4 .td-module-thumb {display: block}___
   .worldnews .td_module_6 .item-details{margin-left:0; min-hei
   .worldnews .td_module_6 {padding-bottom: 5px;}______________
   .worldnews .td_module_6 .item-details{border-bottom: 1px sol
   .worldnews .td_module_6:last-child .item-details{border-bott
   .worldnews .td-load-more-wrap a[style^="visibility: visible;
   .worldnews .td-module-meta-info{margin-bottom: 10px;}_______
   .worldnews .td_module_4 {padding-bottom: 0px;}______________
   .worldnews .td-block-span6:nth-child(odd) {clear:left}______

   Save
   Write CSS OR LESS and hit save. CTRL + SPACE for auto-complete.
    [ ]

   Light
   (BUTTON)

Essential Logic Gates to Know for Discrete Mathematics

Related Subjects

   🧩 Discrete Mathematics

   Logic gates are the building blocks of digital circuits, representing
   fundamental operations in Boolean algebra. They process binary inputs
   to produce outputs, forming the basis for complex logical expressions
   and decision-making in computer systems. Understanding these gates is
   key in Discrete Mathematics.
    1. AND gate
          + Outputs true (1) only if all inputs are true (1).
          + Symbolized by a multiplication operation (A · B).
          + Fundamental in constructing logical expressions and circuits.
          + Used in decision-making processes where all conditions must be
            met.
          + Truth table: Only one output (1) for the input combination (1,
            1).
    2. OR gate
          + Outputs true (1) if at least one input is true (1).
          + Symbolized by an addition operation (A + B).
          + Essential for scenarios where any condition being true is
            sufficient.
          + Combines multiple signals in digital circuits.
          + Truth table: Outputs (1) for input combinations (1, 0), (0,
            1), and (1, 1).
    3. NOT gate
          + Outputs the inverse of the input; true (1) becomes false (0)
            and vice versa.
          + Symbolized by a bar over the variable (¬A or A').
          + Fundamental for negation in logical expressions.
          + Used to create more complex logic circuits by inverting
            signals.
          + Truth table: Outputs (1) for input (0) and (0) for input (1).
    4. NAND gate
          + Outputs false (0) only if all inputs are true (1); otherwise,
            it outputs true (1).
          + Combination of an AND gate followed by a NOT gate.
          + Universal gate; can be used to create any other logic gate.
          + Important in digital circuit design for simplifying logic.
          + Truth table: Outputs (1) for all combinations except (1, 1).
    5. NOR gate
          + Outputs true (1) only if all inputs are false (0); otherwise,
            it outputs false (0).
          + Combination of an OR gate followed by a NOT gate.
          + Also a universal gate; can be used to construct any other
            logic gate.
          + Useful in creating circuits that require a default false
            state.
          + Truth table: Outputs (1) only for input combination (0, 0).
    6. XOR gate
          + Outputs true (1) if an odd number of inputs are true (1).
          + Symbolized by A ⊕ B.
          + Commonly used in arithmetic operations and error detection.
          + Represents exclusive conditions where only one input should be
            true.
          + Truth table: Outputs (1) for input combinations (1, 0) and (0,
            1).
    7. XNOR gate
          + Outputs true (1) if an even number of inputs are true (1).
          + Combination of an XOR gate followed by a NOT gate.
          + Useful for equality checking in digital circuits.
          + Represents inclusive conditions where inputs must match.
          + Truth table: Outputs (1) for input combinations (0, 0) and (1,
            1).
     __________________________________________________________________

   Fiveable

About Us

   About FiveableBlogCareersTestimonialsCode of ConductTerms of UsePrivacy
   PolicyCCPA Privacy Policy

Resources

   Cram ModeAP Score CalculatorsStudy GuidesPractice QuizzesGlossaryCrisis
   Text LineRequest a Feature (BUTTON) Report an Issue

Stay Connected
     __________________________________________________________________

© 2024 Fiveable Inc. All rights reserved.

AP® and SAT® are trademarks registered by the College Board, which is not
affiliated with, and does not endorse this website.
     __________________________________________________________________

About Us

   About FiveableBlogCareersTestimonialsCode of ConductTerms of UsePrivacy
   PolicyCCPA Privacy Policy

Resources

   Cram ModeAP Score CalculatorsStudy GuidesPractice QuizzesGlossaryCrisis
   Text LineRequest a Feature (BUTTON) Report an Issue

© 2024 Fiveable Inc. All rights reserved.

AP® and SAT® are trademarks registered by the College Board, which is not
affiliated with, and does not endorse this website.
   #Royal Musical Association » Feed Royal Musical Association » Comments
   Feed Royal Musical Association » Conference Report: Music, Medievalism,
   and Modernism, 27-28 June 2018, Huddersfield Comments Feed JSON oEmbed
   (JSON) oEmbed (XML)

   Skip to content

   RMA logo

Royal Musical Association

     * Home
     * RMA 150
          + Anniversary Fellowships
          + Time Capsule
          + Anniversary Conference
     * About
          + Our history
          + Chapters & Study Groups
          + Council and Committees
          + Code of Conduct
          + Constitution and Rules
     * Activities
          + Events
          + Publications
          + Grants & Awards
          + Equality, Diversity and Inclusion
          + Music Education Initiative
     * Resources
          + Displaced Musicians
          + Mentoring Scheme
          + Obituaries
          + REF Analysis
     * Join
     * Give
     * Students
          + ARAMAES – The Student Forum of the RMA
          + Research Skills – Training and Resources
          + Career development & resources
          + Student Committee
          + Get Involved
          + Student blogs and groups
     * Members
     * Contact

Conference Report: Music, Medievalism, and Modernism, 27-28 June 2018,
Huddersfield

   Posted on 29 Oct 2018

   It is a sort of common wisdom for us to say that the past ought to
   inform the future. Lest, of course, we be—as the now somewhat cliché
   Santayana quote would warn us—condemned to repeat it ad infinitum. But
   would that necessarily be such a bad thing? And at the very least,
   might we (or someone) even find it aesthetically, perhaps even
   politically or socially, desirable to visit, reimagine, or
   instrumentalise the past (or the aura, say, of pastness more
   generally)?

   That abovementioned cliché speaks volumes about modernity, its
   attendant ideologies, and its relationship to history, or at least our
   common perception of that relationship. History is something modernity
   moves away from. Modernism, we know, is the disavowal of the past, or,
   in music, the dissolution of harmony: architectural brutalism, nomadic
   literary stream-of-consciousness, Fordist production lines. In other
   words, the artistic response to industrial alienation—and in some
   iterations, a kind of perverse celebration of it.

   And yet, ghosts of a distant, oftentimes medieval, past haunt modernity
   interminably. A liminal period of imaginative possibility wedged
   between classical antiquity and the Enlightenment, the ‘medieval’ it
   seems to me, has, in its afterlives, been modernity’s Other. From the
   protomodernisms of the Pre-Raphaelite Brotherhood and the utopian and
   fantasy socialism of William Morris, to Wagnerian Romanticism and the
   neo-gothic literary and architectural revivals, medievalism informs
   modernity profoundly. In the twentieth century this only intensified
   and diversified, and it is this paradox—that is, for the past to inform
   the overtly forward-thinking agendas associated with modernism—that
   inspired the conference.

   The conference began, then, with a ‘Prehistories’ session, providing
   crucial context from musical modernity’s long dawn in the nineteenth
   century. Belinda Robinson (University of Oxford) spoke first about
   Hungarian nationalist composer Ferenc Erkel and the historically-themed
   opera Bátori Mária from 1840. Her paper articulated highly salient
   themes to which we would return many times: chiefly, the way that
   contemporary social and political issues might be played out on the
   medieval canvas. But Robinson’s insights, more significantly, sought to
   problematise a prevailing understanding of the contemporary
   relationship between past and present in art (and, here, in opera).
   Erkel gave no allegorical consolation (and, thus, atonement) for
   Hungarian nation building in his historical rendering of the story of
   Bátori Mária. Rather, the opera’s vision of history is tragic and
   cyclical: the past is not some distant repository that we merely
   ‘learn’ from, but it is, instead, simultaneous with both present and
   future, unresolved. Tadhg Sauvey (University of Cambridge) followed
   this up with a revealing discussion of the legend of César Franck and
   the cult of Franckisme. A sort of fin-de-siècle medievalism, followers
   of Franckisme promoted a primitivistic critique of the present and a
   retreat into spiritual simplicity and musical purity in the era of
   French Symbolist ascendency. Highly prescient, Franckisme prefigures a
   number of musical medievalisms that would come.

   The second session concerned musical modernity specifically,
   demonstrating medievalism’s diverse, and contradictory, legacy in the
   twentieth century. John Gabriel (University of Hong Kong), for
   instance, took us to interwar Germany, and the medievalist origins of
   Gebrauchsmusik, which saw in the medieval period a truly ‘functional’
   musical praxis. In particular, his paper contrasted the left-wing Hanns
   Eisler with the conservative Ernst Krenek: the former repurposing
   medieval religious didacticism and communal singing, and the latter
   melding twelve-tone technique with a neo-medievalist lionisation of the
   Holy Roman Empire as a model for then Fascist Austria. Nana Katsia
   (Tbilisi State Conservatoire) revealed an ongoing tradition of the
   medieval ‘mystery play’ in operas by Wagner, Schoenberg, and Messiaen.
   Arguably the beginning of European theatre, the mystery play (or,
   rather, the hybrid opera-mystery play as it becomes here) may have
   transformed beyond recognition, but it is nevertheless governed by its
   logics of religious ritual. In twentieth-century opera, the mystery
   play is not so much as preserved, but transformed.

   The session then moved onwards in time to the latter half of the
   twentieth century: Violetta Kostka (Academy of Music in Gdansk)
   presented on Polish-born composer Paweł Szymańsky. A leading figure in
   the Polish contemporary music scene, Szymańsky, despite having a highly
   idiosyncratic style and sound, derives the majority of his music from
   transformations of earlier musical styles. Two pieces highlighted by
   Kostka demonstrate contrasting approaches to medievalism taken by a
   living composer: Miserere, a choral piece, and Three Pieces, an
   algorithmically generated work for three recorders and a metronome
   (both 1993). Finally, Joseph Wong (Open University of Hong Kong),
   himself a composer, provided a broad overview of musical medievalist
   borrowing in modern music: in Lutosławski, Ligeti, and in Takemitsu.
   His emphasis on stylistic diversity among composers in the latter half
   of the twentieth century came to highlight how reinvention and
   revitalisation are central to his composers’ creative processes.

   A final session for the day tackled medievalism in opera: Giuseppe
   Montemagno (Academic of Fine Arts, Catania) delivered a fascinating
   paper (cowritten with tenor Giuseppe Filianoti) on Francesco Cilèa’s
   Gloria (1907) set in fourteenth-century Siena, and detailed its vast
   web of influences, drawing it, too, into a context of fin-de-siècle
   Symbolism and Franciscan simplicity already touched upon that morning.
   George Haggett (Royal Holloway, University of London) then delivered
   his ‘lurid’ account of George Benjamin’s landmark 2012 opera Written on
   Skin: a body-centred reading of ‘operatic ekphrasis’ which sees that
   opera’s medievalism (its source material a thirteenth-century Occitan
   razo) as something profoundly physical—viscerally so.

   The first day culminated with a keynote from David Matthews (University
   of Manchester), a professor of medieval literature and a leader in the
   burgeoning interdisciplinary field of Medievalism Studies. That field
   was, in some respects, an inspiration for this conference, and it has
   been my intention here to bring its ideas—above all, its celebration of
   anachronism and co-temporality—to musicology (and, indeed, vice versa).
   Professor Matthews, then, provided a hugely important introduction for
   the mainly musicological conference: he covered the ‘long decade’
   (1839-51) that he sees as constituting medievalism’s ‘high watermark’,
   restorative and reflective types of nostalgia, and he set down the
   gauntlet for what a musical contribution to the field might look like.
   That keynote was followed by a very rewarding set of roundtable
   responses: from Lisa Colton (University of Huddersfield), Edward Venn
   (University of Leeds), myself, and another ‘outsider’, Andrew Elliott
   (University of Lincoln), who works on medievalism in modern media and
   politics.

   The second day pushed the first day’s discussion into yet new
   directions, and a session on ‘Medievalism in Practice’ brought together
   performers, composers, and practitioners to engage the realities of
   creating and innovating with the medieval in the present. Stef Conner
   (University of Huddersfield), framed that session with a critical
   account of historical performance practice and a defence of
   subjectivity. Her paper dealt with the vexed, but highly important,
   notion of authenticity and the considerable distance between rigid
   types of scholarly thought and those taken by performers who propose to
   embody the traditions exemplified by their medieval sources. Litha
   Efthymiou (University of Lincoln) delivered a first-hand account of a
   composer working, collaboratively, to develop a stage piece that was
   inspired by ancient Old Hispanic chant notation: the piece, Myisi was
   premiered in 2015 at the Tête à Tête opera festival.

   Carmen Troncoso and Lynette Quek (both University of York)—a recorder
   player and a sound artist, respectively—explored their own
   collaborations on a set of pieces which engaged the origins of the
   recorder. Moreover, they offered a notion of ‘simultaneous inhabitancy’
   and described the juxtaposition of elements both old and new in their
   music, and in the evolution of the recorder itself. Carlos Zamora
   (University of York), a composer from Chile ended the session with an
   analysis of a piece of his own—Stampide of Birds for recorder
   quartet—inspired by medieval estampie dance forms (and conceived in a
   Pythagorean tuning).

   The final session of the conference (‘Medievalism on screen’) ended on
   a thoroughly modern (if not strictly modernist) note, with papers about
   recent ‘historical’ television shows. William Everett (University of
   Missouri) even brought popular music theatre to the mix speaking about
   Galavant (2014-15), a comic television musical combining Broadway
   tropes with medieval contexts. Strikingly, this charmingly silly series
   embodies (and, in the process, comments on) medievalism instructively,
   and refracts through its thirteenth-century lens major
   twenty-first-century issues, including, but not limited to, race,
   gender, class, and politics. This was followed by James Cook
   (University of Edinburgh), who, to end the conference, extended the
   medievalist purview to Sky’s 2018 Brittania series, a dramatisation of
   the Roman invasion of the British Isles. Indeed, Cook also challenged
   the notion of linear time here: pre-Roman Britain’s pagan population
   proposes an analogously barbarous challenge to Roman enlightenment,
   and—pitched as the show is as a sort of commentary on contemporary
   debates of national identity—draws much upon established medievalist
   musical tropes to melt a straightforward, reducible, kind of
   chronology.

   The past is not mere history, then (or should I say, history is not
   merely in the past?). More than a bygone space to learn from, it
   continues to have a life of its own: refracting and transforming our
   present, and influencing the future. This conference successfully
   provided a forum for this reflection, refining the Call for Papers’
   initial themes. At our present historical juncture, where modernity’s
   progress might feel in doubt, there is an added urgency in this
   discussion: if modernism (and modernity) seems to assume a certain
   unidirectional temporal flow, medievalism reminds us that,
   imaginatively speaking, progress is not always guaranteed—or that we
   may not find it where we expect to.

   Alexander Kolassa is a Lecturer in Music at the Open University; he is
   a musicologist who writes on contemporary music and medievalism as well
   as sound and music in film, and a composer whose music has been
   performed nationally.

   News Leave a comment

Post navigation

   « Conference report: Music and/as Process: Music and Language, 29 Jun-1
   July 2018, Edinburgh
   Conference Report: 20th Biennial International Conference on
   Nineteenth-Century Music, 2–4 July 2018, Huddersfield »

Leave a Reply Cancel reply

   Your email address will not be published. Required fields are marked *

   Comment *
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________

   Name * ______________________________

   Email * ______________________________

   Website ______________________________

   [ ] Save my name, email, and website in this browser for the next time
   I comment.

   Post Comment

   Δ
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________

   Search for: ____________________ (BUTTON)

Forthcoming Events

   RMA Sponsored Event BFE/RMA Research Students' Conference

   9 Jan 25 - 11 Jan 25

   University of Aberdeen

   RMA Sponsored Event Musical Glocalities and their Influence

   Sound, geography, community

   16 Jan 25 - 17 Jan 25

   Canterbury

   RMA Sponsored Event AI and Digital Innovations for Voice and Vocal
   Music

   Creative Digital Dynamics

   7 Mar 25

   Edinburgh Futures Institute

   RMA Sponsored Event Everyday Music Scenes

   Pubs, Clubs and 'Stutes

   14 Apr 25 - 15 Apr 25

   Newcastle

   More events...

   The RMA is a registered charity (no. 222410) and a UK limited company
   (no. 00081327). View Privacy Policy.
   Powered by WordPress and Merlin.

   cheap jordans|wholesale air max|wholesale jordans|wholesale
   jewelry|wholesale jerseys
     __________________________________________________________________

           Thorstein Veblen, The Higher Learning in America, 1918.
     __________________________________________________________________

                                 CHAPTER ONE

          Introductory: The Place of the University in Modern Life

                                      I

       In any known civilization there will be found something in the way
           of esoteric knowledge. This body of knowledge will vary
      characteristically from one culture to another, differing both in
   content and in respect of the canons of truth and reality relied on by
       its adepts. But there is this common trait running through all
   civilizations, as touches this range of esoteric knowledge, that it is
     in all cases held, more or less closely, in the keeping of a select
   body of adepts or specialists -- scientists, scholars, savants, clerks,
   priests, shamans, medicinemen -- whatever designation may best fit the
                                 given case.

       In the apprehension of the given society within which any such body
      of knowledge is found it will also be found that the knowledge in
   question is rated as an article of great intrinsic value, in some way a
   matter of more substantial consequence than any or all of the material
    achievements or possessions of the community. It may take shape as a
      system of magic or of religious beliefs, of mythology, theology,
    philosophy or science. But whatever shape it falls into in the given
   case, it makes up the substantial core of the civilization in which it
     is found, and it is felt to give character and distinction to that
                                civilization.

       In the apprehension of the group in whose life and esteem it lives
       and takes effect, this esoteric knowledge is taken to embody a
      systematization of fundamental and eternal truth; although it is
    evident to any outsider that it will take its character and its scope
   and method from the habits of life of the group, from the institutions
    with which it is bound in a web of give and take. Such is manifestly
   the case in all the historic phases of civilization, as well as in all
      those contemporary cultures that are sufficiently remote from our
         everyday interests to admit of their being seen in adequate
     perspective. A passably dispassionate inquiry into the place which
     modern learning holds in modern civilization will show that such is
    also the case of this latest, and in the mind of its keepers the most
    mature, system of knowledge. It should by no means be an insuperably
     difficult matter to show that this "higher learning" of the modern
     world, the current body of science and scholarship, also holds its
    place on such a tenure of use and wont, that it has grown and shifted
     in point of content, aims and methods in response to the changes in
     habits of life that have passed over the Western peoples during the
    period of its growth and ascendancy. Nor should it be embarrassingly
      difficult to reach the persuasion that this process of change and
   supersession in the scope and method of knowledge is still effectually
     at work, in a like response to institutional changes that still are
                       incontinently going forward.^1

        To the adepts who are occupied with this esoteric knowledge, the
    scientists and scholars on whom its keeping devolves, the matter will
    of course not appear in just that light; more particularly so far as
   regards that special segment of the field of knowledge with the keeping
   and cultivation of which they may, each and several, be occupied. They
   are, each and several, engaged on the perfecting and conservation of a
   special line of inquiry, the objective end of which, in the view of its
   adepts, will necessarily be the final and irreducible truth as touches
    matters within its scope. But, seen in perspective, these adepts are
       themselves to be taken as creatures of habit, creatures of that
    particular manner of group life out of which their preconceptions in
    matters of knowledge, and the manner of their interest in the run of
    inquiry, have sprung. So that the terms of finality that will satisfy
    the adepts are also a consequence of habituation, and they are to be
    taken as conclusive only because and in so far as they are consonant
     with the discipline of habituation enforced by that manner of group
    life that has induced in these adepts their particular frame of mind.

       Perhaps at a farther remove than many other current phenomena, but
      none the less effectually for that, the higher learning takes its
       character from the manner of life enforced on the group by the
    circumstances in which it is placed. These constraining circumstances
    that so condition the scope and method of learning are primarily, and
      perhaps most cogently, the conditions imposed by the state of the
   industrial arts, the technological situation; but in the second place,
    and scarcely less exacting in detail, the received scheme of use and
     wont in its other bearings has its effect in shaping the scheme of
   knowledge, both as to its content and as touches the norms and methods
     of its organization. Distinctive and dominant among the constituent
      factors of this current scheme of use and wont is the pursuit of
       business, with the outlook and predilections which that pursuit
         implies. Therefore any inquiry into the effect which recent
   institutional changes may have upon the pursuit of the higher learning
   will necessarily be taken up in a peculiar degree with the consequences
    which an habitual pursuit of business in modern times has had for the
     ideals, aims and methods of the scholars and schools devoted to the
                              higher learning.

         The Higher Learning as currently cultivated by the scholars and
   scientists of the Western civilization differs not generically from the
     esoteric knowledge purveyed by specialists in other civilizations,
     elsewhere and in other times. It engages the same general range of
     aptitudes and capacities, meets the same range of human wants, and
   grows out of the same impulsive propensities of human nature. Its scope
    and method are different from what has seemed good in other cultural
   situations, and its tenets and canons are so far peculiar as to give it
   a specific character different from these others; but in the main this
   specific character is due to a different distribution of emphasis among
    the same general range of native gifts that have always driven men to
     the pursuit of knowledge. The stress falls in a somewhat obviously
     different way among the canons of reality by recourse to which men
    systematize and verify the knowledge gained; which is in its turn due
    to the different habituation to which civilized men are subjected, as
   contrasted with the discipline exercised by other and earlier cultures.

         In point of its genesis and growth any system of knowledge may
      confidently be run back, in the main, to the initiative and bias
      afforded by two certain impulsive traits of human nature: an Idle
                Curiosity, and the Instinct of Workmanship.^2

       In this generic trait the modern learning does not depart from the
    rule that holds for the common run. Men instinctively seek knowledge,
    and value it. The fact of this proclivity is well summed up in saying
   that men are by native gift actuated with an idle curiosity, -- "idle"
      in the sense that a knowledge of things is sought, apart from any
    ulterior use of the knowledge so gained.^3 This, of course, does not
     imply that the knowledge so gained will not be turned to practical
   account. In point of fact, although the fact is not greatly relevant to
    the inquiry here in hand, the native proclivity here spoken of as the
       instinct of workmanship will unavoidably incline men to turn to
    account, in a system of ways and means, whatever knowledge so becomes
    available. But the instinct of workmanship has also another and more
    pertinent bearing in these premises, in that it affords the norms, or
     the scheme of criteria and canons of verity, according to which the
      ascertained facts will be construed and connected up in a body of
     systematic knowledge. Yet the sense of workmanship takes effect by
      recourse to divers expedients and reaches its ends by recourse to
    varying principles, according as the habituation of workday life has
     enforced one or another scheme of interpretation for the facts with
                            which it has to deal.

       The habits of thought induced by workday life impose themselves as
   ruling principles that govern the quest of knowledge; it will therefore
    be the habits of thought enforced by the current technological scheme
       that will have most (or most immediately) to say in the current
   systematization of facts. The working logic of the current state of the
   industrial arts will necessarily insinuate itself as the logical scheme
      which must, of course, effectually govern the interpretation and
     generalizations of fact in all their commonplace relations. But the
       current state of the industrial arts is not all that conditions
   workmanship. Under any given institutional situation, -- and the modern
    scheme of use and wont, law and order, is no exception,workmanship is
       held to a more or less exacting conformity to several tests and
    standards that are not intrinsic to the state of the industrial arts,
    even if they are not alien to it; such as the requirements imposed by
    the current system of ownership and pecuniary values. These pecuniary
    conditions that impose themselves on the processes of industry and on
   the conduct of life, together with the pecuniary accountancy that goes
     with them -- the price system have much to say in the guidance and
    limitations of workmanship. And when and in so far as the habituation
   so enforced in the traffic of workday life goes into effect as a scheme
    of logic governing the quest of knowledge, such principles as have by
   habit found acceptance as being conventionally salutary and conclusive
    in the pecuniary conduct of affairs will necessarily leave their mark
       on the ideals, aims, methods and standards of science and those
         principles and scholarship. More particularly, standards of
    organization, control and achievement, that have been accepted as an
   habitual matter of course in the conduct of business will, by force of
   habit, in good part reassert themselves as indispensable and conclusive
    in the conduct of the affairs of learning. While it remains true that
     the bias of workmanship continues to guide the quest of knowledge,
   under the conditions imposed by modern institutions it will not be the
       naive conceptions of primitive workmanship that will shape the
         framework of the modern system of learning; but rather the
   preconceptions of that disciplined workmanship that has been instructed
      in the logic of the modern technology and sophisticated with much
    experience in a civilization in whose scheme of life pecuniary canons
                               are definitive.

       The modern technology is of an impersonal, matter-of-fact character
       in an unexampled degree, and the accountancy of modern business
      management is also of an extremely dispassionate and impartially
   exacting nature. It results that the modern learning is of a similarly
   matter-of-fact, mechanistic complexion, and that it similarly leans on
     statistically dispassionate tests and formulations. Whereas it may
      fairly be said that the personal equation once -- in the days of
      scholastic learning -- was the central and decisive factor in the
    systematization of knowledge, it is equally fair to say that in later
   time no effort is spared to eliminate all bias of personality from the
     technique or the results of science or scholarship. It is the "dry
    light of science" that is always in request, and great pains is taken
                   to exclude all color of sentimentality.

       Yet this highly sterilized, germ-proof system of knowledge, kept in
    a cool, dry place, commands the affection of modern civilized mankind
     no less unconditionally, with no more afterthought of an extraneous
      sanction, than once did the highly personalized mythological and
    philosophical constructions and interpretations that had the vogue in
                         the days of the schoolmen.

          Through all the mutations that have passed over this quest of
       knowledge, from its beginnings in puerile myth and magic to its
      (provisional) consummation in the "exact" sciences of the current
    fashion, any attentive scrutiny will find that the driving force has
   consistently been of the same kind, traceable to the same proclivity of
       human nature. In so far as it may fairly be accounted esoteric
    knowledge, or a "higher learning," all this enterprise is actuated by
    an idle curiosity, a disinterested proclivity to gain a knowledge of
     things and to reduce this knowledge to a comprehensible system. The
   objective end is a theoretical organization. a logical articulation of
        things known, the lines of which must not be deflected by any
    consideration of expediency or convenience, but must run true to the
   canons of reality accepted at the time. These canons of reality, or of
         verity, have varied from time to time, have in fact varied
   incontinently with the passage of time and the mutations of experience.
     As the fashions of modern time have come on, particularly the later
    phases of modern life, the experience that so has shaped and reshaped
   the canons of verity for the use of inquiring minds has fallen more and
   more into the lines of mechanical articulation and has expressed itself
   ever more unreservedly in terms of mechanical stress. Concomitantly the
      canons of reality have taken on a mechanistic complexion, to the
     neglect and progressive disuse of all tests and standards of a more
       genial sort; until in the off-hand apprehension of modern men,
       "reality" comes near being identified with mechanical fact, and
   "verification" is taken to mean a formulation in mechanical terms. But
   the final test of this reality about which the inquiries of modern men
   so turn is not the test of mechanical serviceability for human use, but
              only of mechanistically effectual matter-of-fact.

       So it has come about that modern civilization is in a very special
    degree a culture of the intellectual powers, in the narrower sense of
   the term, as contrasted with the emotional traits of human nature. Its
   achievements and chief merits are found in this field of learning, and
     its chief defects elsewhere. And it is on its achievements in this
    domain of detached and dispassionate knowledge that modern civilized
   mankind most ingenuously plumes itself and confidently rests its hopes.
   The more emotional and spiritual virtues that once held the first place
       have been overshadowed by the increasing consideration given to
   proficiency in matter-of-fact knowledge. As prime movers in the tide of
   civilized life, these sentimental movements of the human spirit belong
   in the past, -at least such is the self-complacent avowal of the modern
      spokesmen of culture. The modern technology, and the mechanistic
    conception of things that goes with that technology, are alien to the
       spirit of the "Old Order." The Church, the court, the camp, the
    drawing-room, where these elder and perhaps nobler virtues had their
    laboratory and playground, have grown weedy and gone to seed. Much of
     the apparatus of the old order, with the good old way, still stands
     over in a state of decent repair, and the sentimentally reminiscent
    endeavors of certain spiritual "hold-overs" still lend this apparatus
   of archaism something of a galvanic life. But that power of aspiration
        that once surged full and hot in the cults of faith, fashion,
   sentiment, exploit, and honor, now at its best comes to such a head as
            it may in the concerted adulation of matter-of-fact.

        This esoteric knowledge of matter-of-fact has come to be accepted
    as something worth while in its own right, a self-legitimating end of
   endeavor in itself, apart from any bearing it may have on the glory of
   God or the good of man. Men have, no doubt, always been possessed of a
    more or less urgent propensity to inquire into the nature of things,
    beyond the serviceability of any knowledge so gained, and have always
   been given to seeking curious explanations of things at large. The idle
      curiosity is a native trait of the race. But in past times such a
   disinterested pursuit of unprofitable knowledge has, by and large, not
   been freely avowed as a legitimate end of endeavour; or such has at any
    rate been the state of the case through that later segment of history
      which students commonly take account of. A quest of knowledge has
   overtly been rated as meritorious, or even blameless, only in so far as
    it has appeared to serve the ends of one or another of the practical
     interests that have from time to time occupied men's attention. But
     latterly, during the past few generations, this learning has so far
    become an avowed "end in itself" that "the increase and diffusion of
       knowledge among men" is now freely rated as the most humane and
    meritorious work to be taken care of by any enlightened community or
                 any public-spirited friend of civilization.

        The expediency of such "increase and diffusion" is no longer held
    in doubt, because it has ceased to be a question of expediency among
    the enlightened nations, being itself the consummation upon which, in
       the apprehension of civilized men, the advance of culture must
    converge. Such has come to be the long-term common sense judgment of
    enlightened public opinion. A settled presumption to some such effect
   has found lodgment as a commonplace conviction in the popular mind, in
      much the same measure and in much the same period of time as the
     current body of systematic knowledge has taken on the character of
    matter of fact. For good or ill, civilized men have come to hold that
    this matter-of-fact knowledge of things is the only end in life that
      indubitably justifies itself. So that nothing more irretrievably
     shameful could overtake modern civilization than the miscarriage of
      this modern learning, which is the most valued spiritual asset of
                             civilized mankind.

         The truth of this view is borne out by the professions even of
    those lieutenants of the powers of darkness who are straining to lay
    waste and debauch the peoples of Christendom. In high-pitched concert
   they all swear by the name of a "culture" whose sole inalienable asset
   is this same intellectual mastery of matters of fact. At the same time
   it is only by drawing on the resources of this matter-of-fact knowledge
    that the protagonists of reaction are able to carry on their campaign
                        of debauchery and desolation.

       Other interests that have once been held in higher esteem appear by
       comparison to have fallen into abeyance, -- religious devotion,
         political prestige, fighting capacity, gentility, pecuniary
   distinction, profuse consumption of goods. But it is only by comparison
    with the higher value given to this enterprise of the intellect that
     such other interests appear to have lost ground. These and the like
   have fallen into relative disesteem, as being sordid and insubstantial
   by comparison. Not that these "lower" human interests, answering to the
   "lower" ranges of human intellect, have fallen into neglect; it is only
     that they have come to be accounted "lower," as contrasted with the
   quest of knowledge; and it is only on sober second thought, and perhaps
      only for the ephemeral present, that they are so accounted by the
     common run of civilized mankind. Men still are in sufficiently hot
    pursuit of all these time-worn amenities, and each for himself is, in
         point of fact, more than likely to make the pursuit of such
      self-seeking ends the burden of his life; but on a dispassionate
    rating, and under the corrective of deliberate avowal, it will appear
    that none of these commend themselves as intrinsically worth while at
     large. At the best they are rated as expedient concessions to human
    infirmity or as measures of defense against human perversity and the
    outrages of fortune. The last resort of the apologists for these more
   sordid endeavours is the plea that only by this means can the ulterior
     ends of a civilization of intelligence be served. The argument may
    fairly be paraphrased to the effect that in order to serve God in the
        end, we must all be ready to serve the Devil in the meantime.

           It is always possible, of course, that this pre-eminence of
   intellectual enterprise in the civilization of the Western peoples is a
          transient episode; that it may eventually -- perhaps even
     precipitately, with the next impending turn in the fortunes of this
    civilization -- again be relegated to a secondary place in the scheme
     of things and become only an instrumentality in the service of some
   dominant aim or impulse, such as a vainglorious patriotism, or dynastic
   politics, or the breeding of a commercial aristocracy. More than one of
    the nations of Europe have moved so far in this matter already as to
      place the primacy of science and scholarship in doubt as against
   warlike ambitions; and the aspirations of the American community appear
    to be divided -- between patriotism in the service of the captains of
      war, and commerce in the service of the captains of finance. But
    hitherto the spokesmen of any such cultural reversion are careful to
      declare a perfunctory faith in that civilization of disinterested
   intellectual achievement which they are endeavouring to suborn to their
     several ends. That such pro forma declarations are found necessary
   argues that the faith in a civilization of intelligence is still so far
     intact as to require all reactionaries to make their peace with it.

           Meantime the easy matter-of-course presumption that such a
    civilization of intelligence justifies itself goes to argue that the
     current bias which so comes to expression will be the outcome of a
     secure and protracted experience. What underlies and has brought on
       this bent in the temper of the civilized peoples is a somewhat
    intricate question of institutional growth, and can not be gone into
   here; but the gradual shifting of this matter-of-fact outlook into the
   primacy among the ideals of modern. Christendom is sufficiently evident
         in point of fact, to any attentive student of modern times.
     Conceivably, there may come an abrupt term to its paramount vogue,
   through some precipitate sweep of circumstances; but it did not come in
    by anything like the sudden intrusion of a new invention in ideals --
    after the fashion of a religious conversion nor by the incursion of a
    hitherto alien element into the current scheme of life, but rather by
    force of a gradual and unintended, scarcely perceptible, shifting of
     emphasis between the several cultural factors that conjointly go to
                    make up the working scheme of things.

          Along with this shifting of matter-of-fact knowledge into the
   foreground among the ideals of civilized life, there has also gone on a
    similarly unpremeditated change in the attitude of those persons and
    establishments that have to do with this learning, as well as in the
   rating accorded them by the community at large. Again it is a matter of
   institutional growth, of self-wrought changes in the scheme of use and
        wont; and here as in other cases of institutional growth and
   displacement, the changes have gone forward for the most part blindly,
   by impulse, without much foreknowledge of any ulterior consequences to
   which such a sequence of change might be said to tend. It is only after
   the new growth of use and wont has taken effect in an altered range of
   principles and standards, that its direction and ulterior consequences
   can be appreciated with any degree of confidence. But this development
   that has thrown up matter-of-fact knowledge into its place of paramount
    value for modern culture has in a peculiar degree been unintended and
       unforeseen; the like applies to the case of the schools and the
    personnel involved; and in a peculiar degree the drift and bearing of
   these changes have also not been appreciated while they have been going
    forward, doubtless because it has all been a peculiarly unprecedented
      phenomenon and a wholly undesigned drift of habituation. History
   records nothing that is fairly comparable. No era in the historic past
    has set a pattern for guidance in this matter, and the experience of
    none of the peoples of history affords a clue by which to have judged
     beforehand of the probable course and outcome of this specifically
                   modern and occidental phase of culture.

        Some slight beginnings and excursions in the way of a cultivation
    of matter-of-fact learning there may have been, now and again, among
   the many shifting systems of esoteric lore that have claimed attention
   here and there, early and late; and these need by no means be accounted
   negligible. But they have on the whole come to nothing much better than
     broken excursions, as seen from the point of view of the latterday
   higher learning, and they have brought into bearing nothing appreciable
    in the way of establishments designed without afterthought to further
    the advance of disinterested knowledge. Anything like a cultural era
       that avowedly takes such a quest of knowledge as its chief and
   distinctive characteristic is not known to history. From this isolated
   state of the case it follows, unfortunately, that this modern phase is
       to be studied only in its own light; and since the sequence of
   development has hitherto reached no secure consummation or conclusion,
   there is also much room for conflicting opinions as to its presumptive
           or legitimate outcome, or even as to its present drift.

                                     II

        But notorious facts make this much plain, that civilized mankind
   looks to this quest of matter-of-fact knowledge as its most substantial
   asset and its most valued achievement, -- in so far as any consensus of
   appreciation or of aspirations is to be found among civilized mankind;
   and there is no similar consensus bearing on any other feature of that
   scheme of life that characterizes modern civilization. It is similarly
      beyond dispute that men look to the modern system of schools and
   related establishments of learning for the furtherance and conservation
    of this intellectual enterprise. And among the various items of this
       equipment the modern university is, by tradition, more closely
    identified with the quest of knowledge than any other. It stands in a
        unique and peculiarly intimate relation to this intellectual
        enterprise. At least such is the current apprehension of the
    university's work. The university is the only accepted institution of
      the modern culture on which the quest of knowledge unquestionably
    devolves; and the visible drift of circumstances as well as of public
   sentiment runs also to making this the only unquestioned duty incumbent
                             on the university.

       It is true, many other lines of work, and of endeavor. that may not
    fairly be called work, are undertaken by schools of university grade;
    and also, many other schools that call themselves "universities" will
   have substantially nothing to do with the higher learning. But each and
    several of these other lines of endeavor, into which the universities
    allow themselves to be drawn, are open to question. Their legitimacy
   remains an open question in spite of the interested arguments of their
    spokesmen, who advocate the partial submergence of the university in
    such enterprises as professional training, undergraduate instruction,
    supervision and guidance of. the secondary school system, edification
   of the unlearned by "university extension" and similar excursions into
    the field of public amusement, training of secondary school teachers,
    encouragement of amateurs by "correspondence," etc. What and how much
   of these extraneous activities the university should allow itself is a
    matter on which there is no general agreement even among those whose
    inclinations go far in that direction; but what is taken for granted
    throughout all this advocacy of outlying detail is the secure premise
     that the university is in the first place a seminary of the higher
        learning, and that no school can make good its pretensions to
    university standing except by proving its fitness in this respect.^4

        The conservation and advancement of the higher learning involves
   two lines of work, distinct but closely bound together: (a) scientific
      and scholarly inquiry, and (b) the instruction of students.^5 The
      former of these is primary and indispensable. It is this work of
   intellectual enterprise that gives its character to the university and
     marks it off from the lower schools. The work of teaching properly
   belongs in the university only because and in so far as it incites and
   facilitates the university man's work of inquiry, -- and the extent to
     which such teaching furthers the work of inquiry is scarcely to be
   appreciated without a somewhat extended experience. By and large, there
    are but few and inconsequential exceptions to the rule that teaching,
    as a concomitant of investigation, is distinctly advantageous to the
    investigator; particularly in so far as his work is of the nature of
   theoretical inquiry. The instruction necessarily involved in university
   work, therefore, is only such as can readily be combined with the work
      of inquiry, at the same time that it goes directly to further the
    higher learning in that it trains the incoming generation of scholars
   and scientists for the further pursuit of knowledge. Training for other
   purposes is necessarily of a different kind and is best done elsewhere;
    and it does not become university work by calling it so and imposing
    its burden on the men and equipment whose only concern should be the
                              higher learning.

       University teaching, having a particular and special purpose -- the
   pursuit of knowledge -- it has also a particular and special character,
    such as to differentiate it from other teaching and at the same time
   leave it relatively ineffective for other purposes. Its aim is to equip
    the student for the work of inquiry, not to give him facility in that
    conduct of affairs that turns such knowledge to "practical account."
     Hence the instruction that falls legitimately under the hand of the
   university man is necessarily subsidiary and incidental to the work of
   inquiry, and it can effectually be carried on only by such a teacher as
    is himself occupied with the scrutiny of what knowledge is already in
      hand and with pushing the inquiry to further gains. And it can be
   carried on by such a teacher only by drawing his students into his own
     work of inquiry. The student's relation to his teacher necessarily
     becomes that of an apprentice to his master, rather than that of a
                         pupil to his schoolmaster.

          A university is a body of mature scholars and scientists, the
   "faculty," -- with whatever plant and other equipment may incidentally
     serve as appliances for their work in any given case. The necessary
   material equipment may under modern conditions be very considerable, as
    may also the number of care-takers, assistants, etc.; but all that is
   not the university, but merely its equipment. And the university man's
      work is the pursuit of knowledge, together with whatever advisory
    surveillance and guidance he may consistently afford such students as
   are entering on the career of learning at a point where his outlook and
    methods of work may be of effect for them. No man whose energies are
   not habitually bent on increasing and proving up the domain of learning
    belongs legitimately on the university staff. The university man is,
   properly, a student, not a schoolmaster. Such is the unmistakable drift
   of sentiment and professed endeavour, in so far as it is guided by the
   cultural aspirations of civilized mankind rather than by the emulative
           strategy of individuals seeking their own preferment.^6

        All this, of course, implies no undervaluing of the work of those
      men who aim to prepare the youth for citizenship and a practical
     career. It is only a question of distinguishing between things that
    belong apart. The scientist and the scholar on the one hand, and the
   schoolmaster on the other hand, both belong within the later growth of
   civilization; but a differentiation of the two classes, and a division
     of their work, is indispensable if they are to do their work as it
    should be done, and as the modern community thoughtfully intends that
   it should be done. And while such a division of labour has hitherto not
     been carried through with any degree of consistency, it is at least
    under way, and there is nothing but the presumption of outworn usage
   that continues to hold the two lines of work together, to the detriment
   of both; backed, it is true, by ambitions of self-aggrandizement on the
            part of many schools and many of their directorates.

       The schoolmaster and his work may be equally, or more, valuable to
   the community at large -- presumably more rather than less -- but in so
    far as his chief interest is of the pedagogical sort his place is not
     in the university. Exposition, instruction and drill belong in and
    professional schools. The consistent aim there is, and should be, to
   instruct, to inculcate a knowledge of results, and to give the pupil a
        working facility in applying it. On the university level such
      information and training is (should be) incidental to the work of
      research. The university man is almost unavoidably a teacher, by
    precept and example, but he can not without detriment to his work as
         scientist or scholar serve as a taskmaster or a vehicle of
     indoctrination. The student who comes up to the university for the
   pursuit of knowledge is expected to know what he wants and to want it,
   without compulsion. If he falls short in these respects, if he has not
    the requisite interest and initiative, it is his own misfortune, not
      the fault of his teacher. What he has a legitimate claim to is an
     opportunity for such personal contact and guidance as will give him
     familiarity with the ways and means of the higher learning, -- any
      information imparted to him being incidental to this main work of
    habituation. He gets a chance to make himself a scholar, and what he
   will do with his opportunities in this way lies in his own discretion.

         The difference between the modern university and the lower and
    professional schools is broad and simple; not so much a difference of
       degree as of kind. There is no difficulty about apprehending or
         appreciating this difference; the dispute turns not on the
        practicability of distinguishing between the two, but on the
     desirability of letting such a distinction go into effect. It is a
     controversy between those who wish to hold fast that which once was
    good and those who look to make use of the means in hand for new ends
                          and meet new exigencies.

       The lower schools (including the professional schools) are, in the
    ideal scheme, designed to fit the incoming generation for civil life;
    they are therefore occupied with instilling such knowledge and habits
       as will make their pupils fit citizens of the world in whatever
   position in the fabric of workday life they may fall. The university on
     the other hand is specialized to fit men for a life of science and
   scholarship; and it is accordingly concerned, with such discipline only
       as will give efficiency in the pursuit of knowledge and fit its
    students for the increase and diffusion of learning. It follows that
   while the lower schools necessarily take over the surveillance of their
    pupils' everyday life, and exercise a large measure of authority and
     responsible interference in that behalf, the university assumes (or
     should assume) no responsibility for its students' fortunes in the
         moral, religious, pecuniary, domestic, or hygienic respect.

           Doubtless the larger and more serious responsibility in the
    educational system belongs not to the university but to the lower and
     professional schools. Citizenship is a larger and more substantial
    category than scholarship; and the furtherance of civilized life is a
   larger and more serious interest than the pursuit of knowledge for its
     own idle sake. But the proportions which the quest of knowledge is
       latterly assuming in scheme of civilized life require that the
    establishments the to which this interest is committed should not be
      charged with extraneous duties; particularly not with extraneous
      matters themselves of such grave consequence as this training for
     citizenship and practical affairs. These are too serious a range of
   duties to be taken care of as a side-issue, by a seminary of learning,
     the members of whose faculty, if they are fit for their own special
          work, are not men of affairs or adepts in worldly wisdom.

                                     III

        In point of historical pedigree the American universities are of
      another derivation than their European counterpart; although the
     difference in this respect is not so sharp a matter of contrast as
         might be assumed at first sight. The European (Continental)
   universities appear to have been founded, originally, to meet the needs
        of professional training, more particularly theological (and
   philosophical) training in the earlier times. The American universities
   are, historically, an outgrowth of the American college; and the latter
    was installed, in its beginnings, largely as a means of professional
   training; chiefly training for Divinity, secondarily for the calling of
   the schoolmaster. But in neither case, neither in that of the European
       university nor in that of the American College, was this early
   vocational aim of the schools allowed to decide their character in the
   long run, nor to circumscribe the lines of their later growth. In both
    cases, somewhat alike, the two groups of schools came to their mature
   development, in the nineteenth century, as establishments occupied with
      disinterested learning, given over to the pursuit of intellectual
     enterprise, rather than as seminaries for training of a vocational
    kind. They still had a vocational value, no doubt, and the vocational
         needs of their students need not have been absent from the
   considerations that guided their directorates. It would particularly be
     found that the (clerical) directorates of the American colleges had
    more than half an eye to the needs of Divinity even at so late a date
     as when, in the third quarter of the century, the complexion of the
    American college situation began seriously to change. It is from this
   period -- from the era of the Civil War and the Reconstruction -- that
      the changes set in which have reshaped the academic situation in
                                  America.

       At this era, some half a century ago, the American college was, or
    was at least pressed to be, given over to disinterested instruction,
    not specialized with a vocational, or even a denominational, bias. It
   was coming to take its place as the superior or crowning member, a sort
    of capstone, of the system of public instruction. The life history of
     any one of the state universities whose early period of growth runs
     across this era will readily show the effectual guidance of such an
     ideal of a college, as a superior and definitive member in a school
   system designed to afford an extended course of instruction looking to
   an unbiassed increase and diffusion of knowledge. Other interests, of a
   professional or vocational kind, were also entrusted to the keeping of
     these new-found schools; but with a conclusive generality the rule
     holds that in these academic creations a college establishment of a
        disinterested, non-vocational character is counted in as the
      indispensable nucleus, -- that much was at that time a matter of
                                   course.

         The further development shows two marked features: The American
       university has come into bearing; and the college has become an
   intermediate rather than a terminal link in the conventional scheme of
   education. Under the names "undergraduate" and "graduate," the college
   and the university are still commonly coupled together as subdivisions
     of a complex whole; but this holding together of the two disparate
    schools is at the best a freak of aimless survival. At the worst, and
    more commonly, it is the result of a gross ambition for magnitude on
   the part of the joint directorate. Whether the college lives by itself
    as an independent establishment on a foundation of its own, or is in
   point of legal formality a subdivision of the university establishment,
    it takes its place in the educational scheme as senior member of the
    secondary school system, and it bears no peculiarly close relation to
    the university as a seat of learning. At the closest it stands to the
      university in the relation of a fitting school; more commonly its
     relations are closer with the ordinary professional and vocational
   schools; and for the most part it stands in no relation, beyond that of
                  juxtaposition, with the one or the other.

       The attempt to hold the college and the no means together in bonds
      of ostensible Solidarity is by university an advisedly concerted
   adjustment to the needs of scholarship as they run today. By historical
   accident the older American universities have grown into bearing on the
       ground of an underlying college, and the external connection so
   inherited has not usually been severed; and by ill-advised, or perhaps
      unadvised, imitation the younger universities have blundered into
     encumbering themselves with an undergraduate department to simulate
    this presumptively honourable pedigree, to the detriment both of the
   university and of the college so bound up with it. By this arrangement
    the college -- undergraduate department -- falls into the position of
   an appendage, a side issue, to be taken care of by afterthought on the
    part of a body of men whose chief legitimate interest runs -- should
       run -- on other things than the efficient management of such an
   undergraduate training-school, -- provided always that they are a bona
    fide university faculty, and not a body of secondary-school teachers
            masquerading under the assumed name of a university.

       The motive to this inclusion of an undergraduate department in the
    newer universities appears commonly to have been a headlong eagerness
         on the part of the corporate authorities to show a complete
   establishment of the conventionally accepted pattern, and to enroll as
                         many students as possible.

       Whatever may have been true for the earlier time, when the American
    college first grew up and flourished, it is beyond question that the
     undergraduate department which takes the place of the college today
    cannot be rated as an institution of the higher learning. At the best
   it is now a school for preliminary training, preparatory to entering on
     the career of learning, or in preparation for the further training
        required for the professions; but it is also, and chiefly, an
   establishment designed to give the concluding touches to the education
    of young men who have no designs on learning, beyond the close of the
     college curriculum. It aims to afford a rounded discipline to those
   whose goal is the life of fashion or of affairs. How well, or how ill,
   the college may combine these two unrelated purposes is a question that
   does not immediately concern the present inquiry. It is touched on here
       only to point the contrast between the American college and the
                                 university.

           It follows from the character of their work that while the
    university should offer no set curriculum, the college has, properly,
    nothing else to offer. But the retention or inclusion of the college
    and its aims within the university corporation has necessarily led to
   the retention of college standards and methods of control even in what
   is or purports to be university work; so that it is by no means unusual
        to find university (graduate) work scheduled in the form of a
    curriculum, with all that boarding-school circumstance and apparatus
      that is so unavoidable an evil in all undergraduate training. In
   effect, the outcome of these short-sighted attempts to take care of the
    higher learning by the means and method of the boys' school, commonly
    is to eliminate the higher learning from the case and substitute the
                aims and results of a boys' training-school.

        Undergraduate work being task work, it is possible, without fatal
      effect, to reduce it to standard units of time and volume, and so
   control and enforce it by a system of accountancy and surveillance; the
   methods of control, accountancy and coercion that so come to be worked
     out have all that convincing appearance of tangible efficiency that
      belongs to any mechanically defined and statistically accountable
      routine, such as will always commend itself to the spirit of the
     schoolmaster; the temptation to apply such methods of standardized
     routine wherever it is at all feasible is always present, and it is
    cogently spoken for by all those to whom drill is a more intelligible
   conception than scholarship. The work of learning, which distinctively
    belongs in the university, on the other hand, is a matter of personal
      contact and co-operation between teacher and student, and is not
    measurable in statistical units or amenable to mechanical tests; the
     men engaged in this work can accordingly offer nothing of the same
      definite character in place of the rigid routine and accountancy
     advocated by the schoolmasters; and the outcome in nearly all cases
   where the control of both departments vests in one composite corporate
    body, as it usually does, is the gradual insinuation of undergraduate
    methods and standards in the graduate school; until what is nominally
     university work settles down, in effect, into nothing more than an
   extension of the undergraduate curriculum. This effect is had partly by
     reducing such of the graduate courses as are found amenable to the
   formalities of the undergraduate routine, and partly by dispensing with
     such graduate work as will not lend itself, even ostensibly, to the
                           schoolmaster's methods.

       What has been said of the college in this connection holds true in
   the main also of the professional and technical schools. In their aims,
   methods and achievements these schools are, in the nature of the case,
       foreign to the higher learning. This is, of course, not said in
    disparagement of their work; rather the contrary. As is the case with
   the college, so these schools also are often included in the university
    corporation by ties of an external and factitious kind, frequently by
      terms of the charter. But this formal inclusion of them under the
      corporate charter does not set aside the substantial discrepancy
     between their purpose, work and animus and those of the university
   proper. It can only serve to trouble the single-mindedness of both. It
   leaves both the pursuit of learning and the work of preparation for the
   professions somewhat at loose ends, confused with the bootless illusion
     that they are, in some recondite way, parallel variants of a single
                                line of work.

          In aim and animus the technical and professional schools are
    "practical," in the most thorough going manner; while the pursuit of
   knowledge that occupies the scientists and scholars is not "practical"
    in the slightest degree. The divergent lines of interest to be taken
    care of by the professional schools and the university, respectively,
    are as widely out of touch as may well be within the general field of
      human knowledge. The one is animated wholly by considerations of
      material expediency, and the range of its interest and efforts is
     strictly limited by consideration of the useful effect to which the
    proficiency that it gives is to be turned; the other knows nothing of
       expediency, and is influenced by no consideration of utility or
     disutility, in its appreciation of the knowledge to be sought. The
   animus of the one is worldly wisdom; of the other, idle curiosity. The
    two are incommensurably at variance so far as regards their purpose,
       and in great measure also as regards their methods of work, and
                               necessarily so.

        But with all this divergence of purpose and animus there is after
       all a broad and very substantial bond of community between the
       technical schools, on the one hand, and the proper work of the
    university, on the other hand, in that the two are, in great measure,
    occupied with the same general range of materials and employ somewhat
   the same logical methods in handling these materials. But the relation
   that results from this community of material is almost wholly external
   and mechanical. Nor does it set up any presumption that the two should
    expediently be included in the same corporate establishment, or even
     that they need be near neighbors or need maintain peculiarly close
   relations of personnel. The technical schools, and in a less degree the
   professional schools not properly classed as technical, depend in large
   measure on results worked out by the scientists, who properly belong in
    the universities. But the material so made use of for technical ends
       are taken over and turned to account without afterthought. The
    technologist's work is related to that of the scientists very much as
      the work of the designer is related to that of the inventor. To a
   considerable extent the scientists similarly depend on the work of the
    technical men for information, and for correction and verification of
    their own theoretical work. But there is, on this account, nothing to
        gain by associating any given technical school with any given
    university establishment; incorporation in any given university does
     not in any degree facilitate the utilization of the results of the
    sciences by the technical men; nor is it found in practice to further
       the work of the sciences. The schools in question do not in any
    peculiar degree draw on the work of the scientists attached to their
   particular university, nor do these scientists, on the other hand, have
   any special use for the work of their associated technical schools. In
      either case the source drawn on is the general literature of the
     subject, the body of materials available at large, not the work of
    particular men attached to particular schools. The generalizations of
    science are indispensable to the technical men; but what they draw on
        is the body of science at large, regardless of what any given
   university establishment may have had to do with the work out of which
     the particular items of scientific information have emerged. Nor is
    this scientific material useful to the technologists for the further
      pursuit of science; to them the scientific results are data, raw
     material to be turned to practical use, not means by which to carry
                 scientific inquiry out to further results.

           Similarly, the professions and the technical schools afford
     valuable data for the use of the professed scholars and scientists,
    information that serves as material of Investigation, or that will at
      least be useful as a means of extending correcting, verifying and
   correlating lines of inquiry on which they are engaged. But the further
    bearing of these facts upon the affairs of life, their expediency or
   futility, is of no interest or consequence. The affairs of life, except
    the affairs of learning, do not touch the interest of the university
     man as a scholar or scientist. What is of importance to him in all
   these matters with which the professions and technologists are busy is
      their bearing on those matters of fact into which his scientific
   interest leads him to inquire. The tests and experiments carried out at
     these technical schools, as well as the experience gathered by the
      members of their staff, will occasionally afford him material for
    further inquiry or means whereby to check results already arrived at;
    but for such material he does not by preference resort to any one of
   the technical schools as contrasted with any other, and it is quite an
   idle question whether the source of any such serviceable information is
     a school attached to his own university. The investigator finds his
      material where he can; which comes to saying that he draws on the
    general body of technical knowledge, with no afterthought as to what
   particular technical school may have stood in some relation or other to
                   the information which he finds useful.

       Neither to the man engaged in university work nor to the technical
    schools that may serve him as occasional sources of material is there
     any advantage to be derived from their inclusion in the university
      establishment. Indeed, it is a detriment to both parties, as has
     already been remarked, but more decidedly to the university men. By
     including the technical and professional schools in the university
    corporation the technologists and professional men attached to these
   schools are necessarily included among the academic staff, and so they
   come to take their part in the direction of academic affairs at large.
     In what they so do toward shaping the academic policy they will not
     only count for all they are worth, but they are likely to count for
    something more than their due share in this respect; for they are to
      some extent trained to the conduct of affairs, and so come in for
    something of that deference that is currently paid to men of affairs,
    at the same time that this practical training gives them an advantage
     over their purely academic colleagues, in the greater assurance and
    adroitness with which they are able to present their contentions. By
   virtue of this same training, as well as by force of current practical
   interest, the technologist and the professional man are, like other men
    of affairs, necessarily and habitually impatient of any scientific or
    scholarly work that does not obviously lend itself to some practical
   use. The technologist appreciates what is mechanically serviceable; the
      professional man, as, for instance, the lawyer, appreciates what
     promises pecuniary gain; and the two unite with the business-man at
       large in repudiating whatever does not look directly to such a
   utilitarian outcome. So that as members of the academic staff these men
    are likely to count at their full weight toward the diversion of the
   university's forces from disinterested science and scholarship to such
                         palpably utilitarian ends.

       But the active measures so taken by the academic authorities at the
    instance of the schoolmasters and "practical" men are by no means the
      only line along which their presence in the academic corporation
      affects the case. Intimate association with these "utilitarians"
    unavoidably has its corrupting effect on the scientists and scholars,
   and induces in them also something of the same bias toward "practical"
       results in their work; so that they no longer pursue the higher
    learning with undivided interest, but with more or less of an eye to
   the utilitarian main chance; whereby the advantages of specialization,
   which are the reason for these schools, are lost, and the pride of the
        modern community is wounded in its most sensitive spot -- the
                       efficiency of its specialists.

          So also, on the other hand, the formal incorporation of these
      technological and professional men in the academic body, with its
   professedly single-minded interest in learning, has its effect on their
      frame of mind. They are, without intending it, placed in a false
    position, which unavoidably leads them to court a specious appearance
   of scholarship, and so to invest their technological discipline with a
     degree of pedantry and sophistication; whereby it is hoped to give
    these schools and their work some scientific and scholarly prestige,
        and so lift it to that dignity that is pressed to attach to a
       non-utilitarian pursuit of learning. Doubtless this pursuit of
      scholarly prestige is commonly successful, to the extent that it
    produces the desired conviction of awe in the vulgar, who do not know
       the difference; but all this make-believe scholarship, however
   successfully staged, is not what these schools are designed for; or at
    least it is not what is expected of them, nor is it what they can do
                         best and most efficiently.

       To the substantial gain of both parties, though with some lesion of
      the vanity of both, the separation between the university and the
    professional and technical schools should be carried through and made
    absolute. Only on such conditions can either the one or the other do
    its own work in a workmanlike manner. Within the university precincts
      any aim or interest other than those of irresponsible science and
    scholarship -- pursuit of matter-of-fact knowledge -- are to be rated
                               as interlopers.

                                     IV

        To all this there is the ready objection of the schoolmasters and
   utilitarians that such a project is fantastic and unpractical, useless
    and undesirable; that such has not been the mission of the university
    in the past, nor its accepted place and use in the educational system
   of today and yesterday,. that the universities of Christendom have from
     their first foundation been occupied with professional training and
   useful knowledge; that they have been founded for utilitarian purposes
     and their work has been guided mainly or altogether by utilitarian
      considerations; -- all of which is conceded without argument. The
      historical argument amounts to saying that the universities were
   founded before modern civilization took on its modern character, before
   the disinterested pursuit of knowledge had come to take the first place
    among the ideals of civilized mankind, and that they were established
     to take care of those interests which were then accounted of first
       importance, and that this intellectual enterprise in pursuit of
    disinterested knowledge consequently was not at that time confided to
   the care of any special establishment or freely avowed as a legitimate
                         interest in its own right.

        It is true that, by historical accident, the university at large
    has grown out of professional training-schools, primarily schools for
   training in theology, secondarily in law and medicine. It is also true,
    in like wise and in like degree, that modern science and scholarship
     have grown out of the technology of handicraft and the theological
      philosophy of the schoolmen.^7 But just as it would be a bootless
    enterprise to cut modern science back into handicraft technology, so
   would it be a gratuitous imbecility to prune back the modern university
       to that inchoate phase of its life-history and make it again a
     corporation for the training of theologians, jurists and doctors of
      medicine. The historical argument does not enjoin a return to the
     beginning of things, but rather an intelligent appreciation of what
                            things are coming to.

       The genesis of the university at large, taken as an institution of
     civilized life, is an incident of the transition from the barbarian
    culture of the middle ages to modern times, and its later growth and
   acquirement of character is an incident of the further growth of modern
   civilization; and the character of this later growth of the university
      reflects the bent of modern civilization, as contrasted with the
        barbarian spirit of things in the mediaeval spiritual world.

         In a general way, the place of the university in the culture of
     Christendom is still substantially the same as it has been from the
    beginning. Ideally, and in the popular apprehension, it is, as it has
       always been, a corporation for the cultivation and care of the
      community's highest aspirations and ideals. But these ideals and
      aspirations have changed somewhat with the changing scheme of the
    Western civilization; and so the university has also concomitantly so
       changed in character, aims and ideals as to leave it still the
    corporate organ of the community's dominant intellectual interest. At
    the same time, it is true, these changes in the purpose and spirit of
      the university have always been, and are always being, made only
    tardily, reluctantly, concessively, against the protests of those who
    are zealous for the commonplaces of the day before yesterday. Such is
   the character of institutional growth and change; and in its adaptation
       to the altered requirements of an altered scheme of culture the
       university has in this matter been subject to the conditions of
       institutional growth at large. An institution is, after all, a
   prevalent habit of thought, and as such it is subject to the conditions
   and limitations that surround any change in the habitual frame of mind
                         prevalent in the community.

        The university of medieval and early modern times, that is to say
   the barbarian university, was necessarily given over to the pragmatic,
   utilitarian disciplines, since that is the nature of barbarism; and the
   barbarian university is but another, somewhat sublimated, expression of
    the same barbarian frame of mind. The barbarian culture is pragmatic,
      utilitarian, worldly wise, and its learning partakes of the same
    complexion. The barbarian, late or early, is typically an unmitigated
   pragmatist; that is the spiritual trait that most profoundly marks him
    off from the savage on the one hand and from the civilized man on the
   other hand. "He turns a keen, untroubled face home to the instant need
                                 of things."

        The high era of barbarism in Europe, the Dark and Middle Ages, is
     marked off from what went before and from what has followed in the
        cultural sequence, by a hard and fast utilitarian animus. The
   all-dominating spiritual trait of those times is that men then made the
   means of life its end. It is perhaps needless to call to mind that much
   of this animus still survives in later civilized life, especially in so
     far as the scheme of civilized life is embodied in the competitive
   system. In that earlier time, practical sagacity and the serviceability
       of any knowledge acquired, its bearing on individual advantage,
   spiritual or temporal, was the ruling consideration, as never before or
    since. The best of men in that world were not ashamed to avow that a
   boundless solicitude for their own salvation was their worthiest motive
    of conduct, and it is plain in all their speculations that they were
   unable to accept any other motive or sanction as final in any bearing.
    Saint and sinner alike knew no higher rule than expediency, for this
    world and the next. And, for that matter, so it still stands with the
     saint and the sinner, -- who make up much of the commonplace human
      material in the modern community; although both the saint and the
   sinner in the modern community carry, largely by shamefaced subreption,
    an ever increasing side-line of other and more genial interests that
     have no merit in point of expediency whether for this world or the
                                    next.

       Under the rule of such a cultural ideal the corporation of learning
     could not well take any avowed stand except as an establishment for
   utilitarian instruction, the practical expediency of whose work was the
   sole overt test of its competency. And such it still should continue to
      be according to the avowed aspirations of the staler commonplace
   elements in the community today. By subreption, and by a sophisticated
      subsumption under some ostensibly practical line of interest and
   inquiry, it is true, the university men of the earlier time spent much
    of their best endeavour on matters of disinterested scholarship that
       had no bearing on any human want more to the point than an idle
    curiosity; and by a similar turn of subreption and sophistication the
   later spokesmen of the barbarian ideal take much complacent credit for
    the "triumphs of modern science" that have nothing but an ostensible
     bearing on any matter of practical expediency, and they look to the
     universities to continue this work of the idle curiosity under some
                     plausible pretext of practicality.

       So the university of that era unavoidably came to be organized as a
      more or less comprehensive federation of professional schools or
   faculties devoted to such branches of practical knowledge as the ruling
    utilitarian interests of the time demanded. Under this overshadowing
   barbarian tradition the universities of early modern times started out
    as an avowed contrivance for indoctrination in the ways and means of
     salvation, spiritual and temporal, individual and collective, -- in
    some sort a school of engineering, primarily in divinity, secondarily
    in law and politics, and presently in medicine and also in the other
    professions that serve a recognized utilitarian interest. After that
     fashion of a university that answered to this manner of ideals and
    aspirations had once been installed and gained a secure footing, its
     pattern acquired a degree of authenticity and prescription, so that
    later seminaries of learning came unquestioningly to be organized on
    the same lines; and further changes of academic policy and practice,
     such as are demanded by the later growth of cultural interests and
   ideals, have been made only reluctantly and with a suspicious reserve,
      gradually and by a circuitous sophistication; so that much of the
     non-utilitarian scientific and scholarly work indispensable to the
   university's survival under modern conditions is still scheduled under
           the faculties of law or medicine, or even of divinity.

        But the human propensity for inquiry into things, irrespective of
    use or expediency, insinuated itself among the expositors of worldly
   wisdom from the outset; and from the first this quest of idle learning
   has sought shelter in the university as the only establishment in which
   it could find a domicile, even on sufferance, and so could achieve that
       footing of consecutive intellectual enterprise running through
         successive generations of scholars which is above all else
      indispensable to the advancement of knowledge. Under the rgime of
   unmitigated pragmatic aims that ruled the earlier days of the European
   universities, this pursuit of knowledge for its own sake was carried on
     as a work of scholarly supererogation by men whose ostensibly sole
     occupation was the promulgation of some accredited line of salutary
    information. Frequently it had to be carried on under some colourable
     masquerade of practicality. And yet so persistent has the spirit of
      idle curiosity proved to be, and so consonant with the long-term
    demands even of the laity, that the dissimulation and smuggling-in of
     disinterested learning has gone on ever more openly and at an ever
      increasing rate of gain; until in the end, the attention given to
    scholarship and the non-utilitarian sciences in these establishments
     has come far to exceed that given to the practical disciplines for
     which the several faculties were originally installed. As time has
      passed and as successive cultural mutations have passed over the
    community, shifting the centre of interest and bringing new ideals of
      scholarship, and bringing the whole cultural fabric nearer to its
   modern complexion, those purposes of crass expediency that were of such
    great moment and were so much a matter of course in earlier academic
   policy, have insensibly fallen to the rank of incidentals. And what had
    once been incidental, or even an object of surreptitious tolerance in
      the university, remains today as the only unequivocal duty of the
   corporation of learning, and stands out as the one characteristic trait
       without which no establishment can claim rank as a university.

        Philosophy -- the avowed body of theoretical science in the late
      medieval time -- had grown out of the schoolmen's speculations in
     theology, being in point of derivation a body of refinements on the
   divine scheme of salvation; and with a view to quiet title, and to make
        manifest their devotion to the greater good of eschatological
    expediency, those ingenious speculators were content to proclaim that
   their philosophy is the handmaid of theology -- Philosophia theologiae
   ancillans. But their philosophy has fallen into the alembic of the idle
    curiosity and has given rise to a body of modern science, godless and
     unpractical, that has no intended or even ostensible bearing on the
     religious fortunes of mankind; and their sanctimonious maxim would
   today be better accepted as the subject of a limerick than of a homily.
    Except in degree, the fortunes of the temporal pragmatic disciplines,
     in Law and Medicine, have been much the same as that of their elder
     sister, Theology. Professionalism and practical serviceability have
    been gradually crowded into the background of academic interests and
     overlaid with quasi-utilitarian research -- such as the history of
   jurisprudence, comparative physiology, and the like. They have in fact
                         largely been eliminated.^8

         And changes running to this effect have gone farthest and have
    taken most consistent effect in those communities that are most fully
    imbued with the spirit of the modern peaceable civilization. It is in
   the more backward communities and schools that the barbarian animus of
    utilitarianism still maintains itself most nearly intact, whether it
    touches matters of temporal or of spiritual interest. With the later
       advance of culture, as the intellectual interest has gradually
    displaced the older ideals in men's esteem, and barring a reactionary
    episode here and there, the university has progressively come to take
      its place as a seat of the higher learning, a corporation for the
       pursuit of knowledge; and barring accidental reversions, it has
   increasingly asserted itself as an imperative necessity, more and more
    consistently, that the spirit of disinterested inquiry must have free
    play in these seminaries of the higher learning, without afterthought
   as to the practical or utilitarian consequences which this free inquiry
    may conceivably have for the professional training or for the social,
   civil or religious temper of the students or the rest of the community.
    Nothing is felt to be so irremediably vicious in academic policy as a
    coercive bias, religious, political, conventional or professional, in
   so far as it touches that quest of knowledge that constitutes the main
                         interest of the university.

          Professional training and technological work at large have of
    course not lost ground, either in the volume and the rigour of their
    requirements or in the application bestowed in their pursuit; but as
   within the circle of academic interests, these utilitarian disciplines
   have lost their preferential place and have been pushed to one side; so
    that the professional and technical schools are now in fact rated as
       adjuncts rather than as integral constituents of the university
      corporation. Such is the unmistakable sense of this matter among
   academic men. At the same time these vocational schools have, one with
   another, progressively taken on more of a distinctive, independent and
   close-knit structure; an individual corporate existence, autonomous and
      academically self-sufficient, even in those cases where they most
       tenaciously hold to their formal connection with the university
       corporation. They have reached a mature phase of organization,
    developed a type of personnel and control peculiar to themselves and
       their special needs, and have in effect come out from under the
   tutelage of the comprehensive academic organization of which they once
   in their early days were the substantial core. These schools have more
    in common among themselves as a class than their class have with the
   academic aims and methods that characterize the university proper. They
    are in fact ready and competent to go on their own recognizances, --
   indeed they commonly resent any effective interference or surveillance
      from the side of the academic corporation of which they nominally
   continue to be members, and insist on going their own way and arranging
       their own affairs as they know best. Their connection with the
   university is superficial and formal at the best, so far as regards any
      substantial control of their affairs and policy by the university
    authorities at large; it is only in their interference with academic
      policy, and in injecting their own peculiar bias into university
     affairs, that they count substantially as corporate members of the
   academic body. And in these respects, what is said of the professional
   and technical schools holds true also of the undergraduate departments.

         It is quite feasible to have a university without professional
   schools and without an undergraduate department; but it is not possible
      to have one without due provision for that non-utilitarian higher
       learning about which as a nucleus these utilitarian disciplines
       cluster. And this in spite of the solicitous endeavours of the
   professional schools to make good their footing as the substantial core
                             of the corporation.

                                      V

        As intimated above, there are two main reasons for the continued
    and tenacious connection between these schools and the universities:
     (a) ancient tradition, fortified by the solicitous ambition of the
    university directorate to make a brave show of magnitude, and (b) the
         anxiety of these schools to secure some degree of scholarly
       authentication through such a formal connection with a seat of
   learning. These two motives have now and again pushed matters fairly to
   an extreme in the reactionary direction. So, for instance, the chances
   of intrigue and extra-academic clamour have latterly thrown up certain
       men of untempered "practicality" as directive heads of certain
        universities, and some of these have gone so far as to avow a
      reactionary intention to make the modern university a cluster of
       professional schools or faculties, after the ancient barbarian
       fashion.^9 But such a policy of return to the lost crudities is
      unworkable in the long run under modern conditions. It may serve
    excellently as a transient expedient in a campaign of popularity, and
    such appears to have been its chief purpose where a move of this kind
    has been advocated, but it runs on superficial grounds and can afford
     neither hope nor fear of a permanent diversion in the direction so
                                 spoken for.

        In the modern community, under the strain of the price system and
   the necessities of competitive earning and spending, many men and women
      are driven by an habitual bias in favour of a higher "practical"
       efficiency in all matters of education; that is to say, a more
   single-minded devotion to the needs of earning and spending. There is,
   indeed, much of this spirit abroad in the community, and any candidate
        for popular favour and prestige may find his own advantage in
    conciliating popular sentiment of this kind. But there is at the same
      time equally prevalent through the community a long-term bias of
    another kind, such as will not enduringly tolerate the sordid effects
   of pursuing an educational policy that looks mainly to the main chance,
    and unreservedly makes the means of life its chief end. By virtue of
    this long-term idealistic drift, any seminary of learning that plays
   fast and loose in this way with the cultural interests entrusted to its
   keeping loses caste and falls out of the running. The universities that
        are subjected in this fashion to an experimental reversion to
       vocationalism, it appears, will unavoidably return presently to
       something of the non-professional type, on pain of falling into
      hopeless discredit. There have been some striking instances, but
    current not ions of delicacy will scarcely admit a citation of nam es
   and dates. And while the long-term drift of the modern idealistic bias
      may not permit the universities permanently to be diverted to the
    service of Mammon in this fashion, yet the unremitting endeavours of
   "educators" seeking prestige for worldly wisdom results at the best in
     a fluctuating state of compromise, in which the ill effects of such
      bids for popularity are continually being outworn by the drift of
                               academic usage.

        The point is illustrated by the American state universities as a
    class, although the illustration is by no means uniformly convincing.
     The greater number of these state schools are not, or are not yet,
    universities except in name. These establishments have been founded,
    commonly, with a professed utilitarian purpose, and have started out
   with professional training as their chief avowed aim. The purpose made
   most of in their establishment has commonly been to train young men for
   proficiency in some gainful occupation; along with this have gone many
   half-articulate professions of solicitude for cultural interests to be
        taken care of by the same means. They have been installed by
       politicians looking for popular acclaim, rather than by men of
        scholarly or scientific insight, and their management has not
     infrequently been entrusted to political masters of intrigue, with
    scant academic qualifications; their foundations has been the work of
   practical politicians with a view to conciliate the good will of a lay
   constituency clamouring for things tangibly "useful" -- that is to say,
   pecuniarily gainful. So these experts in short-term political prestige
    have made provision for schools of a "practical" character; but they
   have named these establishments "universities" because the name carries
   an air of scholarly repute, of a higher, more substantial kind than any
       naked avowal of material practicality would give. Yet, in those
     instances where the passage of time has allowed the readjustment to
   take place, these quasi-"universities," installed by men of affairs, of
    a crass "practicality," and in response to the utilitarian demands of
   an unlearned political constituency, have in the long run taken on more
      and more of an academic, non-utilitarian character, and have been
   gradually falling into line as universities claiming a place among the
      seminaries of the higher learning. The long-term drift of modern
    cultural ideals leaves these schools no final resting place short of
      the university type, however far short of such a consummation the
                 greater number of them may still be found.

       What has just been said of the place which the university occupies
   in modern civilization, and more particularly of the manner in which it
      is to fill its place, may seem something of a fancy sketch. It is
   assuredly not a faithful description of any concrete case, by all means
    not of any given American university; nor does it faithfully describe
     the line of policy currently pursued by the directorate of any such
   establishment. Yet it is true to the facts, taken in a generalized way,
     and it describes the type to which the American schools unavoidably
    gravitate by force of the community's long-term idealistic impulsion,
     in so far as their drift is not continually corrected and offset by
    vigilant authorities who, from motives of their own, seek to turn the
       universities to account in one way and another. It describes an
      institutional ideal; not necessarily an ideal nursed by any given
    individual, but the ideal logically involved in the scheme of modern
   civilization, and logically coming out of the historical development of
       Western civilization hitherto, and visible to any one who will
    dispassionately stand aside and look to the drift of latterday events
      in so far as they bear on this matter of the higher learning, its
                        advancement and conservation.

       Many if not most of those men who are occupied with the guidance of
    university affairs would disown such a projected ideal, as being too
     narrow and too unpractical to fit into the modern scheme of things,
     which is above all else a culture of affairs; that it does not set
    forth what should be aimed at by any who have the good of mankind at
   heart, or who in any sensible degree appreciate the worth of real work
   as contrasted with the leisurely intellectual finesse of the confirmed
       scientist and man of letters. These and the like objections and
     strictures may be well taken, perhaps. The question of what, in any
      ulterior sense, ought to be sought after in the determination of
   academic policy and the conduct of academic affairs will, however, not
       coincide with the other question, as to what actually is being
     accomplished in these premises, on the one hand, nor as to what the
   long-term cultural aspirations of civilized men are setting toward, on
                               the other hand.

         Now, it is not intended here to argue the merits of the current
   cultural ideals as contrasted with what, in some ulterior sense, ought
    to be aimed at if the drift of current aspirations and impulse should
      conceivably permit a different ideal to be put into effect. It is
   intended only to set forth what place, in point of fact and for better
    or worse, the higher learning and the university hold in the current
        scheme of Western civilization, as determined by that body of
    instinctive aspirations and proclivities that holds this civilization
     to its course as it runs today; and further to show how and how far
    certain institutional factors comprised in this modern scheme of life
       go to help or hinder the realization of this ideal which men's
    aspirations and proclivities so make worth while to them. The sketch
      here offered in characterization of the university and its work,
    therefore, endeavours to take account of the community's consensus of
   impulses and desires touching the animus and aims that should move the
    seminaries of the higher learning, at the same time that it excludes
    those subsidiary or alien interests in whose favour no such consensus
                            is found to prevail.

       There are many of these workday interests, extraneous to the higher
    learning, each and several of which may be abundantly good and urgent
    in its own right; but, while they need not be at cross purposes with
   the higher learning, they are extraneous to that disinterested pursuit
    of knowledge in which the characteristic intellectual bent of modern
       civilization culminates. These others are patent, insistent and
   palpable, and there need be no apprehension of their going by default.
      The intellectual predilection -- the idle curiosity -- abides and
       asserts itself when other pursuits of a more temporal but more
    immediately urgent kind leave men free to take stock of the ulterior
   ends and values of life; whereas the transient interests, preoccupation
    with the ways and means of life, are urgent and immediate, and employ
    men's thought and energy through the greater share of their life. The
   question of material ways and means, and the detail requirements of the
   day's work, are for ever at hand and for ever contest the claims of any
      avowed ulterior end; and by force of unremitting habituation the
    current competitive system of acquisition and expenditure induces in
     all classes such a bias as leads them to overrate ways and means as
    contrasted with the ends which these ways and means are in some sense
                             designed to serve.

       So, one class and another, biassed by the habitual preoccupation of
   the class, will aim to divert the academic equipment to some particular
       use which habit has led them to rate high; or to include in the
     academic discipline various lines of inquiry and training which are
    extraneous to the higher learning but which the class in question may
   specially have at heart; but taking them one with another, there is no
   general or abiding consensus among the various classes of the community
   in favour of diverting the academic establishment to any other specific
    uses, or of including in the peculiar work of the university anything
              beyond the pursuit of knowledge for its own sake.

        Now, it may be remarked by the way, that civilized mankind should
       have come so to set their heart on this chase after a fugitive
    knowledge of inconsequential facts may be little to the credit of the
    race or of that scheme of culture that so centres about this cult of
    the idle curiosity. And it is perhaps to their credit, as well as to
       the credit of the community whose creatures they are, that the
   spokesmen of some tangible ideal, some materially expedient aspiration,
       embodying more of worldly wisdom, are for ever urging upon the
   institutions of the higher leaning one or another course of action of a
   more palpably expedient kind. But, for better or worse, the passage of
      time brings out the fact that these sober and sensible courses of
   policy so advocated are after all essentially extraneous, if not alien,
     to those purposes for which a university can be maintained, on the
      ground afforded by the habits of thought prevalent in the modern
                            civilized community.

        One and another of these "practical" and expedient interests have
     transiently come to the front in academic policy, and have in their
      time given a particular bent to the pursuit of knowledge that has
    occupied the universities. Of these extraneous interests the two most
    notable have, as already indicated above, been the ecclesiastical and
    the political. But in the long run these various interests and ideals
      of expediency have, all and several, shown themselves to be only
      factional elements in the scheme of culture, and have lost their
   preferential voice in the shaping of academic life. The place in men's
       esteem once filled by church and state is now held by pecuniary
     traffic, business enterprise. So that the graver issues of academic
     policy which now tax the discretion of the directive powers, reduce
   themselves in the main to a question between the claims of science and
      scholarship on the one hand and those of business principles and
   pecuniary gain on the other hand. In one shape or another this problem
    of adjustment, reconciliation or compromise between the needs of the
     higher learning and the demands of business enterprise is for ever
      present in the deliberations of the university directorate. This
   question gathers in its net all those perplexing details of expediency
             that now claim the attention of the ruling bodies.

                                     VI

          Since the paragraphs that make up the foregoing chapter were
   written the American academic community has been thrown into a new and
   peculiar position by the fortunes of war. The progress and the further
    promise of the war hold in prospect new and untried responsibilities,
     as well as an unexampled opportunity. So that the outlook now (June
     1918) would seem to be that the Americans are to be brought into a
    central place in the republic of learning; to take a position, not so
    much of dominance as of trust and guardianship; not so much by virtue
      of their own superior merit as by force of the insolvency of the
                        European academic community.

         Again, it is not that the war is expected to leave the lines of
   European scholars and scientists extinct; although there is no denying
       the serious inroads made by the war, both in the way of a high
        mortality among European men of learning, and in the way of a
   decimation of the new men on whom the hopes of the higher learning for
     the incoming generation should have rested. There is also a serious
      diversion of the young forces from learning to transiently urgent
     matters of a more material, and more ephemeral nature. But possibly
      more sinister than all these losses that are in a way amenable to
   statistical record and estimate, is the current and prospective loss of
     morale. Naturally, it would be difficult and hazardous to offer an
    appraisal of this prospective loss of morale, with which it is to be
   expected that the disintegrated European community of learned men will
    come through the troubled times. But that there is much to be looked
    for on this score, that there is much to be written off in the way of
    lowered aggregate efficiency and loss of the spirit of team-work, --
     that much there is no denying, and it is useless to blink the fact.

          There has already a good deal of disillusionment taken effect
     throughout the nations of Christendom in respect of the temper and
    trustworthiness of German scholarship these past three or four years,
   and it is fairly beyond computation what further shift of sentiment in
    this respect is to be looked for in the course of a further Possible
    period of years given over to the same line of experience. Doubtless,
    the German scholars, and therefore the German seats of learning whose
    creatures and whose custodians these German scholars are, have earned
     much of the distrust and dispraise that is falling to their share.
    There is no overlooking the fact that they have proved the frailty of
    their hold on those elementary principles of sobriety and single mind
    that underlie all sound work in the field of learning. To any one who
     has the interest of the higher learning at heart, the spectacle of
   maudlin chauvinism and inflated scurrility unremittingly placed on view
    by the putative leaders of German science and scholarship can not but
                        be exceedingly disheartening.

       It may be argued, and it may be true, of course, that much of this
     failure of intelligence and spiritual force among Germany's men of
   learning is of the nature of a transient eclipse of their powers; that
   with the return of settled conditions there is due to come a return of
   poise and insight. But when all due argument has been heard, it remains
    true that the distrust set afoot in the mind of their neighbours, by
   this highly remarkable exhibition of their personal equation, will long
    inure to the disability of Germany's men of learning as a force to be
    counted on in that teamwork that is of the essence of things for the
    advancement of learning. In effect, Germany, and Germany's associates
    in this warlike enterprise, will presumably be found bankrupt in this
       respect on the return of peace, even beyond the other nations.

       These others have also not escaped the touch of the angel of decay,
    but the visible corruption of spiritual and intellectual values does
    not go the same length among them. Nor have these others suffered so
     heavy a toll on their prospective scholarly man power. It is all a
   matter of degree and of differential decline, coupled with a failure of
   corporate organization and of the usages and channels of communion and
     co-operation. Chauvinistic self-sufficiency and disesteem of their
     neighbours have apparently also not gone so deep and far among the
     other nations; although here again it is only a relative degree of
                          immunity that they enjoy.

       And all this holds true of the Americans in much the same way as of
    the rest; except that the Americans have, at least hitherto, not been
    exposed to the blight in anything like the same degree as any one of
    those other peoples with whom they come in comparison here. It is, of
   course, not easy to surmise what may yet overtake them, and the others
     with them; but judged on the course of things hitherto, and on the
       apparent promise of the calculable future, it is scarcely to be
    presumed that the Americans are due to suffer so extreme a degree of
        dilapidation as the European peoples, -- even apart from the
     accentuated evil case of the Germans. The strain has hitherto been
      lighter here, and it promises so to continue, whether the further
       duration of the war shall turn out to be longer or shorter. The
    Americans are, after all, somewhat sheltered from the impact; and so
     soon as the hysterical anxiety induced by the shock has had time to
   spend itself, it should reasonably be expected that this people will be
   able soberly to take stock of its assets and to find that its holdings
      in the domain of science and scholarship are, in the main, still
                                   intact.

       Not that no loss has been incurred, nor that no material degree of
      derangement is to be looked for, but in comparison with what the
     experience of the war is bringing to the Europeans, the case of the
    Americans should still be the best there is to be looked for and the
    best is always good enough, perforce. So it becomes a question, what
   the Americans will do with the best opportunity which the circumstances
   offer. And on their conduct of their affairs in this bearing turns not
      only their own fortune in respect of the interests of science and
      scholarship, but in great measure the fortunes of their overseas
        friends and co-partners in the republic of learning as well.

        The fortunes of war promise to leave the American men of learning
    in a strategic position, in the position of a strategic reserve, of a
      force to be held in readiness, equipped and organized to meet the
    emergency that so arises, and to retrieve so much as may be of those
    assets of scholarly equipment and personnel that make the substantial
   code of Western civilization. And so it becomes a question of what the
    Americans are minded to do about it. It is their opportunity, and at
   the same time it carries the gravest responsibility that has yet fallen
    on the nation; for the spiritual fortunes of Christendom are bound up
   with the line of policy which this surviving contingent of American men
     of learning shall see fit to pursue. They are not all that is to be
   left over when the powers of decay shall begin to retire, nor are they,
      perhaps, to be the best and most valuable contingent among these
    prospective survivors; but they occupy a strategic position, in that
   they are today justly to be credited with disinterested motives, beyond
    the rest, at the same time that they command those material resources
    without which the quest of knowledge can hope to achieve little along
   the modern lines of inquiry. By force of circumstances they are thrown
   into the position of keepers of the ways and means whereby the republic
   of learning is to retrieve its fortunes. By force of circumstances they
   are in a position, if they so choose, to shelter many of those masters
    of free inquiry whom the one-eyed forces of reaction and partisanship
       overseas will seek to suppress and undo; and they are also in a
     position, if they so choose, to install something in the way of an
      international clearing house and provisional headquarters for the
     academic community throughout that range of civilized peoples whose
    goodwill they now enjoy -- a place of refuge and a place of meeting,
    confluence and dissemination for those views and ideas that live and
              move and have their being in the higher learning.

        There is, therefore, a work of reconstruction to be taken care of
       in the realm of learning, no less than in the working scheme of
        economic and civil institutions. And as in this other work of
    reconstruction, so here; if it is to be done without undue confusion
   and blundering it is due to be set afoot before the final emergency is
     at hand. But there is the difference that, whereas the framework of
      civil institutions may still, with passable success, be drawn on
    national lines and confined within the national frontiers; and while
   the economic organization can also, without fatal loss, be confined in
          a similar fashion, in response to short-sighted patriotic
   preconceptions; the interests of science, and therefore of the academic
      community, do not run on national lines and can not similarly be
   confined within geographical or political boundaries. In the nature of
   the case these interests are of an international character and can not
     be taken care of except by unrestricted collusion and collaboration
     among the learned men of all those peoples whom it may concern. Yet
   there is no mistaking the fact that the spirit of invidious patriotism
    has invaded these premises, too, and promises to bungle the outcome;
    which makes the needed work of reconstruction all the more difficult
   and all the more imperative. Unhappily, the state of sentiment on both
      sides of the line of cleavage will presumably not admit a cordial
    understanding and co-operation between the German contingent and the
    rest of the civilized nations, for some time to come. But the others
    are in a frame of mind that should lend itself generously to a larger
        measure of co-operation in this respect now than ever before.

       So it may not seem out of place to offer a suggestion, tentatively
   and under correction, looking to this end. A beginning may well be made
   by a joint enterprise among American scholars and universities for the
    installation of a freely endowed central establishment where teachers
    and students of all nationalities, including Americans with the rest,
       may pursue their chosen work as guests of the American academic
       community at large, or as guests of the American people in the
    character of a democracy of culture. There should also be nothing to
    hinder the installation of more than one of these academic houses of
    refuge and entertainment; nor should there be anything to hinder the
     enterprise being conducted on such terms of amity, impartiality and
   community interest as will make recourse to it an easy matter of course
    for any scholars whom its opportunities may attract. The same central
     would at the same time, and for the time being, take care of those
   channels of communication throughout the academic world that have been
     falling into enforced neglect under the strain of the war. So also
   should provision be made, perhaps best under the same auspices, for the
    (transient) taking-over of the many essential lines of publicity and
      publication on which the men engaged in scholarly and scientific
    inquiry have learned to depend, and which have also been falling into
                   something of a decline during the war.

       Measures looking to this end might well be made, at the same time,
       to serve no less useful a purpose within the American Academic
     community. As is well known, there prevails today an extensive and
    wasteful competitive duplication of plant, organization and personnel
      among the American universities, as regards both publications and
    courses of instruction. Particularly is this true in respect of that
      advanced work of the universities that has to do with the higher
     learning. At the same time, these universities are now pinched for
   funds, due to the current inflation of prices. So that any proposal of
    this nature, which might be taken advantage of as an occasion for the
     pooling of common issues among the universities, might hopefully be
    expected to be welcomed as a measure of present relief from some part
          of the pecuniary strain under which they are now working.

        But competition is well ingrained in the habitual outlook of the
   American schools. To take the issue to neutral ground, therefore, where
      this competitive animus may hopefully be counted on to find some
   salutary abatement, it may be suggested that a practicable nucleus for
    this proposed joint enterprise can well be found in one or another --
    perhaps in one and another -- of those extra-academic foundations for
   research of which there already are several in existence, -- as, e.g.,
     the Carnegie Institution. With somewhat enlarged powers, or perhaps
    rather with some abatement of restrictions, and with such additional
    funds as may be required, the necessary work and organization should
     readily be taken care of by such an institution. Further growth and
        ramification would be left to future counsel and advisement.

         The contemplated enterprise would necessarily require a certain
      planning and organization of work and something in the way of an
   administrative and clerical staff,a setting up of something in the way
     of "organization tables"; but there can be no question of offering
      detailed proposals on that head here. Yet the caution may well be
     entered here that few specifications are better than many, in these
   premises, and that the larger the latitude allowed from the outset, the
   fewer the seeds of eventual defeat, -- as is abundantly illustrated by
                                 contraries.

        It is also evident that such an enterprise will involve provision
        for some expenditure of funds; presumably a somewhat generous
    expenditure; which comes near implying that recourse should be had to
     the public revenues, or to resources that may legitimately be taken
   over by the public authorities from private hands where they now serve
    no useful purpose. There are many items of material resources in the
   country that come legitimately under this head. At the same time it is
    well in this connection to call to mind that there is no prospect of
     the country's being in any degree impoverished in the course of the
    war; so that there need be no apprehension of a shortage of means for
    the carrying on of such an enterprise, if only the available sources
      are drawn on without prejudice. In the mind of any disinterested
     student of the American economic situation, there can be no serious
     apprehension that the American people, collectively, will be at all
     worse off in point of disposable means at the close of the war than
   they were at its beginning; quite the contrary in fact. To any one who
    will look to the facts it is evident that the experience of the war,
     and the measures taken and to be taken, are leading to a heightened
    industrial productiveness and a concomitant elimination of waste. The
    resulting net gain in productive efficiency has not gone at all far,
    and there need be no apprehension of its going to great lengths; but,
   for more or less, it is going so far as safely to promise a larger net
    annual production of useful goods in the immediate future than in the
     immediate past; and the disposable means of any people is always a
      matter of the net annual production, and it need be a question of
    nothing else. The manner in which this net product is, and is to be,
    shared among the classes and individuals of the community is another
                    question, which does not belong here.

        A question of graver weight and of greater perplexity touches the
         presumptive attitude of the several universities and their
    discretionary authorities in the face of any proposed measure of this
   kind; where the scope of the enterprise is so far beyond their habitual
   range of interest. When one calls to mind the habitual parochialism of
    the governing boards of these seminaries of the higher learning, and
    the meticulous manoeuvres of their executives seeking each to enhance
    his own prestige and the prestige of his own establishment, there is
   not much of an evident outlook for large and generous measures looking
   to the common good. And yet it is also to be called to mind that these
    governing boards and executives are, after all, drawn from the common
       stock of humanity, picked men as they may be; and that they are
    subject, after all, to somewhat the same impulses and infirmities as
    the common run, picked though they may be with a view to parochialism
      and blameless futility. Now, what is overtaking the temper of the
   common run under the strain of the war situation should be instructive
    as to what may be also looked for at the bands of these men in whose
   discretion rest the fortunes of the American universities. There should
     be at least a fighting chance that, with something larger, manlier,
   more substantial, to occupy their attention and to shape the day's work
     for them, these seminaries of learning may, under instant pressure,
   turn their best efforts to their ostensible purpose, "the increase and
       diffusion of knowledge among men," and to forego their habitual
    preoccupation with petty intrigue and bombastic publicity, until the
                            return of idler days.

                                   NOTES:

      1. An inquiry of this kind has been attempted elsewhere: Cf. The
      Instinct of Workmanship. chapter vii, pp. 321-340; "The Place of
   Science in Modern Civilization", American Journal of Sociology. Vol. XI
    (March, 1906), pp. 585-609; "The Evolution of the Scientific Point of
    View," University of California Chronicle (1908), Vol. X, No. 4, pp.
                                  395-416.

     2. Cf. The Instinct of Workmanship and the State of the Industrial
                   Arts, ch.i and pp. 30-45, 52-62, 84-89.

   3. In the crude surmises of the pioneers in pragmatism this proposition
     was implicitly denied; in their later and more advisedly formulated
       positions the expositors of pragmatism have made peace with it.

    4. The essential function of the university is to bring together, for
    the transmission of experience and impulse, the sages of the passing
      and the picked youths of the coming generation. By the extent and
      fulness with which they establish these social contacts, and thus
   transmit the wave of cumulative experience and idealist impulse -- the
   real sources of moral and intellectual progress -- the universities are
    to be judged. -- Victor Branford, Interpretations and Forecasts, ch.
                  VI. "The Present as a Transition." p 288.

              5. Cf., Geo. T. Ladd, University Control, p. 349.

   6. Cf., e.g., J. McKeen Cattell, University Control, Part III, ch. V.,
     "Concerning the American University." "The university is those who
   teach and those who learn and the work they do." "The university is its
     men and their work. But certain externals are necessary or at least
        usual -- buildings and equipment, a president and trustees."

         "The papers by other writers associated with Mr Cattell in this
   volume run to the same effect whenever they touch the same topic; and,
    indeed, it would be difficult to find a deliberate expression to the
           contrary among men entitled to speak in these premises.

         It may be in place to add here that the volume referred to, on
      University Control, has been had in mind throughout the following
       analysis and has served as ground and material for much of the
                                  argument.

              7. Cf. The Instinct of Workmanship, ch. vi, vii.

     8. With the current reactionary trend of things political and civil
      toward mediaeval-barbarian policies and habits of thought in the
   Fatherland, something of a correlative change has also latterly come in
     evidence in the German universities; so that what is substantially
     "cameralistic science" -- training and information for prospective
    civil servants and police magistrates is in some appreciable measure
       displacing disinterested inquiry in the field of economics and
     political theory. This is peculiarly true of those corporations of
      learning that come closely in touch with the Cultus Ministerium.

    9. Cf. "Some Considerations On the Function of the State University."
      (Inaugural Address of Edmund Janes James, Ph.D., LL.D.), Science,
                             November 17, 1905.
   Skip To Main Content

   JavaScript has been disabled on this browser. For a seamless
   experience, please enable the option to run JavaScript on this device

   AIG Logo
   (BUTTON) BACK
     * Solutions (BUTTON) +

Solutions
       Our insurance solutions are designed to help businesses protect
       what’s most valuable to them and reduce emerging risks, no matter
       their size.

       [sidecard_risk-solutions_3458p.jpg]
          + Overview
          + Business (BUTTON) +
               o Casualty (BUTTON) +
                    # Excess Liability Insurance
                    # Motor Fleet Insurance
                    # Health & Safety eLearning
                    # Primary Liability Insurance
               o Global Risk Solutions (BUTTON) +
                    # Alternative Solutions & Product Innovation
                    # Global Fronting & Captive Management Programmes
               o Financial Lines (BUTTON) +
                    # Crime
                    # CyberEdge
                    # Financial Institutions
                    # Kidnap and Ransom
                    # Employment Practice Liability
                    # Directors and Officers
                    # Pension Trustee Liability
                    # Professional Liability
                    # Public Offering of Securities Insurance
                    # Single Project Professional Indemnity
                    # TechPremier
               o Group Personal Accident and Travel Insurance (BUTTON) +
                    # Expatriate Care
                    # Lifeline
                    # SPECIALTY Solutions
               o Marine (BUTTON) +
                    # Marine Cargo
                    # Marine Liability
               o Commercial Property (BUTTON) +
                    # Commercial Property
                    # Property Terrorism Insurance
               o Other Commercial (BUTTON) +
                    # Contaminated Products
                    # Environmental Impairment Liability Insurance
                    # Mergers and Acquisitions Insurance
          + Car Insurance (BUTTON) +
               o Boxclever - Young & First Time Driver Insurance
               o Telematics Car Insurance
               o Compare Car Insurance
               o Car Insurance for Men
               o Car Insurance for Women
               o Over 50s Car Insurance
               o Car Insurance FAQs
               o Help & Advice Hub (BUTTON) +
                    # Compare Car Insurance Covers
                    # Buying a Car in Ireland
                    # Car Maintenance
                    # Young & First Time Drivers
                    # Cheaper Car Insurance
                    # Safe Driving Practices
                    # Electric Cars (E-Cars)
          + Home Insurance (BUTTON) +
               o All Risk Insurance
               o Contents Insurance
               o Home Insurance FAQs
               o Help & Advice Hub
          + Travel Insurance (BUTTON) +
               o Single Trip Insurance
               o Multi Trip Insurance
               o Family Holiday Insurance
               o Ski and Winter Sports Insurance
               o Backpackers Insurance
               o Long Stay Insurance
               o Golf Travel Insurance
               o Travel Insurance FAQs
               o Help & Advice Hub (BUTTON) +
                    # Ski Holiday Guides
                    # Travel Destination Guides & Inspiration
                    # Backpacking Travel Guides
                    # Safe Travelling
                    # Family Holidays
          + Car Hire Excess (BUTTON) +
               o Car Hire Excess FAQs
               o Car Hire Tips & Advice
          + Accident & Health (BUTTON) +
               o Personal Accident Plan
               o Cancer Care Plan
               o Hospital Cash Plan
               o Virtual Care Program
          + For Brokers (BUTTON) +
               o Distribution
               o Casualty
               o Commercial Combined
               o Cyber
               o Environmental
               o Financial Institutions
               o Group Personal Accident & Travel
               o Management Liability
               o Marine
               o Multinational
               o Professional Indemnity
               o Property
          + GlobeCover
          + RapidCover
          + Helpful Insurance Tips (BUTTON) +
               o Best Christmas Markets in Europe 2024
       ×
       Contact Us
     * Claims (BUTTON) +

Claims at AIG Ireland
       If you need to report a claim, you'll have a global team of AIG
       claims experts with you at every step throughout the process.

AIG's Global Claims Capabilities
       AIG's Global Claims Capabilities
          + Overview
          + Report a Claim
          + Breakdown Assistance
          + What to do in a car accident
       ×
     * Careers (BUTTON) +

Careers at AIG Ireland
       We inspire industry-leading work and create opportunities for
       people of all backgrounds to connect and advance across our
       organisation.

Find your role at AIG today.
       Find your role at AIG today.
          + Overview
          + Experienced Professionals
          + Students & Graduates
       ×
     * About (BUTTON) +

About AIG Ireland
       As a leading global insurance organisation, we combine global
       perspectives with local insights to help clients reduce risks and
       recover from setbacks.

AIG Women’s Open
       AIG Women’s Open
          + Overview
          + Our History
          + Our Sponsorships (BUTTON) +
               o LGFA Sponsorship
               o Golfer
               o Hockey Ireland Sponsorship
               o Basketball Ireland Sponsorship
               o Triathlon Ireland Sponsorship
          + Gender Pay Gap Reporting
          + Identifying AIG Emails
       ×
     * Contact (BUTTON) +

Contact AIG Ireland
       If you have questions or need more information, we'll help you find
       the right person to talk to.
       [sidecard_contact_3458p.jpg]
          + Overview
          + Existing Customers
          + Complaints
       ×

   ____________________
   ____________________
   (BUTTON) Submit
   (BUTTON)
   Worldwide Links
   Login
   (BUTTON)

Privacy Policy

Introduction

   AIG Europe S.A. (“AIG Ireland”, “we/us”) together with other affiliates
   and subsidiary companies of American International Group, Inc.
   (collectively called “AIG”) value your trust in us and are committed to
   handling Personal Information (defined below) appropriately in
   accordance with applicable laws.

   This is our main Privacy Policy which describes how we use Personal
   Information that we collect as part of our core business activities.

   References to "you" or "your" means any individual with whom we have a
   relationship, including policyholders, insureds or claimants under an
   insurance policy, commercial insurance brokers, appointed
   representatives, witnesses or another individual with whom we have a
   relationship or users of AIG Digital Services.

   This Privacy Policy will be supplemented by additional privacy policies
   tailored to our specific relationships with you where this is useful to
   provide you with a full picture of how we collect and use your Personal
   Information.

   The purpose of this Policy is to explain what Personal Information we
   collect, access, use, store, transfer and/or disclose (together,
   “process”), the reasons we process your Personal Information, to whom
   Personal Information is disclosed and your rights under the relevant
   laws.

   We use the words Personal Information to describe information about you
   and other individuals (for example, your partner or other members of
   your family), and from which you or they are identifiable.

   Our aim is responsible and secure handling of Personal Information,
   balancing the benefits of activities like research and data analytics
   to improve our products and service delivery, with our other
   commitments, including fairness, transparency and non-discrimination.

   Personal Information is obtained from a variety of sources, including:
     * application, proposal and claim forms, and other forms;
     * telephone calls, emails, meetings and other communications;
     * service providers, brokers and agents, claims investigators,
       witnesses, medical professionals, driver and vehicle licensing
       authorities, credit reference agencies, your employer, and other
       third parties;
     * this website (the “Site”);
     * the software applications made available by us on computers, smart
       phones and other mobile devices (the “Apps”); and
     * our social media pages, other social media content, tools and
       applications (our “Social Media Content”).

   Unless otherwise indicated, the AIG Digital Services are only for use
   by legally competent adults. Minors (i.e. individuals under the age of
   eighteen (18)), and those without legal competency should not provide
   Personal Information through the AIG Digital Services themselves but
   rather via appropriately authorised agents, guardians or legal
   advisors.

   Personal Information may be provided to us by you directly or by a
   third party.  For example, an insurance policyholder may provide
   Personal Information about you so that you can benefit under their
   insurance policy.

   Please note:

   By providing us with Personal Information about another individual, you
   represent that you have (unless we agreed otherwise, in writing): (a)
   informed the individual about the content of this Privacy Policy and
   any other applicable privacy notices provided to you; and (b) obtained
   their permission (where required by, and in such manner as required by,
   applicable laws) to share their Personal Information with us in
   accordance with this Privacy Policy and other applicable privacy
   notices.

(BUTTON) What Personal Information do we collect and hold?

   As we are in the business of providing insurance, claims handling,
   assistance and related services, the Personal Information we hold and
   process, depending on our relationship, includes:
                       Type of Personal Information                     Examples

   1. Contact information

   Name, address, email, telephone number and social networking profile
   details

   2. General information

   Gender, marital and family status, date and place of birth, physical
   characteristics (appropriate to the circumstances), your status as
   director or partner, or other ownership or management interest in an
   organization, your signature, and other identifiers

   3. Education and employment information

   Educational background, employer details and employment history, skills
   and experience, professional licences, memberships and affiliations

   4. Insurance and claim information

   Policy and claim numbers, relationship to policyholder, insured,
   claimant or other relevant individual, date and cause of property
   damage, loss or theft, injury, disability or death, activity records
   (for example, driving records), and other information relevant to
   insurance policy issuance, and claim assessment and settlement. For
   liability insurance, this will include details of the dispute, claim or
   proceedings involving you.

   5.Government and other official identification numbers

   Social security or national insurance number, passport number, tax
   identification number, driver’s licence number, or other government
   issued identification number or documents

   6. Financial information and account details

   Payment card number (credit or debit card), bank account number, or
   other financial account number and account details, credit history,
   credit reference information and credit score, assets, income, and
   other financial information, account log-in information and passwords
   for accessing insurance policy, claim and other accounts, and AIG
   Digital Services

   7. Medical condition and health status

   Current or previous physical, mental or medical condition, health
   status, injury or disability information, medical diagnosis, medical
   procedures performed and treatment given, personal habits (for example,
   smoking or consumption of alcohol), prescription information, and
   medical history

   8. Other sensitive information

   Information about religious beliefs, ethnicity, political opinions or
   trade union membership (for example, if an insurance application is
   made through a third-party marketing partner that is a professional,
   trade, religious, community or political organisation), sexual life and
   orientation, or genetic or biometric information

   We may obtain information about criminal records or civil litigation
   history (for example, for preventing, detecting and investigating
   fraud)

   Information provided voluntarily to us (for example, preferences
   expressed regarding medical treatment based on religious beliefs)
   (where collected in accordance with applicable law)

   9. Telephone recordings

   Recordings of telephone calls with our representatives and call
   centres

   10. Photographs and video recordings

   Images (including photographs and pictures) or video recordings created
   in connection with our insurance or other business activities,
   including for claims assessment, administration and settlement, claim
   disputes, or for other relevant purposes as permitted by law, as well
   as CCTV recordings captured by equipment on our premises

   11.Information to detect, investigate or prevent crime, including fraud
   and money laundering

   Insurers commonly collect, hold and share information about their
   previous dealings with policyholders and claimants with the intention
   of the detection, investigation and prevention of fraud, money
   laundering and other criminal activities. In this regard, we may have a
   duty at law to disclose such information to the relevant regulators,
   government authorities, enforcement agencies and/or other government
   bodies .

   12. Information enabling us to provide products and services


   Location and identification of property insured (for example, property
   address, vehicle licence plate or identification number), travel plans,
   age categories of individuals to be insured, details of the risks to be
   insured, prior accident or loss history, and cause of loss, status as
   company officer or director, or partner, or other ownership or
   management interest in an organisation, history of disputes, civil or
   criminal proceedings or formal investigations involving you, and
   information about other insurance held

   13. Marketing preferences, marketing activities and customer feedback

   Marketing preferences, information relating to competition, prize draw
   or other promotion entry, or responses to voluntary customer
   satisfaction surveys

   To improve our marketing communications, we may collect information
   about interaction with, and responses to, our marketIng communications

   14. Online activity information

   We will receive Personal Information about you when you use AIG Digital
   Services; this may include your social media account identifier and
   profile picture, your IP address and other online identifiers (to the
   extent that they are Personal Information), and other Personal
   Information that you provide to us online

   If you choose to connect your social media account provided by another
   social media service provider to your account on any of the AIG Digital
   Services, Personal Information from your other social media account may
   be shared with us, which may include Personal Information that is part
   of your social media account profile, or the profiles of your friends
   and other connected individuals.

   15. Supplemental information from other source

   We and our service providers may supplement the Personal Information we
   collect with information obtained from other sources (for example,
   publicly available information from online social media services and
   other information resources, third-party commercial information
   sources, and information from our group companies and business
   partners). We will use any such supplemental information in accordance
   with applicable law (including obtaining your consent where required)

(BUTTON) Why we process Personal Information and the legal justification for
doing so

   We use Personal Information to carry out our business activities.  The
   purposes for which we use your Personal Information will differ based
   on our relationship, including the type of communications between us
   and the services we provide. Personal Information will be used for
   different purposes if you are a policyholder, insured or claimant under
   an insurance policy, a commercial insurance broker or appointed
   representative, a witness or another individual with whom we have a
   relationship.

   Legal Justification

   Data protection law seeks to ensure that the way Personal Information
   is processed is fair. To comply with the law, we need to tell you the
   legal justification (sometimes also referred to as a legal or lawful
   basis) we rely on for using your Personal Information. While the law
   provides several legal justifications, the table below describes the
   main legal justifications that apply to our purposes for using Personal
   Information.

   We may be required to obtain Personal Information from you to comply
   with applicable legal requirements, and certain Personal Information
   may be needed to enable us to fulfil the terms of our contract with you
   (or someone else), or in preparation of entering into a contract with
   you (or someone else), or for pursuing a right and/or legitimate
   interest of ours or of third parties. We may inform you of this at the
   time that we are obtaining the Personal Information from you.  In these
   circumstances, if you do not provide the relevant Personal Information
   to us, we may not be able to provide our products or services to you.
   If you would like further information, please contact us using the
   details below (see section below ‘Who to contact about your Personal
   Information?’).

   Where we rely on our legitimate business interests or the legitimate
   interests of a third party to justify the purposes for using your
   Personal Information, those legitimate interests will be set out in a
   supplemental privacy notice (which is tailored to our relationship with
   you where this is useful to provide you with a full picture of how we
   collect and use Personal Information), but in any event our legitimate
   interests will usually be:
     * pursuit of our commercial activities and objectives, or those of a
       third party (for example, by carrying out direct marketing);
     * compliance with applicable legal and regulatory obligations, and
       any guidelines, standards and codes of conduct (for example, by
       carrying out background checks or otherwise preventing, detecting
       or investigating fraud or money laundering);
     * improvement and development of our business operations and service
       offering, or those of a third party;
     * protection of our assets, information, business, shareholders,
       employees and customers, or those of a third party (for example,
       ensuring IT network and information security, enforcing claims,
       including debt collection);
     * to keep our IT network/systems secure, prevent/detect crime and
       ascertain compliance with internal roles for using the system; and
     * analysing competition in the market for our services (for example,
       by carrying out research, including market research).

   We may need to collect, use and disclose Personal Information in
   connection with matters of important public interest, for instance when
   complying with our obligations under anti-money laundering and
   terrorist financing laws and regulations, and other laws and
   regulations aimed at preventing financial crime.  In these cases, the
   legal justification for our use of Personal Information is that the use
   is necessary for matters of public interest. Additional justifications
   may also apply depending on the circumstances.

   Sensitive/Special Categories of Personal Information

   For more sensitive/special categories of Personal Information we will
   rely on either:
     * your explicit consent; or
     * one or more of the other legal justifications set out in the table
       below (which apply to all Personal Information) and typically one
       of the following additional justifications which are only required
       where we process sensitive/special categories of Personal
       Information (however other legal justifications may be available):
          + the use is necessary for the establishment, exercise or
            defence of legal claims, or whenever courts are acting in
            their judicial capacity (for example, when a court issues a
            court order requiring the processing of Personal Information);
          + the use is necessary for reasons of substantial public
            interest on the basis of EEA/member state or UK law (as
            applicable); or
          + the use is necessary for the purposes of preventive or
            occupational medicine, medical diagnosis or the provision of
            health or social care or treatment.

   These more sensitive/special categories of Personal Information include
   Personal Information revealing racial or ethnic origin, political
   opinions, religious or philosophical beliefs, or trade union
   membership, and the processing of genetic data, biometric data for the
   purpose of uniquely identifying a natural person, data concerning
   health or data concerning an individual’s sex life or sexual
   orientation.

   Processing of Personal Information relating to criminal convictions and
   offences is subject to the requirements of applicable law and may
   require an additional legal justification beyond those identified in
   the table below.

   Main Purposes

   The main purposes for which we use Personal Information in relation to
   the types of Personal Information we collect and use and the legal
   justification we rely on for such collection and use are listed in the
   table below:
   Description of purpose Types of Personal Information Why we Process
   Personal Information (our legal justification)

   A. Communicate with you and other individuals
     * Contact Information
     * General Information
     * Telephone recordings
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   B. Make assessments and decisions (automated and non-automated,
   including by profiling individuals) about:

   (i) the provision and terms of insurance and

   (ii) settlement of claims and provision of assistance and other
   services.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * You have provided consent
     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   C. Provide insurance, financial services, claims and assistance
   services, and other products and services which we offer, including
   claim assessment, administration, settlement and dispute resolution and
   administering, maintaining, managing and operating such products and/or
   services including any renewals. Such activities include:

   (i) sending you important information regarding changes to our
   policies, other terms and conditions, renewal of policies, AIG Digital
   Services and other administrative information;

   (ii) processing, assessing and determining any applications or requests
   made by you for insurance products or services;

   (iii) processing your Personal Information in connection with any
   claims made under any insurance products or in respect of any services
   provided by us including, without limitation, making, defending,
   analysing, investigating, processing, assessing, determining or
   responding to such claims;

   (iv) performing any functions and activities related to the insurance
   products and/or services provided by us including, without limitation,
   obtaining reinsurance, auditing, reporting and general servicing and
   maintenance of online and other service.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * It is in our legitimate interest or those of a relevant third party

   D. Assess your eligibility for payment plans, and process your premium
   and other payments.


     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Supplemental information from other sources

     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   E. Improve the quality of our products and services, provide staff
   training and maintain information security (for example, for this
   purpose we may record or monitor phone calls).
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Financial information and account details
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   F. Prevent, detect and investigate crime, including fraud and money
   laundering, and analyse and manage other commercial risks.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   G. Carry out research and data analysis, business and process
   enhancements, including analysis of our customer base and other
   individuals whose Personal Information we collect, complete market
   research, including customer satisfaction surveys, for the purposes of
   business innovation and assess the risks faced by our business, in
   accordance with applicable law (including obtaining consent where
   required).
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * You have provided consent (in circumstances where a legal
       justification over and above legitimate interests is required by
       applicable law)
     * It is in our legitimate interest or those of a relevant third party

   H. Provide marketing information in accordance with preferences you
   have told us about (marketing information may be about products and
   services offered by our third-party partners subject to your expressed
   preferences). We may carry out marketing activities in accordance with
   your preferences by using email, SMS and other text messaging, post or
   telephone.


     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Financial information and account details
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * You have provided consent (in circumstances where a legal
       justification over and above legitimate interests is required by
       applicable law)
     * It is in our legitimate interest or those of a relevant third party

   I. Allow you to participate in competitions, prize draws and similar
   promotions, and to administer these activities. These activities have
   additional terms and conditions, which will contain more information
   about how we use and disclose your Personal Information where this is
   useful to provide you with a full picture of how we collect and use
   Personal Information, so we recommend that you review those too.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * It is in our legitimate interest or those of a relevant third party

   J. Personalise your experience when you use AIG Digital Services or
   visit third-party websites by presenting information and advertisements
   tailored to you, identify you to anyone to whom you send messages
   through the AIG Digital Services, and facilitate sharing on social
   media.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * You have provided consent (in circumstances where personalization
       is achieved with the use of cookies)
     * It is in our legitimate interest or those of a relevant third party

   K. Manage our business operations and IT infrastructure, in line with
   our internal policies and procedures, including those relating to
   finance and accounting; billing and collections; IT systems operation;
   data and website hosting; data analytics; business continuity; records
   management; document and print management; and auditing.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   L. Manage complaints, feedback and queries, and handle requests for
   data access or correction, or the exercise of other rights relating to
   Personal Information.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   M. Comply with applicable laws and regulatory obligations (including
   laws and regulations outside your country of residence), for example,
   laws and regulations relating to anti-money laundering, sanctions and
   anti-terrorism; comply with legal process and court orders; and respond
   to requests from public and government authorities (including those
   outside your country of residence); meeting the requirements to make
   disclosure pursuant to any law binding on us or for the purposes of
   complying with any regulations or guidelines issued by any regulatory
   or other authorities which have jurisdiction over AIG Ireland or any
   AIG Affiliates; and for audit, compliance, investigation and inspection
   purposes.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   N. Establish, enforce and defend legal rights to protect our business
   operations, and those of our group companies or business partners, and
   secure our rights, privacy, safety or property, and that of our group
   companies or business partners, you, or other individuals or third
   parties; to enforce our terms and conditions; and pursue available
   remedies and limit our damages.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   O.  Matching any Personal Information held by us relating to you from
   time to time for any of the purposes listed in this Privacy Policy.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * You have provided consent (as applicable)
     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   P. Conducting background and identity checks, such as for the purposes
   of verifying your identity in order to respond to your request to be
   provided with a duplicate policy or other documentation, any request
   made by you to change your address in our records, or any request by
   you to change your bank account or payment or other details in our
   records.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Online activity information
     * Supplemental information from other sources

     * You have provided consent (in circumstances where a legal
       justification over and above legitimate interests is required by
       applicable law)
     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   Q. Conducting credit checks on you- such as analysing, verifying and/or
   checking your credit, payment and/or status in relation to your ability
   to use the services.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Online activity information
     * Supplemental information from other sources

     * You have provided consent (in circumstances where a legal
       justification over and above legitimate interests is required by
       applicable law)
     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   R. Carrying out due diligence or other screening activities in
   accordance with legal or regulatory obligations or risk management
   procedures that may be required by law or that may have been put in
   place by us.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * You have provided consent (in circumstances where a legal
       justification over and above legitimate interests is required by
       applicable law)
     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   S. Determining any amount of indebtedness owing to or from you and
   collecting or recovering any amount owing from you or any person who
   has provided security or an undertaking for such liabilities of yours.
     * Contact Information
     * General Information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Online activity information
     * Supplemental information from other sources

     * Your Personal Information is needed to perform a contract with you
       or prepare to enter into a contract with you
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

   T. Enabling an actual or proposed purchaser, assignee, transferee,
   participant or sub-participant of AIG’s rights or business to evaluate
   the transaction intended to be the subject of a reorganisation, merger,
   sale, joint venture, assignment, transfer, participation or
   sub-participation.
     * Contact Information
     * General Information
     * Education and employment information
     * Insurance and claim information
     * Government and other official identification numbers
     * Financial information and account details
     * Medical condition and health status
     * Other sensitive information
     * Telephone recordings
     * Photographs and video recordings
     * Information to detect, investigate or prevent crime, including
       fraud and money laundering
     * Information enabling us to provide products and services
     * Marketing preferences, marketing activities and customer feedback
     * Online activity information
     * Supplemental information from other sources

     * You have provided consent (in circumstances where a legal
       justification over and above legitimate interests is required by
       applicable law)
     * Your Personal Information is needed to comply with legal
       requirements
     * It is in our legitimate interest or those of a relevant third party

(BUTTON) How do we use Personal Information?

   We use Personal Information to carry out our business activities.  The
   purposes for which we use your Personal Information will differ based
   on our relationship, including the type of communications between us
   and the services we provide. Personal Information will be used for
   different purposes if you are a policyholder, insured or claimant under
   an insurance policy, a commercial insurance broker or appointed
   representative, a witness or another individual with whom we have a
   relationship.

   We may where required obtain your consent for the collection, use,
   disclosure and/or otherwise processing your Personal Information as
   described in this Privacy Policy through other relevant documentation
   (such as through application forms). Any consent given by you will not
   be affected by the termination or expiry of your insurance policy.

   Where we rely on your consent to collect, use, disclose or process any
   of your Personal Information you may withdraw your consent at any time
   by contacting us (please see section titled ‘Who to contact about your
   Personal Information’ in this Privacy Policy for the contact details).
   We will effect your withdrawal of consent as soon as technically
   feasible and in any event within a reasonable period after receiving
   your request. We will, thereafter, cease to collect, use or disclose
   your Personal Information, unless required under applicable laws.

   Should you withdraw your consent, you will not suffer any detriment,
   however, we may not be able to provide you with the services that you
   have requested and we will inform you of the consequences of such
   withdrawal of consent where applicable.

(BUTTON) How do we use Personal Information to detect, investigate and
prevent fraud?

   We are committed to detecting and preventing fraud, and other financial
   crime.  We take this commitment very seriously and use Personal
   Information in a number of ways for this purpose.

   For example, if relevant to our relationship with you, we will (where
   permitted by applicable law):
     * submit your Personal Information (including details of any claims
       you make, for example, details of injuries) so that they appear on
       registers of claims which are shared between different insurance
       providers;
     * search registers of previous claims when assessing a claim; and
     * share your Personal Information with other insurers, fraud
       prevention agencies databases, and law enforcement agencies.

   For further details, please see the section below ‘Who is Personal
   Information shared with?' or please contact us using the details
   provided below (see section below ‘Who to contact about your Personal
   Information?’).

(BUTTON) Are automated decisions made using Personal Information?

   Sometimes, as part of our business operations, decisions about you are
   taken using automated computer software and systems.  These decisions
   do not involve human input, and the software and systems apply
   pre-defined logic programming and criteria to make a decision and
   assess how we deal with you in connection with the provision of
   services.

   For example, we sometimes use automated decision making as part of a
   process to:
     * decide whether a travel insurance claim should be paid as requested
       (for example, if pre-specified criteria are met by responses that
       you provide, the claim will be paid automatically without the need
       for additional human intervention); or
     * identify known pre-existing medical conditions in connection with
       our travel insurance business to decide whether we can offer
       insurance to you and on what terms; or
     * generally, assess your eligibility for insurance using a
       pre-defined set of criteria.

   We provide you with more information in relation to any automated
   decision processes before or at the time that we intend to make
   decisions in this way. You have the right in certain circumstances not
   to be subject to a decision which is based solely on automated
   processing. Please see the section below 'What are your Personal
   Information rights?' below for further details of this right.

   Where required to do so, we will seek your consent prior to collecting
   your Personal Information for the abovementioned processes.

(BUTTON) Who is responsible for Personal Information?

   The AIG group comprises a number of companies, including, but not
   limited to, the AIG parent company American International Group, Inc.,
   American International Group UK Limited and AIG Europe SA country
   branches in Europe.

   Each AIG group company that processes your Personal Information is
   responsible for looking after it in accordance with this Privacy
   Policy, our internal standards and procedures, and the requirements of
   data protection law.

   Your relationship with us will determine which of our group companies
   has access to and processes your Personal Information, and which of our
   group companies are the data controller(s) responsible for your
   Personal Information. A list of the key AIG group companies that are
   data controllers is available
   here www.aig.com/datacontrollers. Usually, if you are an individual
   policyholder, the AIG group company that underwrites your insurance
   policy will be the main company responsible for your Personal
   Information, the controller. Depending on our relationship with you, we
   will provide further information in a supplemental privacy notice
   tailored to our relationship.

   For more precise information about the specific company or companies in
   the AIG group that have access to and are responsible for your Personal
   Information (including the identity of the relevant AIG companies that
   are the data controller(s) for your Personal Information), please
   contact us using the details provided below (see section below ‘Who to
   contact about your Personal Information?’).

   We may also share your information with third parties (see section
   below 'Who is Personal Information shared with?').  Those third parties
   will assume certain responsibilities under data protection law for
   looking after the Personal Information that they receive from us.

(BUTTON) Who is Personal Information shared with?

   In connection with the purposes described above (see section above 'How
   do we use Personal Information?'), we sometimes need to share your
   Personal Information with third parties (this can involve third parties
   disclosing Personal Information to us and us disclosing Personal
   Information to them).

   These third parties may include:
   Type of third party Examples

   Our group companies

   We belong to the American International Group, Inc. group of companies.
   AIG has group companies throughout the world, both inside and outside
   Europe/Ireland (for example, in the USA).  We may share your Personal
   Information with other group companies (including for administrative
   accounting purposes). AIG Ireland is responsible for the management and
   security of jointly used Personal Information.  Access to Personal
   Information within AIG is restricted to those individuals who have a
   need to access the information for our business purposes.

   A list of the key AIG group companies is available
   here www.aig.com/datacontrollers

   Other insurance and insurance distribution parties

   Where permitted by applicable law, AIG may share Personal Information
   with other third parties, for example, other insurers, reinsurers,
   insurance and reinsurance brokers, other intermediaries and agents,
   appointed representatives, distributors, affinity marketing partners
   and financial institutions, securities firms and other business
   partners.

   Our service providers

   External third-party service providers, such as medical and security
   professionals, accountants, actuaries, auditors, experts, lawyers and
   other professional advisors; travel and medical assistance providers;
   call centre service providers; roadside and accident assistance service
   providers; IT systems, support and hosting service providers;
   application service providers; printing, advertising, marketing and
   market research, and data analysis service providers; banks and
   financial institutions that service our accounts; third-party claim
   administrators; document and records management providers; claim
   investigators and adjusters; construction consultants; engineers;
   examiners; jury consultants; translators; and other third-party vendors
   and outsourced service providers that assist us in carrying out
   business activities.

   Recipients of your social media sharing activity

   Where you have friends and other connections associated with your
   social media account, other website users and your social media account
   provider may receive your Personal Information in connection with your
   social sharing activity (for example, if you connect a social media
   account provided by another social media service provider to your AIG
   Digital Services account or log into your AIG Digital Services account
   from another social media account).  By connecting your AIG Digital
   Services account and your other social media account in this way, you
   (1) authorise us to share information with the provider of your other
   social media account; and (2) understand that the use of the Personal
   Information we share will be governed by the other service provider’s
   privacy policy.  If you do not want your Personal Information shared
   with other users or with your other social media account provider,
   please do not connect your other social media account with your AIG
   Digital Services account and do not participate in social sharing while
   using AIG Digital Services.

   Government authorities and third parties involved in legal proceedings

   We may also share Personal Information with: (a) government or other
   public authorities (including, but not limited to, workers’
   compensation boards, courts, regulatory bodies, law enforcement
   agencies, tax authorities and criminal investigations agencies); and
   (b) third-party participants in legal proceedings and their
   accountants, auditors, lawyers, and other advisors and representatives,
   as we believe to be necessary or appropriate.

   Other third parties

   We may share Personal Information with payees; emergency providers
   (fire, police and medical emergency services); retailers; medical
   networks, organisations and providers; travel carriers; credit bureaus;
   credit reporting agencies; other people involved in an incident that is
   the subject of a claim; as well as purchasers and prospective
   purchasers or other parties in any actual or proposed reorganisation,
   merger, sale, joint venture, assignment, transfer or other transaction
   relating to all or any portion of our businesses, assets, companies or
   stock (i.e. company shares).

   Where permitted by applicable law, Personal Information (including
   details of injuries) may be put on registers of claims and shared with
   other insurers. We may search these registers when dealing with claims
   to prevent, detect and investigate fraud.

   If you benefit from another party’s insurance policy or service
   arrangement with AIG (for example, a policy taken out by your
   employer), Personal Information relating to the administration of that
   insurance policy or service may be shared with that other party.

   Personal Information may also be shared by you on message boards, chat,
   profile pages and blogs, and other AIG Digital Services to which you
   are able to post information and materials (including, without
   limitation, our Social Media Content).  Please note that any
   information you post or disclose through these services will become
   public information, and may be available to visitors and users of the
   AIG Digital Services and to the general public.  We urge you to be very
   careful when deciding to disclose your Personal Information, or any
   other information, when using the AIG Digital Services.

(BUTTON) Where do we process Personal Information?

   Due to the global nature of our business activities, we process
   Personal Information internationally for the purposes set out above
   (see section entitled 'How do we use Personal Information?'). Depending
   on the nature of our relationship with you, we will transfer Personal
   Information to parties located in other countries. The countries
   outside of the UK and the EEA which we may transfer Personal
   Information to include the USA, China, Mexico, Malaysia, Philippines,
   Bermuda and other countries that have data protection regimes which are
   different from those in the country where you are based, including
   countries which have not been found to provide adequate protection for
   Personal Information by the UK Government and / or the European
   Commission.

   For example, we may transfer Personal Information in order to process
   international travel insurance claims and provide emergency medical
   assistance services when you are abroad.  We may transfer information
   internationally to our group companies, service providers, business
   partners, government or public authorities, and other third parties.

   When making these transfers, we will take steps to ensure that your
   Personal Information is adequately protected and transferred in
   accordance with the requirements of data protection law, including by:
     * relying on the fact that a country has been approved by the
       European Commission or the UK Government (as applicable) as
       providing adequate protection; or
     * using data transfer agreements in the form approved by the European
       Commission and, where applicable, the UK Government and permitted
       under Article 46 of the EU General Data Protection Regulation or
       the UK General Data Protection Regulation (GDPR) (the relevant data
       protection law).

   If there is no data transfer agreement in place, we may use other
   mechanisms recognised by the relevant data protection law as ensuring
   an adequate level of protection for Personal Information transferred
   outside the EEA/UK (for example, the Trans-Atlantic Data Privacy
   Framework between the European Commission and USA or any framework that
   may replace it in the future).

   This typically involves the use of standard contractual clauses
   approved or mandated by the relevant data protection authority or
   appropriate data transfer agreement.

   For further information about these transfers and to request details of
   the safeguards in place, please contact us using the details below (see
   section below ‘Who to contact about your Personal Information?’).

(BUTTON) How do we keep Personal Information secure and maintain data
integrity?

   AIG uses reasonable and appropriate technical, physical, legal and
   organisational measures, which comply with data protection laws to keep
   Personal Information secure, taking into account the nature, scope,
   context, complexity, risks and purposes of the processing of Personal
   Information.

   We have implemented appropriate data protection policies that provide
   for the aforementioned security measures. We also train our colleagues
   regularly on data protection and information security.

   As most of the Personal Information we hold is stored electronically we
   have implemented appropriate IT security measures to ensure this
   Personal Information is kept secure.  For example, we may use
   anti-virus protection systems, firewalls, and data encryption
   technologies.  We have procedures in place at our premises to keep any
   hard copy records physically secure.  AIG also has a dedicated team
   that monitors the global AIG network for any potential cyber and IT
   security threats. We also train our staff regularly on data protection
   and information security.

   When AIG engages a third party (including our service providers) to
   collect or otherwise process Personal Information on our behalf, the
   third party will be selected carefully and required to use appropriate
   security measures to protect the confidentiality and security of
   Personal Information.

   Unfortunately, no data transmission over the Internet or electronic
   data storage system can be guaranteed to be 100% secure.  If you have
   reason to believe that your interaction with us is no longer secure
   (for example, if you feel that the security of any Personal Information
   you might have sent to us has been compromised), please immediately
   notify us (see section below ‘Who to contact about your Personal
   Information?’).

   AIG will take reasonable steps designed to ensure that the Personal
   Information processed is reliable for its intended use and is accurate
   and complete for carrying out the purposes described in this Policy.

(BUTTON) Do we record calls and monitor email communications with us?

   We may record telephone calls with you so that we can:
     * improve the standard of service that we provide by providing our
       staff with feedback and training;
     * address queries, concerns or complaints;
     * prevent, detect and investigate crime, including fraud and money
       laundering, and analyse and manage other commercial risks; and
     * comply with our legal and regulatory obligations.

   In addition, we monitor electronic communications between us (for
   example, emails) to protect you, our business and IT infrastructure,
   and third parties including by:
     * identifying and dealing with inappropriate communications; and
     * looking for and removing any viruses, or other malware, and
       resolving any other information security issues.

(BUTTON) How long do we keep Personal Information for?

   AIG may store Personal Information either electronically (including in
   the cloud) or in paper form. We will keep Personal Information for as
   long as is necessary for the purposes for which we collect it.  The
   precise period will depend on what the information is and purpose for
   which it is being processed.  In addition, as a regulated financial
   services institution, there are laws and regulations that apply to us
   which set minimum periods for retention of Personal Information. We
   will provide you with further information if appropriate to give you a
   full picture of how we collect and use your Personal Information.

   For example:
     * Where we hold Personal Information to comply with a legal or
       regulatory obligation, we will keep the information for at least as
       long as is required to comply with that obligation.
     * Where we hold Personal Information in order to provide a product or
       service (such as an insurance policy and claims handling), we will
       keep the information for at least as long as we provide the product
       or service, and for a number of years after expiry of the policy
       and the handling of any related claim.

   The number of years varies depending on the nature of the product or
   service provided – for example, for certain insurance policies it may
   be necessary to keep the Personal Information for several years after
   the expiry of the policy. Among other reasons, we retain the
   information in order to respond to any queries or concerns that may be
   raised at a later date with respect to the policy or the handling of a
   claim.  Typically, for consumer insurance products, the retention
   period is seven 7 years.

   Electronic files stored on storage media devices are securely disposed
   by wiping and erasing the device and, thereafter, degaussing and
   shredding the device. Physical files are disposed of by secure
   shredding and pulping.

   For further information about the period of time for which we retain
   your Personal Information, please contact us using the details below
   (see section below ‘Who to contact about your Personal Information?’).

(BUTTON) How can you tell us about your marketing preferences?

   We will provide you with regular opportunities to tell us your
   marketing preferences, including in our communications to you.

   In certain countries, we may be required to obtain your consent for the
   use of your personal details for direct marketing purposes.

   To tell us your marketing preferences, and to change your preferences
   if required, you can contact us by:

   email: unsub.ie@aig.com

   writing: AIG Europe S.A., Ireland Branch, 30 North Wall Quay,
   International Financial Service Centre, Dublin 1 ; DO1 R8H7

   In addition, you can also opt-out of receiving marketing communications
   as follows:
     * Receiving email messages and text messages from us:  If you no
       longer want to receive marketing emails or text messages from AIG,
       you can opt-out of receiving these marketing-related messages by
       clicking on the link to “unsubscribe” provided in each email
       message, following the stop instructions in a text message, or by
       contacting us using the addresses above.
     * Receiving telephone communications and postal mail from us:  If you
       no longer want to receive marketing via telephone communications or
       postal mail from AIG, you may opt-out of receiving these marketing
       communications by contacting us using the addresses above.  You may
       also be able to contact a "Do not call" registry in your country to
       opt-out on a general basis from receiving marketing communications
       by telephone, although we may still contact you if you are listed
       on such a register if you have given your consent.
     * Sharing of your Personal Information with our group companies for
       their marketing purposes:  With your consent we may share your
       Personal Information with our group companies for their own
       marketing purposes.  If you change your mind, you may opt-out of
       this sharing by contacting us using the addresses above.
     * Sharing of your Personal Information with selected third-party
       partners for their marketing purposes:  If you have provided your
       consent we may share your Personal Information with our third-party
       partners for their own marketing purposes. If you change your mind,
       you may opt-out of this sharing by contacting us using the
       addresses above.

   We aim to comply with your opt-out requests within a reasonable time
   period and in any event within any period prescribed by law.  Please
   note that if you opt-out as described above, we will not be able to
   remove your Personal Information from the databases of third parties
   with whom we have already shared your Personal Information (i.e. to
   those to whom we have already provided your Personal Information as of
   the date on which we respond to your opt-out request).

   Please also note that if you do opt-out of receiving marketing
   communications from us, we may still send you other important service
   and administration communications relating to the services which we
   provide to you, and you cannot opt-out from these service and
   administration communications.

(BUTTON) What are your Personal Information rights?

   The following is a summary of the data protection rights available to
   individuals in Ireland in connection with their Personal Information.
   These rights may only apply in certain jurisdictions and/or
   circumstances and are subject to certain legal limitations or
   exemptions.

   If you wish to exercise your rights, please contact us using the
   details below (see section below ‘Who to contact about your Personal
   Information?’).
                                 Right                               Description

   Right of access to Personal Information

   The right to receive a copy of the Personal Information we hold about
   you and information about how we use it.

   This right is applicable at all times when we hold your Personal
   Information (subject to certain exemptions)

   Right to rectification of Personal Information

   The right to ask us to correct Personal Information we hold about you
   where it is incorrect or incomplete.

   This right is applicable at all times when we hold your Personal
   Information (subject to certain exemptions).

   Right to erasure of Personal Information

   This right is sometimes referred to as 'the right to be forgotten'.
   This is the right to request that your Personal Information be deleted
   or removed from our systems and records. However, this right only
   applies in certain circumstances.

   Examples of when this right applies to Personal Information we hold
   include (subject to certain exemptions):
     * when we no longer need the Personal Information for the purpose we
       collected it;

     * if you withdraw consent to our use of your information and no other
       legal justification supports our continued use of your information;
     * if you object to the way we use your information and we have no
       overriding grounds to continue using it;
     * if we have used your Personal Information unlawfully; and
     * if the Personal Information needs to be erased for compliance with
       law.

   Right to restrict processing of Personal Information

   The right to request that we suspend our use of your Personal
   Information. This right only applies in certain circumstances.

   Where we suspend our use of your Personal Information, we will still be
   permitted to store your Personal Information, but any other use of this
   information while our use is suspended will require your consent,
   subject to certain exemptions.

   You can exercise this right if:
     * you think that the Personal Information we hold about you is not
       accurate, but this only applies for a period of time that allows us
       to consider if your Personal Information is in fact inaccurate;
     * the processing is unlawful and you oppose the erasure of your
       Personal Information and request the restriction of its use
       instead;
     * we no longer need the Personal Information for the purposes we have
       used it to date, but the Personal Information is required by you in
       connection with legal claims; or
     * you have objected to our processing of the Personal Information and
       we are considering whether our reasons for processing override your
       objection.

   Right to data portability

   This right allows you to obtain your Personal Information in a format
   which enables you to transfer that Personal Information to another
   organisation, if this is technically feasible.

   However, this right will only apply:
     * to Personal Information you provided to us;
     * where we have justified our use of your Personal Information based
       on:
          + your consent; or
          + the fulfilment by us of a contract with you; and
     * if our use of your Personal Information is by electronic means.

   Right to object to processing of Personal Information

   You have the right to object to our use of your Personal Information in
   certain circumstances.

   We may continue to use your Personal Information, despite your
   objection, where there are compelling legitimate grounds to do so or we
   need to use your Personal Information in connection with any legal
   claims.

   You can object to the use of your Personal Information for direct
   marketing purposes at any time (including if we are carrying out
   profiling related to direct marketing).

   Right to withdraw consent to processing of Personal Information

   Where we have relied upon your consent to process your Personal
   Information, you have the right to withdraw that consent.

   Right to complain to the relevant data protection regulator



   If you think that we have processed your Personal Information in a
   manner that is not in accordance with data protection law, in
   accordance with applicable law, you may be able to complain to the data
   protection regulator whether either the alleged infringement took
   place, or where you live or work.

   This right applies at any time.

   Rights relating to automated decision making and profiling

   The right not to be subject to a decision which is based solely on
   automated processing (without human involvement) where that decision
   produces a legal effect or otherwise significantly affects you.

   However, this right only applies in certain circumstances.

   This right is not applicable if:
     * we need to make the automated decision in order to enter into or
       fulfil a contract with you;
     * we are authorised by law to take the automated decision; or
     * you have provided your explicit consent to the decision being taken
       in this way using your Personal Information.

(BUTTON) Who to contact about your Personal Information?

   If you have any questions, concerns or complaints about the way your
   Personal Information is used by us, you can contact us by email or post
   using the details below.

   email: dataprotectionofficer.ie@aig.com

   writing: Data Protection Officer, AIG Europe S.A., Ireland Branch, 30
   North Wall Quay, International Financial Service Centre, Dublin 1 ; DO1
   R8H7

(BUTTON) What user and device data do we collect through AIG Digital
Services?

   User and device data is collected when you use AIG Digital Services.
   This information may not reveal your specific identity and therefore
   may not be Personal Information which is used as described in the
   earlier sections of this Privacy Policy.

   Examples of this type of user and device data are:
     * internet browser and electronic device information;
     * operating system and platform;
     * app usage data;
     * information collected through cookies, pixel tags and other
       technologies (further details being described in our Cookie
       Policy.);
     * demographic information; and
     * data grouped together so that it is not possible to link the data
       to a particular individual, known as aggregated data.

   We and our third-party service providers may collect user and device
   data in a variety of ways when you use AIG Digital Services, including:
   Method of data collection Examples

   Through your internet browser or electronic device

   Certain information is collected by most websites or automatically
   through your electronic device, such as your IP address (i.e. your
   computer’s address on the internet), screen resolution, operating
   system type (Windows or Mac) and version, internet browser type and
   version, electronic device manufacturer and model, language, time of
   the visit, pages visited, and the name and version of the AIG Digital
   Services (such as the App) you are using. We use this information to
   ensure that the AIG Digital Services function properly.

   Through your use of an App

   When you download and use an App, we and our service providers may
   track and collect App usage data, such as the date and time the App on
   your electronic device accesses our servers and what information and
   files have been downloaded to the App based on your device number.

   Physical location

   Subject to applicable law (and your consent where required by
   applicable law), we may collect the physical location of your
   electronic device by, for example, using satellite, mobile/cell phone
   tower or WiFi signals. We may use your device’s physical location to
   provide you with personalised location-based services and content.

   Subject to your marketing preferences and applicable law, we may also
   share your device’s physical location, combined with information about
   what advertisements you viewed and other information we collect, with
   our marketing partners to enable them to provide you with more
   personalised content and to study the effectiveness of advertising
   campaigns.

   In some instances, you may be permitted to allow or deny such uses
   and/or sharing of your device’s location, but if you choose to deny
   such uses and/or sharing, we and/or our marketing partners may not be
   able to provide you with the applicable personalised services and
   content.

   In addition, we may obtain the precise geolocation of your device when
   you use our mobile applications for travel or other assistance
   services.  In connection with providing travel or other assistance
   services, we may share your device’s precise geolocation information
   with our clients and other entities with whom we work.  You may opt-out
   of our collection and sharing of precise geolocation information by
   deleting the mobile application from your device, by disallowing the
   mobile application to access location services through the permission
   system used by your device’s operating system, or by following any
   additional opt-out instructions provided in the privacy notice
   available within the mobile application.

   In some circumstances, physical location information may become your
   Personal Information if you are identifiable in relation to the
   physical location information. In such cases, the physical location
   information will be handled as Personal Information as described in the
   earlier sections of this Privacy Policy.

   Using information provided by you

   Some information (for example, your location or preferred means of
   communication) is collected when you voluntarily provide it. Unless
   combined with Personal Information, this information does not
   personally identify you.

   By aggregating information

   We may group information together so that it does not link to a
   specific individual, i.e. aggregate, and use that information (for
   example, we may aggregate information to calculate the percentage of
   our users who have a particular telephone area code).

   Please note that, where user and device data is not Personal
   Information, we may use and disclose that data for any purpose to the
   extent we are allowed to by law. If we are required to treat user and
   device data as Personal Information under applicable law, or if we
   combine user and device data with identifiable Personal Information,
   then, in addition to the uses listed in this section, we may use and
   disclose user and device data for all the purposes for which we use and
   disclose Personal Information.

(BUTTON) What cookies are used on our website and/or to provide AIG Digital
Services?

   Please refer to our Cookie Policy.

(BUTTON) Who is responsible for third party services accessed via AIG Digital
Services?

   This Privacy Policy does not address, and we are not responsible for,
   the privacy, information or other practices of any third parties,
   including any third party operating any site or service to which AIG
   Digital Services link.  The inclusion of a link on AIG Digital Services
   does not imply endorsement of the linked site or service by us or by
   our group companies.

   Please note that we are not responsible for the collection, usage and
   disclosure policies and practices (including the information security
   practices) of other organizations or any other app developer, app
   provider, social media platform provider, operating system provider,
   wireless service provider or electronic device manufacturer, including
   any Personal Information you disclose to other organisations through or
   in connection with AIG Digital Services.

(BUTTON) When was this Privacy Policy last updated?

   This Privacy Policy was last updated on 31 January 2024.

   We review this Privacy Policy regularly and reserve the right to make
   changes at any time to take account of changes in our business
   activities, legal requirements, and the manner in which we process
   Personal Information.  We will place updates on this website and where
   appropriate we will give reasonable notice of any changes. In certain
   countries, where we process your Personal Information on the basis of
   your consent, we will seek further consent where there are material
   changes to the Privacy Policy as required by law.
   AIG logo

   Follow Us
     * facebook
     * instagram
     * linkedin
     * youtube

   Platinum Trusted Service Award

Explore

     * Solutions
     * Claims
     * Careers
     * About
     * Worldwide

Legal

     * Privacy Statement
     * Cookie Policy
     * Terms of Use
     * Terms of Business
     * Product Compensation

Support

     * Contact Us
     * Helpful Tips
     * Renewals
     * Policy Documents
     * MyAIG
     * Accessibilty
     * Sitemap

   Copyright © 2024 American International Group, Inc. All rights
   reserved. AIG Europe S.A. is an insurance undertaking with R.C.S.
   Luxembourg number B 218806. AIG Europe S.A. has its head office at 35 D
   Avenue John F. Kennedy, L-1855, Luxembourg. AIG Europe S.A., Ireland
   branch office has its registered branch office at 30 North Wall Quay,
   International Financial Services Centre, Dublin 1, D01 R8H7, and branch
   registration number 908876. Telephone: 0818 244 244. VAT number:
   IE3580476UH. AIG Europe S.A. is authorised by the Luxembourg Ministère
   des Finances and supervised by the Commissariat aux Assurances, and is
   regulated by the Central Bank of Ireland for conduct of business rules.


                               [espaceur.gif]
                               [espaceur.gif]

   [espaceur.gif]
   [logo.gif]
   Search
   ___________________________________ [search_go.gif]-Submit
   [espaceur.gif]
   الـعـربية [sep-langue.gif] Español [sep-langue.gif] Français
   [sep-langue.gif] English [sep-langue.gif] Deutsch [sep-langue.gif]
   Русский [sep-langue.gif] Português [sep-langue.gif] Italiano
   [espaceur.gif]
   [tbl_menuH01.gif]

   [ico01_home.gif]  Home [ico01_map.gif]   Mapsite [ico01_contact.gif]
   Contact us

     * [0.png]
     * [6.png]
     * [1.png]
     * [2.png]
     * [3.png]
     * [4.png]
     * [5.png]
     * [7.png]

                 [pic-horloge.gif] Tuesday, January 7, 2025

                               [espaceur.gif]

   Royal Activities

   Founding Speech
   [menu-03-.gif]
   King's Speeches
   [menu-03-.gif]
   Appointing Ceremony
   [menu-03-.gif]
   [menu-04-.gif]
   [espaceur.gif]

   Council

   Royal Decree
   [menu-03-.gif]
   President
   [menu-03-.gif]
   Secretary-General
   [menu-03-.gif]
   Members
   [menu-03-.gif]
   [menu-04-.gif]
   [espaceur.gif]

   CORCAS Activities

   Domestic Activities
   [menu-03-.gif]
   Foreign Activities
   [menu-03-.gif]
   Sessions
   [menu-03-.gif]
   Committes
   [menu-03-.gif]
   Files
   [menu-03-.gif]
   [menu-04-.gif]
   [espaceur.gif]

                               Press & Debates

   Video Debates
   [menu-03-.gif]
   Written Press
   [menu-03-.gif]
   Audiovisual Press
   [menu-03-.gif]

                               [menu-04-.gif]
                               [espaceur.gif]

   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]

                               [espaceur.gif]

             [alaune-c-g2.gif] King's Speeches [alaune-c-d.gif]

   [espaceur.gif]
   [espaceur.gif]
   [armoirie.gif] Royal Speech on 68th Anniversary of the Revolution of
   the King and the People
   8/21/2021
   [SMdiscours21une.jpg&amp;w=400]

   Plots hatched by the enemies of our territorial integrity only enhance
   Moroccans' faith and their resolve to continue defending their homeland
   and its interests.
   HM King Mohammed VI on Friday delivered a speech to the Nation on the
   occasion of the 68th anniversary of the Revolution of the King and the
   People.
   Here follows the full text of the royal speech:
   "Praise be to God,
   May peace and blessings be upon the Prophet, His Kith and Kin
   Dear Citizens,
   There is no better occasion to remember the values of loyalty and of
   sacrifice for the sake of the homeland’s freedom and independence than
   the commemoration of the Revolution of the King and the People.
   This is more than just a historical event. It is an ongoing revolution
   which has inspired successive generations, celebrating the same spirit
   of true patriotism and eagerness to defend the homeland, its
   institutions and sacred values.
   This commemoration falls a matter of days before the elections. It also
   coincides with the launch of a new set of projects and reforms that
   will be carried out within the framework of the new development model
   and the national charter for development.
   The upcoming general, regional and local elections will be held on the
   same day, a fact which attests to the vibrancy of the country’s
   democratic experience and the maturity of the Moroccan political
   system.
   Dear Citizens,
   Elections are not an end in themselves. Rather, they are a means to set
   up credible institutions that serve the citizens’ interests and defend
   the nation’s causes.
   I believe a state’s strength comes from institutions and from the unity
   and cohesion of the nation’s components. That is our weapon for the
   defense of our country in times of adversity, crisis or threats.
   This was clearly confirmed by the carefully planned attacks mounted
   recently against Morocco by some countries and organizations known for
   their hostility towards our country.
   Morocco is a target because it is a country steeped in history - it has
   existed for more than twelve centuries, not to mention the nation’s
   longstanding Amazigh history - and it is governed by a citizen-based
   monarchy which has existed for more than four centuries, and which is
   rooted in a solid bond between the throne and the people.
   Morocco is also a target because of the security and stability it
   enjoys; these are invaluable assets, especially in light of the
   upheavals characterizing today’s world.
   Nevertheless, and by the grace of the Almighty, Morocco enjoys a
   sterling reputation and indisputable prestige. It also has a solid
   network of relationships and connections and is a trustworthy, credible
   nation at the regional and international levels.
   Dear Citizens,
   Like some other countries of the Arab Maghreb Union, Morocco is the
   target of deliberate, hostile attacks.
   The enemies of the Kingdom's territorial integrity build their
   positions on ready-made, yet obsolete, premises. They simply do not
   want Morocco to remain free, strong and influential.
   Regrettably, a few countries, especially European ones, which are
   traditional partners, fear for their economic interests, markets and
   spheres of influence in the Maghreb region.
   Some of their leaders fail to understand that the problem does not lie
   in the systems of Maghreb countries, but in their own. These are
   systems which continue to feed on the past and cannot stay abreast of
   new developments.
   Recent months have shown that these countries are facing significant
   inadequacies when it comes to respecting the state’s institutions and
   its basic, traditional functions.
   Therefore, they want us to become like them. And to that end, they
   invoke unfounded pretexts and accuse our national institutions of
   failing to uphold rights and freedoms in order to tarnish their
   reputation and try to undermine the esteem and great respect enjoyed by
   our country.
   They do not want to recognize that the rules of the game have changed -
   that our countries are able to manage their own affairs and use their
   energies and resources for the benefit of their peoples.
   Thus, all possible means - legal and otherwise - have been used, roles
   assigned and tremendous resources leveraged to embroil Morocco in
   problems and disputes with some countries.
   In fact, some reports have really crossed the line. Instead of calling
   for Morocco's efforts for balanced development in the region to be
   supported, they made recommendations to impede Morocco’s progress,
   arguing that its development creates an imbalance among Maghreb
   countries.
   Furthermore, they concocted a full-fledged campaign to distort the
   image of our security institutions and undermine their usefulness and
   effectiveness in preserving Morocco’s security and stability.
   These institutions also provide support and coordinate action at the
   regional and international levels, as acknowledged by a number of those
   countries themselves.
   And since every cloud has a silver lining, the plots hatched by the
   enemies of our territorial integrity only enhance Moroccans' faith and
   their resolve to continue defending their homeland and its interests.
   Whether those parties like it or not, we shall continue on the path we
   have chosen for ourselves, despite the enemies’ exasperation and the
   envy of those who hate us.
   Dear Citizens,
   Some people claim that Morocco is being attacked because it has changed
   its political and strategic direction, or because of the way it is
   handling some diplomatic issues.
   That is simply not the case. Morocco has, indeed, changed, but not in
   the way they want it to. Morocco does not accept that its best
   interests be trampled on. At the same time, my country is keen to have
   strong, constructive and balanced relations, especially with our
   neighbors.
   That same logic is governing our policy today regarding the
   relationship with our neighbor, Spain.
   It is a fact that these relations have recently come up against an
   unprecedented crisis, which shook mutual trust and raised many
   questions as to their future.
   However, we have worked with the Spanish side in a composed, clear and
   responsible way.
   In addition to the traditional immutable values on which these
   relations are based, we are keen, today, to strengthen them, bearing in
   mind the need for a common understanding of the two nations’ interests.
   In this regard, I have personally and directly followed the progress of
   the dialogue and discussions between the two countries.
   Our goal was not merely to overcome this crisis, but to turn the
   situation into an opportunity to reconsider the foundations and
   determinants of these relations.
   With a feeling of optimism, I sincerely look forward to continuing to
   work with the Spanish government and with the Spanish Prime Minister,
   His Excellency Mr. Pedro Sanchez, to usher in a new, unprecedented
   phase in the relations between the two countries, on the basis of
   trust, transparency, mutual respect and the fulfillment of obligations.
   The same commitment is at the center of the partnership and solidarity
   between Morocco and France, and I personally entertain solid relations
   based on friendship and mutual esteem with the French President, His
   Excellency Mr. Emmanuel Macron.
   Dear Citizens,
   The Revolution of the King and the People was a watershed in Morocco’s
   struggle to achieve freedom and independence. Today, we are on the
   verge of a new phase, which requires commitment to the spirit of true
   patriotism in order to rise to internal and external challenges.
   I should like to take this opportunity to honor the memory of the
   nation’s valiant martyrs, particularly the hero of the liberation, my
   venerable grandfather, His Majesty King Mohammed V, and his companion
   in the struggle, my revered father, His Majesty King Hassan II – may
   they rest in peace.
   Wassalamu alaikum warahmatullah wabarakatuh."
     __________________________________________________________________

   [pic-retour.gif] [espaceur.gif] [action_print.gif] [espaceur.gif] Share
    on Facebook [espaceur.gif] Share on Twitter Share on LinkedIn Share on
                                                                  Whatsapp

   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]
   [espaceur.gif]

                               [espaceur.gif]
       [Blue-Info.gif]  This website shall not be responsible for the
                 functioning and content of external links !

     Copyright © CORCAS 2025

   [espaceur.gif]
   [espaceur.gif]

   (BUTTON) ×

   IFRAME: whitehouse.html

   (BUTTON) Fermer
   ____________________ Search Powered by JRank

Encyclopedia of Espionage, Intelligence, and Security

Espionage Information

   Espionage Encyclopedia » Ne-Ns

Netherlands, Intelligence and Security

   The Kingdom of the Netherlands was established following the Napoleonic
   Wars in 1815. Since its founding, the Netherlands has been influential
   in international politics, but has long maintained a policy of stated
   neutrality.

New People's Army (NPA)

   The New People's Army (NPA) is the military wing of the Communist Party
   of the Philippines (CPP). A Maoist group formed in March, 1969, its aim
   includes overthrowing the Philippine government through protracted
   guerrilla warfare.

New Zealand, Intelligence and Security

   New Zealand gained its independence from Britain in 1907, but remains a
   member of the British Commonwealth. A longtime, close ally with
   Britain, Australia, and the United States, New Zealand retreated from
   international politics during the last two decades to address ethnic
   tensions between European-descended New Zealanders and the native Maori
   people.

NFIB (United States National Foreign Intelligence Board)

   The National Foreign Intelligence Board (NFIB) was created by the
   National Security Act of 1947. The NFIB acts as a communications
   channel among various national intelligence agencies and facilitates
   interagency exchange of information.

NIC (National Intelligence Council)

   The National Intelligence Council (NIC) oversees the estimative process
   of the United States intelligence community, and produces National
   Intelligence Estimates (NIEs). The NIC answers directly to the Director
   of Central Intelligence (DCI) in his capacity as head of the
   intelligence community.

Nicaragua, Intelligence and Security

   Nicaragua gained independence from Spain in 1821, and became a republic
   in 1838. Late-twentieth-century politics in the region have been marked
   by violence and turmoil.

Nigeria, Intelligence and Security

   In 1998, Nigeria overthrew its ruling dictatorship, which possessed
   close ties to the nation's military. The transitional government that
   gained power attempted to restore the long-suspended Constitution of
   1979 and institute democratic reforms.

Night Vision Scopes

   Night vision scopes are devices that enable machines or people to "see
   in the dark," that is, to form images when illumination in the visible
   band of the electromagnetic spectrum is inadequate. Although it is not
   possible to form images in absolute darkness, that is, in the absence
   of any electromagnetic radiation whatsoever, it is possible to form
   images from radiation wavelengths to which the human eye is
   insensitive, or to amplify visible-light levels so low that they appear
   dark to the human eye.

NIH (National Institutes of Health)

   The National Institutes of Health (NIH) is a federal agency that serves
   as the fiscal agent of medical research in the United States. The
   mission of the NIH is to foster medical and behavioral research on
   living systems and to use that knowledge to prevent, identify,
   diagnose, and treat illness and disability.

NIJ (National Institute of Justice)

   The National Institute of Justice (NIJ) serves the United States
   Department of Justice in the areas of research, development, and
   evaluation. Established under the authority of the Omnibus Crime
   Control and Safe Streets Act of 1968, its purpose is to provide
   independent, evidencebased tools to assist state and local law
   enforcement.

NIMA (National Imagery and Mapping Agency)

   The National Imagery and Mapping Agency (NIMA) was formed in October,
   1996, to provide the United States military and intelligence agencies
   with up-to-date and accurate imaging and geospatial information. NIMA
   is a Department of Defense agency and is a member of the United States
   intelligence community.

NIMH (National Institute of Mental Health)

   The National Institute of Mental Health (NIMH) falls under the umbrella
   of the government's medical research agency, the National Institutes of
   Health (NIH). The NIMH is the branch of the NIH that focuses on the
   brain, behavior, and mental health.

NIST (National Institute of Standards and Technology), United States

   The National Institute of Standards and Technology (NIST) is a
   non-regulatory federal agency under the aegis of the Undersecretary for
   Technology in the U.S. Department of Commerce.

NIST Computer Security Division, United States

   The Computer Security Division (CSD) is one of eight divisions within
   the Information Technology Laboratory of the National Institute of
   Standards and Technology (NIST), itself a bureau of the Chamber of
   Commerce. CSD is concerned with raising awareness of information
   technology (IT) risks, vulnerabilities, and protection requirements,
   especially for new and emerging forms of technology.

Nixon Administration (1969–1974), United States National Security Policy

   Richard Nixon took office in 1969 as the country struggled to deal with
   the effects of the war in Vietnam. The inability of the United States
   to quickly win the war forced a review of national security policy.

NMIC (National Maritime Intelligence Center)

   The National Maritime Intelligence Center (NMIC) brings together
   several military intelligence operations for the United States: Navy,
   Marine Corps, and Coast Guard. The first of these, being by far the
   largest, is the dominant participant in NMIC, whose headquarters in
   Suitland, Maryland, are home to the Office of Naval Intelligence (ONI).

NNSA (United States National Nuclear Security Administration)

   Created in 1999 and put into operation the following year, the National
   Nuclear Security Administration (NNSA) was a response to security
   concerns with regard to United States nuclear materials and
   information. In order to better protect these sensitive properties,
   Congress established NNSA as a separate agency within the Department of
   Energy (DOE).

NOAA (National Oceanic & Atmospheric Administration)

   The National Oceanic & Atmospheric Administration (NOAA) monitors
   environmental, climatic, and weather conditions in the United States
   and around the world. The administration manages an extensive network
   of satellites, sensory aircraft, and specialized monitoring equipment
   to provide information on meteorological events and their impact.

Noise Generators

   Generating noise is a simple, cheap, and versatile method of blocking
   signals or shielding communication from a range of devices. From the
   disruption of radio broadcasts to the masking of conversations, noise
   generators use a simple concept to great effect.

Nongovernmental Global Intelligence and Security

   Global intelligence and security is not purely the province of
   governmental agencies. An important advisory role is occupied by think
   tanks, private corporations, university departments, and other groups.

Nonproliferation and National Security, United States

   The United States government has long had an interest in
   nonproliferation as a means of ensuring national security. The logic
   governing this interest is straightforward: as long as weapons continue
   to proliferate among foreign and hostile powers, U.S.

NORAD

   The North American Air Defense Agreement, signed on May 12, 1958 by the
   United States and Canada, created a continental air defense warning and
   surveillance system in response to Cold War fears of an airborne attack
   by the Soviet Union. The resulting North American Air/Aerospace Defense
   Command (NORAD) has since shifted strategies from guarding against
   long-range bombers to warning of ballistic missile attacks and
   maintaining space surveillance.

North Korea, Intelligence and Security

   The nation of North Korea was established on September 9, 1948, during
   the grab for satellite nations at the beginning of the Cold War.
   Supported by the Soviet Union, North Korea established a communist
   regime under dictator Kim Il-sung.

North Korean Nuclear Weapons Programs

Norway, Intelligence and Security

   During World War I, Norway maintained a stated policy of neutrality in
   international affairs. When WWII erupted in 1939, the Norwegian
   government again asserted that the nation would remain neutral in the
   conflict.

NRO (National Reconnaissance Office)

   The National Reconnaissance Office (NRO) is a member of the United
   States' fourteen-member intelligence community. Established in 1960,
   the existence of the NRO was not declassified until 1992.

NSA (United States National Security Agency)

   Legendary for its secrecy, the National Security Agency (NSA) is the
   leading cryptologic organization in the United States intelligence
   community. Focused on cryptologic and cryptanalytic missions, it is the
   nation's leading employer of mathematicians, yet little is known about
   the inner workings of this secretive agency.

NSC (National Security Council)

   Established by the National Security Act of 1947, the National Security
   Council (NSC) was intended to serve as the principal advisory board for
   the president of the United States on matters of national security and
   foreign policy. In practice, the importance of the NSC and the National
   Security Advisor has depended on the degree of power the chief
   executive accords to it.

NSC (National Security Council), History

   The history of the United States National Security Council (NSC) lends
   itself to widely diverging views of the NSC, depending on the
   presidential administration in question. Held in suspicion by President
   Harry S.

NSF (National Science Foundation)

   The National Science Foundation (NSF) directs and funds science
   research. An independent agency in the United States government, the
   NSF was established May 10, 1950, by passage of the National Science
   Foundation Act.
   Copyright © 2025 Advameg, Inc.
   (BUTTON)
   Home Research Publications People
   ____________________

Active Logic, Metacognitive Computation, and Mind

   Toward Human-Level Cognitive Adequacy
   Our long-range aim is to design and implement common sense in a
   computer. Click here for details.
     __________________________________________________________________

   If you would like to learn more about Active Logic, we suggest you
   start with one of our primers.

   Our acronym ALMECOM stands for Active Logic, Metacognitive Computation,
   and Mind. Active Logic is a time-sensitive formalism that has been
   developed with real-world applications and their challenges in mind.
   Active logic explicitly reasons in time, and incorporates a history of
   its reasoning as it runs. This characteristic makes active logic more
   flexible than traditional AI systems and therefore more suitable for
   commonsense, real-world reasoning.

   One important strategy that we employ in active logic is metareasoning.
   Because active logic tracks its reasoning, it is able to reason about
   its own inferences, and thereby recognize and recover from errors.

   We hypothesize the existence of a limited and formalizable set of
   generic strategies of metareasoning, which are central to the human
   mind's ability to deal easily and smoothly with mistakes,
   contradictions, and other irregularities; click here for more on this.

   One area in which these strategies are most apparent, and most often
   used, is in conversation, and so one central area of our research
   focuses on human-computer natural-language dialog.
     __________________________________________________________________

   Demo Coming Soon
     __________________________________________________________________

   We appreciate the sponsorship of AFOSR, NSF, ONR, and UMIACS.
   [afosr_logo.png]
   [nsf1_400x400.png]
   [Office_of_Naval_Research_Official_Logo.png]
   [umiacs-logo.png]

   [UMD_CMNS_CompSci_S1_Color.png]
   Copyright 2018 - All Rights Reserved
   Web Accessibility
    Paperform logo
   ProductsSolutionsIntegrationsTemplatesResourcesPricing
   Sign inTry Paperform Free
   Products
   PaperformPaperform is an online form builder like no other. It combines
   serious digital smarts with beautiful design to create endless
   possibilities.PapersignSimplify document signing with Papersign, so you
   can spend less time in email chains and more time on the important
   stuff.
   Solutions
   Web FormsScheduling FormsOrder FormsPayment FormsCalculation
   FormsSubscription FormsConditional LogicLanding page FormsQuiz
   MakerPoll MakerSurvey MakerTest MakerSee all solutions

All Solutions

   Explore all the solutions you can create with Paperform: surveys,
   quizzes, tests, payment forms, scheduling forms, and a whole lot more.

   Explore all the solutions you can create with Paperform: surveys,
   quizzes, tests, payment forms, scheduling forms, and a whole lot more.
   See all solutions
   Integrations
   Google Sheets
   Google Sheets
   Mailchimp
   Mailchimp
   Active Campaign
   Active Campaign
   Slack
   Slack
   Trello
   Trello
   Hubspot
   Hubspot
   Notion
   Notion
   Airtable
   Airtable
   Asana
   Asana
   Intercom
   Intercom
   Dropbox
   Dropbox
   ConvertKit
   ConvertKit
   See all integrations
   See all integrations
   Connect with over 2,000 popular apps and software to improve
   productivity and automate workflows

   Connect with over 2,000 popular apps and software to improve
   productivity and automate workflows
   See all integrations
   Templates
   Resources
   BlogReal-life stories, trends, and strategies to help you grow your
   business.CareersJoin the company that prioritises 'life-work'
   balance.Online Signature GeneratorCreate and download a signature.
   Merch StoreGet your hands on Paperform swag.Getting StartedHelpful
   guides to get you on track.Help CenterWe've got all the answers to your
   questions.
   Pricing
   Sign InTry Paperform Free

Products

   PaperformPaperform is an online form builder like no other. It combines
   serious digital smarts with beautiful design to create endless
   possibilities.PapersignSimplify document signing with Papersign, so you
   can spend less time in email chains and more time on the important
   stuff.

Solutions

   Web FormsScheduling FormsOrder FormsPayment FormsCalculation
   FormsSubscription FormsConditional LogicLanding page FormsQuiz
   MakerPoll MakerSurvey MakerTest MakerSee all solutions

All Solutions

   Explore all the solutions you can create with Paperform: surveys,
   quizzes, tests, payment forms, scheduling forms, and a whole lot more.

   Explore all the solutions you can create with Paperform: surveys,
   quizzes, tests, payment forms, scheduling forms, and a whole lot more.
   See all solutions

Integrations

   Google Sheets
   Google Sheets
   Mailchimp
   Mailchimp
   Active Campaign
   Active Campaign
   Slack
   Slack
   Trello
   Trello
   Hubspot
   Hubspot
   Notion
   Notion
   Airtable
   Airtable
   Asana
   Asana
   Intercom
   Intercom
   Dropbox
   Dropbox
   ConvertKit
   ConvertKit
   See all integrations
   See all integrations
   Connect with over 2,000 popular apps and software to improve
   productivity and automate workflows

   Connect with over 2,000 popular apps and software to improve
   productivity and automate workflows
   See all integrations

Resources

   BlogReal-life stories, trends, and strategies to help you grow your
   business.CareersJoin the company that prioritises 'life-work'
   balance.Online Signature GeneratorCreate and download a signature.
   Merch StoreGet your hands on Paperform swag.

Need Help?

   Getting StartedHelpful guides to get you on track.Help CenterWe've got
   all the answers to your questions.

Logic Guide

   Help Making Forms Using the Editor Configuring Behavior
   ____________________Search for articles

   IFRAME:
   https://www.loom.com/embed/51bacda62e2f463c881e8627f81eb769?hide_owner=
   true&hide_share=true&hide_title=true&hideEmbedTopBar=true

   Introduction
   How it worksSetting a conditionMultiple conditions
   Visibility logicQuestion visibility logicSection visibility logicPage
   visibility logicUsing visibility logic
   Applying logic to actionsEmailsIntegrationsSuccess Pages & Redirects
   Complex conditions
   GotchasWorking with similar question titlesWorking with numbersBlank or
   unfinished conditions

Introduction

   Conditional logic can be used to change the way your form behaves
   depending on how it is filled out. You may want to show or hide a
   certain question for example, depending on how another question is
   answered. The same visibility logic can be applied to entire sections,
   or even pages of content. You can also use logic to determine which
   actions trigger after the form is submitted.

   In this guide, you will learn how to:
     * Set conditions
     * Effectively combine multiple conditions
     * Apply visibility logic to questions, sections, and pages
     * Conditionally trigger specific emails, integrations, success pages,
       and redirects
     * Combine logic with Calculations for more complex conditions

     Custom Pricing Rules can also be used to conditionally alter the
     total price on payment forms.

How it works

Setting a condition

   Logic can be toggled on in many places throughout the form editor. If
   you select it, you’ll see a series of dropdown menus used to set a
   condition. When this condition is met, the content will be visible, or
   the action will be triggered.
   An example condition is set from three dropdown menus: "Experience
   Level ... is ... Beginner"

   Each condition is made up of three parts: the question, the operator,
   and the value.

   First, you'll choose the question. Logic can be based on any field's
   answer, including Hidden fields and Calculations. If you've set up any
   Scoring on your form, you'll also see "Score" listed as an option at
   the bottom of the list.

   Next, select an operator (is, contains, etc.), and then type or select
   the value that should be compared to the answer given on the form. Keep
   in mind that this value is case-sensitive, and it must match the
   expected answer exactly.

     Need the condition to be case-insensitive? Use a Calculation field
     to transform the original answer to all uppercase using the UPPER()
     function. Then, target that Calculation in the logic, and set the
     value to the uppercase version of the answer. Read on to learn more
     about combining logic with Calculations.

Multiple conditions

   You can click the “Add another condition” button to set more rules.
   Additional conditions can be separated using “And” or “Or.”
     * And: all conditions must be met.
     * Or: at least one condition must be met.

   If you need to combine “And” and “Or” in a single set of conditions,
   it’s recommended that you group some of them together by selecting
   “Multiple Condition Group” at the very end of the question dropdown
   menu. Kind of like parentheses in a math equation, this tells the form
   which part of the logic to evaluate first.
   Conditional logic that uses the "Multiple Conditions" option to group
   the second and third condition together like: A or (B and C)

   Now that we've got a basic understanding of how conditions work, let's
   take a look at the different ways logic can be applied.

Visibility logic

Question visibility logic

   Perfect for a follow-up question to a specific answer, visibility logic
   is most often applied to a single question.

   To set up question visibility logic:
    1. Click the question that should be hidden or revealed.
    2. Make sure “Hide this question” is toggled off (if applicable).
    3. Toggle on “Question visibility logic."
    4. Set the condition(s) that should be met for the question to appear.
    5. Click "Done."

   Once added, you can edit your visibility logic by clicking on the
   "Configure Logic → x conditions" button below the "Question visibility
   logic" toggle.
   The "Question visibility logic" toggle is available in the
   configuration panel when you click a field. A button will appear below
   this allowing you to edit the conditions.

   If you'd like to control visibility logic for a group of questions or
   any other content on the form page, then you'll want to use section or
   page breaks instead.

Section visibility logic

   Section breaks are perfect for applying logic to a group of questions
   without changing the page. They can also cover other content, so you
   can use them to apply visibility logic to headings, paragraph text,
   images, embedded videos, etc.

   To add a section break, type "/break" into a blank line in the editor,
   then select "Section break." The red line that appears in the editor
   represents the beginning of a new section.

   You can configure the break to add visibility logic that will apply to
   everything below this line, up until the next section or page break.
   A pair of section breaks wrapped around a heading and a few questions.
   Clicking this opens the configuration panel. You can delete the section
   break by clicking the X that appears to the left.

Page visibility logic

   When an entire page is "hidden," that means that it will be skipped
   completely when the user clicks the next page button (→). You can use
   visibility logic to determine which pages will be displayed or skipped.

   To add a page break, type "/break" into a blank line in the editor,
   then select "Page break." A page break appears as a blue line when
   editing the form.

   Configure the break to add visibility logic that will apply to
   everything below this line, up until the following page break (or the
   end of the form).

     When working with any breaks, try to avoid any redundant logic. If
     logic is applied to a page, it will automatically be applied to any
     sections and questions on that page. Repeating the same logic rules
     in those sub-sections and individual questions can make things more
     difficult to edit later. This also applies to individual questions
     inside sections.

Using visibility logic

   The most common use of logic is to conditionally show or hide certain
   questions, sections, or pages of the form.
   Animated GIF of some visibility logic in practice on a live form. As
   each question is answered, more questions and text appear.

Applying logic to actions

Emails

   Custom emails can be configured under After Submission → Emails. When
   adding a new email or editing an existing one, you can toggle on “Email
   Logic” at the very bottom of the page. After the form is submitted, the
   email will be sent only if the condition(s) have been met.
   A custom email with Email Logic toggled on and the "Configure Logic"
   button displayed.

   In the example above, an email will be sent to the manager of the
   Downtown branch if someone uses the form to sign up for classes at that
   location.

   You can set as many custom emails as you like, and each one can be sent
   under different conditions.

Integrations

   Much like an email, you can set a direct integration to only fire under
   certain conditions. For example, you might want to add the submitter’s
   email to your mailing list in MailChimp, but only if they indicate on
   the form that they’d like to sign up.
   Conditional logic in an integration: "Would you like to sign up for the
   newsletter? ... is ... Sign me up!"

   To add conditional logic to your integration:
    1. Head to After Submission → Integrations & Webhooks.
    2. To update an existing integration, find it below the list of apps,
       then select “Edit” from the cogwheel icon to the right. Or, to
       create a new one, select the app and follow the prompts.
    3. Scroll down to the very bottom of the page and toggle on “Use
       conditional logic.”
    4. Set the condition(s) that should be met in order for the
       integration to fire.

Success Pages & Redirects

   Users on selected pricing plans have access to Dynamic Success Pages &
   Redirects. With this feature, logic can be used to determine which page
   displays after the form is submitted. An automatic redirect can
   optionally happen after that, with the same conditions applied.

   Quizzes are a common use case for dynamic success pages—you may want to
   show one of several possible pages of results to the submitter,
   depending on their answers. The logic could be based on their final
   Score, the result of a Calculation, or the answers themselves.
   The configuration for a dynamic success page, titled "Quiz Result: 100%
   Correct!" Email logic is toggled on, and the Configure Logic button is
   showing that 2 conditions are set.

   To set this up:
    1. Head to After Submission → Success Pages & Redirects.
    2. Toggle on "Dynamic Success Pages & Redirects."
    3. Click the "Add Page +" button to set up the first page.
    4. Toggle on “Page has conditions when it should be used” to apply
       logic to this page.
    5. Design the success page, save it, and then repeat for the next
       conditional page.

   You can also use this for conditional redirects. By enabling "Redirect
   to another URL," the user will be sent somewhere else automatically
   after a success page has been shown for a specified amount of time.

     Conditional redirects can fire quickly after submission, but the
     success page will always load for at least a moment before the
     redirect can begin. For a more seamless transition, try deleting
     everything on the success page so that it is completely blank. Then,
     set "Redirect after this many seconds" to 0.

Complex conditions

   You may need to apply some logic that is a bit more complicated than
   what you can accomplish using a few dropdown menus. On selected pricing
   plans, robust Calculation fields are available for just about anything
   you can think of—applying math to answers, transforming answers using
   functions, etc. Once you have the answer you need from the Calculation,
   you can select that field in the logic dropdown instead of the original
   question.

   For example, let’s say we need a parent or guardian's e-signature if
   the student filling out the form is under 18 years old.

   We can pull the submitter's date of birth into a Calculation field set
   up like this one to determine their age:
dob = {{ date_question_id }};

DATEDIFF( NOW(), dob, "years" );

   Then, we’ll apply some visibility logic to the Signature field on our
   form using the Calculation's result:
   Question visibility logic with the condition "Age (Calculation) ... is
   less than ... 18"

   Calculations are extremely versatile, but they can be a bit
   overwhelming to learn at first. If you’re having any trouble, feel free
   to ask for help via the live chat in the bottom right of the screen or
   send us an email at support@paperform.co.

Gotchas

Working with similar question titles

   Many forms include repeated or similar questions, which can make it
   difficult to know if you’re selecting the correct question for a
   condition. We include each field's Question ID in dropdowns to help you
   identify which question you are selecting.
   The first "Choose question" dropdown in visibility logic, showing a
   list that includes multiple copies of the same question title, but with
   different Question IDs..

   You can also temporarily add a number or another identifier to the
   beginning of each repeated question's title, so that you know exactly
   what you’re looking for in the logic dropdown or the question panel.
   The question panel showing a list of numbered questions with otherwise
   similar titles.

   Once all of the logic is set up and tested, you can go back through and
   delete the numbers to return the questions to their original names.

Working with numbers

   The operators "is more than" and "is less than" are options when
   selecting question types that typically return numeric values (Number,
   Slider, Score, etc).

   If you'd like to use this kind of logic with a different question type
   (like Dropdown or Scale), try using a Calculation field to turn that
   answer into a numeric value first.
NUMBERVALUE( {{ question_id }} )

   It’s also important to note that "is more than" and "is less than" are
   not inclusive, meaning that a matching number will not be valid. For
   example, let’s say you wanted to show one success page if the
   submitter’s Score is less than 10, and another if they score 10 or more
   points. You would want to use:
     * Result A: “Score is less than 10”
     * Result B: “Score is 10” OR “Score is more than 10”

   Notice that two conditions are required for Result B in this example.
   If you only used “less than 10” for the first result and “more than 10”
   for the second, then a score of exactly 10 wouldn’t trigger either
   page.

     When working with whole numbers only, you can also get away with
     using something like "more than 9" to check for an answer that is 10
     or higher. If there's any chance that the answer will be a decimal
     though, stick to the two-condition method shown above. An answer of
     9.5 is not "10 or higher," but it would meet the condition "more
     than 9."

Blank or unfinished conditions

   Screenshot of some unfinished conditional logic: "Score ... is ...
   [Answer...] ... OR ... [Choose question]"

   If you find that some content is simply never visible, or a certain
   action never fires, double-check the logic to make sure that all of the
   conditions are set up completely (including the value for each answer).
   When a question is deleted, or its type or options get changed, this
   may affect logic that depends on that question in another part of the
   form.

   If logic is toggled on but no condition is set, then this logic will
   always fail. The same is true for conditions that are missing a value
   for the answer. If you don't need a certain condition, delete the whole
   line. If you don't need any conditions, toggle the logic setting off
   completely.

Related Articles

   How do I insert page breaks and section breaks (pagination & question
   branching)?
   Use breaks to divide a form into either pages or sections that can be
   shown conditionally based on responses.
   How do I send an email when the form is submitted?
   When a form is submitted, a submission summary email is sent to the
   owner of the form. This email can be turned off.
   What are direct integrations?
   Direct integrations on Paperform allow you to integrate directly
   between Paperform and numerous, popular services.
   How can I calculate a score for my form based on respondents' answers?
   There are two methods to calculate scores conditionally based on your
   respondents' answers: Scoring, and Calculation Fields.
   How do I set up Custom Pricing Rules?
   Need to create pricing dependant upon your customers needs? Offering
   services that need to have fees built in? We’ve got you covered with
   Custom Pricing Rules.
   (BUTTON) Skip to main content

   DRUM
   Communities & Collections
   All of DRUM
   ____________________ (BUTTON)
     * English
     * العربية
     * বাংলা
     * Català
     * Čeština
     * Deutsch
     * Ελληνικά
     * Español
     * Suomi
     * Français
     * Gàidhlig
     * हिंदी
     * Magyar
     * Italiano
     * Қазақ
     * Latviešu
     * Nederlands
     * Polski
     * Português
     * Português do Brasil
     * Srpski (lat)
     * Српски
     * Svenska
     * Türkçe
     * Yкраї́нська
     * Tiếng Việt

   Log In
   (BUTTON) UMD Login
   ____________________ ____________________ (BUTTON) Guest Researcher
   Login
   New user? Click here to register. Have you forgotten your password?
    1. Home
    2. College of Computer, Mathematical & Natural Sciences
    3. Computer Science
    4. Technical Reports from UMIACS
    5. Information Retrieval on the World Wide Web and Active Logic: A
       Survey and Problem Definition


   Information Retrieval on the World Wide Web and Active Logic: A Survey
   and Problem Definition
   Loading...
   Thumbnail Image

Files

   CS-TR-4291.pdf (305.26 KB)
   No. of downloads: 4050

Publication or External Link

Date

   2002-08-30

Authors

   Barfourosh, A. Abdollahzadeh
   Nezhad, H. R. Motahary
   Anderson, M. L.
   Perlis, D.

Advisor

Citation

DRUM DOI

Abstract

   As more information becomes available on the World Wide Web (there are
   currently over 4 billion pages covering most areas of human endeavor),
   it becomes more difficult to provide effective search tools for
   information access. Today, people access web information through two
   main kinds of search interfaces: Browsers (clicking and following
   hyperlinks) and Query Engines (queries in the form of a set of keywords
   showing the topic of
   interest). The first process is tentative and time consuming and the
   second may not satisfy the user because of many inaccurate and
   irrelevant results. Better support is needed for expressing one's
   information need and returning high quality search results by web
   search tools. There appears to be a need for systems that do reasoning
   under uncertainty and are flexible enough to recover from the
   contradictions, inconsistencies, and irregularities that such reasoning
   involves.

   Active Logic is a formalism that has been developed with real-world
   applications and their challenges in mind. Motivating its design is the
   thought that one of the factors that supports the flexibility of human
   reasoning is that it takes place step-wise, in time. Active Logic is
   one of a family of inference engines (step-logics) that explicitly
   reason in time, and incorporate a history of their reasoning as they
   run. This characteristic makes Active Logic systems more flexible than
   traditional AI systems and therefore more suitable for commonsense,
   real-world reasoning. In this report we mainly will survey recent
   advances in machine learning and crawling problems related to the web.
   We will review the continuum of supervised to semi-supervised to
   unsupervised learning problems, highlight the specific challenges which
   distinguish information retrieval in the hypertext domain and will
   summarize the key areas of recent and ongoing research. We will
   concentrate on topic-specific search engines, focused crawling, and
   finally will propose an Information Integration Environment, based on
   the Active Logic framework.

   Keywords: Web Information Retrieval, Web Crawling, Focused Crawling,
   Machine Learning, Active Logic (Also UMIACS-TR-2001-69)

Notes

URI (handle)

   http://hdl.handle.net/1903/1153

Rights

Collections

   Technical Reports from UMIACS
   Technical Reports of the Computer Science Department
   Full item page
   UMD Libraries logo
   Digital Repository at the University of Maryland
   University of Maryland, College Park, MD 20742-7011
   (301) 314-1328
   drum-help@umd.edu
     * Send Feedback
     * Privacy policy
     * Web Accessibility
     * Give Now
     * Cookie settings
   IFRAME: //www.googletagmanager.com/ns.html?id=GTM-PWWZSH

   IFRAME: //www.googletagmanager.com/ns.html?id=GTM-MKCV6V9

   (BUTTON) Search App Architecture (BUTTON) Search the TechTarget Network
   ____________________ (BUTTON)
   Login Register
   Explore the Network
     * TechTarget Network
     * Software Quality
     * Cloud Computing
     * TheServerSide

     * Search App Architecture
     *
          + API Management
          + App Development & Design
          + App Management Tools
          + Architecture Management
          + EAI
       Other Content
          + News
          + Features
          + Tips
          + Webinars
          + 2024 IT Salary Survey Results
          + Sponsored Sites
          + More
               o Answers
               o Conference Guides
               o Definitions
               o Opinions
               o Podcasts
               o Quizzes
               o Tech Accelerators
               o Tutorials
               o Videos

     * Follow:
     *
     *
     *
     *

     * Home
     * Application development and design

   Definition

WebLogic

     * Share this item with your network:
     *
     *
     *
     *
     *

     *
     *
     *
          +
          +
          +
          +

   Peter Loshin
   By
     * Peter Loshin, Former Senior Technology Editor

What is Oracle WebLogic Server?

   Oracle WebLogic Server is a leading e-commerce online transaction
   processing (OLTP) platform, developed to connect users in distributed
   computing production environments and to facilitate the integration of
   mainframe applications with distributed corporate data and
   applications.

   WebLogic is an Application Server that runs on a middle tier, between
   back-end databases and related applications and browser-based thin
   clients. WebLogic Server mediates the exchange of requests from the
   client tier with responses from the back-end tier.
   Oracle WebLogic Server architecture Oracle WebLogic Server operates as
   middleware for distributed enterprise applications.

   WebLogic Server is based on Java Platform, Enterprise Edition (Java EE)
   (formerly known as Java 2 Platform, Enterprise Edition or J2EE), the
   standard platform used to create Java-based multi-tier enterprise
   applications. Java EE platform technologies were developed through the
   efforts of BEA Systems and other vendors in collaboration with the main
   developer, Sun Microsystems.

   Because Java EE applications are standardized modules, WebLogic can
   automate many system-level tasks that would otherwise have demanded
   programming time.

What is WebLogic used for?

   Enterprises use WebLogic Server to develop distributed applications,
   enabling users to access applications from a client -- web browser,
   mobile device or any other type of client program or device using a
   program written in Java or any other language -- and systems on the
   back end -- databases, enterprise information systems or mainframe
   applications.

WebLogic features and capabilities

   As one component of Oracle's Fusion middleware platform, WebLogic
   capabilities include the following:
     * support for databases including Oracle Database, Oracle MySQL
       Enterprise, Microsoft SQL Server and IBM DB2;
     * .NET interoperability;
     * native integration with other middleware and APIs; and
     * support for a security model that separates security code from
       business logic.

   typical middleware architecture Oracle WebLogic Server is a component
   of Oracle's Fusion middleware platform.

   The main features of WebLogic server include the following:
     * connectors that make it possible for any legacy application on any
       client to interoperate with server applications;
     * Enterprise JavaBean (EJB) components;
     * resource pooling;
     * connection sharing enables improved application scalability; and
     * an administration console with a user interface makes management
       tasks more efficient and includes features such as:
          + Secure Sockets Layer (SSL) support for the encryption of data
            transmissions; and
          + authentication and Authorization mechanisms to make
            applications and transactions secure.

WebLogic server architecture

   A WebLogic server installation includes at least one WebLogic server
   instance but may include multiple server instances on one or more
   separate computer servers.

   Multiple WebLogic servers are administered together as a unit called a
   domain. Each WebLogic domain includes a single administration server
   and may contain additional server instances managed by the
   administration server. When these managed servers are configured to be
   part of a WebLogic Server cluster, they enable scaling for
   high-availability applications.

   WebLogic Server domains can also be deployed on a public cloud, using
   the Oracle Cloud Infrastructure Container Engine for Kubernetes.

   IFRAME:
   https://www.youtube.com/embed/fO3vUMc_WbI?autoplay=0&modestbranding=1&r
   el=0&widget_referrer=https://www.techtarget.com/searchapparchitecture/d
   efinition/WebLogic&enablejsapi=1&origin=https://www.techtarget.com

How popular is WebLogic?

   WebLogic Server is intended for high-traffic applications, so it is not
   surprising that it is not used by many sites. According to W3Techs --
   Word Wide Web Technology Surveys, usage statistics for WebLogic Server
   indicate it is used by less than 0.1% of all websites running a known
   web server.

   However, WebLogic Server market share increases for the top-ranking
   busiest sites. As an integral part of Oracle's application server
   stack, WebLogic Server does not need to be popular outside of its
   target market: large enterprises that require highly scalable server
   environments for OLTP applications.

Oracle WebLogic Server vs. Apache Tomcat

   The Apache Tomcat web server is often compared with WebLogic Server.
   The Tomcat web server serves static content and dynamic content in web
   applications delivered in Java servlets and JavaServer Pages.

   The fundamental difference between WebLogic Server and Apache Tomcat is
   that WebLogic is an application server. That means WebLogic includes
   components that provide web services as well as a server environment
   for accessing enterprise data resources like databases and transaction
   processing.
   Apache Tomcat vs Oracle WebLogic Server The difference between WebLogic
   Server and Apache Tomcat is the difference between an application
   server and a web server.

History of WebLogic

   WebLogic server was the first J2EE application server.
     * 1995: WebLogic, Inc. founded.
     * 1997: First release of WebLogic Tengah.
     * 1998: WebLogic, Inc., acquired by BEA Systems.
     * 2008: BEA Systems acquired by Oracle.
     * 2020: WebLogic Server version 14 released.

   WebLogic Server can solve some thorny problems for enterprises that
   need to tightly integrate their information systems with a scalable
   OLTP platform. It may be too much for simpler applications; find out if
   Apache Tomcat server works better for your applications.
   This was last updated in December 2021

Continue Reading About WebLogic

     * App dev focuses on low-code, Kubernetes development in 2021

     * Kubernetes basics: A step-by-step implementation tutorial

     * Oracle Cloud Infrastructure targets devs and installed base

     * Get to know the core Oracle IaaS offerings

     * Tomcat vs. WebSphere: How these application servers compare

Related Terms

   What is a 3-tier application architecture?
          A three-tier application architecture is a modular client-server
          architecture that consists of a presentation tier, an ...
          See complete definition

   What is an application?
          An application, also referred to as an application program or
          application software, is a computer software package that
          performs ... See complete definition

   What is Mojo programming language and what is it used for?
          Mojo is a high-performance programming language initially
          designed to unify and simplify the development of applications
          across ... See complete definition

Dig Deeper on Application development and design

     *

Tips for migrating to OpenJDK
     *

embedded Tomcat
       CameronMcKenzie
       By: Cameron McKenzie
     *

Oracle WebLogic users get a bridge to Kubernetes deployment
       BethPariseau
       By: Beth Pariseau
     *

Is Apache Tomcat the right Java application server for you?
       TimCulverhouse
       By: Tim Culverhouse

   Sponsored News
     * The Power of 16th Generation Dell PowerEdge R960 servers with Intel
       Xeon ... –Dell Technologies and Intel
     * How advanced AI-powered digital assistants can improve physician
       documentation –Oracle Healthcare
     * See More

   Vendor Resources
     * Replace or Rebuild? A Guide to Maximizing Server Value –Dell EMC
       and Microsoft
     * A Computer Weekly buyer's guide to application modernisation
       –TechTarget ComputerWeekly.com

   Latest TechTarget resources
     * Software Quality
     * Cloud Computing
     * Java

   Search Software Quality
     * 13 must-know Markdown tips and tricks
       Use these tips to improve your Markdown-based documentation,
       streamline your approach and structure your documents.
     * Professional Scrum Developer exam questions and answers
       Professional Scrum Developer is a highly respected certification,
       but it's not easy to get. Take this sample PSD exam to test ...
     * How to choose the best Markdown editor for your use case
       A dedicated authoring tool helps writers take full advantage of
       Markdown. Find one that supports your development projects, ...

   Search Cloud Computing
     * How to launch an Amazon EC2 Mac instance
       Amazon EC2 Mac instances empower macOS and iOS developers with
       essential capabilities for app development, testing and
       deployment...
     * Top public cloud service providers of 2025: How they compare
       As the market share gap tightens among AWS, Microsoft and Google,
       see how their features and offerings stack up against each ...
     * The future of hybrid cloud: What to expect in 2025 and beyond
       For companies modernizing their business operations, hybrid cloud's
       embrace of AI, edge computing and integration promises unique...

   TheServerSide.com
     * Stubs vs. mocks in software testing
       Running a software test and need to simulate a function or object?
       Here's how to choose between two common options, stubs vs. ...
     * A JavaScript functional programming basic tutorial
       JavaScript's versatility makes it useful for webpages and web
       servers, but also functional programming. This tutorial shows how
       ...
     * Why Agile estimation and planning never works
       Modern application development can defy traditional project
       planning and delivery. Here's how to incorporate more flexibility
       ...

     * About Us
     * Editorial Ethics Policy
     * Meet The Editors
     * Contact Us
     * Advertisers
     * Partner with Us
     * Media Kit
     * Corporate Site

     * Contributors
     * Reprints
     * Answers
     * Definitions
     * E-Products
     * Events
     * Features

     * Guides
     * Opinions
     * Photo Stories
     * Quizzes
     * Tips
     * Tutorials
     * Videos

   All Rights Reserved, Copyright 2019 - 2025, TechTarget
   Privacy Policy
   Cookie Preferences
   Cookie Preferences
   Do Not Sell or Share My Personal Information

   Close
   #Rebel Blog Feed alternate

   IFRAME: https://www.googletagmanager.com/ns.html?id=GTM-5RJK883

   Skip to main content

   Created with Avocode.
   ______________________________
   Apply

Secondary Navigation

     * Blog
     * Request Quote
     * Downloads
          + JRebel Download
          + XRebel Download
          + Rebel Licenses On-Premise Download
          + Eclipse Plugin
     * Company
          + About JRebel by Perforce
          + Careers at Perforce
          + Press
          + Reseller Partners
     * Contact
          + Contact Us
          + Request Support
          + Subscribe

   Rebel

Main Navigation - Mega Menu

     * Products

Main Navigation - Mega Menu
          + JRebel
          + JRebel for Cloud
     * Resources

Main Navigation - Mega Menu
          + Explore Resources
          + Papers & Videos
          + Events & Webinars
          + Recorded Webinars
          + Blog
          + Video Tutorials
          + ROI Calculator for JRebel
   image-jrebel-2024-report-600-400

2024 Java Developer Productivity Report
       Read Now
     * Customers
     * Support
     * Try Free
     * Blog
     * Request a Quote

Main Navigation - Mega Menu
          + JRebel
          + XRebel
          + JRebel
          + XRebel
     * Downloads

Main Navigation - Mega Menu
          + JRebel Download
          + Rebel Licenses On-Premise Download
          + XRebel Download
          + JRebel Download
          + Rebel Licenses On-Premise Download
          + XRebel Download
     * Company

Main Navigation - Mega Menu
          + About JRebel by Perforce
          + Careers at Perforce
          + Reseller Partners
     * Contact

Main Navigation - Mega Menu
          + Contact Us
          + Request Support
          + Subscribe

   WebLogic

Breadcrumb

    1. Home
    2. Resources
    3. Blog
    4. Java Basics: What Is WebLogic?

   October 24, 2024

Java Basics: What Is WebLogic?

   Java Application Development
   Enterprise Development

   With its extensive suite of enterprise functionalities, WebLogic is a
   popular choice for Java development. But how does WebLogic compare to
   other platforms and application servers?

   In this blog, we give an overview of WebLogic, including how popular
   WebLogic is in 2024, use cases for WebLogic, and comparisons to other
   application servers such as Tomcat and JBoss / Wildfly.

Table of Contents

    1. What Is WebLogic?
    2. WebLogic vs. Tomcat
    3. WebLogic vs. JBoss / Wildfly
    4. Final Thoughts

   [Table of Contents_______________]
   Back to top

What Is WebLogic?

     Oracle WebLogic Server is a scalable, enterprise Java platform
     application server for Java-based web applications. The WebLogic
     Server mediates the exchange of requests from the client tier with
     responses from the back-end tier.

   WebLogic allows users to develop and deploy an application that has
   business logic and allows the application to access other services like
   database, messaging, or other enterprise systems. It is a robust
   platform for distributed applications.

   Originally, WebLogic wasn’t always in the Oracle portfolio. In fact, it
   joined the Oracle product portfolio in 2008 when BEA Systems, a
   software company that developed it, was acquired by Oracle. WebLogic
   Server offers a robust, highly available, and secure environment for
   critical applications.

What Is WebLogic Used For?

   WebLogic is a platform where you deploy your Java application and
   everything else is handled by the server. When clients make a request
   to a web application the web server will handle the request and
   delegate its processing to the required service. If the request
   requires reading data for example from the database, WebLogic will take
   care of it. The client doesn't know what happened in the background and
   is served with the required content.

   In fact, the server is usually used in the production environments,
   where there are many clients making thousands of requests every time
   and the server must be able to serve all of them without any issues. To
   achieve stability and high availability, usually, load balancing and
   scalability is used within the application server. The application can
   be deployed to the server in several ways. Below is the example of
   deploying the application using the Administration Console.

   image blog what is websphere 3

Is WebLogic Popular?

   WebLogic is popular within the commercial sphere — where companies
   require reliable software that comes with enterprise support. According
   to the 2024 Java Developer Productivity Report, 36% of respondents said
   they use Tomcat as the application server for their main application,
   with JBoss/Wildfly (15%), WebLogic (12%), WebSphere (10%), Jetty (10%),
   and Glassfish/Payara (8%) taking near even shares of the remainder.


   Application Server

   Source: 2024 Java Developer Productivity Report


   Another 7% respondents said they don’t use an application server, and
   nearly a quarter of respondents selecting more than one application
   server option. If you only consider servers that implement Jakarta EE
   Full Profile specification, WebLogic is dominating the market.


     Curious what technologies your peers are using in their Java tech
     stacks? Find out in the 2024 Java Developer Productivity Report.

     Download the report

WebSphere vs. WebLogic

     WebSphere Application Server (WAS) is a web application server that
     is used as a middleware to host Java-based web applications.

   Developed by IBM, WAS is written in Java so it can be run on any
   operating system where Java is supported. While writing this article,
   Version 9.x of WAS supports Java EE7 Full Profile. You may also hear
   the word “Liberty” with a connection to WAS. WebSphere Liberty is a
   lightweight application server with low overhead that is designed for
   cloud applications and microservices.

   If you are a single developer, both editions are free for development
   purposes. In an environment where more than one person is using the
   server, the purchase of a commercial license is required.

   image blog what is websphere
   Back to top

WebLogic vs. Tomcat

   While Apache Tomcat is the most popular application server, it offers a
   limited set of features from the Jakarta EE Full Profile specification,
   such as Java Servlet or JavaServer Pages. For some enterprise
   applications, however, that limited feature set might not be enough.

   CAPTION: Benefits of WebLogic vs. Tomcat

   WebLogic Benefits

   Tomcat Benefits

   Java EE 8 Compatible Implementation

   Free and open source

   Extremely scalable

   Lightweight

   Administration console

   Low memory footprint

   Integrates well with other Oracle products

   Offering limited features makes Tomcat a lightweight server with quick
   redeploys. But because it's lightweight, it suffers in usability. If
   the application requires more Java EE features, WebLogic is often the
   better choice.

   🐱 Learn more about Apache Tomcat: read the blog.

   With WebLogic, users get access to the commercial support from Oracle.
   Apache Tomcat doesn’t have dedicated support, but you can get support
   for Tomcat from OpenLogic by Perforce.

   OpenLogic provides support for:
     * Tomcat security, including preventing issues like the Ghostcat
       vulnerability.
     * Tomcat clustering, including Tomcat 7 and Tomcat 8.
     * And so much more.

Get Support For Tomcat

     Whether you're considering a migration from WebLogic to Tomcat — or
     you're already using Tomcat and want support — OpenLogic experts can
     help. Get in touch today to learn how.

     Talk to a Tomcat Expert

   Back to top

WebLogic vs. JBoss / Wildfly

   Two application servers that play a big role in an enterprise sphere
   are WebLogic and JBoss / WildFly. Both offer full support for Java EE
   8. One of the key differences is that JBoss / Wildfly is open source
   and free while WebLogic is paid product with commercial support. Red
   Hat also offers commercial support for a fee.

   📚 Further reading: What is Wildfly?

   CAPTION: Benefits of WebLogic vs. JBoss / Wildfly

   WebLogic Benefits

   JBoss / Wildfly Benefits

   Developed by Oracle

   Free and open source

   Extremely scalable

   Offers support for JBoss EAP (paid)

   Everything manageable from the Administration Console

   Jakarta EE Full platform implementation
   Back to top

Final Thoughts

   If you are considering a tool for a production environment with a heavy
   load and you also need most or all from the Java EE specification,
   WebLogic is a good candidate. While there are other servers that have
   similar functionality, one of the advantages of WebLogic is its
   excellent integration with other products from Oracle.

   WebLogic Server is a commercial product that requires buying a license,
   but you will get access to enterprise support as well. Due to all its
   features, WebLogic isn’t really a lightweight solution, so make sure
   you compare the servers well before choosing for one — including
   redeploy times.

   Fortunately, there's a solution to long redeploy times. With JRebel,
   you can eliminate redeploys in any application server and IDE while
   maintaining application state. These time savings are more than just
   spare minutes; they add up to real business value.

     Want to see how JRebel can speed up development for your WebLogic
     application? Start your 14-day free trial today and see how much
     time you could save.

     Start Free trial



   Back to top

Footer menu

     * Products
          + JRebel
          + JRebel for Cloud
          + JRebel Licenses
     * Customers
     * Resources
          + Papers & Videos
          + Events & Webinars
          + Recorded Webinars
          + Blog
          + Video Tutorials
          + ROI Calculator
     * INTEGRATIONS
          + Eclipse
     * Support
          + JRebel Documentation
          + FAQs
          + Software End of Life Policy
     * Downloads
          + JRebel Download
          + JRebel Licenses On-Premise Download
          + Eclipse Plugin
     * Hubs
          + New Features in Java
          + Exploring Java Microservices
          + Java Resources For Developers
          + Java Technology Overview
     * Company
          + About JRebel by Perforce
          + Careers at Perforce
          + Reseller Partners
     * Contact
          + Contact Us
          + Request Support
          + Subscribe
     *

   JRebel by Perforce ©  Perforce Software, Inc.
   Terms of Use | Privacy Policy | Data Processing Policy | Sitemap

Social Menu

     * LinkedIn
     * Twitter
     * YouTube
     * RSS

   X

   Send Feedback
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 Description
     * 2 Solutions
       (BUTTON) Toggle Solutions subsection
          + 2.1 Fluent occlusion solution
          + 2.2 Predicate completion solution
          + 2.3 Successor state axioms solution
          + 2.4 Fluent calculus solution
          + 2.5 Event calculus solution
          + 2.6 Default logic solution
          + 2.7 Answer set programming solution
          + 2.8 Separation logic solution
          + 2.9 Action description languages
     * 3 See also
     * 4 Notes
     * 5 References
     * 6 External links

   [ ] Toggle the table of contents

Frame problem

   [ ] 8 languages
     * العربية
     * Deutsch
     * Français
     * 한국어
     * Nederlands
     * 日本語
     * Norsk nynorsk
     * Српски / srpski

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   From Wikipedia, the free encyclopedia
   Issue in artificial intelligence and categorical algebra

   In artificial intelligence, with implications for cognitive science,
   the frame problem describes an issue with using first-order logic to
   express facts about a robot in the world. Representing the state of a
   robot with traditional first-order logic requires the use of many
   axioms that simply imply that things in the environment do not change
   arbitrarily. For example, Hayes describes a "block world" with rules
   about stacking blocks together. In a first-order logic system,
   additional axioms are required to make inferences about the environment
   (for example, that a block cannot change position unless it is
   physically moved). The frame problem is the problem of finding adequate
   collections of axioms for a viable description of a robot
   environment.^[1]

   John McCarthy and Patrick J. Hayes defined this problem in their 1969
   article, Some Philosophical Problems from the Standpoint of Artificial
   Intelligence. In this paper, and many that came after, the formal
   mathematical problem was a starting point for more general discussions
   of the difficulty of knowledge representation for artificial
   intelligence. Issues such as how to provide rational default
   assumptions and what humans consider common sense in a virtual
   environment.^[2]

   In philosophy, the frame problem became more broadly construed in
   connection with the problem of limiting the beliefs that have to be
   updated in response to actions. In the logical context, actions are
   typically specified by what they change, with the implicit assumption
   that everything else (the frame) remains unchanged.

Description

   [edit]

   The frame problem occurs even in very simple domains. A scenario with a
   door, which can be open or closed, and a light, which can be on or off,
   is statically represented by two propositions
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open}
   }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} } and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> </mrow>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {on} }</annotation>
   </semantics> :MATH]
   {\displaystyle \mathrm {on} } . If these conditions can change, they
   are better represented by two predicates
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow> <mo
   stretchy="false">(</mo> <mi>t</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open}
   (t)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} (t)} and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> </mrow> <mo
   stretchy="false">(</mo> <mi>t</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {on}
   (t)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {on} (t)} that depend on time; such predicates
   are called fluents. A domain in which the door is closed and the light
   off at time 0, and the door opened at time 1, can be directly
   represented in logic ^[clarification needed] by the following formulae:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>0</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \mathrm {open}
          (0)}</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {open} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>0</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \mathrm {on}
          (0)}</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {on} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mn>1</mn> <mo stretchy="false">)</mo> </mstyle> </mrow>
          <annotation encoding="application/x-tex">{\displaystyle \mathrm
          {open} (1)}</annotation> </semantics> :MATH]
          {\displaystyle \mathrm {open} (1)}

   The first two formulae represent the initial situation; the third
   formula represents the effect of executing the action of opening the
   door at time 1. If such an action had preconditions, such as the door
   being unlocked, it would have been represented by
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mrow class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">l</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">k</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">d</mi> </mrow> <mo stretchy="false">(</mo>
   <mn>0</mn> <mo stretchy="false">)</mo> <mspace width="thickmathspace"
   /> <mo stretchy="false">⟹</mo> <mspace width="thickmathspace" /> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mn>1</mn> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \neg \mathrm {locked}
   (0)\implies \mathrm {open} (1)}</annotation> </semantics> :MATH]
   {\displaystyle \neg \mathrm {locked} (0)\implies \mathrm {open} (1)} .
   In practice, one would have a predicate
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">x</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">u</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mi>t</mi> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {executeopen}
   (t)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {executeopen} (t)} for specifying when an action
   is executed and a rule
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">∀</mi>
   <mi>t</mi> <mo>.</mo> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">x</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">u</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mi>t</mi> <mo stretchy="false">)</mo> <mspace width="thickmathspace"
   /> <mo stretchy="false">⟹</mo> <mspace width="thickmathspace" /> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mi>t</mi> <mo>+</mo> <mn>1</mn> <mo stretchy="false">)</mo> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle \forall
   t.\mathrm {executeopen} (t)\implies \mathrm {open} (t+1)}</annotation>
   </semantics> :MATH]
   {\displaystyle \forall t.\mathrm {executeopen} (t)\implies \mathrm
   {open} (t+1)} for specifying the effects of actions. The article on the
   situation calculus gives more details.

   While the three formulae above are a direct expression in logic of what
   is known, they do not suffice to correctly draw consequences. While the
   following conditions (representing the expected situation) are
   consistent with the three formulae above, they are not the only ones.

   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mrow class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mn>0</mn> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \neg \mathrm {open}
   (0)}</annotation> </semantics> :MATH]
   {\displaystyle \neg \mathrm {open} (0)}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow> <mo
   stretchy="false">(</mo> <mn>1</mn> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open}
   (1)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} (1)}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mrow class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mn>0</mn> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \neg \mathrm {on}
   (0)}</annotation> </semantics> :MATH]
   {\displaystyle \neg \mathrm {on} (0)}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mrow class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mn>1</mn> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \neg \mathrm {on}
   (1)}</annotation> </semantics> :MATH]
   {\displaystyle \neg \mathrm {on} (1)}

   Indeed, another set of conditions that is consistent with the three
   formulae above is:

   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mrow class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mn>0</mn> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \neg \mathrm {open}
   (0)}</annotation> </semantics> :MATH]
   {\displaystyle \neg \mathrm {open} (0)}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow> <mo
   stretchy="false">(</mo> <mn>1</mn> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open}
   (1)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} (1)}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mrow class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mn>0</mn> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \neg \mathrm {on}
   (0)}</annotation> </semantics> :MATH]
   {\displaystyle \neg \mathrm {on} (0)}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> </mrow> <mo
   stretchy="false">(</mo> <mn>1</mn> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {on}
   (1)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {on} (1)}

   The frame problem is that specifying only which conditions are changed
   by the actions does not entail that all other conditions are not
   changed. This problem can be solved by adding the so-called “frame
   axioms”, which explicitly specify that all conditions not affected by
   actions are not changed while executing that action. For example, since
   the action executed at time 0 is that of opening the door, a frame
   axiom would state that the status of the light does not change from
   time 0 to time 1:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mn>0</mn> <mo stretchy="false">)</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">⟺</mo> <mspace
          width="thickmathspace" /> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>1</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \mathrm {on} (0)\iff
          \mathrm {on} (1)}</annotation> </semantics> :MATH]
          {\displaystyle \mathrm {on} (0)\iff \mathrm {on} (1)}

   The frame problem is that one such frame axiom is necessary for every
   pair of action and condition such that the action does not affect the
   condition.^[clarification needed] In other words, the problem is that
   of formalizing a dynamical domain without explicitly specifying the
   frame axioms.

   The solution proposed by McCarthy to solve this problem involves
   assuming that a minimal amount of condition changes have occurred; this
   solution is formalized using the framework of circumscription. The Yale
   shooting problem, however, shows that this solution is not always
   correct. Alternative solutions were then proposed, involving predicate
   completion, fluent occlusion, successor state axioms, etc.; they are
   explained below. By the end of the 1980s, the frame problem as defined
   by McCarthy and Hayes was solved^[clarification needed]. Even after
   that, however, the term “frame problem” was still used, in part to
   refer to the same problem but under different settings (e.g.,
   concurrent actions), and in part to refer to the general problem of
   representing and reasoning with dynamical domains.

Solutions

   [edit]

   The following solutions depict how the frame problem is solved in
   various formalisms. The formalisms themselves are not presented in
   full: what is presented are simplified versions that are sufficient to
   explain the full solution.

Fluent occlusion solution

   [edit]

   This solution was proposed by Erik Sandewall, who also defined a formal
   language for the specification of dynamical domains; therefore, such a
   domain can be first expressed in this language and then automatically
   translated into logic. In this article, only the expression in logic is
   shown, and only in the simplified language with no action names.

   The rationale of this solution is to represent not only the value of
   conditions over time, but also whether they can be affected by the last
   executed action. The latter is represented by another condition, called
   occlusion. A condition is said to be occluded in a given time point if
   an action has been just executed that makes the condition true or false
   as an effect. Occlusion can be viewed as “permission to change”: if a
   condition is occluded, it is relieved from obeying the constraint of
   inertia.

   In the simplified example of the door and the light, occlusion can be
   formalized by two predicates
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">c</mi> <mi mathvariant="normal">l</mi> <mi
   mathvariant="normal">u</mi> <mi mathvariant="normal">d</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mi>t</mi> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {occludeopen}
   (t)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {occludeopen} (t)} and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">c</mi> <mi mathvariant="normal">l</mi> <mi
   mathvariant="normal">u</mi> <mi mathvariant="normal">d</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mi>t</mi> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {occludeon}
   (t)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {occludeon} (t)} . The rationale is that a
   condition can change value only if the corresponding occlusion
   predicate is true at the next time point. In turn, the occlusion
   predicate is true only when an action affecting the condition is
   executed.

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>0</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \mathrm {open}
          (0)}</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {open} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>0</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \mathrm {on}
          (0)}</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {on} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mn>1</mn> <mo stretchy="false">)</mo> <mo>∧</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">c</mi> <mi mathvariant="normal">c</mi> <mi
          mathvariant="normal">l</mi> <mi mathvariant="normal">u</mi> <mi
          mathvariant="normal">d</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>1</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \mathrm {open}
          (1)\wedge \mathrm {occludeopen} (1)}</annotation> </semantics>
          :MATH]
          {\displaystyle \mathrm {open} (1)\wedge \mathrm {occludeopen}
          (1)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">∀</mi> <mi>t</mi> <mo>.</mo> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">c</mi> <mi
          mathvariant="normal">c</mi> <mi mathvariant="normal">l</mi> <mi
          mathvariant="normal">u</mi> <mi mathvariant="normal">d</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>t</mi> <mo stretchy="false">)</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">⟹</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">(</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>t</mi> <mo>−</mo> <mn>1</mn> <mo stretchy="false">)</mo>
          <mspace width="thickmathspace" /> <mo stretchy="false">⟺</mo>
          <mspace width="thickmathspace" /> <mrow class="MJX-TeXAtom-ORD">
          <mi mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi>
          <mi mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mi>t</mi> <mo
          stretchy="false">)</mo> <mo stretchy="false">)</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          \forall t.\neg \mathrm {occludeopen} (t)\implies (\mathrm {open}
          (t-1)\iff \mathrm {open} (t))}</annotation> </semantics> :MATH]
          {\displaystyle \forall t.\neg \mathrm {occludeopen} (t)\implies
          (\mathrm {open} (t-1)\iff \mathrm {open} (t))}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">∀</mi> <mi>t</mi> <mo>.</mo> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">c</mi> <mi
          mathvariant="normal">c</mi> <mi mathvariant="normal">l</mi> <mi
          mathvariant="normal">u</mi> <mi mathvariant="normal">d</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>t</mi> <mo stretchy="false">)</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">⟹</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">(</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>t</mi> <mo>−</mo> <mn>1</mn> <mo stretchy="false">)</mo>
          <mspace width="thickmathspace" /> <mo stretchy="false">⟺</mo>
          <mspace width="thickmathspace" /> <mrow class="MJX-TeXAtom-ORD">
          <mi mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mi>t</mi> <mo
          stretchy="false">)</mo> <mo stretchy="false">)</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          \forall t.\neg \mathrm {occludeon} (t)\implies (\mathrm {on}
          (t-1)\iff \mathrm {on} (t))}</annotation> </semantics> :MATH]
          {\displaystyle \forall t.\neg \mathrm {occludeon} (t)\implies
          (\mathrm {on} (t-1)\iff \mathrm {on} (t))}

   In general, every action making a condition true or false also makes
   the corresponding occlusion predicate true. In this case,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">c</mi> <mi mathvariant="normal">l</mi> <mi
   mathvariant="normal">u</mi> <mi mathvariant="normal">d</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mn>1</mn> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {occludeopen}
   (1)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {occludeopen} (1)} is true, making the
   antecedent of the fourth formula above false for
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>t</mi> <mo>=</mo> <mn>1</mn>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle t=1}</annotation>
   </semantics> :MATH]
   {\displaystyle t=1} ; therefore, the constraint that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow> <mo
   stretchy="false">(</mo> <mi>t</mi> <mo>−</mo> <mn>1</mn> <mo
   stretchy="false">)</mo> <mspace width="thickmathspace" /> <mo
   stretchy="false">⟺</mo> <mspace width="thickmathspace" /> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
   <mi>t</mi> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open} (t-1)\iff
   \mathrm {open} (t)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} (t-1)\iff \mathrm {open} (t)} does not
   hold for
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>t</mi> <mo>=</mo> <mn>1</mn>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle t=1}</annotation>
   </semantics> :MATH]
   {\displaystyle t=1} . Therefore,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open}
   }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} } can change value, which is also what is
   enforced by the third formula.

   In order for this condition to work, occlusion predicates have to be
   true only when they are made true as an effect of an action. This can
   be achieved either by circumscription or by predicate completion. It is
   worth noticing that occlusion does not necessarily imply a change: for
   example, executing the action of opening the door when it was already
   open (in the formalization above) makes the predicate
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">c</mi> <mi mathvariant="normal">l</mi> <mi
   mathvariant="normal">u</mi> <mi mathvariant="normal">d</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {occludeopen}
   }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {occludeopen} } true and makes
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open}
   }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} } true; however,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open}
   }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} } has not changed value, as it was true
   already.

Predicate completion solution

   [edit]

   This encoding is similar to the fluent occlusion solution, but the
   additional predicates denote change, not permission to change. For
   example,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">c</mi> <mi mathvariant="normal">h</mi> <mi
   mathvariant="normal">a</mi> <mi mathvariant="normal">n</mi> <mi
   mathvariant="normal">g</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow> <mo
   stretchy="false">(</mo> <mi>t</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {changeopen}
   (t)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {changeopen} (t)} represents the fact that the
   predicate
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open}
   }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} } will change from time
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>t</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle t}</annotation>
   </semantics> :MATH]
   {\displaystyle t} to
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>t</mi> <mo>+</mo> <mn>1</mn>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle t+1}</annotation>
   </semantics> :MATH]
   {\displaystyle t+1} . As a result, a predicate changes if and only if
   the corresponding change predicate is true. An action results in a
   change if and only if it makes true a condition that was previously
   false or vice versa.

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>0</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \mathrm {open}
          (0)}</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {open} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>0</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \mathrm {on}
          (0)}</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {on} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>0</mn> <mo
          stretchy="false">)</mo> <mspace width="thickmathspace" /> <mo
          stretchy="false">⟹</mo> <mspace width="thickmathspace" /> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">c</mi> <mi
          mathvariant="normal">h</mi> <mi mathvariant="normal">a</mi> <mi
          mathvariant="normal">n</mi> <mi mathvariant="normal">g</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mn>0</mn> <mo stretchy="false">)</mo> </mstyle> </mrow>
          <annotation encoding="application/x-tex">{\displaystyle \neg
          \mathrm {open} (0)\implies \mathrm {changeopen}
          (0)}</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {open} (0)\implies \mathrm
          {changeopen} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">∀</mi> <mi>t</mi> <mo>.</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">c</mi> <mi
          mathvariant="normal">h</mi> <mi mathvariant="normal">a</mi> <mi
          mathvariant="normal">n</mi> <mi mathvariant="normal">g</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>t</mi> <mo stretchy="false">)</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">⟺</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">(</mo> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mi>t</mi> <mo
          stretchy="false">)</mo> <mspace width="thickmathspace" /> <mo
          stretchy="false">⟺</mo> <mspace width="thickmathspace" /> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>t</mi> <mo>+</mo> <mn>1</mn> <mo stretchy="false">)</mo> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \forall t.\mathrm
          {changeopen} (t)\iff (\neg \mathrm {open} (t)\iff \mathrm {open}
          (t+1))}</annotation> </semantics> :MATH]
          {\displaystyle \forall t.\mathrm {changeopen} (t)\iff (\neg
          \mathrm {open} (t)\iff \mathrm {open} (t+1))}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">∀</mi> <mi>t</mi> <mo>.</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">c</mi> <mi
          mathvariant="normal">h</mi> <mi mathvariant="normal">a</mi> <mi
          mathvariant="normal">n</mi> <mi mathvariant="normal">g</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>t</mi> <mo stretchy="false">)</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">⟺</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">(</mo> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mi>t</mi> <mo
          stretchy="false">)</mo> <mspace width="thickmathspace" /> <mo
          stretchy="false">⟺</mo> <mspace width="thickmathspace" /> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>t</mi> <mo>+</mo> <mn>1</mn> <mo stretchy="false">)</mo> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \forall t.\mathrm
          {changeon} (t)\iff (\neg \mathrm {on} (t)\iff \mathrm {on}
          (t+1))}</annotation> </semantics> :MATH]
          {\displaystyle \forall t.\mathrm {changeon} (t)\iff (\neg
          \mathrm {on} (t)\iff \mathrm {on} (t+1))}

   The third formula is a different way of saying that opening the door
   causes the door to be opened. Precisely, it states that opening the
   door changes the state of the door if it had been previously closed.
   The last two conditions state that a condition changes value at time
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>t</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle t}</annotation>
   </semantics> :MATH]
   {\displaystyle t} if and only if the corresponding change predicate is
   true at time
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>t</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle t}</annotation>
   </semantics> :MATH]
   {\displaystyle t} . To complete the solution, the time points in which
   the change predicates are true have to be as few as possible, and this
   can be done by applying predicate completion to the rules specifying
   the effects of actions.

Successor state axioms solution

   [edit]

   The value of a condition after the execution of an action can be
   determined by the fact that the condition is true if and only if:
    1. the action makes the condition true; or
    2. the condition was previously true and the action does not make it
       false.

   A successor state axiom is a formalization in logic of these two facts.
   For example, if
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> <mi
   mathvariant="normal">d</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">r</mi> </mrow> <mo
   stretchy="false">(</mo> <mi>t</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {opendoor}
   (t)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {opendoor} (t)} and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">c</mi> <mi mathvariant="normal">l</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">s</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">d</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">r</mi> </mrow> <mo stretchy="false">(</mo>
   <mi>t</mi> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {closedoor}
   (t)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {closedoor} (t)} are two conditions used to
   denote that the action executed at time
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>t</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle t}</annotation>
   </semantics> :MATH]
   {\displaystyle t} was to open or close the door, respectively, the
   running example is encoded as follows.

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>0</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \mathrm {open}
          (0)}</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {open} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo stretchy="false">(</mo> <mn>0</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \mathrm {on}
          (0)}</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {on} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> <mi mathvariant="normal">d</mi> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">r</mi> </mrow> <mo stretchy="false">(</mo>
          <mn>0</mn> <mo stretchy="false">)</mo> </mstyle> </mrow>
          <annotation encoding="application/x-tex">{\displaystyle \mathrm
          {opendoor} (0)}</annotation> </semantics> :MATH]
          {\displaystyle \mathrm {opendoor} (0)}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">∀</mi> <mi>t</mi> <mo>.</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>t</mi> <mo>+</mo> <mn>1</mn> <mo stretchy="false">)</mo>
          <mspace width="thickmathspace" /> <mo stretchy="false">⟺</mo>
          <mspace width="thickmathspace" /> <mrow class="MJX-TeXAtom-ORD">
          <mi mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi>
          <mi mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          <mi mathvariant="normal">d</mi> <mi mathvariant="normal">o</mi>
          <mi mathvariant="normal">o</mi> <mi mathvariant="normal">r</mi>
          </mrow> <mo stretchy="false">(</mo> <mi>t</mi> <mo
          stretchy="false">)</mo> <mo>∨</mo> <mo stretchy="false">(</mo>
          <mrow class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi>
          <mi mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi>
          <mi mathvariant="normal">n</mi> </mrow> <mo
          stretchy="false">(</mo> <mi>t</mi> <mo stretchy="false">)</mo>
          <mo>∧</mo> <mi mathvariant="normal">¬</mi> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">c</mi> <mi
          mathvariant="normal">l</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">s</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">d</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">r</mi>
          </mrow> <mo stretchy="false">(</mo> <mi>t</mi> <mo
          stretchy="false">)</mo> <mo stretchy="false">)</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          \forall t.\mathrm {open} (t+1)\iff \mathrm {opendoor} (t)\vee
          (\mathrm {open} (t)\wedge \neg \mathrm {closedoor}
          (t))}</annotation> </semantics> :MATH]
          {\displaystyle \forall t.\mathrm {open} (t+1)\iff \mathrm
          {opendoor} (t)\vee (\mathrm {open} (t)\wedge \neg \mathrm
          {closedoor} (t))}

   This solution is centered around the value of conditions, rather than
   the effects of actions. In other words, there is an axiom for every
   condition, rather than a formula for every action. Preconditions to
   actions (which are not present in this example) are formalized by other
   formulae. The successor state axioms are used in the variant to the
   situation calculus proposed by Ray Reiter.

Fluent calculus solution

   [edit]

   The fluent calculus is a variant of the situation calculus. It solves
   the frame problem by using first-order logic terms, rather than
   predicates, to represent the states. Converting predicates into terms
   in first-order logic is called reification; the fluent calculus can be
   seen as a logic in which predicates representing the state of
   conditions are reified.

   The difference between a predicate and a term in first-order logic is
   that a term is a representation of an object (possibly a complex object
   composed of other objects), while a predicate represents a condition
   that can be true or false when evaluated over a given set of terms.

   In the fluent calculus, each possible state is represented by a term
   obtained by composition of other terms, each one representing the
   conditions that are true in state. For example, the state in which the
   door is open and the light is on is represented by the term
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow>
   <mo>∘</mo> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> </mrow>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open} \circ
   \mathrm {on} }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} \circ \mathrm {on} } . It is important to
   notice that a term is not true or false by itself, as it is an object
   and not a condition. In other words, the term
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> </mrow>
   <mo>∘</mo> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> </mrow>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {open} \circ
   \mathrm {on} }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {open} \circ \mathrm {on} } represent a possible
   state, and does not by itself mean that this is the current state. A
   separate condition can be stated to specify that this is actually the
   state at a given time, e.g.,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">s</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">a</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">e</mi> </mrow> <mo stretchy="false">(</mo> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo>∘</mo> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo>,</mo> <mn>10</mn> <mo
   stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {state} (\mathrm
   {open} \circ \mathrm {on} ,10)}</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {state} (\mathrm {open} \circ \mathrm {on} ,10)}
   means that this is the state at time
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mn>10</mn> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle
   10}</annotation> </semantics> :MATH]
   {\displaystyle 10} .

   The solution to the frame problem given in the fluent calculus is to
   specify the effects of actions by stating how a term representing the
   state changes when the action is executed. For example, the action of
   opening the door at time 0 is represented by the formula:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">s</mi> <mi
          mathvariant="normal">t</mi> <mi mathvariant="normal">a</mi> <mi
          mathvariant="normal">t</mi> <mi mathvariant="normal">e</mi>
          </mrow> <mo stretchy="false">(</mo> <mi>s</mi> <mo>∘</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> <mo>,</mo> <mn>1</mn> <mo
          stretchy="false">)</mo> <mspace width="thickmathspace" /> <mo
          stretchy="false">⟺</mo> <mspace width="thickmathspace" /> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">s</mi> <mi
          mathvariant="normal">t</mi> <mi mathvariant="normal">a</mi> <mi
          mathvariant="normal">t</mi> <mi mathvariant="normal">e</mi>
          </mrow> <mo stretchy="false">(</mo> <mi>s</mi> <mo>,</mo>
          <mn>0</mn> <mo stretchy="false">)</mo> </mstyle> </mrow>
          <annotation encoding="application/x-tex">{\displaystyle \mathrm
          {state} (s\circ \mathrm {open} ,1)\iff \mathrm {state}
          (s,0)}</annotation> </semantics> :MATH]
          {\displaystyle \mathrm {state} (s\circ \mathrm {open} ,1)\iff
          \mathrm {state} (s,0)}

   The action of closing the door, which makes a condition false instead
   of true, is represented in a slightly different way:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">s</mi> <mi
          mathvariant="normal">t</mi> <mi mathvariant="normal">a</mi> <mi
          mathvariant="normal">t</mi> <mi mathvariant="normal">e</mi>
          </mrow> <mo stretchy="false">(</mo> <mi>s</mi> <mo>,</mo>
          <mn>1</mn> <mo stretchy="false">)</mo> <mspace
          width="thickmathspace" /> <mo stretchy="false">⟺</mo> <mspace
          width="thickmathspace" /> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">s</mi> <mi mathvariant="normal">t</mi> <mi
          mathvariant="normal">a</mi> <mi mathvariant="normal">t</mi> <mi
          mathvariant="normal">e</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>s</mi> <mo>∘</mo> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi>
          </mrow> <mo>,</mo> <mn>0</mn> <mo stretchy="false">)</mo>
          </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \mathrm {state}
          (s,1)\iff \mathrm {state} (s\circ \mathrm {open}
          ,0)}</annotation> </semantics> :MATH]
          {\displaystyle \mathrm {state} (s,1)\iff \mathrm {state} (s\circ
          \mathrm {open} ,0)}

   This formula works provided that suitable axioms are given about
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">s</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">a</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">e</mi> </mrow> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {state}
   }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {state} } and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∘</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \circ
   }</annotation> </semantics> :MATH]
   {\displaystyle \circ } , e.g., a term containing the same condition
   twice is not a valid state (for example,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">s</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">a</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">e</mi> </mrow> <mo stretchy="false">(</mo> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo>∘</mo> <mi>s</mi> <mo>∘</mo>
   <mrow class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo>,</mo> <mi>t</mi> <mo
   stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {state} (\mathrm
   {open} \circ s\circ \mathrm {open} ,t)}</annotation> </semantics>
   :MATH]
   {\displaystyle \mathrm {state} (\mathrm {open} \circ s\circ \mathrm
   {open} ,t)} is always false for every
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>s</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle s}</annotation>
   </semantics> :MATH]
   {\displaystyle s} and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>t</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle t}</annotation>
   </semantics> :MATH]
   {\displaystyle t} ).

Event calculus solution

   [edit]

   The event calculus uses terms for representing fluents, like the fluent
   calculus, but also has one or more axioms constraining the value of
   fluents, like the successor state axioms. There are many variants of
   the event calculus, but one of the simplest and most useful employs a
   single axiom to represent the law of inertia:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD"> <mi
          class="MJX-tex-mathit" mathvariant="italic">h</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">o</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">l</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">d</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">A</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> </mrow>
          </mrow> <mo stretchy="false">(</mo> <mi>F</mi> <mo>,</mo>
          <mi>T</mi> <mn>2</mn> <mo stretchy="false">)</mo> <mo
          stretchy="false">←</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle {\mathit
          {holdsAt}}(F,T2)\leftarrow }</annotation> </semantics> :MATH]
          {\displaystyle {\mathit {holdsAt}}(F,T2)\leftarrow }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mo stretchy="false">[</mo>
          <mrow class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD">
          <mi class="MJX-tex-mathit" mathvariant="italic">h</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">a</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">p</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">p</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">n</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">A</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> </mrow>
          </mrow> <mo stretchy="false">(</mo> <mi>E</mi> <mn>1</mn>
          <mo>,</mo> <mi>T</mi> <mn>1</mn> <mo stretchy="false">)</mo>
          <mo>∧</mo> <mrow class="MJX-TeXAtom-ORD"> <mrow
          class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-mathit"
          mathvariant="italic">i</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">n</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">i</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">t</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">i</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">a</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">t</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">e</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">s</mi> </mrow> </mrow> <mo
          stretchy="false">(</mo> <mi>E</mi> <mn>1</mn> <mo>,</mo>
          <mi>F</mi> <mo>,</mo> <mi>T</mi> <mn>1</mn> <mo
          stretchy="false">)</mo> <mo>∧</mo> <mo stretchy="false">(</mo>
          <mi>T</mi> <mn>1</mn> <mo><</mo> <mi>T</mi> <mn>2</mn> <mo
          stretchy="false">)</mo> <mo>∧</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle [{\mathit
          {happensAt}}(E1,T1)\wedge {\mathit {initiates}}(E1,F,T1)\wedge
          (T1<T2)\wedge }</annotation> </semantics> :MATH]
          {\displaystyle [{\mathit {happensAt}}(E1,T1)\wedge {\mathit
          {initiates}}(E1,F,T1)\wedge (T1<T2)\wedge }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mi mathvariant="normal">∃</mi>
          <mi>E</mi> <mn>2</mn> <mo>,</mo> <mi>T</mi> <mo
          stretchy="false">[</mo> <mrow class="MJX-TeXAtom-ORD"> <mrow
          class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-mathit"
          mathvariant="italic">h</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">a</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">p</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">p</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">e</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">n</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">s</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">A</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">t</mi> </mrow> </mrow> <mo
          stretchy="false">(</mo> <mi>E</mi> <mn>2</mn> <mo>,</mo>
          <mi>T</mi> <mo stretchy="false">)</mo> <mo>∧</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD"> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">r</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">m</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">i</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">n</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">a</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> </mrow>
          </mrow> <mo stretchy="false">(</mo> <mi>E</mi> <mn>2</mn>
          <mo>,</mo> <mi>F</mi> <mo>,</mo> <mi>T</mi> <mo
          stretchy="false">)</mo> <mo>∧</mo> <mo stretchy="false">(</mo>
          <mi>T</mi> <mn>1</mn> <mo>≤</mo> <mi>T</mi> <mo><</mo>
          <mi>T</mi> <mn>2</mn> <mo stretchy="false">)</mo> <mo
          stretchy="false">]</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \exists
          E2,T[{\mathit {happensAt}}(E2,T)\wedge {\mathit
          {terminates}}(E2,F,T)\wedge (T1\leq T<T2)]}</annotation>
          </semantics> :MATH]
          {\displaystyle \neg \exists E2,T[{\mathit
          {happensAt}}(E2,T)\wedge {\mathit {terminates}}(E2,F,T)\wedge
          (T1\leq T<T2)]}

   The axiom states that a fluent
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>F</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle F}</annotation>
   </semantics> :MATH]
   {\displaystyle F} holds at a time
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>T</mi> <mn>2</mn> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   T2}</annotation> </semantics> :MATH]
   {\displaystyle T2} , if an event
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>E</mi> <mn>1</mn> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   E1}</annotation> </semantics> :MATH]
   {\displaystyle E1} happens and initiates
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>F</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle F}</annotation>
   </semantics> :MATH]
   {\displaystyle F} at an earlier time
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>T</mi> <mn>1</mn> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   T1}</annotation> </semantics> :MATH]
   {\displaystyle T1} , and there is no event
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>E</mi> <mn>2</mn> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   E2}</annotation> </semantics> :MATH]
   {\displaystyle E2} that happens and terminates
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>F</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle F}</annotation>
   </semantics> :MATH]
   {\displaystyle F} after or at the same time as
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>T</mi> <mn>1</mn> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   T1}</annotation> </semantics> :MATH]
   {\displaystyle T1} and before
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>T</mi> <mn>2</mn> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   T2}</annotation> </semantics> :MATH]
   {\displaystyle T2} .

   To apply the event calculus to a particular problem domain, it is
   necessary to define the
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>i</mi> <mi>n</mi> <mi>i</mi>
   <mi>t</mi> <mi>i</mi> <mi>a</mi> <mi>t</mi> <mi>e</mi> <mi>s</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle initiates}</annotation>
   </semantics> :MATH]
   {\displaystyle initiates} and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>t</mi> <mi>e</mi> <mi>r</mi>
   <mi>m</mi> <mi>i</mi> <mi>n</mi> <mi>a</mi> <mi>t</mi> <mi>e</mi>
   <mi>s</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle terminates}</annotation>
   </semantics> :MATH]
   {\displaystyle terminates} predicates for that domain. For example:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD"> <mi
          class="MJX-tex-mathit" mathvariant="italic">i</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">n</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">i</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">i</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">a</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> </mrow>
          </mrow> <mo stretchy="false">(</mo> <mi>o</mi> <mi>p</mi>
          <mi>e</mi> <mi>n</mi> <mi>d</mi> <mi>o</mi> <mi>o</mi>
          <mi>r</mi> <mo>,</mo> <mi>o</mi> <mi>p</mi> <mi>e</mi>
          <mi>n</mi> <mo>,</mo> <mi>T</mi> <mo stretchy="false">)</mo>
          <mo>.</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle {\mathit
          {initiates}}(opendoor,open,T).}</annotation> </semantics> :MATH]
          {\displaystyle {\mathit {initiates}}(opendoor,open,T).}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD"> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">r</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">m</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">i</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">n</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">a</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> </mrow>
          </mrow> <mo stretchy="false">(</mo> <mi>o</mi> <mi>p</mi>
          <mi>e</mi> <mi>n</mi> <mi>d</mi> <mi>o</mi> <mi>o</mi>
          <mi>r</mi> <mo>,</mo> <mi>c</mi> <mi>l</mi> <mi>o</mi>
          <mi>s</mi> <mi>e</mi> <mi>d</mi> <mo>,</mo> <mi>T</mi> <mo
          stretchy="false">)</mo> <mo>.</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle {\mathit
          {terminates}}(opendoor,closed,T).}</annotation> </semantics>
          :MATH]
          {\displaystyle {\mathit {terminates}}(opendoor,closed,T).}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD"> <mi
          class="MJX-tex-mathit" mathvariant="italic">i</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">n</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">i</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">i</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">a</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> </mrow>
          </mrow> <mo stretchy="false">(</mo> <mi>c</mi> <mi>l</mi>
          <mi>o</mi> <mi>s</mi> <mi>e</mi> <mi>d</mi> <mi>o</mi>
          <mi>o</mi> <mi>r</mi> <mo>,</mo> <mi>c</mi> <mi>l</mi>
          <mi>o</mi> <mi>s</mi> <mi>e</mi> <mi>d</mi> <mo>,</mo>
          <mi>T</mi> <mo stretchy="false">)</mo> <mo>.</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          {\mathit {initiates}}(closedoor,closed,T).}</annotation>
          </semantics> :MATH]
          {\displaystyle {\mathit {initiates}}(closedoor,closed,T).}
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD"> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">r</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">m</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">i</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">n</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">a</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> </mrow>
          </mrow> <mo stretchy="false">(</mo> <mi>c</mi> <mi>l</mi>
          <mi>o</mi> <mi>s</mi> <mi>e</mi> <mi>d</mi> <mi>d</mi>
          <mi>o</mi> <mi>o</mi> <mi>r</mi> <mo>,</mo> <mi>o</mi>
          <mi>p</mi> <mi>e</mi> <mi>n</mi> <mo>,</mo> <mi>T</mi> <mo
          stretchy="false">)</mo> <mo>.</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle {\mathit
          {terminates}}(closeddoor,open,T).}</annotation> </semantics>
          :MATH]
          {\displaystyle {\mathit {terminates}}(closeddoor,open,T).}

   To apply the event calculus to a particular problem in the domain, it
   is necessary to specify the events that happen in the context of the
   problem. For example:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD"> <mi
          class="MJX-tex-mathit" mathvariant="italic">h</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">a</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">p</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">p</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">n</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">A</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> </mrow>
          </mrow> <mo stretchy="false">(</mo> <mi>o</mi> <mi>p</mi>
          <mi>e</mi> <mi>n</mi> <mi>d</mi> <mi>o</mi> <mi>o</mi>
          <mi>r</mi> <mo>,</mo> <mn>0</mn> <mo stretchy="false">)</mo>
          </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle {\mathit
          {happensAt}}(opendoor,0)}</annotation> </semantics> :MATH]
          {\displaystyle {\mathit {happensAt}}(opendoor,0)} .
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD"> <mi
          class="MJX-tex-mathit" mathvariant="italic">h</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">a</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">p</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">p</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">e</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">n</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">A</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> </mrow>
          </mrow> <mo stretchy="false">(</mo> <mi>c</mi> <mi>l</mi>
          <mi>o</mi> <mi>s</mi> <mi>e</mi> <mi>d</mi> <mi>o</mi>
          <mi>o</mi> <mi>r</mi> <mo>,</mo> <mn>3</mn> <mo
          stretchy="false">)</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle {\mathit
          {happensAt}}(closedoor,3)}</annotation> </semantics> :MATH]
          {\displaystyle {\mathit {happensAt}}(closedoor,3)} .

   To solve a problem, such as which fluents hold at time 5?, it is
   necessary to pose the problem as a goal, such as:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">∃</mi> <mi>F</mi> <mi>l</mi> <mi>u</mi>
          <mi>e</mi> <mi>n</mi> <mi>t</mi> <mo stretchy="false">[</mo>
          <mrow class="MJX-TeXAtom-ORD"> <mrow class="MJX-TeXAtom-ORD">
          <mi class="MJX-tex-mathit" mathvariant="italic">h</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">o</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">l</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">d</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">s</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">A</mi> <mi
          class="MJX-tex-mathit" mathvariant="italic">t</mi> <mo
          class="MJX-tex-mathit" mathvariant="italic"
          stretchy="false">(</mo> <mi class="MJX-tex-mathit"
          mathvariant="italic">F</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">l</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">u</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">e</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">n</mi> <mi class="MJX-tex-mathit"
          mathvariant="italic">t</mi> <mo class="MJX-tex-mathit"
          mathvariant="italic">,</mo> <mn class="MJX-tex-mathit"
          mathvariant="italic">5</mn> <mo class="MJX-tex-mathit"
          mathvariant="italic" stretchy="false">)</mo> </mrow> </mrow> <mo
          stretchy="false">]</mo> <mo>.</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \exists
          Fluent[{\mathit {holdsAt(Fluent,5)}}].}</annotation>
          </semantics> :MATH]
          {\displaystyle \exists Fluent[{\mathit {holdsAt(Fluent,5)}}].}

   In this case, obtaining the unique solution:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>F</mi> <mi>l</mi>
          <mi>u</mi> <mi>e</mi> <mi>n</mi> <mi>t</mi> <mo>=</mo>
          <mi>c</mi> <mi>l</mi> <mi>o</mi> <mi>s</mi> <mi>e</mi>
          <mi>d</mi> <mo>.</mo> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle
          Fluent=closed.}</annotation> </semantics> :MATH]
          {\displaystyle Fluent=closed.}

   The event calculus solves the frame problem, eliminating undesired
   solutions, by using a non-monotonic logic, such as first-order logic
   with circumscription^[3] or by treating the event calculus as a logic
   program using negation as failure.

Default logic solution

   [edit]

   The frame problem can be thought of as the problem of formalizing the
   principle that, by default, "everything is presumed to remain in the
   state in which it is" (Leibniz, "An Introduction to a Secret
   Encyclopædia", c. 1679). This default, sometimes called the commonsense
   law of inertia, was expressed by Raymond Reiter in default logic:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mfrac> <mrow> <mi>R</mi> <mo
          stretchy="false">(</mo> <mi>x</mi> <mo>,</mo> <mi>s</mi> <mo
          stretchy="false">)</mo> <mspace width="thickmathspace" />
          <mo>:</mo> <mtext> </mtext> <mi>R</mi> <mo
          stretchy="false">(</mo> <mi>x</mi> <mo>,</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">d</mi> <mi
          mathvariant="normal">o</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>a</mi> <mo>,</mo> <mi>s</mi> <mo stretchy="false">)</mo> <mo
          stretchy="false">)</mo> </mrow> <mrow> <mi>R</mi> <mo
          stretchy="false">(</mo> <mi>x</mi> <mo>,</mo> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">d</mi> <mi
          mathvariant="normal">o</mi> </mrow> <mo stretchy="false">(</mo>
          <mi>a</mi> <mo>,</mo> <mi>s</mi> <mo stretchy="false">)</mo> <mo
          stretchy="false">)</mo> </mrow> </mfrac> </mrow> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          {\frac {R(x,s)\;:\ R(x,\mathrm {do} (a,s))}{R(x,\mathrm {do}
          (a,s))}}}</annotation> </semantics> :MATH]
          {\displaystyle {\frac {R(x,s)\;:\ R(x,\mathrm {do}
          (a,s))}{R(x,\mathrm {do} (a,s))}}}

   (if
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>R</mi> <mo
   stretchy="false">(</mo> <mi>x</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle R(x)}</annotation>
   </semantics> :MATH]
   {\displaystyle R(x)} is true in situation
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>s</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle s}</annotation>
   </semantics> :MATH]
   {\displaystyle s} , and it can be assumed^[4] that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>R</mi> <mo
   stretchy="false">(</mo> <mi>x</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle R(x)}</annotation>
   </semantics> :MATH]
   {\displaystyle R(x)} remains true after executing action
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>a</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle a}</annotation>
   </semantics> :MATH]
   {\displaystyle a} , then we can conclude that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>R</mi> <mo
   stretchy="false">(</mo> <mi>x</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle R(x)}</annotation>
   </semantics> :MATH]
   {\displaystyle R(x)} remains true).

   Steve Hanks and Drew McDermott argued, on the basis of their Yale
   shooting example, that this solution to the frame problem is
   unsatisfactory. Hudson Turner showed, however, that it works correctly
   in the presence of appropriate additional postulates.

Answer set programming solution

   [edit]

   The counterpart of the default logic solution in the language of answer
   set programming is a rule with strong negation:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>r</mi> <mo
          stretchy="false">(</mo> <mi>X</mi> <mo>,</mo> <mi>T</mi>
          <mo>+</mo> <mn>1</mn> <mo stretchy="false">)</mo> <mo
          stretchy="false">←</mo> <mi>r</mi> <mo stretchy="false">(</mo>
          <mi>X</mi> <mo>,</mo> <mi>T</mi> <mo stretchy="false">)</mo>
          <mo>,</mo> <mtext> </mtext> <mrow class="MJX-TeXAtom-ORD">
          <mstyle displaystyle="false" scriptlevel="0">
          <mtext>not </mtext> </mstyle> </mrow> <mo>∼</mo> <mi>r</mi> <mo
          stretchy="false">(</mo> <mi>X</mi> <mo>,</mo> <mi>T</mi>
          <mo>+</mo> <mn>1</mn> <mo stretchy="false">)</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          r(X,T+1)\leftarrow r(X,T),\ {\hbox{not }}\sim
          r(X,T+1)}</annotation> </semantics> :MATH]
          {\displaystyle r(X,T+1)\leftarrow r(X,T),\ {\hbox{not }}\sim
          r(X,T+1)}

   (if
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>r</mi> <mo
   stretchy="false">(</mo> <mi>X</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle r(X)}</annotation>
   </semantics> :MATH]
   {\displaystyle r(X)} is true at time
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>T</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle T}</annotation>
   </semantics> :MATH]
   {\displaystyle T} , and it can be assumed that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>r</mi> <mo
   stretchy="false">(</mo> <mi>X</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle r(X)}</annotation>
   </semantics> :MATH]
   {\displaystyle r(X)} remains true at time
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>T</mi> <mo>+</mo> <mn>1</mn>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle T+1}</annotation>
   </semantics> :MATH]
   {\displaystyle T+1} , then we can conclude that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>r</mi> <mo
   stretchy="false">(</mo> <mi>X</mi> <mo stretchy="false">)</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle r(X)}</annotation>
   </semantics> :MATH]
   {\displaystyle r(X)} remains true).

Separation logic solution

   [edit]

   Separation logic is a formalism for reasoning about computer programs
   using pre/post specifications of the form
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo fence="false"
   stretchy="false">{</mo> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">r</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> <mi
   mathvariant="normal">d</mi> <mi mathvariant="normal">i</mi> <mi
   mathvariant="normal">t</mi> <mi mathvariant="normal">i</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> </mrow> <mo
   fence="false" stretchy="false">}</mo> <mtext> </mtext> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">d</mi> <mi
   mathvariant="normal">e</mi> </mrow> <mtext> </mtext> <mo fence="false"
   stretchy="false">{</mo> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">s</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">c</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">n</mi> <mi mathvariant="normal">d</mi> <mi
   mathvariant="normal">i</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">i</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo fence="false"
   stretchy="false">}</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \{\mathrm {precondition}
   \}\ \mathrm {code} \ \{\mathrm {postcondition} \}}</annotation>
   </semantics> :MATH]
   {\displaystyle \{\mathrm {precondition} \}\ \mathrm {code} \ \{\mathrm
   {postcondition} \}} . Separation logic is an extension of Hoare logic
   oriented to reasoning about mutable data structures in computer memory
   and other dynamic resources, and it has a special connective *,
   pronounced "and separately", to support independent reasoning about
   disjoint memory regions.^[5]^[6]

   Separation logic employs a tight interpretation of pre/post specs,
   which say that the code can only access memory locations guaranteed to
   exist by the precondition.^[7] This leads to the soundness of the most
   important inference rule of the logic, the frame rule

   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mfrac> <mrow> <mo fence="false" stretchy="false">{</mo> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">r</mi> <mi mathvariant="normal">e</mi> <mi
   mathvariant="normal">c</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">n</mi> <mi mathvariant="normal">d</mi> <mi
   mathvariant="normal">i</mi> <mi mathvariant="normal">t</mi> <mi
   mathvariant="normal">i</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">n</mi> </mrow> <mo fence="false"
   stretchy="false">}</mo> <mtext> </mtext> <mrow class="MJX-TeXAtom-ORD">
   <mi mathvariant="normal">c</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">d</mi> <mi mathvariant="normal">e</mi> </mrow>
   <mtext> </mtext> <mo fence="false" stretchy="false">{</mo> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">s</mi> <mi
   mathvariant="normal">t</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> <mi
   mathvariant="normal">d</mi> <mi mathvariant="normal">i</mi> <mi
   mathvariant="normal">t</mi> <mi mathvariant="normal">i</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> </mrow> <mo
   fence="false" stretchy="false">}</mo> </mrow> <mrow> <mo fence="false"
   stretchy="false">{</mo> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">p</mi> <mi mathvariant="normal">r</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> <mi
   mathvariant="normal">d</mi> <mi mathvariant="normal">i</mi> <mi
   mathvariant="normal">t</mi> <mi mathvariant="normal">i</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> </mrow>
   <mo>∗</mo> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">f</mi> <mi mathvariant="normal">r</mi> <mi
   mathvariant="normal">a</mi> <mi mathvariant="normal">m</mi> <mi
   mathvariant="normal">e</mi> </mrow> <mo fence="false"
   stretchy="false">}</mo> <mtext> </mtext> <mrow class="MJX-TeXAtom-ORD">
   <mi mathvariant="normal">c</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">d</mi> <mi mathvariant="normal">e</mi> </mrow>
   <mtext> </mtext> <mo fence="false" stretchy="false">{</mo> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">s</mi> <mi
   mathvariant="normal">t</mi> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> <mi
   mathvariant="normal">d</mi> <mi mathvariant="normal">i</mi> <mi
   mathvariant="normal">t</mi> <mi mathvariant="normal">i</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">n</mi> </mrow>
   <mo>∗</mo> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">f</mi> <mi mathvariant="normal">r</mi> <mi
   mathvariant="normal">a</mi> <mi mathvariant="normal">m</mi> <mi
   mathvariant="normal">e</mi> </mrow> <mo fence="false"
   stretchy="false">}</mo> </mrow> </mfrac> </mrow> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle {\frac
   {\{\mathrm {precondition} \}\ \mathrm {code} \ \{\mathrm
   {postcondition} \}}{\{\mathrm {precondition} \ast \mathrm {frame} \}\
   \mathrm {code} \ \{\mathrm {postcondition} \ast \mathrm {frame}
   \}}}}</annotation> </semantics> :MATH]
   {\displaystyle {\frac {\{\mathrm {precondition} \}\ \mathrm {code} \
   \{\mathrm {postcondition} \}}{\{\mathrm {precondition} \ast \mathrm
   {frame} \}\ \mathrm {code} \ \{\mathrm {postcondition} \ast \mathrm
   {frame} \}}}}

   The frame rule allows descriptions of arbitrary memory outside the
   footprint (memory accessed) of the code to be added to a specification:
   this enables the initial specification to concentrate only on the
   footprint. For example, the inference

   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mfrac> <mrow> <mo fence="false" stretchy="false">{</mo> <mi>list</mi>
   <mo>⁡</mo> <mo stretchy="false">(</mo> <mi>x</mi> <mo
   stretchy="false">)</mo> <mo fence="false" stretchy="false">}</mo>
   <mtext> </mtext> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">c</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">d</mi> <mi mathvariant="normal">e</mi> </mrow>
   <mtext> </mtext> <mo fence="false" stretchy="false">{</mo>
   <mi>sortedlist</mi> <mo>⁡</mo> <mo stretchy="false">(</mo> <mi>x</mi>
   <mo stretchy="false">)</mo> <mo fence="false" stretchy="false">}</mo>
   </mrow> <mrow> <mo fence="false" stretchy="false">{</mo> <mi>list</mi>
   <mo>⁡</mo> <mo stretchy="false">(</mo> <mi>x</mi> <mo
   stretchy="false">)</mo> <mo>∗</mo> <mi>sortedlist</mi> <mo>⁡</mo> <mo
   stretchy="false">(</mo> <mi>y</mi> <mo stretchy="false">)</mo> <mo
   fence="false" stretchy="false">}</mo> <mtext> </mtext> <mrow
   class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">c</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">d</mi> <mi
   mathvariant="normal">e</mi> </mrow> <mtext> </mtext> <mo fence="false"
   stretchy="false">{</mo> <mi>sortedlist</mi> <mo>⁡</mo> <mo
   stretchy="false">(</mo> <mi>x</mi> <mo stretchy="false">)</mo>
   <mo>∗</mo> <mi>sortedlist</mi> <mo>⁡</mo> <mo stretchy="false">(</mo>
   <mi>y</mi> <mo stretchy="false">)</mo> <mo fence="false"
   stretchy="false">}</mo> </mrow> </mfrac> </mrow> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle {\frac
   {\{\operatorname {list} (x)\}\ \mathrm {code} \ \{\operatorname
   {sortedlist} (x)\}}{\{\operatorname {list} (x)\ast \operatorname
   {sortedlist} (y)\}\ \mathrm {code} \ \{\operatorname {sortedlist}
   (x)\ast \operatorname {sortedlist} (y)\}}}}</annotation> </semantics>
   :MATH]
   {\displaystyle {\frac {\{\operatorname {list} (x)\}\ \mathrm {code} \
   \{\operatorname {sortedlist} (x)\}}{\{\operatorname {list} (x)\ast
   \operatorname {sortedlist} (y)\}\ \mathrm {code} \ \{\operatorname
   {sortedlist} (x)\ast \operatorname {sortedlist} (y)\}}}}

   captures that code which sorts a list x does not unsort a separate list
   y, and it does this without mentioning y at all in the initial spec
   above the line.

   Automation of the frame rule has led to significant increases in the
   scalability of automated reasoning techniques for code,^[8] eventually
   deployed industrially to codebases with tens of millions of lines.^[9]

   There appears to be some similarity between the separation logic
   solution to the frame problem and that of the fluent calculus mentioned
   above.^[further explanation needed]

Action description languages

   [edit]

   Action description languages elude the frame problem rather than
   solving it. An action description language is a formal language with a
   syntax that is specific for describing situations and actions. For
   example, that the action
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD"> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">p</mi> <mi
   mathvariant="normal">e</mi> <mi mathvariant="normal">n</mi> <mi
   mathvariant="normal">d</mi> <mi mathvariant="normal">o</mi> <mi
   mathvariant="normal">o</mi> <mi mathvariant="normal">r</mi> </mrow>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \mathrm {opendoor}
   }</annotation> </semantics> :MATH]
   {\displaystyle \mathrm {opendoor} } makes the door open if not locked
   is expressed by:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> <mi mathvariant="normal">d</mi> <mi
          mathvariant="normal">o</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">r</mi> </mrow> </mstyle> </mrow>
          <annotation encoding="application/x-tex">{\displaystyle \mathrm
          {opendoor} }</annotation> </semantics> :MATH]
          {\displaystyle \mathrm {opendoor} } causes
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mrow
          class="MJX-TeXAtom-ORD"> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">p</mi> <mi mathvariant="normal">e</mi> <mi
          mathvariant="normal">n</mi> </mrow> </mstyle> </mrow>
          <annotation encoding="application/x-tex">{\displaystyle \mathrm
          {open} }</annotation> </semantics> :MATH]
          {\displaystyle \mathrm {open} } if
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">¬</mi> <mrow class="MJX-TeXAtom-ORD"> <mi
          mathvariant="normal">l</mi> <mi mathvariant="normal">o</mi> <mi
          mathvariant="normal">c</mi> <mi mathvariant="normal">k</mi> <mi
          mathvariant="normal">e</mi> <mi mathvariant="normal">d</mi>
          </mrow> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \neg \mathrm
          {locked} }</annotation> </semantics> :MATH]
          {\displaystyle \neg \mathrm {locked} }

   The semantics of an action description language depends on what the
   language can express (concurrent actions, delayed effects, etc.) and is
   usually based on transition systems.

   Since domains are expressed in these languages rather than directly in
   logic, the frame problem only arises when a specification given in an
   action description logic is to be translated into logic. Typically,
   however, a translation is given from these languages to answer set
   programming rather than first-order logic.

See also

   [edit]
     * Binding problem
     * Common sense
     * Commonsense reasoning
     * Defeasible reasoning
     * Linear logic
     * Separation logic
     * Non-monotonic logic
     * Qualification problem
     * Ramification problem
     * Symbol grounding
     * Yale shooting problem

Notes

   [edit]
    1. ^ Hayes, Patrick (1973). "The Frame Problem and Related Problems in
       Artificial Intelligence". University of Edinburgh.
    2. ^ McCarthy, J; P.J. Hayes (1969). "Some philosophical problems from
       the standpoint of artificial intelligence". Machine Intelligence.
       4: 463–502. CiteSeerX 10.1.1.85.5082.
    3. ^ Shanahan, M. (1997) Solving the frame problem: A mathematical
       investigation of the common sense law of inertia. MIT Press.
    4. ^ i.e., no contradicting information is known
    5. ^ Reynolds, J.C. (2002). "Separation logic: A logic for shared
       mutable data structures". Proceedings 17th Annual IEEE Symposium on
       Logic in Computer Science. Copenhagen, Denmark: IEEE Comput. Soc.
       pp. 55–74. CiteSeerX 10.1.1.110.7749.
       doi:10.1109/LICS.2002.1029817. ISBN 978-0-7695-1483-3.
       S2CID 6271346.
    6. ^ O'Hearn, Peter (2019-01-28). "Separation logic". Communications
       of the ACM. 62 (2): 86–95. doi:10.1145/3211968. ISSN 0001-0782.
    7. ^ O’Hearn, Peter; Reynolds, John; Yang, Hongseok (2001). "Local
       Reasoning about Programs that Alter Data Structures". In Fribourg,
       Laurent (ed.). Computer Science Logic. Lecture Notes in Computer
       Science. Vol. 2142. Berlin, Heidelberg: Springer. pp. 1–19.
       doi:10.1007/3-540-44802-0_1. ISBN 978-3-540-44802-0.
    8. ^ Calcagno Cristiano; Dino Distefano; Peter O'Hearn; Hongseok Yang
       (2011-12-01). "Compositional Shape Analysis by Means of
       Bi-Abduction". Journal of the ACM. 58 (6): 1–66.
       doi:10.1145/2049697.2049700. S2CID 52808268.
    9. ^ Distefano, Dino; Fähndrich, Manuel; Logozzo, Francesco; O'Hearn,
       Peter (2019-07-24). "Scaling static analyses at Facebook".
       Communications of the ACM. 62 (8): 62–70. doi:10.1145/3338112.

References

   [edit]
     *

   Doherty, P.; Gustafsson, J.; Karlsson, L.; Kvarnström, J. (1998). "TAL:
   Temporal action logics language specification and tutorial". Electronic
   Transactions on Artificial Intelligence. 2 (3–4): 273–306.

     Gelfond, M.; Lifschitz, V. (1993). "Representing action and change by
   logic programs". Journal of Logic Programming. 17 (2–4): 301–322.
   doi:10.1016/0743-1066(93)90035-f.



   Gelfond, M.; Lifschitz, V. (1998). "Action languages". Electronic
   Transactions on Artificial Intelligence. 2 (3–4): 193–210.

     Hanks, S.; McDermott, D. (1987). "Nonmonotonic logic and temporal
   projection". Artificial Intelligence. 33 (3): 379–412.
   doi:10.1016/0004-3702(87)90043-9.

     Levesque, H.; Pirri, F.; Reiter, R. (1998). "Foundations for the
   situation calculus". Electronic Transactions on Artificial
   Intelligence. 2 (3–4): 159–178.

     Liberatore, P. (1997). "The complexity of the language A". Electronic
   Transactions on Artificial Intelligence. 1 (1–3): 13–37.

     Lifschitz, V. (2012). "The frame problem, then and now" (PDF).
   University of Texas at Austin. Archived (PDF) from the original on
   2014-02-11. Presented at Celebration of John McCarthy's
   Accomplishments, Stanford University, March 25, 2012.

     McCarthy, J.; Hayes, P. J. (1969). "Some philosophical problems from
   the standpoint of artificial intelligence". Machine Intelligence. 4:
   463–502. CiteSeerX 10.1.1.85.5082.

     McCarthy, J. (1986). "Applications of circumscription to formalizing
   common-sense knowledge". Artificial Intelligence. 28: 89–116.
   CiteSeerX 10.1.1.29.5268. doi:10.1016/0004-3702(86)90032-9.

     Miller, R.; Shanahan, M. (1999). "The event-calculus in classical
   logic - alternative axiomatizations". Electronic Transactions on
   Artificial Intelligence. 3 (1): 77–105.

     Pirri, F.; Reiter, R. (1999). "Some contributions to the metatheory
   of the Situation Calculus". Journal of the ACM. 46 (3): 325–361.
   doi:10.1145/316542.316545. S2CID 16203802.

     Reiter, R. (1980). "A logic for default reasoning" (PDF). Artificial
   Intelligence. 13 (1–2): 81–132. CiteSeerX 10.1.1.250.9224.
   doi:10.1016/0004-3702(80)90014-4.

     Reiter, R. (1991). "The frame problem in the situation calculus: a
   simple solution (sometimes) and a completeness result for goal
   regression". In Lifschitz, Vladimir (ed.). Artificial Intelligence and
   Mathematical Theory of Computation: Papers in Honor of John McCarthy.
   New York: Academic Press. pp. 359–380. CiteSeerX 10.1.1.137.2995.

     Sandewall, E. (1972). "An approach to the Frame Problem and its
   Implementation". Machine Intelligence. 7: 195–204.

     Sandewall, E. (1994). Features and Fluents. Vol. (vol. 1). New York:
   Oxford University Press. ISBN 978-0-19-853845-5.

     Sandewall, E.; Shoham, Y. (1995). "Non-monotonic Temporal Reasoning".
   In Gabbay, D. M.; Hogger, C. J.; Robinson, J. A. (eds.). Handbook of
   Logic in Artificial Intelligence and Logic Programming. Vol. (vol. 4).
   Oxford University Press. pp. 439–498. ISBN 978-0-19-853791-5.

     Sandewall, E. (1998). "Cognitive robotics logic and its metatheory:
   Features and fluents revisited". Electronic Transactions on Artificial
   Intelligence. 2 (3–4): 307–329.

     Shanahan, M. (1997). Solving the frame problem: A mathematical
   investigation of the common sense law of inertia. MIT Press.
   ISBN 9780262193849.

     Thielscher, M. (1998). "Introduction to the fluent calculus".
   Electronic Transactions on Artificial Intelligence. 2 (3–4): 179–192.

     Toth, J.A. (1995). "Book review. Kenneth M. and Patrick J. Hayes,
   eds". Reasoning Agents in a Dynamic World: The Frame Problem.
   Artificial Intelligence. 73 (1–2): 323–369.
   doi:10.1016/0004-3702(95)90043-8.

     Turner, H. (1997). "Representing actions in logic programs and
   default theories: a situation calculus approach" (PDF). Journal of
   Logic Programming. 31 (1–3): 245–298.
   doi:10.1016/s0743-1066(96)00125-2.

External links

   [edit]

     *

   Zalta, Edward N. (ed.). "The Frame Problem". Stanford Encyclopedia of
   Philosophy.

     Some Philosophical Problems from the Standpoint of Artificial
   Intelligence; the original article of McCarthy and Hayes that proposed
   the problem.

     * v
     * t
     * e

   John McCarthy

     * Artificial intelligence
     * Circumscription
     * Dartmouth workshop
     * Frame problem
     * Garbage collection
     * Lisp
     * ALGOL 60
     * McCarthy evaluation
     * McCarthy Formalism
     * McCarthy 91 function
     * Situation calculus
     * Space fountain

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Frame_problem&oldid=1255949
   434"

   Categories:
     * Problems in artificial intelligence
     * Knowledge representation
     * Concepts in epistemology
     * Logic programming
     * Philosophical problems
     * 1969 introductions

   Hidden categories:
     * Articles with short description
     * Short description is different from Wikidata
     * Wikipedia articles needing clarification from August 2013
     * Wikipedia articles needing clarification from May 2022
     * CS1: long volume value

     * This page was last edited on 7 November 2024, at 12:20 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   #RDF+XML OpenURL ContextObject MPEG-21 DIDL JSON-LD METS OpenURL
   ContextObject in Span MODS Top Search

   Queensland University of Technology, Brisbane Australia
   QUT Home Contact
   A university for the real world
   Skip to content

   Home Browse About
     * Login

RuleOMS: a rule-based online management system

   Islam, Mohammad Badiul & Governatori, Guido (2015) RuleOMS: a
   rule-based online management system. In Atkinson, K (Ed.) Proceedings
   of the 15th International Conference on Artificial Intelligence and
   Law. Association for Computing Machinery, United States of America, pp.
   187-191.
   [img] Published Version (PDF 670kB)
   RuleOMS- A Rule-Based Online Management System.pdf.
   Administrators only | Request a copy from author
   Contact Author

   View at publisher

Description

   We propose an architecture for a rule-based online management systems
   (RuleOMS). Typically, many domain areas face the problem that
   stakeholders maintain databases of their business core information and
   they have to take decisions or create reports according to guidelines,
   policies or regulations. To address this issue we propose the
   integration of databases, in particular relational databases, with a
   logic reasoner and rule engine. We argue that defeasible logic is an
   appropriate formalism to model rules, in particular when the rules are
   meant to model regulations. The resulting RuleOMS provides an efficient
   and flexible solution to the problem at hand using defeasible
   inference. A case study of an online child care management system is
   used to illustrate the proposed architecture.

   Impact and interest:
   5 citations in Scopus
   Search Google Scholar™
   (BUTTON)

   Citation counts are sourced monthly from Scopus and Web of Science®
   citation databases.

   These databases contain citations from different subsets of available
   publications and different time periods and thus the citation count
   from each is usually different. Some works are not in either database
   and no count is displayed. Scopus includes citations from articles
   published in 1996 onwards, and Web of Science® generally from 1980
   onwards.

   Citations counts from the Google Scholar™ indexing service can be
   viewed at the linked Google Scholar™ search.
     * Notify us of incorrect data
     * How to use citation counts
     * More information

   More statistics...
   ID Code: 85194
   Item Type: Chapter in Book, Report or Conference volume (Conference
   contribution)
   Measurements or Duration: 5 pages
   Keywords: Child Care, Compliance, Defeasible Logic, Online Management
   System, Reasoning, Regulations, Rule-based
   DOI: 10.1145/2746090.2746120
   ISBN: 978-1-4503-3522-5
   Pure ID: 32791379
   Divisions: Past > Institutes > Institute for Future Environments
   Past > QUT Faculties & Divisions > Science & Engineering Faculty
   Copyright Owner: Consult author(s) regarding copyright matters
   Copyright Statement: This work is covered by copyright. Unless the
   document is being made available under a Creative Commons Licence, you
   must assume that re-use is limited to personal use and that permission
   from the copyright owner must be obtained for all other uses. If the
   document is available under a Creative Commons License (or other
   specified license) then refer to the Licence for details of permitted
   re-use. It is a condition of access that users recognise and abide by
   the legal requirements associated with these rights. If you believe
   that this work infringes copyright please provide details by email to
   qut.copyright@qut.edu.au
   Deposited On: 09 Jul 2015 00:30
   Last Modified: 04 Jan 2025 18:46

                                    Export: EndNote | Dublin Core | BibTeX

                                  Repository Staff Only: item control page

     * Home
     * Browse research
     * About

     * TEQSA Provider ID: PRV12079 (Australian University)
     * CRICOS No. 00213J
     * ABN 83 791 724 622

     * Accessibility
     * Copyright
     * Disclaimer
     * Privacy
     * Right to Information
   Skip to main content

   Reddit and its partners use cookies and similar technologies to provide
   you with a better experience.

   By accepting all cookies, you agree to our use of cookies to deliver
   and maintain our services and site, improve the quality of Reddit,
   personalize Reddit content and advertising, and measure the
   effectiveness of advertising.

   By rejecting non-essential cookies, Reddit may still use certain
   cookies to ensure the proper functionality of our platform.

   For more information, please see our Cookie Notice and our Privacy
   Policy.

   (BUTTON) Open menu Open navigation Go to Reddit Home

   (BUTTON) r/askphilosophy A chip (BUTTON) A close button

   (BUTTON) Get App Get the Reddit app Log In Log in to Reddit
   (BUTTON) Expand user menu Open settings menu
     * Log In / Sign Up
     * Advertise on Reddit
     * Shop Collectible Avatars

   r/askphilosophy icon
   Go to askphilosophy
   r/askphilosophy
   r/askphilosophy icon r/askphilosophy

   /r/askphilosophy aims to provide serious, well-researched answers to
   philosophical questions.
     __________________________________________________________________

   Members Online
   •
   rad10
   ADMIN MOD

I would like to write a paper in logic but I do not know where to start.

   I have sufficient knowledge on the applications of logic. However, I
   have no idea how to write a paper in logic. In academic classes and
   most of other resources online, you would be taught how to apply logic.
   I have never seen a logic class (not a philosophy of logic class) where
   the professor requires her students to write papers because the course
   is concentrated on the understanding and application of logic.

   I want to write a paper in logic. I would like to know where to start.
   Can someone guide me on what research topics should I look into or what
   problems should I try to tackle?

   Thank you in advance!

   EDIT: I might have not been quite clear. I know a lot about logic
   including advanced propositional and predicate logic, modal logic, free
   logic, discrete mathematics, Gödel's incompleteness...etc. I know how
   to solve problems and do proofs, but I am not sure how to write a paper
   on the subject. I can only write papers on truth and meaning which
   could be considered as philosophy of logic and philosophy of language,
   but I am not sure what a logic paper would look like.
   (BUTTON) Read more
   Archived post. New comments cannot be posted and votes cannot be cast.
   Top 1% Rank by size
   Public

   Anyone can view, post, and comment to this community

Top Posts
     __________________________________________________________________

     * Reddit
       reReddit: Top posts of May 30, 2014
         ______________________________________________________________

     * Reddit
       reReddit: Top posts of May 2014
         ______________________________________________________________

     * Reddit
       reReddit: Top posts of 2014
         ______________________________________________________________

     &nbsp;
     __________________________________________________________________

     TOPICS

     Internet Culture (Viral)
     * Amazing
     * Animals & Pets
     * Cringe & Facepalm
     * Funny
     * Interesting
     * Memes
     * Oddly Satisfying
     * Reddit Meta
     * Wholesome & Heartwarming



   Games

     * Action Games
     * Adventure Games
     * Esports
     * Gaming Consoles & Gear
     * Gaming News & Discussion
     * Mobile Games
     * Other Games
     * Role-Playing Games
     * Simulation Games
     * Sports & Racing Games
     * Strategy Games
     * Tabletop Games



   Q&As

     * Q&As
     * Stories & Confessions



   Technology

     * 3D Printing
     * Artificial Intelligence & Machine Learning
     * Computers & Hardware
     * Consumer Electronics
     * DIY Electronics
     * Programming
     * Software & Apps
     * Streaming Services
     * Tech News & Discussion
     * Virtual & Augmented Reality



   Pop Culture

     * Celebrities
     * Creators & Influencers
     * Generations & Nostalgia
     * Podcasts
     * Streamers
     * Tarot & Astrology



   Movies & TV

     * Action Movies & Series
     * Animated Movies & Series
     * Comedy Movies & Series
     * Crime, Mystery, & Thriller Movies & Series
     * Documentary Movies & Series
     * Drama Movies & Series
     * Fantasy Movies & Series
     * Horror Movies & Series
     * Movie News & Discussion
     * Reality TV
     * Romance Movies & Series
     * Sci-Fi Movies & Series
     * Superhero Movies & Series
     * TV News & Discussion
     __________________________________________________________________



   RESOURCES

     About Reddit

     Advertise

     Help

     Blog

     Careers

     Press
     __________________________________________________________________

     Communities

     Best of Reddit

     Topics
     __________________________________________________________________

     Content Policy

     Privacy Policy

     User Agreement

   Reddit, Inc. © 2025. All rights reserved.

   (BUTTON) close

Don’t miss a thing from Reddit!

   [ ] I agree to get emails about cool stuff on Reddit
   (BUTTON) Continue
   (BUTTON) close

Log In

   By continuing, you agree to our User Agreement and acknowledge that you
   understand the Privacy Policy.
   Continue with phone number
     __________________________________________________________________

   OR
     __________________________________________________________________

   Email or username

   Password

   Forgot password?
   New to Reddit? Sign Up
   (BUTTON) Log In
   (BUTTON) back

Enter the 6-digit code from your authenticator app

   You’ve set up two-factor authentication for this account.

   Verification code

   Lost access to your authenticator? Use a backup code
   (BUTTON) Check code
   (BUTTON) back

Enter a 6-digit backup code

   You’ve set up two-factor authentication for this account.

   Backup code

   Don’t have access to your backup code? Use a code from an authenticator
   app
   (BUTTON) Check code
   (BUTTON) close

Sign Up

   By continuing, you agree to our User Agreement and acknowledge that you
   understand the Privacy Policy.
   [ ] I agree to get emails about cool stuff on Reddit

   Email

   Already a redditor? Log In

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   (BUTTON) Continue
   (BUTTON) back (skip) Skip

Verify your email

   Enter the 6-digit code we sent to

   Verification code

   Didn't get an email? (resend) Resend
   (BUTTON) Continue
   (BUTTON) back

Create your username and password

   Reddit is anonymous, so your username is what you’ll go by here. Choose
   wisely—because once you get a name, you can’t change it.

   Username (BUTTON)

   Password

   (BUTTON) Continue
   (BUTTON) close

Sign Up

   By continuing, you agree to our User Agreement and acknowledge that you
   understand the Privacy Policy.
   [ ] I agree to get emails about cool stuff on Reddit
   Continue with phone number
     __________________________________________________________________

   OR
     __________________________________________________________________

   Email

   Already a redditor? Log In

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   (BUTTON) Continue
   (BUTTON) back (skip) Skip

Verify your email

   Enter the 6-digit code we sent to

   Verification code

   Didn't get an email? (resend) Resend
   (BUTTON) Continue
   (BUTTON) back

Create your username and password

   Reddit is anonymous, so your username is what you’ll go by here. Choose
   wisely—because once you get a name, you can’t change it.

   Username (BUTTON)

   Password

   (BUTTON) Continue
   (BUTTON) close (BUTTON) back

Reset your password

   Enter your email address or username and we’ll send you a link to reset
   your password

   Email or username

   Need help?
   (BUTTON) Reset password
   (BUTTON) close (BUTTON) back

Check your inbox

   An email with a link to reset your password was sent to the email
   address associated with your account
   Didn't get an email? (BUTTON) Resend
   (BUTTON) close

Choose a Reddit account to continue

   (BUTTON) back (BUTTON) close

Reset your password

   New password

   Confirm new password

   Resetting your password will log you out on all devices.
   (BUTTON) Continue
DSHARP: Fast d-DNNF Compilation with sharpSAT
(Amended Version)

Description

   As a submission to the Beyond NP workshop at AAAI 2016, we amended the
   2012 Canadian AI paper that describes DSHARP [1]. Unfortunately, due to
   copyright regulations with the publisher Springer, this submission can
   not be distributed publicly. However, the additional text is reproduced
   below, and a slightly extended version of the original Canadian AI
   paper submitted at a prior workshop can be found here.

Related Work

   Relying on the trace of a complete DPLL based solver is the prevailing
   technique for CNF → d-DNNF compilers, used by both DSHARP and C2D [2].
   The DPLL trace has been leveraged for proving bounds on model counting,
   such as the work of Beame et al. [3]. It has also been used to good
   effect for proving theoretical results about the worst-case size
   complexity of the d-DNNF representation [4].

   Knowledge compilers (including the DSHARP software presented in this
   paper) have played a role as subcomponents in larger systems. One
   example is in the SAT-based analysis of quantification information flow
   programs, where efficient methods for conditioned model counting using
   d-DNNF were exploited [5]. Another example is the Probabilistic Logic
   Programming framework, ProbLog [6]. Here, the model counters were used
   to provide probabilistic inference for targeted queries compiled from a
   given logic program.

   Finally, since the original publication of this work in 2012 by Muise
   et al., the DSHARP software has been extended in a variety of ways.
   Most notably, the software has been extended to do model counting with
   the assumption of stable model semantics [7], as well as extended to do
   projected model counting and projected knowledge compilation [8].

   For stable model counting, every model represented by the compiled
   theory must be stable: a notion in logic programming that stipulates
   that the truth of atoms cannot be self supporting given the logic
   program’s rules [9]. To accommodate for stable models, DSHARP was
   modified to include an internal propagator that rules out any model
   deemed not stable. Subsequently, clauses are learned to rule out the
   unstable models and the final compiled d-DNNF theory represents all
   stable models.

   The problem of projected model counting (respectively projected
   knowledge compilation) is to count the number of models (resp. produce
   the d-DNNF) for the Boolean theory after projecting away a subset of
   the variables. Intuitively, a model for the projected theory exists if
   the same setting of variables corresponds to at least one model of the
   full theory. DSHARP was modified in a variety of ways to achieve
   projected model counting and knowledge compilation. These included (1)
   dedicated variable ordering heuristics to focus on the projected
   variables; (2) advanced back-tracking to avoid recomputing the same
   projected model; and (3) a re-determinization method to convert a DNNF
   theory back into d-DNNF.
    1. Muise, C.; Mcilraith, S. A.; Beck; Christopher, J.; and Hsu, E.
       2012. DSHARP: Fast d-DNNF Compilation with sharpSAT. In Canadian
       Conference on Artificial Intelligence.
    2. Darwiche, A. 2004. New advances in compiling CNF to decomposable
       negational normal form. In Proceedings of European Conference on
       Artificial Intelligence.
    3. Beame, P.; Li, J.; Roy, S.; and Suciu, D. 2013. Lower bounds for
       exact model counting and applications in probabilistic databases.
       In Proceedings of the Twenty-Ninth Conference on Uncertainty in
       Artificial Intelligence, UAI 2013, Bellevue, WA, USA, August 11-15,
       2013.
    4. Oztok, U., and Darwiche, A. 2014. On compiling CNF into
       decision-dnnf. In Principles and Practice of Constraint Programming
       - 20th International Conference, CP 2014, Lyon, France, September
       8-12, 2014. Proceedings, 42–57.
    5. Klebanov, V.; Manthey, N.; and Muise, C. 2013. SAT-based Analysis
       and Quantification of Information Flow in Programs. In 10th
       International Conference on Quantitative Evaluation of SysTems
       (QEST 2013), 177–192.
    6. Fierens, D.; den Broeck, G. V.; Renkens, J.; Shterionov, D. S.;
       Gutmann, B.; Thon, I.; Janssens, G.; and Raedt, L. D. 2015.
       Inference and learning in probabilistic logic programs using
       15(3):358–401.
    7. Aziz, R. A.; Chu, G.; Muise, C.; and Stuckey, P. 2015. Stable model
       counting and its application in probabilistic logic programming. In
       The 29th AAAI Conference on Artificial Intelligence.
    8. Aziz, R. A.; Chu, G.; Muise, C.; and Stuckey, P. 2015. Projected
       model counting. In International Conference on Theory and
       Applications of Satisfiability Testing.
    9. Gelfond, M., and Lifschitz, V. 1988. The stable model semantics for
       logic programming. In Logic Programming, Proceedings of the Fifth
       International Conference and Symposium, Seattle, Washington, August
       15-19, 1988 (2 Volumes), 1070–1080.

   © 2017 Dr. Christian Muise

   SEP home page
   Stanford Encyclopedia of Philosophy
   (BUTTON) Menu
     * Browse
          + Table of Contents
          + What's New
          + Random Entry
          + Chronological
          + Archives
     * About
          + Editorial Information
          + About the SEP
          + Editorial Board
          + How to Cite the SEP
          + Special Characters
          + Advanced Tools
          + Contact
     * Support SEP
          + Support the SEP
          + PDFs for SEP Friends
          + Make a Donation
          + SEPIA for Libraries

   ____________________
   (BUTTON)
   (BUTTON) Entry Navigation
     * Entry Contents
     * Bibliography
     * Academic Tools
     * Friends PDF Preview
     * Author and Citation Info
     * Back to Top

Church’s Type Theory

   First published Fri Aug 25, 2006; substantive revision Tue Jan 16, 2024

   Church’s type theory, aka simple type theory, is a formal logical
   language which includes classical first-order and propositional logic,
   but is more expressive in a practical sense. It is used, with some
   modifications and enhancements, in most modern applications of type
   theory. It is particularly well suited to the formalization of
   mathematics and other disciplines and to specifying and verifying
   hardware and software. It also plays an important role in the study of
   the formal semantics of natural language. And in particular, when used
   as a metalogic to semantically embed expressive (quantified)
   non-classical logics, it enables further topical applications in
   artificial intelligence and philosophy.

   A great wealth of technical knowledge can be expressed very naturally
   in it. With possible enhancements, Church’s type theory constitutes an
   excellent formal language for representing the knowledge in automated
   information systems, sophisticated automated reasoning systems, systems
   for verifying the correctness of mathematical proofs, and a range of
   projects involving logic and artificial intelligence. Some examples and
   further references are given in Sections 1.2.2 and 5 below.

   Type theories are also called higher-order logics, since they allow
   quantification not only over individual variables (as in first-order
   logic), but also over function, predicate, and even higher-order
   variables. Type theories characteristically assign types to entities,
   distinguishing, for example, between numbers, sets of numbers,
   functions from numbers to sets of numbers, and sets of such functions.
   As illustrated in Section 1.2.2 below, these distinctions allow one to
   discuss the conceptually rich world of sets and functions without
   encountering the paradoxes of naive set theory.

   Church’s type theory is a formulation of type theory that was
   introduced by Alonzo Church in Church 1940. In certain respects, it is
   simpler and more general than the type theory introduced by Bertrand
   Russell in Russell 1908 and Whitehead & Russell 1927a. Since properties
   and relations can be regarded as functions from entities to truth
   values, the concept of a function is taken as primitive in Church’s
   type theory, and the λ-notation which Church introduced in Church 1932
   and Church 1941 is incorporated into the formal language. Moreover,
   quantifiers and description operators are introduced in a way so that
   additional binding mechanisms can be avoided, λ-notation is reused
   instead. λ-notation is thus the only binding mechanism employed in
   Church’s type theory.
     * 1. Syntax
          + 1.1 Fundamental Ideas
          + 1.2 Formulas (as certain terms)
               o 1.2.1 Definitions
               o 1.2.2 Examples
          + 1.3 Axioms and Rules of Inference
               o 1.3.1 Rules of Inference
               o 1.3.2 Elementary Type Theory
               o 1.3.3 Axioms of Extensionality
               o 1.3.4 Descriptions
               o 1.3.5 Axiom of Choice
               o 1.3.6 Axioms of Infinity
          + 1.4 A Formulation Based on Equality
               o 1.4.1 Definitions
               o 1.4.2 Axioms and Rules of Inference
     * 2. Semantics
     * 3. Metatheory
          + 3.1 Lambda-Conversion
          + 3.2 Higher-Order Unification
          + 3.3 A Unifying Principle
               o 3.3.1 Elementary Type Theory
               o 3.3.2 Extensional Type Theory
          + 3.4 Cut-Elimination and Cut-Simulation
          + 3.5 Expansion Proofs
          + 3.6 The Decision Problem
     * 4. Automation
          + 4.1 Machine-Oriented Proof Calculi
          + 4.2 Proof Assistants
          + 4.3 Automated Theorem Provers
          + 4.4 (Counter-)Model Finding
     * 5. Applications
          + 5.1 Semantics of Natural Language
          + 5.2 Mathematics and Computer Science
          + 5.3 Computational Metaphysics and Artificial Intelligence
          + 5.4. Metalogical Studies
     * Bibliography
     * Academic Tools
     * Other Internet Resources
     * Related Entries
     __________________________________________________________________

1. Syntax

1.1 Fundamental Ideas

   We start with an informal description of the fundamental ideas
   underlying the syntax of Church’s formulation of type theory.

   All entities have types, and if α and β are types, the type of
   functions from elements of type β to elements of type α is written as
   \((\alpha \beta)\). (This notation was introduced by Church, but some
   authors write \((\beta \rightarrow \alpha)\) instead of \((\alpha
   \beta)\). See, for example, Section 2 of the entry on type theory.)

   As noted by Schönfinkel (1924), functions of more than one argument can
   be represented in terms of functions of one argument when the values of
   these functions can themselves be functions. For example, if f is a
   function of two arguments, for each element x of the left domain of f
   there is a function g (depending on x) such that \(gy = fxy\) for each
   element y of the right domain of f. We may now write \(g = fx\), and
   regard f as a function of a single argument, whose value for any
   argument x in its domain is a function \(fx\), whose value for any
   argument y in its domain is fxy.

   For a more explicit example, consider the function + which carries any
   pair of natural numbers to their sum. We may denote this function by
   \(+_{((\sigma \sigma)\sigma)}\), where \(\sigma\) is the type of
   natural numbers. Given any number x, \([+_{((\sigma \sigma)\sigma)}x]\)
   is the function which, when applied to any number y, gives the value
   \([[+_{((\sigma \sigma)\sigma)}x]y]\), which is ordinarily abbreviated
   as \(x + y\). Thus \([+_{((\sigma \sigma)\sigma)}x]\) is the function
   of one argument which adds x to any number. When we think of
   \(+_{((\sigma \sigma)\sigma)}\) as a function of one argument, we see
   that it maps any number x to the function \([+_{((\sigma
   \sigma)\sigma)}x]\).

   More generally, if f is a function which maps n-tuples \(\langle
   w_{\beta},x_{\gamma},\ldots ,y_{\delta},z_{\tau}\rangle\) of elements
   of types \(\beta\), \(\gamma\),…, \(\delta\) ,\(\tau\), respectively,
   to elements of type α, we may assign to f the type \(((\ldots((\alpha
   \tau)\delta)\ldots \gamma)\beta)\). It is customary to use the
   convention of association to the left to omit parentheses, and write
   this type symbol simply as \((\alpha \tau \delta \ldots \gamma
   \beta)\).

   A set or property can be represented by a function (often called
   characteristic function) which maps elements to truth values, so that
   an element is in the set, or has the property, in question iff the
   function representing the set or property maps that element to truth.
   When a statement is asserted, the speaker means that it is true, so
   that \(s x\) means that \(s x\) is true, which also expresses the
   assertions that s maps x to truth and that \(x \in s\). In other words,
   \(x \in s\) iff \(s x\). We take \({o}\) as the type symbol denoting
   the type of truth values, so we may speak of any function of type
   \(({o}\alpha)\) as a set of elements of type α. A function of type
   \((({o}\alpha)\beta)\) is a binary relation between elements of type β
   and elements of type α. For example, if \(\sigma\) is the type of the
   natural numbers, and \(<\) is the order relation between natural
   numbers, \(<\) has type \(({o}\sigma \sigma)\), and for all natural
   numbers x and \(y, {<}x y\) (which we ordinarily write as \(x < y)\)
   has the value truth iff x is less than y. Of course, \(<\) can also be
   regarded as the function which maps each natural number x to the set
   \(<x\) of all natural numbers y such that x is less than y. Thus sets,
   properties, and relations may be regarded as particular kinds of
   functions. Church’s type type theory is thus a logic of functions, and,
   in this sense, it is in the tradition of the work of Frege’s
   Begriffsschrift. The opposite approach would be to reduce functions to
   relations, which was the approach taken by Whitehead and Russell
   (1927a) in the Principia Mathematica.

   Expressions which denote elements of type α are called well-formed
   formulas (wffs) of type α. Thus, statements of type theory are wffs of
   type \({o}\).

   If \(\bA_{\alpha}\) is a wff of type α in which \(\bu_{\alpha \beta}\)
   is not free, the function (associated with) \(\bu_{\alpha \beta}\) such
   that \(\forall \bv_{\beta}[\bu_{\alpha \beta}\bv_{\beta} =
   \bA_{\alpha}]\) is denoted by \([\lambda \bv_{\beta}\bA_{\alpha}]\).
   Thus \(\lambda \bv_{\beta}\) is a variable-binder, like \(\forall
   \bv_{\beta}\) or \(\exists \bv_{\beta}\) (but with a quite different
   meaning, of course); λ is known as an abstraction operator. \([\lambda
   \bv_{\beta}\bA_{\alpha}]\) denotes the function whose value on any
   argument \(\bv_{\beta}\) is \(\bA_{\alpha}\), where \(\bv_{\beta}\) may
   occur free in \(\bA_{\alpha}\). For example, \([\lambda
   n_{\sigma}[4\cdot n_{\sigma}+3]]\) denotes the function whose value on
   any natural number n is \(4\cdot n+3\). Hence, when we apply this
   function to the number 5 we obtain \([\lambda n_{\sigma}[4\cdot
   n_{\sigma}+3]]5 = 4\cdot 5+3 = 23\).

   We use \(\textsf{Sub}(\bB,\bv,\bA)\) as a notation for the result of
   substituting \(\bB\) for \(\bv\) in \(\bA\), and
   \(\textsf{SubFree}(\bB,\bv,\bA)\) as a notation for the result of
   substituting \(\bB\) for all free occurrences of \(\bv\) in \(\bA\).
   The process of replacing \([\lambda
   \bv_{\beta}\bA_{\alpha}]\bB_{\beta}\) by
   \(\textsf{SubFree}(\bB_{\beta},\bv_{\beta},\bA_{\alpha})\) (or
   vice-versa) is known as β-conversion, which is one form of
   λ-conversion. Of course, when \(\bA_{{o}}\) is a wff of type \({o}\),
   \([\lambda \bv_{\beta}\bA_{{o}}]\) denotes the set of all elements
   \(\bv_{\beta}\) (of type \(\beta)\) of which \(\bA_{{o}}\) is true;
   this set may also be denoted by \(\{\bv_{\beta}|\bA_{{o}}\}\). For
   example, \([\lambda x\ x<y]\) denotes the set of x such that x is less
   than y (as well as that property which a number x has if it is less
   than y). In familiar set-theoretic notation,
   \[[\lambda \bv_{\beta} \bA_{{o}}]\bB_{\beta} =
   \textsf{SubFree}(\bB_{\beta},\bv_{\beta},\bA_{{o}})\]

   would be written
   \[\bB_{\beta} \in \{\bv_{\beta}|\bA_{{o}}\} \equiv
   \textsf{SubFree}(\bB_{\beta},\bv_{\beta},\bA_{{o}}).\]

   (By the Axiom of Extensionality for truth values, when \(\bC_{{o}}\)
   and \(\bD_{{o}}\) are of type \({o}, \bC_{{o}} \equiv \bD_{{o}}\) is
   equivalent to \(\bC_{{o}} = \bD_{{o}}\).)

   Propositional connectives and quantifiers can be assigned types and can
   be denoted by constants of these types. The negation function maps
   truth values to truth values, so it has type \(({o}{o})\). Similarly,
   disjunction and conjunction (etc.) are binary functions from truth
   values to truth values, so they have type \(({o}{o}{o})\).

   The statement \(\forall \bx_{\alpha}\bA_{{o}}\) is true iff the set
   \([\lambda \bx_{\alpha}\bA_{{o}}]\) contains all elements of type α. A
   constant \(\Pi_{{o}({o}\alpha)}\) can be introduced (for each type
   symbol \(\alpha)\) to denote a property of sets: a set
   \(s_{{o}\alpha}\) has the property \(\Pi_{{o}({o}\alpha)}\) iff
   \(s_{{o}\alpha}\) contains all elements of type α. With this
   interpretation
   \[ \forall s_{{o}\alpha}\left[\Pi_{{o}({o}\alpha)}s_{{o}\alpha} \equiv
   \forall x_{\alpha}\left[s_{{o}\alpha}x_{\alpha}\right]\right] \]

   should be true, as well as
   \[ \Pi_{{o}({o}\alpha)}[\lambda \bx_{\alpha}\bA_{{o}}] \equiv \forall
   \bx_{\alpha}[[\lambda \bx_{\alpha}\bA_{{o}}]\bx_{\alpha}] \label{eqPi}
   \]

   for any wff \(\bA_{{o}}\) and variable \(\bx_{\alpha}\). Since by
   λ-conversion we have
   \[ [\lambda \bx_{\alpha}\bA_{{o}}]\bx_{\alpha} \equiv \bA_{{o}} \]

   this equation can be written more simply as
   \[ \Pi_{{o}({o}\alpha)}[\lambda \bx_{\alpha}\bA_{{o}}] \equiv \forall
   \bx_{\alpha}\bA_{{o}} \]

   Thus, \(\forall \bx_{\alpha}\) can be defined in terms of
   \(\Pi_{{o}({o}\alpha)}\), and λ is the only variable-binder that is
   needed.

1.2 Formulas (as certain terms)

   Before we state the definition of a “formula”, a word of caution is in
   order. The reader may be accustomed to thinking of a formula as an
   expression which plays the role of an assertion in a formal language,
   and of a term as an expression which designates an object. Church’s
   terminology is somewhat different, and provides a uniform way of
   discussing expressions of many different types. What we call
   well-formed formula of type α (\(\text{wff}_{\alpha}\)) below would in
   more standard terminology be called term of type α, and then only
   certain terms, namely those with type \({o}\), would be called
   formulas. Anyhow, in this entry we have decided to stay with Church’s
   original terminology. Another remark concerns the use of some specific
   mathematical notation. In what follows, the entry distinguishes between
   the symbols \(\imath\), \(\iota_{(\alpha({o}\alpha))}\), and \(\atoi\).
   The first is the symbol used for the type of individuals; the second is
   the symbol used for a logical constant (see Section 1.2.1 below); the
   third is the symbol used as a variable-binding operator that represents
   the definite description “the” (see Section 1.3.4). The reader should
   not confuse them and check to see that the browser is displaying these
   symbols correctly.

1.2.1 Definitions

   Type symbols are defined inductively as follows:
     * \(\imath\) is a type symbol (denoting the type of individuals).
       There may also be additional primitive type symbols which are used
       in formalizing disciplines where it is natural to have several
       sorts of individuals.
     * \({o}\) is a type symbol (denoting the type of truth values).
     * If α and β are type symbols, then \((\alpha \beta)\) is a type
       symbol (denoting the type of functions from elements of type β to
       elements of type α).

   The primitive symbols are the following:
     * Improper symbols: [, ], \(\lambda\)
     * For each type symbol α, a denumerable list of variables of type
       \(\alpha : a_{\alpha}, b_{\alpha}, c_{\alpha}\ldots\)
     * Logical constants: \(\nsim_{({o}{o})}\), \(\lor_{(({o}{o}){o})}\),
       \(\Pi_{({o}({o}\alpha))}\) and \(\iota_{(\alpha({o}\alpha))}\) (for
       each type symbol α). The types of these constants are indicated by
       their subscripts. The symbol \(\nsim_{({o}{o})}\) denotes negation,
       \(\lor_{(({o}{o}){o})}\) denotes disjunction, and
       \(\Pi_{({o}({o}\alpha))}\) is used in defining the universal
       quantifier as discussed above. \(\iota_{(\alpha({o}\alpha))}\)
       serves either as a description or selection operator as discussed
       in Section 1.3.4 and Section 1.3.5 below.
     * In addition, there may be other constants of various types, which
       will be called nonlogical constants or parameters. Each choice of
       parameters determines a particular formulation of the system of
       type theory. Parameters are typically used as names for particular
       entities in the discipline being formalized.

   A formula is a finite sequence of primitive symbols. Certain formulas
   are called well-formed formulas (wffs). We write
   \(\textrm{wff}_{\alpha}\) as an abbreviation for wff of type α, and
   define this concept inductively as follows:
     * A primitive variable or constant of type α is a wff\(_{\alpha}\).
     * If \(\bA_{\alpha \beta}\) and \(\bB_{\beta}\) are wffs of the
       indicated types, then \([\bA_{\alpha \beta}\bB_{\beta}]\) is a
       wff\(_{\alpha}\).
     * If \(\bx_{\beta}\) is a variable of type β and \(\bA_{\alpha}\) is
       a wff, then \([\lambda \bx_{\beta}\bA_{\alpha}]\) is a
       wff\(_{(\alpha \beta)}\).

   Note, for example, that by (a) \(\nsim_{({o}{o})}\) is a
   wff\(_{({o}{o})}\), so by (b) if \(\bA_{{o}}\) is a wff\(_{{o}}\), then
   \([\nsim_{({o}{o})}\bA_{{o}}]\) is a wff\(_{{o}}\). Usually, the latter
   wff will simply be written as \(\nsim \bA\). It is often convenient to
   avoid parentheses, brackets and type symbols, and use conventions for
   omitting them. For formulas we use the convention of association to the
   right, and we may write \(\lor_{((oo)o)}\bA_{{o}} \bB_{{o}}\) instead
   of \([[\lor_{((oo)o)}\bA_{{o}}] \bB_{{o}}]\). For types the
   corresponding convention is analogous.

Abbreviations:

     * \(\bA_{{o}} \lor \bB_{{o}}\) stands for \(\lor_{ooo}\bA_{{o}}
       \bB_{{o}}\).
     * \(\bA_{{o}} \supset \bB_{{o}}\) stands for
       \([\nsim_{{o}{o}}\bA_{{o}}] \lor \bB_{{o}}\).
     * \(\forall \bx_{\alpha}\bA_{{o}}\) stands for \(\Pi_{{o}({o}\alpha)}
       [\lambda \bx_{\alpha}\bA_{{o}}]\).
     * Other propositional connectives, and the existential quantifier,
       are defined in familiar ways. In particular, \[ {\bA_{{o}} \equiv
       \bB_{{o}} \quad \text{stands for} \quad [\bA_{{o}} \supset
       \bB_{{o}}] \land [\bB_{{o}} \supset \bA_{{o}}]} \]
     * \(\sfQ_{{o}\alpha \alpha}\) stands for \(\lambda
       \)x\(_{\alpha}\lambda \)y\(_{\alpha}\forall
       f_{{o}\alpha}{[}f_{{o}\alpha} x_{\alpha} \supset
       f_{{o}\alpha}y_{\alpha}{]}\).
     * \(\bA_{\alpha} = \bB_{\alpha}\) stands for \(\sfQ_{{o}\alpha
       \alpha}\bA_{\alpha}\bB_{\alpha}\).

   The last definition is known as the Leibnizian definition of equality.
   It asserts that x and y are the same if y has every property that x
   has. Actually, Leibniz called his definition “the identity of
   indiscernibles” and gave it in the form of a biconditional: x and y are
   the same if x and y have exactly the same properties. It is not
   difficult to show that these two forms of the definition are logically
   equivalent.

1.2.2 Examples

   We now provide a few examples to illustrate how various assertions and
   concepts can be expressed in Church’s type theory.

   Example 1 To express the assertion that “Napoleon is charismatic” we
   introduce constants \(\const{Charismatic}_{{o}\imath}\) and
   \(\const{Napoleon}_{\imath}\), with the types indicated by their
   subscripts and the obvious meanings, and assert the wff
   \[\const{Charismatic}_{{o}\imath} \const{Napoleon}_{\imath}\]

   If we wish to express the assertion that “Napoleon has all the
   properties of a great general”, we might consider interpreting this to
   mean that “Napoleon has all the properties of some great general”, but
   it seems more appropriate to interpret this statement as meaning that
   “Napoleon has all the properties which all great generals have”. If the
   constant \(\const{GreatGeneral}_{{o}\imath}\) is added to the formal
   language, this can be expressed by the wff
   \[\forall p_{{o}\imath}[\forall
   g_{\imath}{[}\const{GreatGeneral}_{{o}\imath}g_{\imath} \supset
   p_{{o}\imath}g_{\imath}] \supset p_{{o}\imath}
   \const{Napoleon}_{\imath}]\]

   As an example of such a property, we note that the sentence “Napoleon’s
   soldiers admire him” can be expressed in a similar way by the wff
   \[\forall x_{\imath}{[}\const{Soldier}_{{o}\imath}x_{\imath} \land
   \const{CommanderOf}_{\imath\imath}x_{\imath} =
   \const{Napoleon}_{\imath} \supset
   \const{Admires}_{{o}\imath\imath}x_{\imath}\const{Napoleon}_{\imath}]\]

   By λ-conversion, this is equivalent to
   \[[\lambda n_{\imath}\forall
   x_{\imath}{[}\const{Soldier}_{{o}\imath}x_{\imath} \land
   \const{CommanderOf}_{\imath\imath}x_{\imath} = n_{\imath} \supset
   \const{Admires}_{{o}\imath\imath}x_{\imath}n_{\imath}]]\,
   \const{Napoleon}_{\imath}\]

   This statement asserts that one of the properties which Napoleon has is
   that of being admired by his soldiers. The property itself is expressed
   by the wff
   \[\lambda n_{\imath}\forall
   x_{\imath}{[}\const{Soldier}_{{o}\imath}x_{\imath} \land
   \const{CommanderOf}_{\imath\imath}x_{\imath} = n_{\imath} \supset
   \const{Admires}_{{o}\imath\imath}x_{\imath}n_{\imath}]\]

   Example 2 We illustrate some potential applications of type theory with
   the following fable.

     A rich and somewhat eccentric lady named Sheila has an ostrich and a
     cheetah as pets, and she wishes to take them from her hotel to her
     remote and almost inaccessible farm. Various portions of the trip
     may involve using elevators, boxcars, airplanes, trucks, very small
     boats, donkey carts, suspension bridges, etc., and she and the pets
     will not always be together. She knows that she must not permit the
     ostrich and the cheetah to be together when she is not with them.

   We consider how certain aspects of this problem can be formalized so
   that Sheila can use an automated reasoning system to help analyze the
   possibilities.

   There will be a set Moments of instants or intervals of time during the
   trip. She will start the trip at the location \(\const{Hotel}\) and
   moment \(\const{Start}\), and end it at the location \(\const{Farm}\)
   and moment \(\const{Finish}\). Moments will have type \(\tau\), and
   locations will have type \(\varrho\). A state will have type \(\sigma\)
   and will specify the location of Sheila, the ostrich, and the cheetah
   at a given moment. A plan will specify where the entities will be at
   each moment according to this plan. It will be a function from moments
   to states, and will have type \((\sigma \tau)\). The exact
   representation of states need not concern us, but there will be
   functions from states to locations called \(\const{LocationOfSheila}\),
   \(\const{LocationOfOstrich}\), and \(\const{LocationOfCheetah}\) which
   provide the indicated information. Thus,
   \(\const{LocationOfSheila}_{\varrho \sigma}[p_{\sigma \tau}t_{\tau}]\)
   will be the location of Sheila according to plan \(p_{\sigma \tau}\) at
   moment \(t_{\tau}\). The set \(\const{Proposals}_{{o}(\sigma \tau)}\)
   is the set of plans Sheila is considering.

   We define a plan p to be acceptable if, according to that plan, the
   group starts at the hotel, finishes at the farm, and whenever the
   ostrich and the cheetah are together, Sheila is there too. Formally, we
   define \(\const{Acceptable}_{{o}(\sigma \tau)}\) as
   \[\begin{multline} \lambda p_{\sigma \tau} \left[ \begin{aligned} &
   \const{LocationOfSheila}_{\varrho \sigma} [p_{\sigma
   \tau}\const{Start}_{\tau}] = \const{Hotel}_{\varrho} \,\land\\ &
   \const{LocationOfOstrich}_{\varrho \sigma}[p_{\sigma \tau}
   \const{Start}_{\tau}] = \const{Hotel}_{\varrho} \,\land\\ &
   \const{LocationOfCheetah}_{\varrho \sigma}[p_{\sigma \tau}
   \const{Start}_{\tau}] = \const{Hotel}_{\varrho} \,\land\\ &
   \const{LocationOfSheila}_{\varrho \sigma}[p_{\sigma \tau}
   \const{Finish}_{\tau}] = \const{Farm}_{\varrho} \,\land\\ &
   \const{LocationOfOstrich}_{\varrho \sigma}[p_{\sigma \tau}
   \const{Finish}_{\tau}] = \const{Farm}_{\varrho} \,\land\\ &
   \const{LocationOfCheetah}_{\varrho \sigma}[p_{\sigma \tau}
   \const{Finish}_{\tau}] = \const{Farm}_{\varrho} \,\land\\ & \forall
   t_{\tau} \left [ \begin{split} & \const{Moments}_{{o}\tau}t_{\tau} \\ &
   \supset \left [ \begin{split} & \left[ \begin{split} &
   \const{LocationOfOstrich}_{\varrho \sigma}[p_{\sigma \tau}t_{\tau}] \\
   & = \const{LocationOfCheetah}_{\varrho \sigma}[p_{\sigma \tau}t_{\tau}]
   \end{split} \right] \\ & \supset \left[ \begin{split} &
   \const{LocationOfSheila}_{\varrho \sigma}[p_{\sigma \tau}t_{\tau}] \\ &
   = \const{LocationOfCheetah}_{\varrho\sigma}[p_{\sigma\tau}t_{\tau}]
   \end{split} \right] \end{split} \right] \end{split} \right]
   \end{aligned} \right] \end{multline}\]

   We can express the assertion that Sheila has a way to accomplish her
   objective with the formula
   \[\exists p_{\sigma \tau}[\const{Proposals}_{{o}(\sigma \tau)}p_{\sigma
   \tau} \land \const{Acceptable}_{{o}(\sigma \tau)}p_{\sigma \tau}]\]

   Example 3 We now provide a mathematical example. Mathematical ideas can
   be expressed in type theory without introducing any new constants. An
   iterate of a function f from a set to itself is a function which
   applies f one or more times. For example, if \(g(x) = f(f(f(x)))\),
   then g is an iterate of f.
   \([\text{ITERATE+}_{{o}(\imath\imath)(\imath\imath)}f_{\imath\imath}g_{
   \imath\imath}]\) means that \(g_{\imath\imath}\) is an iterate of
   \(f_{\imath\imath}\).
   \(\text{ITERATE+}_{{o}(\imath\imath)(\imath\imath)}\) is defined
   (inductively) as
   \[ \lambda f_{\imath\imath}\lambda g_{\imath\imath}\forall
   p_{{o}(\imath\imath)} \left [p_{{o}(\imath\imath)}f_{\imath\imath}
   \land \forall j_{\imath\imath} \left
   [p_{{o}(\imath\imath)}j_{\imath\imath} \supset p_{{o}(\imath\imath)}
   \left [\lambda x_{\imath}f_{\imath\imath} \left
   [j_{\imath\imath}x_{\imath} \right] \right] \right] \supset
   p_{{o}(\imath\imath)}g_{\imath\imath} \right] \]

   Thus, g is an iterate of f if g is in every set p of functions which
   contains f and which contains the function \(\lambda
   x_{\imath}f_{\imath\imath}[j_{\imath\imath}x_{\imath}]\) (i.e., f
   composed with j) whenever it contains j.

   A fixed point of f is an element y such that \(f(y) = y\).

   It can be proved that if some iterate of a function f has a unique
   fixed point, then f itself has a fixed point. This theorem can be
   expressed by the wff
   \[\begin{aligned} \forall f_{\imath\imath} \left [ \begin{split}
   \exists g_{\imath\imath} & \left [ \begin{split}
   &\text{ITERATE+}_{{o}(\imath\imath)(\imath\imath)} f_{\imath\imath}
   g_{\imath\imath} \\ &{} \land \exists x_{\imath} \left [ \begin{split}
   & g_{\imath\imath}x_{\imath} = x_{\imath} \\ &{} \land \forall
   z_{\imath} \left [g_{\imath\imath} z_{\imath} = z_{\imath} \supset
   z_{\imath} = x_{\imath} \right] \end{split} \right] \end{split}
   \right]\\ & \supset { } \exists y_{\imath} [f_{\imath\imath}y_{\imath}
   = y_{\imath}] \end{split} \right]. \end{aligned}\]

   See Andrews et al. 1996, for a discussion of how this theorem, which is
   called THM15B, can be proved automatically.

   Example 4 An example from philosophy is Gödel’s variant of the
   ontological argument for the existence of God. This example illustrates
   two interesting aspects:
     * Church’s type theory can be employed as a meta-logic to concisely
       embed expressive other logics such as the higher-order modal logic
       assumed by Gödel. By exploiting the possible world semantics of
       this target logic, its syntactic elements are defined in such a way
       that the infrastructure of the meta-logic are reused as much as
       possible. In this technique, called shallow semantical embedding,
       the modal operator \(\Box\), for example, is simply identified with
       (taken as syntactic sugar for) the λ-formula
       \[\lambda \varphi_{{o}\imath} \lambda w_{\imath} \forall v_{\imath}
       [R_{{o}\imath\imath} w_{\imath} v_{\imath} \supset
       \varphi_{{o}\imath} v_{\imath}]\]
       where \(R_{{o}\imath\imath}\) denotes the accessibility relation
       associated with \(\Box\) and type \({\imath}\) is identified with
       possible worlds. Moreover, since \(\forall x_{\alpha}
       [\bA_{{o}\alpha} x_{\alpha}]\) is shorthand in Church’s type theory
       for \(\Pi_{{o}({o}\alpha)} [\lambda x_{\alpha} [\bA_{{o}\alpha}
       x_{\alpha}]]\), the modal formula
       \[\Box \forall x \bP x\]
       is represented as
       \[\Box \Pi' [\lambda x_{\alpha} \lambda w_{\imath}
       [\bP_{{o}\imath\alpha} x_{\alpha} w_{\imath}]]\]
       where \(\Pi'\) stands for the λ-term
       \[\lambda \Phi_{{o}\imath\alpha} \lambda w_{\imath} \forall
       x_{\alpha} [\Phi_{{o}\imath\alpha} x_{\alpha} w_{\imath}]\]
       and the \(\Box\) gets resolved as described above. The above choice
       of \(\Pi'\) realizes a possibilist notion of quantification. By
       introducing a binary “existence” predicate in the metalogic and by
       utilizing this predicate as an additional guard in the definition
       of \(\Pi'\) an actualist notion of quantification can be obtained.
       Expressing that an embedded modal formula \(\varphi_{{o}\imath}\)
       is globally valid is captured by the formula \(\forall x_{\imath}
       [\varphi_{{o}\imath} x_{\imath}]\). Local validity (and also
       actuality) can be modeled as \(\varphi_{{o}\imath} n_{\imath}\),
       where \(n_{\imath}\) is a nominal (constant symbol in the
       meta-logic) denoting a particular possible world.
     * The above technique can be exploited for a natural encoding and
       automated assessment of Gödel’s ontological argument in
       higher-order modal logic, which unfolds into formulas in Church’s
       type theory such that higher-order theorem provers can be applied.
       Further details are presented in Section 6 (Logic and Philosophy)
       of the SEP entry on automated reasoning and also in Section 5.2;
       moreover, see Benzmüller & Woltzenlogel-Paleo 2014 and Benzmüller
       2019.

   Example 5 Suppose we omit the use of type symbols in the definitions of
   wffs. Then we can write the formula \(\lambda x\nsim[xx]\), which we
   shall call \(\textrm{R}\). It can be regarded as denoting the set of
   all sets x such that x is not in x. We may then consider the formula
   \([\textrm{R R}]\), which expresses the assertion that \(\textrm{R}\)
   is in itself. We can clearly prove \([\textrm{R R}] \equiv [[\lambda
   x\nsim [xx]] \textrm{R}]\), so by λ-conversion we can derive
   \([\textrm{R R}] \equiv\, \nsim[\textrm{R R}]\), which is a
   contradiction. This is Russell’s paradox. Russell’s discovery of this
   paradox (Russell 1903, 101-107) played a crucial role in the
   development of type theory. Of course, when type symbols are present,
   \(\textrm{R}\) is not well-formed, and the contradiction cannot be
   derived.

1.3 Axioms and Rules of Inference

1.3.1 Rules of Inference

    1. Alphabetic Change of Bound Variables \((\alpha\)-conversion). To
       replace any well-formed part \(\lambda \bx_{\beta}\bA_{\alpha}\) of
       a wff by \(\lambda \by_{\beta}
       \textsf{Sub}(\by_{\beta},\bx_{\beta},\bA_{\alpha})\), provided that
       \(\by_{\beta}\) does not occur in \(\bA_{\alpha}\) and
       \(\bx_{\beta}\) is not bound in \(\bA_{\alpha}\).
    2. β-contraction. To replace any well-formed part \([\lambda
       \bx_{\alpha}\bB_{\beta}] \bA_{\alpha}\) of a wff by
       \(\textsf{Sub}(\bA_{\alpha},\bx_{\alpha},\bB_{\beta})\), provided
       that the bound variables of \(\bB_{\beta}\) are distinct both from
       \(\bx_{\alpha}\) and from the free variables of \(\bA_{\alpha}\).
    3. β-expansion. To infer \(\bC\) from \(\bD\) if \(\bD\) can be
       inferred from \(\bC\) by a single application of β-contraction.
    4. Substitution. From \(\bF_{({o}\alpha)}\bx_{\alpha}\), to infer
       \(\bF_{({o}\alpha)}\bA_{\alpha}\), provided that \(\bx_{\alpha}\)
       is not a free variable of \(\bF_{({o}\alpha)}\).
    5. Modus Ponens. From \([\bA_{{o}} \supset \bB_{{o}}]\) and
       \(\bA_{{o}}\), to infer \(\bB_{{o}}\).
    6. Generalization. From \(\bF_{({o}\alpha)}\bx_{\alpha}\) to infer
       \(\Pi_{{o}({o}\alpha)}\bF_{({o}\alpha)}\), provided that
       \(\bx_{\alpha}\) is not a free variable of \(\bF_{({o}\alpha)}\).

1.3.2 Elementary Type Theory

   We start by listing the axioms for what we shall call elementary type
   theory.
   \[\begin{align} [p_{{o}} \lor p_{{o}}] & \supset p_{{o}} \tag{E1}\\
   p_{{o}} & \supset [p_{{o}} \lor q_{{o}}] \tag{E2}\\ [p_{{o}} \lor
   q_{{o}}] & \supset [q_{{o}} \lor p_{{o}}] \tag{E3}\\ [p_{{o}} \supset
   q_{{o}}] & \supset [[r_{{o}} \lor p_{{o}}] \supset [r_{{o}} \lor
   q_{{o}}]] \tag{E4}\\ \Pi_{{o}({o}\alpha)}f_{({o}\alpha)} & \supset
   f_{({o}\alpha)}x_{\alpha} \tag{E\(5^{\alpha}\)} \\ \forall
   x_{\alpha}[p_{{o}} \lor f_{({o}\alpha)}x_{\alpha}] & \supset
   \left[p_{{o}} \lor \Pi_{{o}({o}\alpha)}f_{({o}\alpha)}\right]
   \tag{E\(6^{\alpha}\)} \end{align}\]

   The theorems of elementary type theory are those theorems which can be
   derived, using the rules of inference, from Axioms
   \((\rE1){-}(\rE6^{\alpha})\) (for all type symbols \(\alpha)\). We
   shall sometimes refer to elementary type theory as \(\cT\). It embodies
   the logic of propositional connectives, quantifiers, and λ-conversion
   in the context of type theory.

   To illustrate the rules and axioms introduced above, we give a short
   and trivial proof in \(\cT\). Following each wff of the proof, we
   indicate how it was inferred. (The proof is actually quite inefficient,
   since line 3 is not used later, and line 7 can be derived directly from
   line 5 without using line 6. The additional proof lines have been
   inserted to illustrate some relevant aspects. For the sake of
   readability, many brackets have been deleted from the formulas in this
   proof. The diligent reader should be able to restore them.)
   \[\begin{alignat}{2} \forall x_{\imath}\left[p_{{o}} \lor
   f_{{o}\imath}x_{\imath}\right] \supset\left[p_{{o}} \lor
   \Pi_{{o}({o}\imath)} f_{{o}\imath}\right] && \text{Axiom
   \(6^{\imath}\)} \tag*{1.}\\ \bigg[\lambda f_{{o}\imath}\bigg[\forall
   x_{\imath}[p_{{o}} \lor f_{{o}\imath}x_{\imath}] \supset \bigg[p_{{o}}
   \lor \Pi_{{o}({o}\imath)}f_{{o}\imath}\bigg]\bigg]\bigg] f_{{o}\imath}
   && \text{β-expansion: 1} \tag*{2.}\\
   \Pi_{{o}({o}({o}\imath))}\bigg[\lambda f_{{o}\imath}\bigg[\forall
   x_{\imath}[p_{{o}} \lor f_{{o}\imath}x_{\imath}] \supset \bigg[p_{{o}}
   \lor \Pi_{{o}({o}\imath)}f_{{o}\imath}\bigg]\bigg]\bigg] &&
   \text{Generalization: 2} \tag*{3.}\\ \bigg[\lambda
   f_{{o}\imath}\bigg[\forall x_{\imath}[p_{{o}}\lor
   f_{{o}\imath}x_{\imath}] \supset \bigg[p_{{o}} \lor
   \Pi_{{o}({o}\imath)}f_{{o}\imath}\bigg]\bigg]\bigg] [\lambda
   x_{\imath}r_{{o}\imath}x_{\imath}] && \text{Substitution: 2}
   \tag*{4.}\\ \forall x_{\imath}[p_{{o}} \lor [\lambda
   x_{\imath}r_{{o}\imath}x_{\imath}]x_{\imath}] \supset \left[p_{{o}}
   \lor \Pi_{{o}({o}\imath)}\left[\lambda
   x_{\imath}r_{{o}\imath}x_{\imath}\right]\right] && \text{β-contraction:
   4} \tag*{5.}\\ \forall x_{\imath}[p_{{o}} \lor [\lambda y_{\imath}
   r_{{o}\imath} y_{\imath}] x_{\imath}] \supset \left[p_{{o}} \lor
   \Pi_{{o}({o}\imath)}\left[\lambda
   x_{\imath}r_{{o}\imath}x_{\imath}\right]\right] && \text{α-conversion:
   5} \tag*{6.}\\ \forall x_{\imath}\left[p_{{o}} \lor
   r_{{o}\imath}x_{\imath}\right] \supset \left[p_{{o}} \lor
   \Pi_{{o}({o}\imath)}\left[\lambda
   x_{\imath}r_{{o}\imath}x_{\imath}\right]\right] && \text{β-contraction:
   6} \tag*{7.} \end{alignat}\]

   Note that line 3 can be written as
   \[ \forall f_{{o}\imath} [\forall x_{\imath} [p_{{o}} \lor
   f_{{o}\imath}x_{\imath}] \supset [p_{{o}} \lor [\forall x_{\imath}
   f_{{o}\imath} x_{\imath}] ]] \tag*{\(3'.\)} \]

   and line 7 can be written as
   \[ \forall x_{\imath}[p_{{o}} \lor r_{{o}\imath}x_{\imath}] \supset
   [p_{{o}} \lor \forall x_{\imath}r_{{o}\imath}x_{\imath}] \tag*{\(7'.\)}
   \]

   We have thus derived a well known law of quantification theory. We
   illustrate one possible interpretation of the line \(7'\) wff (which is
   closely related to Axiom E6) by considering a situation in which a
   rancher puts some horses in a corral and leaves for the night. Later,
   he cannot remember whether he closed the gate to the corral. While
   reflecting on the situation, he comes to a conclusion which can be
   expressed on line \(7'\) if we take the horses to be the elements of
   type \(\imath\), interpret \(p_{{o}}\) to mean “the gate was closed”,
   and interpret \(r_{{o}\imath}\) so that \(r_{{o}\imath}x_{\imath}\)
   asserts “\(x_{\imath}\) left the corral”. With this interpretation,
   line \(7'\) says

     If it is true of every horse that the gate was closed or that the
     horse left the corral, then the gate was closed or every horse left
     the corral.

   To the axioms listed above we add the axioms below to obtain Church’s
   type theory.

1.3.3 Axioms of Extensionality

   The axioms of boolean and functional extensionality are the following:
   \[\begin{align} [x_{{o}} \equiv y_{{o}}] & \supset x_{{o}} = y_{{o}}
   \tag{\(7^{o}\)} \\ \forall x_{\beta}[f_{\alpha \beta}x_{\beta} =
   g_{\alpha \beta}x_{\beta}] & \supset f_{\alpha \beta} = g_{\alpha
   \beta}\tag{\(7^{\alpha \beta}\)} \end{align}\]

   Church did not include Axiom \(7^{{o}}\) in his list of axioms in
   Church 1940, but he mentioned the possibility of including it. Henkin
   did include it in Henkin 1950.

1.3.4 Descriptions

   The expression
   \[\exists_1\bx_{\alpha}\bA_{{o}}\]

   stands for
   \[[\lambda p_{{o}\alpha}\exists y_{\alpha}[p_{{o}\alpha}y_{\alpha}
   \land \forall z_{\alpha}[p_{{o}\alpha}z_{\alpha} \supset z_{\alpha} =
   y_{\alpha}]]]\, [\lambda \bx_{\alpha}\bA_{{o}}]\]

   For example,
   \[\exists_1 x_{\alpha}P_{{o}\alpha}x_{\alpha}\]

   stands for
   \[[\lambda p_{{o}\alpha}\exists y_{\alpha}[p_{{o}\alpha}y_{\alpha}
   \land \forall z_{\alpha}[p_{{o}\alpha}z_{\alpha} \supset z_{\alpha} =
   y_{\alpha}]]]\, [\lambda x_{\alpha}P_{{o}\alpha}x_{\alpha}]\]

   By λ-conversion, this is equivalent to
   \[\exists y_{\alpha}[[\lambda
   x_{\alpha}P_{{o}\alpha}x_{\alpha}]y_{\alpha} \land \forall
   z_{\alpha}[[\lambda x_{\alpha}P_{{o}\alpha}x_{\alpha}] z_{\alpha}
   \supset z_{\alpha} = y_{\alpha}]]\]

   which reduces by λ-conversion to
   \[\exists y_{\alpha}[P_{{o}\alpha}y_{\alpha} \land \forall
   z_{\alpha}[P_{{o}\alpha}z_{\alpha} \supset z_{\alpha} = y_{\alpha}]]\]

   This asserts that there is a unique element which has the property
   \(P_{{o}\alpha}\). From this example we can see that in general,
   \(\exists_1\bx_{\alpha}\bA_{{o}}\) expresses the assertion that “there
   is a unique \(\bx_{\alpha}\) such that \(\bA_{{o}}\)”.

   When there is a unique such element \(\bx_{\alpha}\), it is convenient
   to have the notation \(\atoi\bx_{\alpha}\bA_{{o}}\) to represent the
   expression “the \(\bx_{\alpha}\) such that \(\bA_{{o}}\)”. Russell
   showed in Whitehead & Russell 1927b how to provide contextual
   definitions for such notations in his formulation of type theory. In
   Church’s type theory \(\atoi\bx_{\alpha}\bA_{{o}}\) is defined as
   \(\iota_{\alpha({o}\alpha)}[\lambda \bx_{\alpha}\bA_{{o}}]\). Thus,
   \(\atoi\) behaves like a variable-binding operator, but it is defined
   in terms of λ with the aid of the logical constant
   \(\iota_{\alpha({o}\alpha)}\). Thus, λ is still the only
   variable-binding operator that is needed.

   Since \(\bA_{{o}}\) describes \(\bx_{\alpha},
   \iota_{\alpha({o}\alpha)}\) is called a description operator.
   Associated with this notation is the following:

Axiom of Descriptions:

   \[ \exists_1 x_{\alpha}[p_{{o}\alpha}x_{\alpha}] \supset p_{{o}\alpha}
   [\iota_{\alpha({o}\alpha)}p_{{o}\alpha}] \tag{\(8^{\alpha}\)} \]

   This says that when the set \(p_{{o}\alpha}\) has a unique member, then
   \(\iota_{\alpha({o}\alpha)}p_{{o}\alpha}\) is in \(p_{{o}\alpha}\), and
   therefore is that unique member. Thus, this axiom asserts that
   \(\iota_{\alpha({o}\alpha)}\) maps one-element sets to their unique
   members.

   If from certain hypotheses one can prove
   \[\exists_1\bx_{\alpha}\bA_{{o}}\]

   then by using Axiom \(8^{\alpha}\) one can derive
   \[[\lambda \bx_{\alpha}\bA_{{o}}] [\iota_{\alpha({o}\alpha)}[\lambda
   \bx_{\alpha}\bA_{{o}}]]\]

   which can also be written as
   \[[\lambda \bx_{\alpha}\bA_{{o}}] {[\atoi\bx_{\alpha}\bA_{{o}}]}\]

   We illustrate the usefulness of the description operator with a small
   example. Suppose we have formalized the theory of real numbers, and our
   theory has constants \(1_{\varrho}\) and \(\times_{\varrho \varrho
   \varrho}\) to represent the number 1 and the multiplication function,
   respectively. (Here \(\varrho\) is the type of real numbers.) To
   represent the multiplicative inverse function, we can define the wff
   \(\textrm{INV}_{\varrho \varrho}\) as
   \[{\lambda z_{\varrho} \atoi x_{\varrho} [\times_{\varrho \varrho
   \varrho}z_{\varrho}x_{\varrho} = 1_{\varrho}]}\]

   Of course, in traditional mathematical notation we would not write the
   type symbols, and we would write \(\times_{\varrho \varrho
   \varrho}z_{\varrho}x_{\varrho}\) as \(z \times x\) and write
   \(\textrm{INV}_{\varrho \varrho}z\) as \(z^{-1}\). Thus \(z^{-1}\) is
   defined to be that x such that \(z \times x = 1\). When Z is provably
   not 0, we will be able to prove \(\exists_1 x_{\varrho}[\times_{\varrho
   \varrho \varrho} \textrm{Z x}_{\varrho} = 1_{\varrho}]\) and \(Z \times
   Z^{-1} = 1\), but if we cannot establish that Z is not 0, nothing
   significant about \(Z^{-1}\) will be provable.

1.3.5 Axiom of Choice

   The Axiom of Choice can be expressed as follows in Church’s type
   theory:
   \[ \exists x_{\alpha}p_{{o}\alpha}x_{\alpha} \supset
   p_{{o}\alpha}[\iota_{\alpha({o}\alpha)}p_{{o}\alpha}]
   \tag{\(9^{\alpha}\)} \]

   \((9^{\alpha})\) says that the choice function
   \(\iota_{\alpha({o}\alpha)}\) chooses from every nonempty set
   \(p_{{o}\alpha}\) an element, designated as
   \(\iota_{\alpha({o}\alpha)}p_{{o}\alpha}\), of that set. When this form
   of the Axiom of Choice is included in the list of axioms,
   \(\iota_{\alpha({o}\alpha)}\) is called a selection operator instead of
   a description operator, and \(\atoi\bx_{\alpha} \bA_{{o}}\) means “an
   \(\bx_{\alpha}\) such that \(\bA_{{o}}\)” when there is some such
   element \(\bx_{\alpha}\). These selection operators have the same
   meaning as Hilbert’s \(\epsilon\)-operator (Hilbert 1928). However, we
   here provide one such operator for each type α.

   It is natural to call \(\atoi\) a definite description operator in
   contexts where \(\atoi\bx_{\alpha}\bA_{{o}}\) means “the
   \(\bx_{\alpha}\) such that \(\bA_{{o}}\)”, and to call it an indefinite
   description operator in contexts where \(\atoi\bx_{\alpha}\bA_{{o}}\)
   means “an \(\bx_{\alpha}\) such that \(\bA_{{o}}\)”.

   Clearly the Axiom of Choice implies the Axiom of Descriptions, but
   sometimes formulations of type theory are used which include the Axiom
   of Descriptions, but not the Axiom of Choice.

   Another formulation of the Axiom of Choice simply asserts the existence
   of a choice function without explicitly naming it:
   \[ \exists j_{\alpha ({o}\alpha)}\forall p_{{o}\alpha}[\exists
   x_{\alpha}p_{{o}\alpha}x_{\alpha} \supset
   p_{{o}\alpha}[j_{\alpha({o}\alpha)}p_{{o}\alpha}]]
   \tag{\(\text{AC}^{\alpha}\)} \]

   Normally when one assumes the Axiom of Choice in type theory, one
   assumes it as an axiom schema, and asserts AC\(^{\alpha}\) for each
   type symbol α. A similar remark applies to the axioms for
   extensionality and description. However, modern proof systems for
   Church’s type theory, which are, e.g., based on resolution, do in fact
   avoid the addition of such axiom schemata for reasons as further
   explained in Sections 3.4 and 4 below. They work with more constrained,
   goal-directed proof rules instead.

   Before proceeding, we need to introduce some terminology. \(\cQ_0\) is
   an alternative formulation of Church’s type theory which will be
   described in Section 1.4 and is equivalent to the system described
   above using Axioms (1)–(8). A type symbol is propositional if the only
   symbols which occur in it are \({o}\) and parentheses.

   Yasuhara (1975) defined the relation “\(\ge\)” between types as the
   reflexive transitive closure of the minimal relation such that
   \((\alpha \beta) \ge \alpha\) and \((\alpha \beta) \ge \beta\). He
   established that:
     * If \(\alpha \ge \beta\), then \(\cQ_0 \vdash\) AC\(^{\alpha}
       \supset\) AC\(^{\beta}\).
     * Given a set S of types, none of which is propositional, there is a
       model of \(\cQ_0\) in which AC\(^{\alpha}\) fails if and only if
       \(\alpha \ge \beta\) for some β in S.

   The existence of a choice functions for “higher” types thus entails the
   existence of choice functions for “lower” types, the opposite is
   generally not the case though.

   Büchi (1953) has shown that while the schemas expressing the Axiom of
   Choice and Zorn’s Lemma can be derived from each other, the
   relationships between the particular types involved are complex.

1.3.6 Axioms of Infinity

   One can define the natural numbers (and therefore other basic
   mathematical structures such as the real and complex numbers) in type
   theory, but to prove that they have the required properties (such as
   Peano’s Postulates), one needs an Axiom of Infinity. There are many
   viable possibilities for such an axiom, such as those discussed in
   Church 1940, section 57 of Church 1956, and section 60 of Andrews 2002.

1.4 A Formulation Based on Equality

   In Section 1.2.1, \(\nsim_{({o}{o})}, \lor_{(({o}{o}){o})}\), and the
   \(\Pi_{({o}({o}\alpha))}\)’s were taken as primitive constants, and the
   wffs \(\sfQ_{{o}\alpha \alpha}\) which denote equality relations at
   type α were defined in terms of these. We now present an alternative
   formulation \(\cQ_0\) of Church’s type theory in which there are
   primitive constants \(\sfQ_{{o}\alpha \alpha}\) denoting equality, and
   \(\nsim_{({o}{o})}, \lor_{(({o}{o}){o})}\), and the
   \(\Pi_{({o}({o}\alpha))}\)’s are defined in terms of the
   \(\sfQ_{{o}\alpha \alpha}\)’s.

   Tarski (1923) noted that in the context of higher-order logic, one can
   define propositional connectives in terms of logical equivalence and
   quantifiers. Quine (1956) showed how both quantifiers and connectives
   can be defined in terms of equality and the abstraction operator λ in
   the context of Church’s type theory. Henkin (1963) rediscovered these
   definitions, and developed a formulation of Church’s type theory based
   on equality in which he restricted attention to propositional types.
   Andrews (1963) simplified the axioms for this system.

   \(\cQ_0\) is based on these ideas, and can be shown to be equivalent to
   a formulation of Church’s type theory using Axioms (1)–(8) of the
   preceding sections. This section thus provides an alternative to the
   material in the preceding Sections 1.2.1–1.3.4. More details about
   \(\cQ_0\) can be found in Andrews 2002.

1.4.1 Definitions

     * Type symbols, improper symbols, and variables of \(\cQ_0\) are
       defined as in Section 1.2.1.
     * The logical constants of \(\cQ_0\) are
       \(\sfQ_{(({o}\alpha)\alpha)}\) and \(\iota_{(\imath({o}\imath))}\)
       (for each type symbol α).
     * Wffs of \(\cQ_0\) are defined as in Section 1.2.1.

Abbreviations:

     * \(\bA_{\alpha} = \bB_{\alpha}\) stands for \(\sfQ_{{o}\alpha
       \alpha}\bA_{\alpha}\bB_{\alpha}\)
     * \(\bA_{{o}} \equiv \bB_{{o}}\) stands for
       \(\sfQ_{{o}{o}{o}}\)A\(_{{o}}\)B\(_{{o}}\)
     * \(T_{{o}}\) stands for \(\sfQ_{{o}{o}{o}} = \sfQ_{{o}{o}{o}}\)
     * \(F_{{o}}\) stands for \([\lambda x_{{o}}T_{{o}}] = [\lambda
       x_{{o}}x_{{o}}]\)
     * \(\Pi_{{o}({o}\alpha)}\) stands for
       \(\sfQ_{{o}({o}\alpha)({o}\alpha)}[\lambda x_{\alpha}T_{{o}}]\)
     * \(\forall \bx_{\alpha}\bA\) stands for
       \(\Pi_{{o}({o}\alpha)}[\lambda \bx_{\alpha}\bA]\)
     * \(\land_{{o}{o}{o}}\) stands for \(\lambda x_{{o}}\lambda
       y_{{o}}[[\lambda g_{{o}{o}{o}}[g_{{o}{o}{o}}T_{{o}}T_{{o}}]] =
       [\lambda g_{{o}{o}{o}}[g_{{o}{o}{o}}x_{{o}}y_{{o}}]]]\)
     * \(\bA_{{o}} \land \bB_{{o}}\) stands for \(\land_{{o}{o}{o}}
       \bA_{{o}} \bB_{{o}}\)
     * \(\nsim_{{o}{o}}\) stands for \(\sfQ_{{o}{o}{o}}F_{{o}}\)

   \(T_{{o}}\) denotes truth. The meaning of \(\Pi_{{o}({o}\alpha)}\) was
   discussed in Section 1.1. To see that this definition of
   \(\Pi_{{o}({o}\alpha)}\) is appropriate, note that \(\lambda
   x_{\alpha}T\) denotes the set of all elements of type α, and that
   \(\Pi_{{o}({o}\alpha)}s_{{o}\alpha}\) stands for
   \(\sfQ_{{o}({o}\alpha)({o}\alpha)}[\lambda x_{\alpha}T]
   s_{{o}\alpha}\), respectively for \([\lambda x_{\alpha}T] =
   s_{{o}\alpha}\). Therefore \(\Pi_{{o}({o}\alpha)}s_{{o}\alpha}\)
   asserts that \(s_{{o}\alpha}\) is the set of all elements of type α, so
   \(s_{{o}\alpha}\) contains all elements of type α. It can be seen that
   \(F_{{o}}\) can also be written as \(\forall x_{{o}}x_{{o}}\), which
   asserts that everything is true. This is false, so \(F_{{o}}\) denotes
   falsehood. The expression \(\lambda
   g_{{o}{o}{o}}[g_{{o}{o}{o}}x_{{o}}y_{{o}}]\) can be used to represent
   the ordered pair \(\langle x_{{o}},y_{{o}}\rangle\), and the
   conjunction \(x_{{o}} \land y_{{o}}\) is true iff \(x_{{o}}\) and
   \(y_{{o}}\) are both true, i.e., iff \(\langle T_{{o}},T_{{o}}\rangle =
   \langle x_{{o}},y_{{o}}\rangle\). Hence \(x_{{o}} \land y_{{o}}\) can
   be expressed by the formula \([\lambda
   g_{{o}{o}{o}}[g_{{o}{o}{o}}T_{{o}}T_{{o}}]] = [\lambda
   g_{{o}{o}{o}}[g_{{o}{o}{o}}x_{{o}}y_{{o}}]]\).

   Other propositional connectives, such as \(\lor, \supset\), and the
   existential quantifier \(\exists\), are easily defined. By using
   \(\iota_{(\imath({o}\imath))}\), one can define description operators
   \(\iota_{\alpha({o}\alpha)}\) for all types α.

1.4.2 Axioms and Rules of Inference

   \(\cQ_0\) has a single rule of inference.

     Rule R: From \(\bC\) and \(\bA_{\alpha} = \bB_{\alpha}\), to infer
     the result of replacing one occurrence of \(\bA_{\alpha}\) in
     \(\bC\) by an occurrence of \(\bB_{\alpha}\), provided that the
     occurrence of \(\bA_{\alpha}\) in \(\bC\) is not (an occurrence of a
     variable) immediately preceded by λ.

   The axioms for \(\cQ_0\) are the following:

   \[\begin{align} [g_{{o}{o}}T_{{o}} \land g_{{o}{o}}F_{{o}}] &= \forall
   x_{{o}}[g_{{o}{o}}x_{{o}}] \tag{Q1}\\ [x_{\alpha} = y_{\alpha}] &
   \supset [h_{{o}\alpha}x_{\alpha} = h_{{o}\alpha}y_{\alpha}]
   \tag{Q\(2^{\alpha}\)}\\ [f_{\alpha \beta} = g_{\alpha \beta}] & =
   \forall x_{\beta}[f_{\alpha \beta}x_{\beta} = g_{\alpha
   \beta}x_{\beta}] \tag{Q\(3^{\alpha \beta}\)}\\ [\lambda
   \bx_{\alpha}\bB_{\beta}]\bA_{\alpha} & =
   \textsf{SubFree}(\bA_{\alpha},\bx_{\alpha},\bB_{\beta}), \tag{Q4}\\
   &\quad \text{ provided } \bA_{\alpha} \text{ is free for } \bx \text{
   in } \bB_{\beta}\\
   \iota_{\imath({o}\imath)}[\sfQ_{{o}\imath\imath}y_{\imath}] &=
   y_{\imath} \tag{Q5} \end{align}\] The additional condition in axiom
   \((\rQ4)\) ensures that the substitution does not lead to free
   variables of A being bound in the result of the substitution.

2. Semantics

   It is natural to compare the semantics of type theory with the
   semantics of first-order logic, where the theorems are precisely the
   wffs which are valid in all interpretations. From an intuitive point of
   view, the natural interpretations of type theory are standard models,
   which are defined below. However, it is a consequence of Gödel’s
   Incompleteness Theorem (Gödel 1931) that axioms (1)–(9) do not suffice
   to derive all wffs which are valid in all standard models, and there is
   no consistent recursively axiomatized extension of these axioms which
   suffices for this purpose. Nevertheless, experience shows that these
   axioms are sufficient for most purposes, and Leon Henkin considered the
   problem of clarifying in what sense they are complete. The definitions
   and theorem below constitute Henkin’s (1950) solution to this problem,
   which is often referred to as general semantics or Henkin semantics.

   A frame is a collection \(\{\cD_{\alpha}\}_{\alpha}\) of nonempty
   domains (sets) \(\cD_{\alpha}\), one for each type symbol α, such that
   \(\cD_{{o}} = \{\sfT,\sfF\}\) (where \(\sfT\) represents truth and
   \(\sfF\) represents falsehood), and \(\cD_{\alpha \beta}\) is some
   collection of functions mapping \(\cD_{\beta}\) into \(\cD_{\alpha}\).
   The members of \(\cD_{\imath}\) are called individuals.

   An interpretation \(\langle \{\cD_{\alpha}\}_{\alpha}, \frI\rangle\)
   consists of a frame and a function \(\frI\) which maps each constant C
   of type α to an appropriate element of \(\cD_{\alpha}\), which is
   called the denotation of C. The logical constants are given their
   standard denotations.

   An assignment of values in the frame \(\{\cD_{\alpha}\}_{\alpha}\) to
   variables is a function \(\phi\) such that \(\phi \bx_{\alpha} \in
   \cD_{\alpha}\) for each variable \(\bx_{\alpha}\). (Notation: The
   assignment \(\phi[a/x]\) maps variable x to value a and it is identical
   with \(\phi\) for all other variable symbols different from x.)

   An interpretation \(\cM = \langle \{\cD_{\alpha}\}_{\alpha},
   \frI\rangle\) is a general model (aka Henkin model) iff there is a
   binary function \(\cV\) such that \(\cV_{\phi}\bA_{\alpha} \in
   \cD_{\alpha}\) for each assignment \(\phi\) and wff \(\bA_{\alpha}\),
   and the following conditions are satisfied for all assignments and all
   wffs:
     * \(\cV_{\phi}\bx_{\alpha} = \phi \bx_{\alpha}\) for each variable
       \(\bx_{\alpha}\).
     * \(\cV_{\phi}A_{\alpha} = \frI A_{\alpha}\) if \(A_{\alpha}\) is a
       primitive constant.
     * \(\cV_{\phi}[\bA_{\alpha \beta}\bB_{\beta}] =
       (\cV_{\phi}\bA_{\alpha \beta})(\cV_{\phi}\bB_{\beta})\) (the value
       of a function \(\cV_{\phi}\bA_{\alpha \beta}\) at the argument
       \(\cV_{\phi}\bB_{\beta})\).
     * \(\cV_{\phi}[\lambda \bx_{\alpha}\bB_{\beta}] =\) that function
       from \(\cD_{\alpha}\) into \(\cD_{\beta}\) whose value for each
       argument \(z \in \cD_{\alpha}\) is \(\cV_{\psi}\bB_{\beta}\), where
       \(\psi\) is that assignment such that \(\psi \bx_{\alpha} = z\) and
       \(\psi \by_{\beta} = \phi \by_{\beta}\) if \(\by_{\beta} \ne
       \bx_{\alpha}\).

   If an interpretation \(\cM\) is a general model, the function \(\cV\)
   is uniquely determined. \(\cV_{\phi}\bA_{\alpha}\) is called the value
   of \(\bA_{\alpha}\) in \(\cM\) with respect to \(\phi\).

   One can easily show that the following statements hold in all general
   models \(\cM\) for all assignments \(\phi\) and all wffs \(\bA\) and
   \(\bB\):
     * \(\cV_{\phi} T_{{o}} = \sfT\) and \(\cV_{\phi} F_{{o}} = \sfF\)
     * \(\cV_{\phi} [\nsim_{{o}{o}} \bA_{{o}}] = \sfT\) iff \(\cV_{\phi}
       \bA_{{o}} = \sfF\)
     * \(\cV_{\phi} [ \bA_{{o}} \lor \bB_{{o}} ] = \sfT\) iff \(\cV_{\phi}
       \bA_{{o}} = \sfT\) or \(\cV_{\phi} \bB_{{o}} = \sfT\)
     * \(\cV_{\phi} [ \bA_{{o}} \land \bB_{{o}} ] = \sfT\) iff
       \(\cV_{\phi} \bA_{{o}} = \sfT\) and \(\cV_{\phi} \bB_{{o}} = \sfT\)
     * \(\cV_{\phi} [ \bA_{{o}} \supset \bB_{{o}} ] = \sfT\) iff
       \(\cV_{\phi} \bA_{{o}} = \sfF\) or \(\cV_{\phi} \bB_{{o}} = \sfT\)
     * \(\cV_{\phi} [ \bA_{{o}} \equiv \bB_{{o}} ] = \sfT\) iff
       \(\cV_{\phi} \bA_{{o}} = \cV_{\phi} \bB_{{o}}\)
     * \(\cV_{\phi} [\forall \bx_{\alpha}\bA] = \sfT\) iff
       \(\cV_{\phi[a/x]} \bA= \sfT\) for all \(a \in \cD_{\alpha}\)
     * \(\cV_{\phi} [\exists \bx_{\alpha}\bA] = \sfT\) iff there exists an
       \(a \in \cD_{\alpha}\) such that \(\cV_{\phi[a/x]} \bA= \sfT\)

   The semantics of general models is thus as expected. However, there is
   a subtlety to note regarding the following condition for arbitrary
   types α:
     * [equality] \(\cV_{\phi} [ \bA_{\alpha} = \bB_{\alpha} ] = \sfT\)
       iff \(\cV_{\phi} \bA_{\alpha} = \cV_{\phi} \bB_{\alpha}\)

   When the definitions of Section 1.2.1 are employed, where equality has
   been defined in terms of Leibniz’ principle, then this statement is not
   implied for all types α. It only holds if we additionally require that
   the domains \(\cD_{{o}\alpha}\) contain all the unit sets of objects of
   type α, or, alternatively, that the domains \(\cD_{{o}\alpha\alpha}\)
   contain the respective identity relations on objects of type α (which
   entails the former). The need for this additional requirement, which is
   not included in the original work of Henkin (1950), has been
   demonstrated in Andrews 1972a.

   When instead the alternative definitions of Section 1.4 are employed,
   then this requirement is obviously met due to the presence of the
   logical constants \(\sfQ_{{o}\alpha \alpha}\) in the signature, which
   by definition denote the respective identity relations on the objects
   of type α and therefore trivially ensure their existence in each
   general model \(\cM\). It is therefore a natural option to always
   assume primitive equality constants (for each type α) in a concrete
   choice of base system for Church’s type theory, just as realized in
   Andrews’ system \(\cQ_0\).

   An interpretation \(\langle \{\cD_{\alpha}\}_{\alpha}, \frI\rangle\) is
   a standard model iff for all α and \(\beta , \cD_{\alpha \beta}\) is
   the set of all functions from \(\cD_{\beta}\) into \(\cD_{\alpha}\).
   Clearly a standard model is a general model.

   We say that a wff \(\bA\) is valid in a model \(\cM\) iff
   \(\cV_{\phi}\bA = \sfT\) for every assignment \(\phi\) into \(\cM\). A
   model for a set \(\cH\) of wffs is a model in which each wff of \(\cH\)
   is valid.

   A wff \(\bA\) is valid in the general [standard] sense iff \(\bA\) is
   valid in every general [standard] model. Clearly a wff which is valid
   in the general sense is valid in the standard sense, but the converse
   of this statement is false.

   Completeness and Soundness Theorem (Henkin 1950): A wff is a theorem if
   and only if it is valid in the general sense.

   Not all frames belong to interpretations, and not all interpretations
   are general models. In order to be a general model, an interpretation
   must have a frame satisfying certain closure conditions which are
   discussed further in Andrews 1972b. Basically, in a general model every
   wff must have a value with respect to each assignment.

   A model is said to be finite iff its domain of individuals is finite.
   Every finite model for \(\cQ_0\) is standard (Andrews 2002, Theorem
   5404), but every set of sentences of \(\cQ_0\) which has infinite
   models also has nonstandard models (Andrews2002, Theorem 5506).

   An understanding of the distinction between standard and nonstandard
   models can clarify many phenomena. For example, it can be shown that
   there is a model \(\cM = \langle \{\cD_{\alpha}\}_{\alpha},
   \frI\rangle\) in which \(\cD_{\imath}\) is infinite, and all the
   domains \(\cD_{\alpha}\) are countable. Thus \(\cD_{\imath}\) and
   \(\cD_{{o}\imath}\) are both countably infinite, so there must be a
   bijection h between them. However, Cantor’s Theorem (which is provable
   in type theory and therefore valid in all models) says that
   \(\cD_{\imath}\) has more subsets than members. This seemingly
   paradoxical situation is called Skolem’s Paradox. It can be resolved by
   looking carefully at Cantor’s Theorem, i.e., \(\nsim \exists
   g_{{o}\imath\imath}\forall f_{{o}\imath}\exists
   j_{\imath}[g_{{o}\imath\imath}j_{\imath} = f_{{o}\imath}]\), and
   considering what it means in a model. The theorem says that there is no
   function \(g \in \cD_{{o}\imath\imath}\) from \(\cD_{\imath}\) into
   \(\cD_{{o}\imath}\) which has every set \(f_{{o}\imath} \in
   \cD_{{o}\imath}\) in its range. The usual interpretation of the
   statement is that \(\cD_{{o}\imath}\) is bigger (in cardinality) than
   \(\cD_{\imath}\). However, what it actually means in this model is that
   h cannot be in \(\cD_{{o}\imath\imath}\). Of course, \(\cM\) must be
   nonstandard.

   While the Axiom of Choice is presumably true in all standard models,
   there is a nonstandard model for \(\cQ_0\) in which AC\(^{\imath}\) is
   false (Andrews 1972b). Thus, AC\(^{\imath}\) is not provable in
   \(\cQ_0\).

   Thus far, investigations of model theory for Church’s type theory have
   been far less extensive than for first-order logic. Nevertheless, there
   has been some work on methods of constructing nonstandard models of
   type theory and models in which various forms of extensionality fail,
   models for theories with arbitrary (possibly incomplete) sets of
   logical constants, and on developing general methods of establishing
   completeness of various systems of axioms with respect to various
   classes of models. Relevant papers include Andrews 1971, 1972a,b, and
   Henkin 1975. Further related work can be found in Benzmüller et al.
   2004, Brown 2004, 2007, and Muskens 2007.

3. Metatheory

3.1 Lambda-Conversion

   The first three rules of inference in Section 1.3.1 are called rules of
   λ-conversion. If \(\bD\) and \(\bE\) are wffs, we write \(\bD \conv
   \bE\) to indicate that \(\bD\) can be converted to \(\bE\) by
   applications of these rules. This is an equivalence relation between
   wffs. A wff \(\bD\) is in β-normal form iff it has no well-formed parts
   of the form \([[\lambda \bx_{\alpha}\bB_{\beta}]\bA_{\alpha}]\). Every
   wff is convertible to one in β-normal form. Indeed, every sequence of
   contractions (applications of rule 2, combined as necessary with
   alphabetic changes of bound variables) of a wff is finite; obviously,
   if such a sequence cannot be extended, it terminates with a wff in
   β-normal form. (This is called the strong normalization theorem.) By
   the Church-Rosser Theorem, this wff in β-normal form is unique modulo
   alphabetic changes of bound variables. For each wff \(\bA\) we denote
   by \({\downarrow}\bA\) the first wff (in some enumeration) in β-normal
   form such that \(\bA \conv {\downarrow} \bA\). Then \(\bD \conv \bE\)
   if and only if \({\downarrow} \bD = {\downarrow} \bE\).

   By using the Axiom of Extensionality one can obtain the following
   derived rule of inference:

     \(\eta\)-Contraction. Replace a well-formed part \([\lambda
     \by_{\beta}[\bB_{\alpha \beta}\by_{\beta}]]\) of a wff by
     \(\bB_{\alpha \beta}\), provided \(\by_{\beta}\) does not occur free
     in \(\bB_{\alpha \beta}\).

   This rule and its inverse (which is called \(\eta\)-Expansion) are
   sometimes used as additional rules of λ-conversion. See Church 1941,
   Stenlund 1972, Barendregt 1984, and Barendregt et al. 2013 for more
   information about λ-conversion.

   It is worth mentioning (again) that λ-abstraction replaces the need for
   comprehension axioms in Church’s type theory.

3.2 Higher-Order Unification

   The challenges in higher-order unification are outlined very briefly.
   More details on the topic are given in Dowek 2001; its utilization in
   higher-order theorem provers is also discussed in Benzmüller & Miller
   2014.

   Definition. A higher-order unifier for a pair \(\langle
   \bA,\bB\rangle\) of wffs is a substitution \(\theta\) for free
   occurrences of variables such that \(\theta \bA\) and \(\theta \bB\)
   have the same β-normal form. A higher-order unifier for a set of pairs
   of wffs is a unifier for each of the pairs in the set.

   Higher-order unification differs from first-order unification (Baader &
   Snyder 2001) in a number of important respects. In particular:
    1. Even when a unifier for a pair of wffs exists, there may be no most
       general unifier (Gould 1966).
    2. Higher-order unification is undecidable (Huet 1973b), even in the
       “second-order” case (Goldfarb 1981).

   However, an algorithm has been devised (Huet 1975, Jensen &
   Pietrzykowski 1976), called pre-unification, which will find a unifier
   for a set of pairs of wffs if one exists. The pre-unifiers computed by
   Huet’s procedure are substitutions that can reduce the original
   unification problem to one involving only so called flex-flex
   unification pairs. Flex-flex pairs have variable head symbols in both
   terms to be unified and they are known to always have a solution. The
   concrete computation of these solutions can thus be postponed or
   omitted. Pre-unification is utilized in all the resolution based
   theorem provers mentioned in Section 4.

   Pattern unification refers a small subset of unification problems,
   first studied by Miller 1991, whose identification has been important
   for the construction of practical systems. In a pattern unification
   problem every occurrence of an existentially quantified variable is
   applied to a list of arguments that are all distinct variables bound by
   either a λ-binder or a universal quantifier in the scope of the
   existential quantifier. Thus, existentially quantified variables cannot
   be applied to general terms but a very restricted set of bound
   variables. Pattern unification, like first-order unification, is
   decidable and most general unifiers exist for solvable problems. This
   is why pattern unification is preferably employed (when applicable) in
   some state-of-the-art theorem provers for Church’s type theory.

3.3 A Unifying Principle

   The Unifying Principle was introduced in Smullyan 1963 (see also
   Smullyan 1995) as a tool for deriving a number of basic metatheorems
   about first-order logic in a uniform way. The principle was extended to
   elementary type theory by Andrews (1971) and to extensional type
   theory, that is, Henkin’s general semantics without description or
   choice, by Benzmüller, Brown and Kohlhase (2004). We outline these
   extensions in some more detail below.

3.3.1 Elementary Type Theory

   The Unifying Principle was extended to elementary type theory (the
   system \(\cT\) of Section 1.3.2) in Andrews 1971 by applying ideas in
   Takahashi 1967. This Unifying Principle for \(\cT\) has been used to
   establish cut-elimination for \(\cT\) in Andrews 1971 and completeness
   proofs for various systems of type theory in Huet 1973a, Kohlhase 1995,
   and Miller 1983. We first give a definition and then state the
   principle.

   Definition. A property \(\Gamma\) of finite sets of wffs\(_{{o}}\) is
   an abstract consistency property iff for all finite sets \(\cS\) of
   wffs\(_{{o}}\), the following properties hold (for all wffs A, B):
    1. If \(\Gamma(\cS)\), then there is no atom \(\bA\) such that \(\bA
       \in \cS\) and \([\nsim \bA] \in \cS\).
    2. If \(\Gamma(\cS \cup \{\bA\})\), then \(\Gamma(\cS \cup
       {\downarrow} \bA\})\).
    3. If \(\Gamma(\cS \cup \{\nsim \nsim \bA\})\), then \(\Gamma(\cS \cup
       \{\bA\})\).
    4. If \(\Gamma(\cS \cup \{\bA \lor \bB\})\), then \(\Gamma(\cS \cup
       \{\bA\})\) or \(\Gamma(\cS \cup \{\bB\})\).
    5. If \(\Gamma(\cS \cup \{\nsim[\bA \lor \bB]\})\), then \(\Gamma(\cS
       \cup \{\nsim \bA,\nsim \bB\})\).
    6. If \(\Gamma(\cS \cup \{\Pi_{{o}({o}\alpha)}\bA_{{o}\alpha}\})\),
       then \(\Gamma(\cS \cup \{\Pi_{{o}({o}\alpha)}\bA_{{o}\alpha},
       \bA_{{o}\alpha}\bB_{\alpha}\})\) for each wff \(\bB_{\alpha}\).
    7. If \(\Gamma(\cS \cup \{\nsim
       \Pi_{{o}({o}\alpha)}\bA_{{o}\alpha}\})\), then \(\Gamma(\cS \cup
       \{\nsim \bA_{{o}\alpha}\bc_{\alpha}\})\), for any variable or
       parameter \(\bc_{\alpha}\) which does not occur free in
       \(\bA_{{o}\alpha}\) or any wff in \(\cS\).

   Note that consistency is an abstract consistency property.

   Unifying Principle for \(\cT\). If \(\Gamma\) is an abstract
   consistency property and \(\Gamma(\cS)\), then \(\cS\) is consistent in
   \(\cT\).

   Here is a typical application of the Unifying Principle. Suppose there
   is a procedure \(\cM\) which can be used to refute sets of sentences,
   and we wish to show it is complete for \(\cT\). For any set of
   sentences, let \(\Gamma(\cS)\) mean that \(\cS\) is not refutable by
   \(\cM\), and show that \(\Gamma\) is an abstract consistency property.
   Now suppose that \(\bA\) is a theorem of \(\cT\). Then \(\{\nsim
   \bA\}\) is inconsistent in \(\cT\), so by the Unifying Principle not
   \(\Gamma(\{\nsim \bA\})\), so \(\{\nsim \bA\}\) is refutable by
   \(\cM\).

3.3.2 Extensional Type Theory

   Extensions of the above Unifying principle towards Church’s type theory
   with general semantics were studied since the mid nineties. A primary
   motivation was to support (refutational) completeness investigations
   for the proof calculi underlying the emerging higher-order automated
   theorem provers (see Section 4 below). The initial interest was on a
   fragment of Church’s type theory, called extensional type theory, that
   includes the extensionality axioms, but excludes
   \(\iota_{(\alpha({o}\alpha))}\) and the axioms for it (description and
   choice were largely neglected in the automated theorem provers at the
   time). Analogous to before, a distinction has been made between
   extensional type theory with defined equality (as in Section 1.2.1,
   where equality is defined via Leibniz’ principle) and extensional type
   theory with primitive equality (e.g., system \(\cQ_0\) as in Section
   1.4, or, alternatively, a system based on logical constants
   \(\nsim_{({o}{o})}, \lor_{(({o}{o}){o})}\), and the
   \(\Pi_{({o}({o}\alpha))}\)’s as in Section 1.2.1, but with additional
   primitive logical constants \(=_{{o}\alpha\alpha}\) added).

   A first attempt towards a Unifying Principle for extensional type
   theory with primitive equality is presented in Kohlhase 1993. The
   conditions given there, which are still incomplete^[1], were
   subsequently modified and complemented as follows:
     * To obtain a Unifying Principle for extensional type theory with
       defined equality, Benzmüller & Kohlhase 1997 added the following
       conditions for boolean extensionality, functional extensionality
       and saturation to the above conditions 1.-7. for \(\cT\) (their
       presentation has been adapted here; for technical reasons, they
       also employ a slightly stronger variant for condition 2. based on
       β-conversion rather than β-normalization):
         8. If \(\Gamma(\cS \cup \{ \bA_{{o}} = \bB_{{o}} \})\), then
            \(\Gamma(\cS \cup \{ \bA_{{o}}, \bB_{{o}} \})\) or
            \(\Gamma(\cS \cup \{ \nsim \bA_{{o}}, \nsim \bB_{{o}} \})\)
         9. If \(\Gamma(\cS \cup \{ \bA_{\alpha\beta} = \bB_{\alpha\beta}
            \})\), then \(\Gamma(\cS \cup \{ \bA_{\alpha\beta} \bc_\beta =
            \bB_{\alpha\beta} \bc_\beta \})\) for any parameter
            \(\bc_{\beta}\) which does not occur free in \(\cS\).
        10. \(\Gamma(\cS \cup \{ \bA_{{o}} \})\) or \(\Gamma(\cS \cup \{
            \nsim \bA_{{o}} \})\)
       The saturation condition 10. was required to properly establish the
       principle. However, since this condition is related to the proof
       theoretic notion of cut-elimination, it limits the utility of the
       principle in completeness proofs for machine-oriented calculi. The
       principle was nevertheless used in Benzmüller & Kohlhase 1998a and
       Benzmüller 1999a,b to obtain a completeness proof for a system of
       extensional higher-order resolution. The principle was also applied
       in Kohlhase 1998 to study completeness for a related extensional
       higher-order tableau calculus,^[2] in which the extensionality
       rules for Leibniz equality were adapted from Benzmüller & Kohlhase
       1998a, respectively Benzmüller 1997.
     * Different options for achieving a Unifying Principle for
       extensional type theory with primitive equality are presented in
       Benzmüller 1999a (in this work primitive logical constants
       \(=_{{o}\alpha\alpha}\) were used in addition to
       \(\nsim_{({o}{o})}, \lor_{(({o}{o}){o})}\), and the
       \(\Pi_{({o}({o}\alpha))}\)’s; such a redundant choice of logical
       constants is not rare in higher-order theorem provers). One option
       is to introduce a reflexivity and substitutivity condition. An
       alternative is to combine a reflexivity condition with a condition
       connecting primitive with defined equality, so that the
       substitutivity condition follows. Note that introducing a defined
       notion of equality based on the Leibniz principle is, of course,
       still possible in this context (defined equality is denoted in the
       remainder of this section by \(\doteq\) to properly distinguish it
       from primitive equality \(=\)):
         8. Not \(\Gamma(\cS \cup \{ \nsim [\bA_{\alpha} = \bA_{\alpha}]
            \})\)
         9. If \(\Gamma(\cS \cup \{ \bA_{\alpha} = \bA_{\alpha} \})\),
            then \(\Gamma(\cS \cup \{ \bA_{\alpha} \doteq \bA_{\alpha}
            \})\)
        10. \(\Gamma(\cS \cup \{ \bA_{{o}} \})\) or \(\Gamma(\cS \cup \{
            \nsim \bA_{{o}} \})\)
       The saturation condition 10. still has to be added independent of
       which option is considered. The principle was applied in Benzmüller
       1999a,b to prove completeness for the extensional higher-order
       RUE-resolution^[3] calculus underlying the higher-order automated
       theorem prover LEO and its successor LEO-II.
     * In Benzmüller et al. 2004 the principle is presented in a very
       general way which allows for various possibilities concerning the
       treatment of extensionality and equality in the range between
       elementary type theory and extensional type theory. The principle
       is applied to obtain completeness proofs for an associated range of
       natural deduction calculi. The saturation condition is still used
       in this work.
     * Based on insights from Brown’s (2004, 2007) thesis, a solution for
       replacing the undesirable saturation condition by two weaker
       conditions is presented in Benzmüller, Brown, and Kohlhase 2009;
       this work also further studies the relation between saturation and
       cut-elimination. The two weaker conditions, termed mating and
       decomposition, are easier to demonstrate than saturation in
       completeness proofs for machine-oriented calculi. They are
       (omitting some type information in the second one and abusing
       notation):
         1. If \(\Gamma(\cS \cup \{ \nsim \bA_{{o}}, \bB_{{o}} \})\) for
            atoms \(\bA_{{o}}\) and \(\bB_{{o}}\), then \(\Gamma(\cS \cup
            \{ \nsim [\bA_{{o}} \doteq \bB_{{o}}] \})\)
         2. If \(\Gamma(\cS \cup \{ \nsim [h \overline{\bA^n_{\alpha^n}}
            \doteq h \overline{\bB^n_{\alpha^n}} ] \})\), where head
            symbol \(h_{\beta\overline{\alpha^n}}\) is a parameter, then
            there is an \(i\ (1 \leq i \leq n)\) such that \(\Gamma(\cS
            \cup \{ \nsim [\bA^i_{\alpha^i} \doteq \bB^i_{\alpha^i}]
            \})\).
       The modified principle is applied in Benzmüller et al. 2009 to show
       completeness for a sequent calculus for extensional type theory
       with defined equality.
     * A further extended Unifying Principle for extensional type theory
       with primitive equality is presented and used in Backes & Brown
       2011 to prove the completeness of a tableau calculus for type
       theory which incorporates the axiom of choice.
     * A closely related and further simplified principle has also been
       presented and studied in Steen 2018, where it was applied for
       showing completeness of the paramodulation calculus that is
       underlying the theorem prover Leo-III (Steen & Benzmüller 2018,
       2021).

3.4 Cut-Elimination and Cut-Simulation

   Cut-elimination proofs (see also the SEP entry on proof theory) for
   Church’s type theory, which are often closely related to such proofs
   (Takahashi 1967, 1970; Prawitz 1968; Mints 1999) for other formulations
   of type theory, may be found in Andrews 1971, Dowek & Werner 2003, and
   Brown 2004. In Benzmüller et al. 2009 it is shown how certain
   wffs\(_{{o}}\), such as axioms of extensionality, descriptions, choice
   (see Sections 1.3.3 to 1.3.5), and induction, can be used to justify
   cuts in cut-free sequent calculi for elementary type theory. Moreover,
   the notions of cut-simulation and cut-strong axioms are introduced in
   this work, and the need for omitting defined equality and for
   eliminating cut-strong axioms such as extensionality, description,
   choice and induction in machine-oriented calculi (e.g., by replacing
   them with more constrained, goal-directed rules) in order to reduce
   cut-simulation effects are discussed as a major challenge for
   higher-order automated theorem proving. In other words, including
   cut-strong axioms in a machine-oriented proof calculus for Church’s
   type theory is essentially as bad as including a cut rule, since the
   cut rule can be mimicked by them.

3.5 Expansion Proofs

   An expansion proof is a generalization of the notion of a Herbrand
   expansion of a theorem of first-order logic; it provides a very
   elegant, concise, and nonredundant representation of the relationship
   between the theorem and a tautology which can be obtained from it by
   appropriate instantiations of quantifiers and which underlies various
   proofs of the theorem. Miller (1987) proved that a wff \(\bA\) is a
   theorem of elementary type theory if and only if \(\bA\) has an
   expansion proof.

   In Brown 2004 and 2007, this concept is generalized to that of an
   extensional expansion proof to obtain an analogous theorem involving
   type theory with extensionality.

3.6 The Decision Problem

   Since type theory includes first-order logic, it is no surprise that
   most systems of type theory are undecidable. However, one may look for
   solvable special cases of the decision problem. For example, the system
   \(\cQ_{0}^1\) obtained by adding to \(\cQ_0\) the additional axiom
   \(\forall x_{\imath}\forall y_{\imath}[x_{\imath}=y_{\imath}]\) is
   decidable.

   Although the system \(\cT\) of elementary type theory is analogous to
   first-order logic in certain respects, it is a considerably more
   complex language, and special cases of the decision problem for
   provability in \(\cT\) seem rather intractable for the most part.
   Information about some very special cases of this decision problem may
   be found in Andrews 1974, and we now summarize this.

   A wff of the form \(\exists \bx^1 \ldots \exists \bx^n [\bA=\bB]\) is a
   theorem of \(\cT\) iff there is a substitution \(\theta\) such that
   \(\theta \bA \conv \theta \bB\). In particular, \(\vdash \bA=\bB\) iff
   \(\bA \conv \bB\), which solves the decision problem for wffs of the
   form \([\bA=\bB]\). Naturally, the circumstance that only trivial
   equality formulas are provable in \(\cT\) changes drastically when
   axioms of extensionality are added to \(\cT\). \(\vdash \exists
   \bx_{\beta}[\bA=\bB]\) iff there is a wff \(\bE_{\beta}\) such that
   \(\vdash[\lambda \bx_{\beta}[\bA=\bB]]\bE_{\beta}\), but the decision
   problem for the class of wffs of the form \(\exists
   \bx_{\beta}[\bA=\bB]\) is unsolvable.

   A wff of the form \(\forall \bx^1 \ldots \forall \bx^n\bC\), where
   \(\bC\) is quantifier-free, is provable in \(\cT\) iff \({\downarrow}
   \bC\) is tautologous. On the other hand, the decision problem for wffs
   of the form \(\exists \bz\bC\), where \(\bC\) is quantifier-free, is
   unsolvable. (By contrast, the corresponding decision problem in
   first-order logic with function symbols is known to be solvable (Maslov
   1967).) Since irrelevant or vacuous quantifiers can always be
   introduced, this shows that the only solvable classes of wffs of
   \(\cT\) in prenex normal form defined solely by the structure of the
   prefix are those in which no existential quantifiers occur.

4. Automation

4.1 Machine-Oriented Proof Calculi

   The development, respectively improvement, of machine-oriented proof
   calculi for Church’s type theory has made good progress in recent
   years; see, e.g., the references on superposition based calculi given
   below. The challenges are obviously much bigger than in first-order
   logic. The practically way more expressive nature of the term-language
   of Church’s type theory causes a larger, bushier and more difficult to
   traverse proof search space than in first-order logic. Moreover,
   remember that unification, which constitutes a very important control
   and filter mechanism in first-order theorem proving, is undecidable (in
   general) in type theory; see Section 3.2. On the positive side,
   however, there is a chance to find significantly shorter proofs than in
   first-order logic. This is well illustrated with a small, concrete
   example in Boolos 1987, for which a fully automated proof seems now in
   reach (Benzmüller et al. 2023).

   Clearly, further progress is needed to further leverage the practical
   relevance of existing calculi for Church’s type theory and their
   implementations (see Section 4.3). The challenges include
     * an appropriate handling of the impredicative nature of Church’s
       type theory (some form of blind guessing cannot generally be
       avoided in a complete proof procedure, but must be intelligently
       guided),
     * the elimination/reduction of cut-simulation effects (see Section
       3.4) caused by defined equality or cut-strong axioms (e.g.,
       extensionality, description, choice, induction) in the search
       space,
     * the general undecidability of unification, rendering it a rather
       problematic filter mechanism for controlling proof search,
     * the invention of suitable heuristics for traversing the search
       space,
     * the provision of suitable term-orderings and their effective
       exploitation in term rewriting procedures,
     * and efficient data structures in combination with strong technical
       support for essential operations such λ-conversion, substitution
       and rewriting.

   It is planned that future editions of this article further elaborate on
   machine-oriented proof calculi for Church’s type theory. For the time
   being, however, we provide only a selection of historical and more
   recent references for the interested reader (see also Section 5 below):
     * Sequent calculi: Schütte 1960; Takahashi 1970; Takeuti 1987; Mints
       1999; Brown 2004, 2007; Benzmüller et al. 2009.
     * Mating method: Andrews 1981; Bibel 1981; Bishop 1999.
     * Resolution calculi: Andrews 1971; Huet 1973a; Jensen &
       Pietrzykowski 1976; Benzmüller 1997, 1999a; Benzmüller & Kohlhase
       1998a.
     * Tableau method: Kohlhase^[4] 1995, 1998; Brown & Smolka 2010;
       Backes & Brown 2011.
     * Paramodulation calculi: Benzmüller 1999a,b; Steen 2018, Steen &
       Benzmüller 2018, 2021.
     * Superposition calculi: Bentkamp et al. 2018, Bentkamp et al. 2021,
       Bentkamp et al. 2023a,c
     * Combinator-based superposition calculi: Bhayat & Reger 2020

4.2 Proof Assistants

   Early computer systems for proving theorems of Church’s type theory (or
   extensions of it) include HOL (Gordon 1988; Gordon & Melham 1993), TPS
   (Andrews et al. 1996; Andrews & Brown 2006), Isabelle (Paulson 1988,
   1990), PVS (Owre et al. 1996; Shankar 2001), IMPS (Farmer et al. 1993),
   HOL Light (Harrison 1996), OMEGA (Siekmann et al. 2006), and λClam
   (Richardson et al. 1998). Prominent proof assistents that support more
   powerful dependent type theory include Coq (Bertot & Castéran 2004) and
   the recent Lean system (de Moura & Ullrich 2021). See Other Internet
   References section below for links to further info on these and other
   provers mentioned later.

   Most of the early systems mentioned above focused (at least initially)
   on interactive proof. However, the TPS project in particular had been
   working since the mid-1980s on the integration of ND-style interactive
   proof and automated theorem proving using the mating method, and had
   investigated proof transformation techniques between the two. This
   research was further intensified in the 1990s, when other projects
   investigated various solutions such as proof planning and bridges to
   external theorem provers using so-called hammer tools. The hammers
   developed at that time were early precursors of todays very successful
   hammer tools such as Sledgehammer, HolyHammer and related systems
   (Blanchette et al. 2013, Kaliszyk & Urban 2015 and Czaika & Kaliszyk
   2018).

   While, triggered by the mentioned dynamics, some first initial progress
   was made in the late 80s and during the 90s with regards to the
   automation of Church’s type theory, the resource investments and
   achievements at the time were lacking much behind those seen, for
   example, in first-order theorem proving. Good progress was fostered
   only later, in particular, through the development of a commonly
   supported syntax for Church’s type theory, called TPTP THF (Sutcliffe &
   Benzmüller 2010, Sutcliffe 2022), and the inclusion, from 2009 onwards,
   of a TPTP THF division in the yearly CASC competitions (kind of world
   championships for automated theorem proving; see Sutcliffe 2016 for
   further details). These competitions, in combination with further
   factors, triggered an increasing interest in the full automation of
   Church’s type theory. Particularly successful was recently the
   exploration of equality based theorem proving using the superposition
   approach and the adaptation of SMT techniques to HOL.

4.3 Automated Theorem Provers

   A selection of theorem provers for Church's type theory is presented.
   The focus is on systems that have successfully participated in TPTP THF
   CASC competitions in the past, and the order of presentation is
   motivated by their first-time CASC participation. The latest editions
   of most mentioned systems can be accessed online via the SystemOnTPTP
   infrastructure (Sutcliffe 2017). Nearly all mentioned systems produce
   verifiable proof certificates in the TPTP TSTP syntax.

   The TPS prover (Andrews et al. 1996, Andrews & Brown 2006) can be used
   to prove theorems of elementary type theory or extensional type theory
   automatically, interactively, or semi-automatically. When searching for
   a proof automatically, TPS first searches for an expansion proof
   (Miller 1987) or an extensional expansion proof (Brown 2004, 2007) of
   the theorem. Part of this process involves searching for acceptable
   matings (Andrews 1981, Bishop 1999). The behavior of TPS is controlled
   by sets of flags, also called modes. A simple scheduling mechanism is
   employed in the latest versions of TPS to sequentially run a about
   fifty modes for a limited amount of time. TPS was the winner of the
   first THF CASC competition in 2009.

   The LEO-II prover (Benzmüller et al. 2015) is the successor of LEO
   (Benzmüller & Kohlhase 1998b, which was hardwired with the OMEGA proof
   assistant (LEO stands for Logical Engine of OMEGA). The provers are
   based on the RUE-resolution calculi developed in Benzmüller 1999a,b.
   LEO was the first prover to implement calculus rules for extensionality
   to avoid cut-simulation effects. LEO-II inherits and adapts them, and
   provides additional calculus rules for description and choice. The
   prover, which internally collaborates with first-order provers
   (preferably E) and SAT solvers, has pioneered cooperative
   higher-order/first-order proof automation. Since the prover is often
   too weak to find a refutation among the steadily growing set of clauses
   on its own, some of the clauses in LEO-II’s search space attain a
   special status: they are first-order clauses modulo the application of
   an appropriate transformation function. Therefore, LEO-II progressively
   launches time limited calls with these clauses to a first-order theorem
   prover, and when the first-order prover reports a refutation, LEO-II
   also terminates. Parts of these ideas were already implemented in the
   predecessor LEO. Communication between LEO-II and the cooperating
   first-order theorem provers uses the TPTP language and standards.
   LEO-II was the winner of the second THF CASC competition in 2010.

   The Satallax prover (Brown 2012) is based on a complete ground tableau
   calculus for Church’s type theory with choice (Backes & Brown 2011). An
   initial tableau branch is formed from the assumptions of a conjecture
   and negation of its conclusion. From that point on, Satallax tries to
   determine unsatisfiability or satisfiability of this branch. Satallax
   progressively generates higher-order formulas and corresponding
   propositional clauses. Satallax uses the SAT solver MiniSat as an
   engine to test the current set of propositional clauses for
   unsatisfiability. If the clauses are unsatisfiable, the original branch
   is unsatisfiable. Satallax provides calculus rules for extensionality,
   description and choice. If there are no quantifiers at function types,
   the generation of higher-order formulas and corresponding clauses may
   terminate. In that case, if MiniSat reports the final set of clauses as
   satisfiable, then the original set of higher-order formulas is
   satisfiable (by a standard model in which all types are interpreted as
   finite sets). Satallax was the winner of the THF CASC competition in
   2011 and from 2013 to 2019

   The Isabelle/HOL system (Nipkow, Wenzel, & Paulson 2002) has originally
   been designed as an interactive prover. However, in order to ease user
   interaction several automatic proof tactics have been added over the
   years. By appropriately scheduling a subset of these proof tactics,
   some of which are quite powerful, Isabelle/HOL has since about 2011
   been turned also into an automatic theorem prover for TPTP THF (and
   other TPTP syntax formats), that can be run from a command shell like
   other provers. The most powerful proof tactics that are scheduled by
   Isabelle/HOL include the Sledgehammer tool (Blanchette et al. 2013),
   which invokes a sequence of external first-order and higher-order
   theorem provers, the model finder Nitpick (Blanchette & Nipkow 2010),
   the equational reasoner simp, the untyped tableau prover blast, the
   simplifier and classical reasoners auto, force, and fast, and the
   best-first search procedure best. In contrast to all other automated
   theorem provers mentioned above, the TPTP incarnation of Isabelle/HOL
   does not output proof certificates. Isabelle/HOL was the winner of the
   THF CASC competition in 2012.

   The agsyHOL prover is based on a generic lazy narrowing proof search
   algorithm. Backtracking is employed and a comparably small search state
   is maintained. The prover outputs proof terms in sequent style which
   can be verified in the Agda system.

   coqATP implements (the non-inductive) part of the calculus of
   constructions (Bertot & Castéran 2004). The system outputs proof terms
   which are accepted as proofs (after the addition of a few definitions)
   by the Coq proof assistant. The prover employs axioms for functional
   extensionality, choice, and excluded middle. Boolean extensionality is
   not supported. In addition to axioms, a small library of basic lemmas
   is employed.

   The Leo-III prover implements a paramodulation calculus for Church’s
   type theory (Steen 2018). The system, which is a descendant of LEO and
   LEO-II, provides calculus rules for extensionality, description and
   choice. The system has put an emphasis on the implementation of an
   efficient set of underlying data structures, on simplification routines
   and on heuristic rewriting. In the tradition of its predecessors,
   Leo-III cooperates with first-order reasoning tools using translations
   to many-sorted first-order logic. The prover accepts every common TPTP
   syntax dialect and is thus very widely applicable. Recently, the prover
   has also been extended to natively supports almost every normal
   higher-order modal logic (Steen et al. 2023).

   CVC4, CVC5 and Verit (Barbosa et al. 2019) are SMT-based automated
   provers with built-in support for many theories, including linear
   arithmetic, arrays, bit vectors, data types, finite sets and strings.
   These provers have been extended to support (fragments of) Church's
   type theory.

   The Zipperposition prover (Bentkamp et al. 2018, Vukmirović et al.
   2022) focuses on the effective implementation of superposition calculi
   for Church's type theory. It comes with Logtk, a supporting library for
   manipulating terms, formulas, clauses, etc. in Church's type theory,
   and supports relevant extensions such as datatypes, recursive
   functions, and arithmetic. Zipperposition was the winner of the THF
   CASC competition in 2020, 2021 and 2022.

   Vampire (Bhayat & Reger 2020), which has dominated the TPTP
   competitions in first-order logic for more than two decades, now also
   supports the automation of Church's type theory using a
   combinator-based superposition calculus. Vampire was the winner of the
   THF CASC competition in 2023.

   The theorem prover E (Vukmirović et al. 2023), another prominent and
   leading first-order automated theorem prover, has been extended for
   Church's type theory using a variant of the supperposition approach
   that is also implemented in Zipperposition.

   Lash (Brown and Kaliszyk 2022) is a theorem prover for Church's type
   theory created as a fork of Satallax.

   Duper is a superposition-based theorem prover for dependent type
   theory, deigned to prove theorems in the proof assistant Lean.

   In recent years, there has thus been a significant shift from
   first-order to higher-order automated theorem proving.

4.4 (Counter-)Model Finding

   Support for finding finite models or countermodels for formulas of
   Church’s type theory was implemented already in the tableau-based
   prover HOT (Konrad 1998). Restricted (counter-)model finding
   capabilities are also implemented in the provers Satallax, LEO-II and
   LEO-III. The most advanced (finite) model finding support is currently
   realized in the systems Nitpick, Nunchaku and Refute. These tools have
   been integrated with the Isabelle proof assistant. Nitpick is also
   available as a standalone tool that accepts TPTP THF syntax. The
   systems are particularly valuable for exposing errors and
   misconceptions in problem encodings, and for revealing bugs in the THF
   theorem provers.

5. Applications

   In addition to its elegance, Church's type theory also has many
   practical advantages. This aspect is emphasised, for example, in the
   recent textbook by Farmer (2023), which deals with various relevant and
   important further aspects that could not be covered in this article.
   Because of its good practical expressiveness, the range of applications
   of Church's type theory is very wide, and only a few examples can be
   given below (a good source for further information on practical
   examples are the proceedings of the conferences on Interactive Theorem
   Proving).

5.1 Semantics of Natural Language

   Church’s type theory plays an important role in the study of the formal
   semantics of natural language. Pioneering work on this was done by
   Richard Montague. See his papers “English as a formal language”,
   “Universal grammar”, and “The proper treatment of quantification in
   ordinary English”, which are reprinted in Montague 1974. A crucial
   component of Montague’s analysis of natural language is the definition
   of a tensed intensional logic (Montague 1974: 256), which is an
   enhancement of Church’s type theory. Montague Grammar had a huge
   impact, and has since been developed in many further directions, not
   least in Typelogical/Categorical Grammar. Further related work on
   intensional and higher-order modal logic is presented in Gallin 1975
   and Muskens 2006.

5.2 Mathematics and Computer Science

   Proof assistants based on Church’s Type Theory, including Isabelle/HOL,
   HOL Light, HOL4, and PVS, have been successfully utilized in a broad
   range of application in computer science and mathematics.

   Applications in computer science include the verification of hardware,
   software and security protocols. A prominent example is the L4.verified
   project in which Isabelle/HOL was used to formally prove that the seL4
   operating system kernel implements an abstract, mathematical model
   specifying of what the kernel is supposed to do (Klein et al. 2018).

   In mathematics proof assistants have been applied for the development
   of libraries mathematical theories and the verification of challenge
   theorems. An early example is the mathematical library that was
   developed since the eighties in the TPS project. A exemplary list of
   theorems that were proved automatically with TPS is given in Andrews et
   al. 1996. A very prominent recent example is Hales Flyspeck in which
   HOL Light was employed to develop a formal proof for Kepler’s
   conjecture (Hales et al. 2017). An example that strongly exploits
   automation support in Isabelle/HOL with Sledgehammer and Nitpick is
   presented in Benzmüller & Scott 2019. In this work different axiom
   systems for category theory were explored and compared.

   A solid overview of past and ongoing formalization projects can be
   obtained by consulting appropriate sources such as Isabelle's Archive
   of Formal Proofs, the Journal of Formalized Reasoning, or the THF
   entries in Sutcliffe's TPTP problem library. Relevant further
   information and a discussion of implications and further work can also
   be found in Bentkamp et al. 2023b and in Bayer et al. 2024.

   Further improving proof automation within these proof assistants—based
   on proof hammering tools or on other forms of prover integration—is
   relevant for minimizing interaction effort in future applications.

5.3 Computational Metaphysics and Artificial Intelligence

   Church’s type theory is a classical logic, but topical applications in
   philosophy and artificial intelligence often require expressive
   non-classical logics. In order to support such applications with
   reasoning tools for Church’s type theory, the shallow semantical
   embedding technique (see also Section 1.2.2) has been developed that
   generalizes and extends the ideas underlying the well known standard
   translation of modal logics to first-order logic. The technique was
   applied for the assessment of modern variants of the ontological
   argument with a range of higher-order theorem provers, including
   LEO-II, Satallax, Nitpick and Isabelle/HOL. In the course of
   experiments, LEO-II detected an inconsistency in the premises of
   Gödel’s argument, while the provers succeeded in automatically proving
   Scott’s emendation of it and to confirm the consistency of the emended
   premises. More details on this work are presented in a related SEP
   entry on automated reasoning (see Section 4.6 on Logic and Philosophy).
   The semantical embedding approach has been adapted and further extended
   for a range of other non-classical logics and related applications. In
   philosophy this includes the encoding and formal assessment of
   ambitious ethical and metaphysical theories, and in artificial
   intelligence this includes the mechanization of deontic logics and
   normative reasoning to control AI systems (Benzmüller et al. 2020) as
   well as an automatic proof of the muddy children puzzle (see Appendix B
   of dynamic epistemic logic), which is a famous puzzle in epistemic
   reasoning, respectively dynamic epistemic reasoning.

5.4. Metalogical Studies

   Church’s type theory is also well suited to support metalogical
   studies, including the encoding of other logical formalisms and
   formalized soundness and completeness studies (see, e.g., Schlichtkrull
   et al. 2020, Halkjær et al. 2023, and various further pointers given in
   Benzmüller 2019). In particular, Church's type theory can be studied
   formally in itself, as shown, for example, by Kumar et al. (2016),
   Schlichtkrull (2023), and Díaz (2023).

Bibliography

     * Andrews, Peter B., 1963, “A Reduction of the Axioms for the Theory
       of Prepositional Types”, Fundamenta Mathematicae, 52(3): 345–350.
       doi:10.4064/fm-52-3-345-350
     * –––, 1971, “Resolution in Type Theory”, The Journal of Symbolic
       Logic, 36(3): 414–432. Reprinted in Siekmann & Wrightson 1983 and
       in Benzmüller et al. 2008. doi:10.2307/2269949
       doi:10.1007/978-3-642-81955-1
     * –––, 1972a, “General Models and Extensionality”, The Journal of
       Symbolic Logic, 37(2): 395–397. Reprinted in Benzmüller et al.
       2008. doi:10.2307/2272982
     * –––, 1972b, “General Models, Descriptions, and Choice in Type
       Theory”, The Journal of Symbolic Logic, 37(2): 385–394. Reprinted
       in Benzmüller et al. 2008. doi:10.2307/2272981
     * –––, 1974, “Provability in Elementary Type Theory”, Zeitschrift für
       Mathematische Logik und Grundlagen der Mathematik, 20(25–27):
       411–418. doi:10.1002/malq.19740202506
     * –––, 1981, “Theorem Proving via General Mappings”, Journal of the
       ACM, 28(2): 193–214. doi:10.1145/322248.322249
     * –––, 2001, “Classical Type Theory”, in Robinson and Voronkov 2001,
       Volume 2, Chapter 15, pp. 965–1007.
       doi:10.1016/B978-044450813-3/50017-5
     * –––, 2002, An Introduction to Mathematical Logic and Type Theory:
       To Truth Through Proof, (Applied Logic Series 27), second edition,
       Dordrecht: Springer Netherlands. doi:10.1007/978-94-015-9934-4
     * Andrews, Peter B., Matthew Bishop, Sunil Issar, Dan Nesmith, Frank
       Pfenning, and Hongwei Xi, 1996, “TPS: A Theorem-Proving System for
       Classical Type Theory”, Journal of Automated Reasoning, 16(3):
       321–353. Reprinted in Benzmüller et al. 2008.
       doi:10.1007/BF00252180
     * Andrews, Peter B. and Chad E. Brown, 2006, “TPS: A Hybrid
       Automatic-Interactive System for Developing Proofs”, Journal of
       Applied Logic, 4(4): 367–395. doi:10.1016/j.jal.2005.10.002
     * Baader, Franz and Wayne Snyder, 2001, “Unification Theory”, in
       Robinson and Voronkov 2001, Volume 1, Chapter 8, Amsterdam:
       Elsevier Science, pp. 445–533. doi:10.1016/B978-044450813-3/50010-2
     * Backes, Julian and Chad Edward Brown, 2011, “Analytic Tableaux for
       Higher-Order Logic with Choice”, Journal of Automated Reasoning,
       47(4): 451–479. doi:10.1007/s10817-011-9233-2
     * Barbosa, Haniel, Andrew Reynolds, Daniel El Ouraoui, Cesare
       Tinelli, and Clark Barret, 2019, “Extending SMT Solvers to
       Higher-Order Logic”, in Automated Deduction – CADE 27, Pascal
       Fontaine (ed.), (Lecture Notes in Computer Science 11716), Cham:
       Springer Nature Switzerland AG. doi:10.1007/978-3-030-29436-6_3
     * Barendregt, H. P., 1984, The Lambda Calculus: Its Syntax and
       Semantics, (Studies in Logic and the Foundations of Mathematics,
       103), revised edition, Amsterdam: North-Holland.
     * Barendregt, Henk, Wil Dekkers, and Richard Statman, 2013, Lambda
       Calculus with Types, Cambridge: Cambridge University Press.
       doi:10.1017/CBO9781139032636
     * Bayer, Jonas, Christoph Benzmüller, Kevin Buzzard, Marco David,
       Leslie Lamport, Yuri Matiyasevich, Lawrence Paulson, Dierk
       Schleicher, Benedikt Stock, and Efim Zelmanov, 2024, “Mathematical
       Proof Between Generations”, Notices of the AMS, 71(1):80-92.
       doi:10.1090/noti2860
     * Bentkamp, Alexander, Jasmin Blanchette, Simon Cruanes, and Uwe
       Waldmann, 2018, “Superposition for Lambda-Free Higher-Order Logic”,
       in Galmiche et al. 2018: 28–46. doi:10.1007/978-3-319-94205-6_3
     * Bentkamp, Alexander, Jasmin Blanchette, Visa Nummelin, Sophie
       Tourret, and Uwe Waldmann, 2023a, “Complete and Efficient
       Higher-Order Reasoning via Lambda-Superposition”. ACM SIGLOG News
       10(4):25–40. doi:10.1145/3636362.3636367
     * Bentkamp, Alexander, Jasmin Blanchette, Visa Nummelin, Sophie
       Tourret, Petar Vukmirovic, and Uwe Waldmann, 2023b, “Mechanical
       Mathematicians” Communications of the ACM, 66(4):80–90.
       doi:10.1145/3636362.3636367
     * Bentkamp, Alexander, Jasmin Blanchette, Sophie Tourret, and Petar
       Vukmirovic, 2023c, “Superposition for Higher-Order Logic”, Journal
       of Automated Reasoning, 67(1):10. doi:10.1007/s10817-022-09649-9
     * Bentkamp, Alexander, Jasmin Blanchette, Sophie Tourret, Petar
       Vukmirovic, and Uwe Waldmann, 2021, “Superposition with
       Lambdas”,Journal of Automated Reasoning, 65, 893–940.
       doi:10.1007/s10817-021-09595-y
     * Benzmüller, Christoph, 1997, A Calculus and a System Architecture
       for Extensional Higher-Order Resolution, Technical report 97–198,
       Department of Mathematical Sciences, Carnegie Mellon University.
       doi:10.1184/r1/6476477.v1
     * –––, 1999a, Equality and Extensionality in Automated Higher-Order
       Theorem Proving, Ph.D. dissertation, Computer Science Department,
       Universität des Saarlandes.
     * –––, 1999b, “Extensional Higher-Order Paramodulation and
       RUE-Resolution”, in Ganzinger 1999: 399–413.
       doi:10.1007/3-540-48660-7_39
     * –––, 2019, “Universal (Meta-)Logical Reasoning: Recent Successes”,
       Science of Computer Programming, 172: 48–62.
       doi:10.1016/j.scico.2018.10.008
     * Benzmüller, Christoph and Michael Kohlhase, 1997, “Model Existence
       for Higher Order Logic”. SEKI Report SR-97-09.
     * –––, 1998a, “Extensional Higher-Order Resolution”, Kirchner and
       Kirchner 1998: 56–71. doi:10.1007/BFb0054248
     * –––, 1998b, “System Description: Leo—A Higher-Order Theorem
       Prover”, in Kirchner and Kirchner 1998: 139–143.
       doi:10.1007/BFb0054256
     * Benzmüller, Christoph, Chad E. Brown, and Michael Kohlhase, 2004,
       “Higher-Order Semantics and Extensionality”, The Journal of
       Symbolic Logic, 69(4): 1027–1088. doi:10.2178/jsl/1102022211
     * –––, 2009, “Cut-Simulation and Impredicativity”, Logical Methods in
       Computer Science, 5(1): 6. doi:10.2168/LMCS-5(1:6)2009
     * Benzmüller, Christoph, Chad E. Brown, Jörg Siekmann, and Richard
       Statman (eds.), 2008, Reasoning in Simple Type Theory: Festschrift
       in Honour of Peter B. Andrews on His 70th Birthday, (Studies in
       Logic 17), London: College Publications.
     * Benzmüller, Christoph, David Fuenmayor, Alexander Steen, and Geoff
       Sutcliffe, 2023, “Who Finds the Short Proof?”, Logic Journal of the
       IGPL. doi:10.1093/jigpal/jzac082
     * Benzmüller, Christoph and Dale Miller, 2014, “Automation of Higher
       Order Logic”, in Computational Logic, (Handbook of the History of
       Logic, 9), Dov M. Gabbay, Jörg H. Siekmann, and John Woods (eds.),
       Amsterdam: Elsevier, 215–254.
     * Benzmüller, Christoph, Xavier Parent, and Leendert van der Torre,
       2020, “Designing normative theories for ethical and legal
       reasoning: LogiKEy framework, methodology, and tool support,
       Artificial Intelligence, 287:103348.
       doi:10.1016/j.artint.2020.103348
     * Benzmüller, Christoph, Nik Sultana, Lawrence C. Paulson, and Frank
       Theiß, 2015, “The Higher-Order Prover Leo-II”, Journal of Automated
       Reasoning, 55(4): 389–404. doi:10.1007/s10817-015-9348-y
     * Benzmüller, Christoph and Dana S. Scott, 2019, “Automating Free
       Logic in HOL, with an Experimental Application in Category Theory”,
       Journal of Automated Reasoning, 64:53–72 (2020).
       doi:10.1007/s10817-018-09507-7
     * Benzmüller, Christoph and Bruno Woltzenlogel Paleo, 2014,
       “Automating Gödel’s Ontological Proof of God’s Existence with
       Higher-Order Automated Theorem Provers”, in Proceedings of the
       Twenty-First European Conference on Artificial Intelligence (ECAI
       2014), T. Schaub, G. Friedrich, and B. O’Sullivan (eds.),
       (Frontiers in Artificial Intelligence 263), Amsterdam: IOS Press,
       93–98. doi:10.3233/978-1-61499-419-0-93
     * Bertot, Yves and Pierre Castéran, 2004, Interactive Theorem Proving
       and Program Development: Coq’Art: The Calculus of Inductive
       Constructions, (Texts in Theoretical Computer Science An EATCS
       Series), Berlin, Heidelberg: Springer Berlin Heidelberg.
       doi:10.1007/978-3-662-07964-5
     * Bhayat, Ahmed and Giles Reger, 2020, “A Combinator-Based
       Superposition Calculus for Higher-Order Logic”, in Automated
       Reasoning. IJCAR 2020, Nicolas Peltier and Sofronie-Stokkermans
       (eds.), (Lecture Notes in Computer Science 12166), Cham: Springer
       Nature Switzerland AG. doi:10.1007/978-3-030-51074-9_16
     * Bibel, Wolfgang, 1981, “On Matrices with Connections”, Journal of
       the ACM, 28(4): 633–645. doi:10.1145/322276.322277
     * Bishop, Matthew, 1999, “A Breadth-First Strategy for Mating
       Search”, in Ganzinger 1999: 359–373. doi:10.1007/3-540-48660-7_32
     * Blanchette, Jasmin Christian and Tobias Nipkow, 2010, “Nitpick: A
       Counterexample Generator for Higher-Order Logic Based on a
       Relational Model Finder”, in Interactive Theorem Proving, Matt
       Kaufmann and Lawrence C. Paulson (eds.), (Lecture Notes in Computer
       Science 6172), Berlin, Heidelberg: Springer Berlin Heidelberg,
       131–146. doi:10.1007/978-3-642-14052-5_11
     * Blanchette, Jasmin Christian, Sascha Böhme, and Lawrence C.
       Paulson, 2013, “Extending Sledgehammer with SMT Solvers”, Journal
       of Automated Reasoning, 51(1): 109–128.
       doi:10.1007/s10817-013-9278-5
     * Boolos, George, 1987, “A Curious Inference”, Journal of
       Philosophical Logic, 16(1): 1–12. doi:10.1007/BF00250612
     * Brown, Chad E., 2004, “Set Comprehension in Church’s Type Theory”,
       PhD Thesis, Department of Mathematical Sciences, Carnegie Mellon
       University, Pittsburgh, PA.
     * –––, 2007, Automated Reasoning in Higher-Order Logic: Set
       Comprehension and Extensionality in Church`s Type Theory, (Studies
       in Logic Logic and Cognitive Systems 10), London: King’s College
       Publications.
     * –––, 2012, “Satallax: An Automatic Higher-Order Prover”, in
       Automated Reasoning (IJCAR 2012), Bernhard Gramlich, Dale Miller,
       and Uli Sattler (eds.) (Lecture Notes in Computer Science 7364),
       Berlin, Heidelberg: Springer Berlin Heidelberg, 111–117.
       doi:10.1007/978-3-642-31365-3_11
     * Brown, Chad and Gert Smolka, 2010, “Analytic Tableaux for Simple
       Type Theory and Its First-Order Fragment”, Logical Methods in
       Computer Science, 6(2): 3. doi:10.2168/LMCS-6(2:3)2010
     * Büchi, J. Richard, 1953, “Investigation of the Equivalence of the
       Axiom of Choice and Zorn’s Lemma from the Viewpoint of the
       Hierarchy of Types”, The Journal of Symbolic Logic, 18(2): 125–135.
       doi:10.2307/2268945
     * Church, Alonzo, 1932, “A Set of Postulates for the Foundation of
       Logic”, The Annals of Mathematics, 33(2): 346–366.
       doi:10.2307/1968337
     * –––, 1940, “A Formulation of the Simple Theory of Types”, The
       Journal of Symbolic Logic, 5(2): 56–68. Reprinted in Benzmüller et
       al. 2008. doi:10.2307/2266170
     * –––, 1941, The Calculi of Lambda Conversion, (Annals of Mathematics
       Studies 6), Princeton, NJ: Princeton University Press.
     * –––, 1956, Introduction to Mathematical Logic, Princeton, NJ:
       Princeton University Press.
     * Czajka, Łukasz and Cezary Kaliszyk, 2018, “Hammer for Coq:
       Automation for Dependent Type Theory”, Journal of Automated
       Reasoning, 61(1–4): 423–453. doi:10.1007/s10817-018-9458-4
     * Díaz, Javier, 2023, “Metatheory of Q0”, Archive of Formal Proofs.
       https://www.isa-afp.org/entries/Q0_Metatheory.html
     * Dowek, Gilles, 2001, “Higher-Order Unification and Matching”, in
       Robinson and Voronkov 2001, Volume 2, Chapter 16, Amsterdam:
       Elsevier Science, pp. 1009–1062.
       doi:10.1016/B978-044450813-3/50018-7
     * Dowek, Gilles and Benjamin Werner, 2003, “Proof Normalization
       Modulo”, The Journal of Symbolic Logic, 68(4): 1289–1316.
       doi:10.2178/jsl/1067620188
     * Farmer, William M., 2008, “The Seven Virtues of Simple Type
       Theory”, Journal of Applied Logic, 6(3): 267–286.
       doi:10.1016/j.jal.2007.11.001
     * Farmer, William M., 2023, “Simple Type Theory - A Practical Logic
       for Expressing and Reasoning About Mathematical Ideas”, Cham:
       Birkhäuser. doi:10.1007/978-3-031-21112-6
     * Farmer, William M., Joshua D. Guttman, and F. Javier Thayer, 1993,
       “IMPS: An Interactive Mathematical Proof System”, Journal of
       Automated Reasoning, 11(2): 213–248. doi:10.1007/BF00881906
     * Gallin, Daniel, 1975, Intensional and Higher-Order Modal Logic,
       Amsterdam: North-Holland.
     * Galmiche, Didier, Stephan Schulz, and Roberto Sebastiani (eds.),
       2018, Automated Reasoning (IJCAR 2018), (Lecture Notes in Computer
       Science 10900), Cham: Springer International Publishing.
       doi:10.1007/978-3-319-94205-6
     * Ganzinger, Harald (ed.), 1999, Automated Deduction—CADE-16,
       (Lecture Notes in Computer Science, 1632), Berlin, Heidelberg:
       Springer Berlin Heidelberg. doi:10.1007/3-540-48660-7
     * Gödel, Kurt, 1931, “Über formal unentscheidbare Sätze der Principia
       Mathematica und verwandter Systeme I”, Monatshefte für Mathematik
       und Physik, 38(1): 173–198. Translated in Gödel 1986: 144–195, and
       in van Heijenoort 1967: 596–616.
     * –––, 1986, Collected Works, Volume I, Oxford: Oxford University
       Press.
     * Goldfarb, Warren D., 1981, “The Undecidability of the Second-Order
       Unification Problem”, Theoretical Computer Science, 13(2): 225–230.
       doi:10.1016/0304-3975(81)90040-2
     * Gordon, Michael J. C., 1986, “Why Higher-Order Logic is a Good
       Formalism for Specifying and Verifying Hardware”, in George J.
       Milne, and P. A. Subrahmanyam (eds.), Formal Aspects of VLSI
       Design: Proceedings of the 1985 Edinburgh Workshop on VLSI,
       Amsterdam: North-Holland, pp. 153–177.
     * –––, 1988, “HOL: A Proof Generating System for Higher-Order Logic”,
       in VLSI Specification, Verification and Synthesis, Graham
       Birtwistle and P. A. Subrahmanyam (eds.), (The Kluwer International
       Series in Engineering and Computer Science 35), Boston, MA:
       Springer US, 73–128. doi:10.1007/978-1-4613-2007-4_3
     * Gordon, M. J., and T. F. Melham, 1993, Introduction to HOL: A
       Theorem-Proving Environment for Higher-Order Logic, Cambridge:
       Cambridge University Press.
     * Gould, William Eben, 1966, A Matching Procedure for
       \(\omega\)-order Logic, Ph.D. dissertation, Mathematics Department,
       Princeton University. [Gould 1966 available online]
     * Hales, Thomas, Mark Adams, Gertrud Bauer, Tat Dat Dang, John
       Harrison, Le Truong Hoang, Cezary Kaliszyk, et al., 2017, “A Formal
       Proof of the Kepler Conjecture”, Forum of Mathematics, Pi, 5: e2.
       doi:10.1017/fmp.2017.1
     * Harrison, John, 1996, “HOL Light: A Tutorial Introduction”, in
       Formal Methods in Computer-Aided Design, Mandayam Srivas and Albert
       Camilleri (eds.), (Lecture Notes in Computer Science 1166), Berlin,
       Heidelberg: Springer Berlin Heidelberg, 265–269.
       doi:10.1007/BFb0031814
     * Halkjær, Asta, Anders Schlichtkrull, Jørgen Villadsen, 2023, “A
       sequent calculus for first-order logic formalized in Isabelle/HOL”,
       Journal of Logic and Computation, 33(4):818-836. doi:
       10.1093/logcom/exad013
     * Henkin, Leon, 1950, “Completeness in the Theory of Types”, The
       Journal of Symbolic Logic, 15(2): 81–91. Reprinted in Hintikka 1969
       and in Benzmüller et al. 2008. doi:10.2307/2266967
     * –––, 1963, “A Theory of Prepositional Types”, Fundamenta
       Mathematicae, 52(3): 323–344. doi:10.4064/fm-52-3-323-344
     * –––, 1975, “Identity as a Logical Primitive”, Philosophia, 5(1–2):
       31–45. doi:10.1007/BF02380832
     * Hilbert, David, 1928, “Die Grundlagen der Mathematik”, Abhandlungen
       aus dem mathematischen Seminar der Hamburgischen Universität, 6:
       65–85; translated in van Heijenoort 1967: 464–479.
     * Hintikka, Jaakko (ed.), 1969, The Philosophy of Mathematics,
       Oxford: Oxford University Press.
     * Huet, Gerald P., 1973a, “A Mechanization of Type Theory”, in
       Proceedings of the Third International Joint Conference on
       Artificial Intelligence (Stanford University), D. E. Walker and L.
       Norton (eds.), Los Altos, CA: William Kaufman, 139–146. [Huet 1973a
       available online]
     * –––, 1973b, “The Undecidability of Unification in Third Order
       Logic”, Information and Control, 22(3): 257–267.
       doi:10.1016/S0019-9958(73)90301-X
     * –––, 1975, “A Unification Algorithm for Typed λ-Calculus”,
       Theoretical Computer Science, 1(1): 27–57.
       doi:10.1016/0304-3975(75)90011-0
     * Jensen, D.C. and T. Pietrzykowski, 1976, “Mechanizing ω-Order Type
       Theory through Unification”, Theoretical Computer Science, 3(2):
       123–171. doi:10.1016/0304-3975(76)90021-9
     * Kaliszyk, Cezary and Josef Urban, 2015, “HOL(y)Hammer: Online ATP
       Service for HOL Light”, Mathematics in Computer Science, 9(1):
       5–22. doi:10.1007/s11786-014-0182-0
     * Kirchner, Claude and Hélène Kirchner (eds.), 1998, Automated
       Deduction—CADE-15, (Lecture Notes in Computer Science, 1421),
       Berlin, Heidelberg: Springer Berlin Heidelberg.
       doi:10.1007/BFb0054239
     * Klein, Gerwin, June Andronick, Matthew Fernandez, Ihor Kuz, Toby
       Murray, and Gernot Heiser, 2018, “Formally Verified Software in the
       Real World”, Communications of the ACM, 61(10): 68–77.
       doi:10.1145/3230627
     * Kohlhase, Michael, 1993, “A Unifying Principle for Extensional
       Higher-Order Logic”, Technical Report 93–153, Department of
       Mathematics, Carnegie Mellon University.
     * –––, 1995, “Higher-Order Tableaux”, in Theorem Proving with
       Analytic Tableaux and Related Methods, Peter Baumgartner, Reiner
       Hähnle, and Joachim Possega (eds.), (Lecture Notes in Computer
       Science 918), Berlin, Heidelberg: Springer Berlin Heidelberg,
       294–309. doi:10.1007/3-540-59338-1_43
     * –––, 1998, “Higher-Order Automated Theorem Proving”, in Automated
       Deduction—A Basis for Applications, Volume 1, Wolfgang Bibel and
       Peter H. Schmitt (eds.), Dordrecht: Kluwer, 431–462.
     * Konrad, Karsten, 1998, “Hot: A Concurrent Automated Theorem Prover
       Based on Higher-Order Tableaux”, in Theorem Proving in Higher Order
       Logics, Jim Grundy and Malcolm Newey (eds.), (Lecture Notes in
       Computer Science 1479), Berlin, Heidelberg: Springer Berlin
       Heidelberg, 245–261. doi:10.1007/BFb0055140
     * Kumar, Ramana, Rob Arthan, Magnus O. Myreen, and Scott Owens, 2016,
       “Self-Formalisation of Higher-Order Logic”, Journal of Automated
       Reasoning, 56:221–259. doi:10.1007/s10817-015-9357-x
     * Maslov, S. Yu, 1967, “An Inverse Method for Establishing
       Deducibility of Nonprenex Formulas of Predicate Calculus”, Soviet
       Mathematics Doklady, 8(1): 16–19.
     * Miller, Dale A., 1983, Proofs in Higher-Order Logic, Ph.D.
       dissertation, Mathematics Department, Carnegie Mellon University.
     * –––, 1987, “A Compact Representation of Proofs”, Studia Logica,
       46(4): 347–370. doi:10.1007/BF00370646
     * –––, 1991, “A Logic Programming Language with Lambda-Abstraction,
       Function Variables, and Simple Unification”, Journal of Logic and
       Computation, 1(4): 497–536. doi:10.1093/logcom/1.4.497
     * Mints, G., 1999, “Cut-Elimination for Simple Type Theory with an
       Axiom of Choice”, The Journal of Symbolic Logic, 64(2): 479–485.
       doi:10.2307/2586480
     * Montague, Richard, 1974, Formal Philosophy. Selected Papers Of
       Richard Montague, edited and with an introduction by Richmond H.
       Thomason, New Haven: Yale University Press.
     * Muskens, Reinhard, 2006, “Higher Order Modal Logic”, in Handbook of
       Modal Logic, Patrick Blackburn, Johan Van Benthem, and Frank Wolter
       (eds.), Amsterdam: Elsevier, 621–653.
     * –––, 2007, “Intensional Models for the Theory of Types”, The
       Journal of Symbolic Logic, 72(1): 98–118.
       doi:10.2178/jsl/1174668386
     * Nipkow, Tobias, Markus Wenzel, and Lawrence C. Paulson (eds.),
       2002, Isabelle/HOL: A Proof Assistant for Higher-Order Logic,
       (Lecture Notes in Computer Science 2283), Berlin, Heidelberg:
       Springer Berlin Heidelberg. doi:10.1007/3-540-45949-9
     * Owre, S., S. Rajan, J. M. Rushby, N. Shankar, and M. Srivas, 1996,
       “PVS: Combining Specification, Proof Checking, and Model Checking”,
       in Computer Aided Verification, Rajeev Alur and Thomas A. Henzinger
       (eds.), (Lecture Notes in Computer Science 1102), Berlin,
       Heidelberg: Springer Berlin Heidelberg, 411–414.
       doi:10.1007/3-540-61474-5_91
     * Paulson, Lawrence C, 1988, “Isabelle: The next Seven Hundred
       Theorem Provers”, in 9th International Conference on Automated
       Deduction, Ewing Lusk and Ross Overbeek (eds.), (Lecture Notes in
       Computer Science 310), Berlin/Heidelberg: Springer-Verlag, 772–773.
       doi:10.1007/BFb0012891
     * –––, 1990, “A Formulation of the Simple Theory of Types (for
       Isabelle)”, in COLOG-88, Per Martin-Löf and Grigori Mints (eds.),
       (Lecture Notes in Computer Science 417), Berlin, Heidelberg:
       Springer Berlin Heidelberg, 246–274. doi:10.1007/3-540-52335-9_58
     * Prawitz, Dag, 1968, “Hauptsatz for Higher Order Logic”, The Journal
       of Symbolic Logic, 33(3): 452–457. doi:10.2307/2270331
     * Quine, W. V., 1956, “Unification of Universes in Set Theory”, The
       Journal of Symbolic Logic, 21(3): 267–279. doi:10.2307/2269102
     * Richardson, Julian, Alan Smaill, and Ian Green, 1998, “System
       Description: Proof Planning in Higher-Order Logic with ΛClam”, in
       Kirchner and Kirchner 1998: 129–133. doi:10.1007/BFb0054254
     * Robinson, Alan and Andrei Voronkov (eds.), 2001, Handbook of
       Automated Reasoning, Volumes 1 and 2, Amsterdam: Elsevier Science.
     * Russell, Bertrand, 1903, The Principles of Mathematics, Cambridge:
       Cambridge University Press.
     * –––, 1908, “Mathematical Logic as Based on the Theory of Types”,
       American Journal of Mathematics, 30(3): 222–262. Reprinted in van
       Heijenoort 1967: 150–182. doi:10.2307/2369948
     * Schlichtkrull, Anders, 2023, “Soundness of the Q0 proof system for
       higher-order logic”, Archive of Formal Proofs.
       https://www.isa-afp.org/entries/Q0_Soundness.html
     * Schlichtkrull, Anders, Jasmin Blanchette, Dmitriy Traytel, and Uwe
       Waldmann, 2020, “Formalizing Bachmair and Ganzinger's Ordered
       Resolution Prover.” Journal of Automated Reasoning, 64(7):
       1169-1195. doi:10.1007/s10817-020-09561-0
     * Schönfinkel, M., 1924, “Über die Bausteine der mathematischen
       Logik”, Mathematische Annalen, 92(3–4): 305–316. Translated in van
       Heijenoort 1967: 355–366. doi:10.1007/BF01448013
     * Schütte, Kurt, 1960, “Syntactical and Semantical Properties of
       Simple Type Theory”, The Journal of Symbolic Logic, 25(4): 305–326.
       doi:10.2307/2963525
     * Shankar, Natarajan, 2001, “Using Decision Procedures with a
       Higher-Order Logic”, in Theorem Proving in Higher Order Logics,
       Richard J. Boulton and Paul B. Jackson (eds.), (Lecture Notes in
       Computer Science 2152), Berlin, Heidelberg: Springer Berlin
       Heidelberg, 5–26. doi:10.1007/3-540-44755-5_3
     * Siekmann, Jörg H. and Graham Wrightson (eds.), 1983, Automation of
       Reasoning, (Classical Papers on Computational Logic 1967–1970: Vol.
       2), Berlin, Heidelberg: Springer Berlin Heidelberg.
       doi:10.1007/978-3-642-81955-1
     * Siekmann, Jörg, Christoph Benzmüller, and Serge Autexier, 2006,
       “Computer Supported Mathematics with ΩMEGA”, Journal of Applied
       Logic, 4(4): 533–559. doi:10.1016/j.jal.2005.10.008
     * Smullyan, Raymond M., 1963, “A Unifying Principal in Quantification
       Theory”, Proceedings of the National Academy of Sciences, 49(6):
       828–832. doi:10.1073/pnas.49.6.828
     * –––, 1995, First-Order Logic, New York: Dover, second corrected
       edition.
     * Steen, Alexander, 2018, Extensional Paramodulation for Higher-Order
       Logic and its Effective Implementation Leo-III, Ph.D. dissertation,
       Series: Dissertations in Artificial Intelligence (DISKI), Volume
       345, Berlin: AKA-Verlag (IOS Press).
     * Steen, Alexander and Christoph Benzmüller, 2018, “The Higher-Order
       Prover Leo-III”, in Galmiche et al. 2018: 108–116.
       doi:10.1007/978-3-319-94205-6_8
     * Steen, Alexander and Christoph Benzmüller, 2021, “Extensional
       Higher-Order Paramodulation in Leo-III”, Journal of Automated
       Reasoning, 65: 775–807. doi:10.1007/s10817-021-09588-x
     * Steen, Alexander, Geoff Sutcliffe, Tobias Scholl, Christoph
       Benzmüller, 2023, “Solving Modal Logic Problems by Translation to
       Higher-Order Logic”, in Logic and Argumentation. CLAR 2023, Andreas
       Herzig, Jieting Luo, Pere Pardo (eds.), (Lecture Notes in Computer
       Science 14156), Cham: Springer Nature Switzerland AG.
       doi:10.1007/978-3-031-40875-5_3
     * Stenlund, Sören, 1972, Combinators, λ-Terms and Proof Theory,
       (Synthese Library 42), Dordrecht: Springer Netherlands.
       doi:10.1007/978-94-010-2913-1
     * Sutcliffe, Geoff, 2016, “The CADE ATP System Competition—CASC”, AI
       Magazine, 37(2): 99–101. doi:10.1609/aimag.v37i2.2620
     * –––, 2017, “The TPTP Problem Library and Associated Infrastructure:
       From CNF to TH0, TPTP v6.4.0”, Journal of Automated Reasoning,
       59(4): 483–502. doi:10.1007/s10817-017-9407-7
     * –––, 2023, “The logic languages of the TPTP world”, Logic Journal
       of the IGPL, 31(6): 1153–1169. doi:10.1093/jigpal/jzac068
     * Sutcliffe, Geoff and Christoph Benzmüller, 2010, “Automated
       Reasoning in Higher-Order Logic Using the TPTP THF Infrastructure”,
       Journal of Formalized Reasoning, 3(1): 1–27.
       doi:10.6092/issn.1972-5787/1710
     * Takahashi, Moto-o, 1967, “A Proof of Cut-Elimination Theorem in
       Simple Type-Theory”, Journal of the Mathematical Society of Japan,
       19(4): 399–410. doi:10.2969/jmsj/01940399
     * –––, 1970, “A System of Simple Type Theory of Gentzen Style with
       Inference on Extensionality, and the Cut Elimination in It”,
       Commentarii Mathematici Universitatis Sancti Pauli, 18(2):129–147.
     * Takeuti, Gaisi, 1987, Proof Theory, second edition, Amsterdam:
       North-Holland.
     * Tarski, Alfred [Tajtelbaum, Alfred], 1923, “Sur Le Terme Primitif
       de La Logistique”, Fundamenta Mathematicae, 4: 196–200. Translated
       in Tarski 1956, 1–23. doi:10.4064/fm-4-1-196-200
     * –––, 1956, Logic, Semantics, Metamathematics: Papers from 1923 to
       1938, Oxford: Oxford University Press.
     * van Heijenoort, Jean, 1967, From Frege to Gödel. A Source Book in
       Mathematical Logic 1879–1931, Cambridge, MA: Harvard University
       Press.
     * Vukmirović, Petar, Alexander Bentkamp, Jasmin Blanchette, Simon
       Cruanes, Visa Nummelin, and Sophie Tourret, 2022, “Making
       Higher-Order Superposition Work”, Journal of Automated Reasoning,
       66:541–564. doi10.1007/s10817-021-09613-z
     * Vukmirović, Petar, Jasmin Blanchette, and Stephan Schulz, 2023,
       “Extending a High-Performance Prover to Higher-Order Logic”, in
       Tools and Algorithms for the Construction and Analysis of Systems.
       TACAS 2023, Sankaranarayanan, S., Sharygina, N. (eds.), (Lecture
       Notes in Computer Science 13994), Cham: Springer Nature Switzerland
       AG. doi:10.1007/978-3-031-30820-8_10
     * Whitehead, Alfred N. and Bertrand Russell, 1927a, Principia
       Mathematica, Volume 1, Cambridge: Cambridge University Press,
       second edition.
     * –––, 1927b, “Incomplete Symbols”, in Whitehead & Russell 1927a:
       66–84; reprinted in van Heijenoort 1967: 216–223.
     * Yasuhara, Mitsuru, 1975, “The Axiom of Choice in Church’s Type
       Theory” (abstract), Notices of the American Mathematical Society,
       22(January): A34. [Yashuhara 1975 available online]

Academic Tools

   sep man icon How to cite this entry.
   sep man icon Preview the PDF version of this entry at the Friends of
   the SEP Society.
   inpho icon Look up topics and thinkers related to this entry at the
   Internet Philosophy Ontology Project (InPhO).
   phil papers icon Enhanced bibliography for this entry at PhilPapers,
   with links to its database.

Other Internet Resources

   Since several sections in the main text mention software projects, we
   provide links to these projects below; some are duplicated because they
   are cited in multiple sections of the main text.
     * 4.2 Proof Assistants
          + HOL
          + TPS
          + Isabelle/HOL
          + PVS
          + IMPS
          + OMEGA
          + λClam
          + HOL light
          + Coq
          + Lean
          + Agda
          + Sledgehammer
          + HOL(y)Hammer
          + SystemOnTPTP (system platform)
          + TPTP TSTP (proof format)
     * 4.3 Automated Theorem Provers and Related Tools
          + TPTP CASC (competition)
          + TPS
          + LEO-II
          + Satallax
          + Isabelle/HOL
          + agsyHOL
          + Leo-III
          + CVC4
          + CVC5
          + Zipperposition
          + Vampire
          + E
          + Lash
          + Duper
     * 4.4 (Counter-)Model Finding
          + Nitpick
          + Nunchaku
     * 5.2 Mathematics and Computer Science
          + L4.verified
          + Flyspeck
          + Archive of Formal Proofs
          + Journal of Formalized Reasoning
          + TPTP problem library

Related Entries

   artificial intelligence: logic-based | category theory | choice, axiom
   of | descriptions | epsilon calculus | Frege, Gottlob | Gödel, Kurt:
   incompleteness theorems | grammar: typelogical | lambda calculus, the |
   logic, history of: first-order logic | logic: classical | logic:
   deontic | logic: dynamic epistemic | logic: modal | logic: second-order
   and higher-order | metaphysics | ontological arguments | paradox:
   Skolem’s | paradoxes: and contemporary logic | possibilism-actualism
   debate | possible worlds | Principia Mathematica | proof theory |
   quantifiers and quantification | Quine, Willard Van Orman | rational
   choice, normative: expected utility | reasoning: automated | Russell,
   Bertrand | semantics: Montague | Tarski, Alfred | type theory

Acknowledgments

   Portions of this material are adapted from Andrews 2002 and Andrews
   2001, with permission from the author and Elsevier. Benzmüller received
   funding for his contribution from Volkswagen Foundation.

   Copyright © 2024 by
   Christoph Benzmüller <christoph.benzmueller@uni-bamberg.de>
   Peter Andrews
   Open access to the SEP is made possible by a world-wide funding
   initiative.
   The Encyclopedia Now Needs Your Support
   Please Read How You Can Help Keep the Encyclopedia Free

Browse

     * Table of Contents
     * What's New
     * Random Entry
     * Chronological
     * Archives

About

     * Editorial Information
     * About the SEP
     * Editorial Board
     * How to Cite the SEP
     * Special Characters
     * Advanced Tools
     * Accessibility
     * Contact

Support SEP

     * Support the SEP
     * PDFs for SEP Friends
     * Make a Donation
     * SEPIA for Libraries

Mirror Sites

   View this site from another server:
   USA (Main Site) Philosophy, Stanford University
     * Info about mirror sites

   The Stanford Encyclopedia of Philosophy is copyright © 2024 by The
   Metaphysics Research Lab, Department of Philosophy, Stanford University

   Library of Congress Catalog Data: ISSN 1095-5054
   #EconomicsKey.com » Feed JSON oEmbed (JSON) oEmbed (XML)

   EconomicsKey.com

     * Home
     * About US
     * Services
     * FAQ
     * Upload Materials
     * Buy Now

   Select Page
   ____________________

THE LOGIC OF ECONOMICS

   Economics Homework & Project
     * Facebook
     * Twitter
     * Google+
     * reddit
     * LinkedIn

   THE LOGIC OF ECONOMICS

   Economic life is an enormously complicated hive of activity, with
   people buying, selling, bargaining, in- vesting, persuading, and
   threatening. The ultimate purpose of economic science and of this text
   is to understand this complex undertaking. How do economists go about
   their task?
   Economists use the scientific approach to understand economic life.
   This involves observing economic affairs and drawing upon statistics
   and the historical record. For complex phenomena like the impacts of
   gelled deficits or the causes of inflation,
   historical research has provided a rich mine of insights.

   Often, economics relies upon analyses and theories. Theoretical
   approaches allow economists to make broad generalizations, such as
   those. concerning the advantages of international trade
   and specialization or the disadvantages of tariffs and quotas.

   In addition, economists have developed a specialized technique known as
   econometric, which applies the tools of statistics to economic
   problems. Using econometric, economists can sift through mountains of
   data to extract simple relationships.Budding economists must also be
   alert to common fallacies in economic reasoning. Because
   economic relationships are often complex, involving many different
   variables, it is easy to become confused about .the exact reason behind
   events or the impact of policies on the economy. The following are some
   of the common fallacies encountered in economic reasoning:

   • The post hoc fallacy. The first fallacy involves the inference of
   causality. The post hoc fallacy occur.s when tilt assume that, because
   on/’ event occurred before another event, the fir.st event Taurus the
   second event.2 An example of this syndrome occurred in the Great
   Depression of the 1930’s in the United States. Some people had observed
   that periods of business expansion were preceded or accompanied by
   rising prices. From this, they concluded that the appropriate remedy
   for depression was to raise wages and prices. This idea led to a host
   of legislation and regulations to prop lip wages and prices in an
   inefficient manner. Did these measures promote economic recovery?
   Almost surely not. Indeed, they probably slowed recovery, which did not
   occur until total spending

   “Post hoc” is shorthand for post hoc. prop'” hoc. Translated from the
   Latin, the full expression means “after this. therefore
   necessarily because of this.”

   began to rise as the government increased military spending ill
   preparation for World War II.• Failure 10 hold other Hings constant, A
   second pitfall is failure to hold other things constant when thinking
   about an issue. For example. we might want to know whether raising tax
   rates will raise or lower tax revenues. Some people have put forth the
   seductive argument that we can eat our fiscal cake and have it too.
   They argue that cutting tax rates will at the same time raise
   government revenues and lower the budget deficit. They point to the
   Kennedy:Johnson tax cuts of 1964, which lowered tax rates sharply and
   were followed by an increase in government revenues in 1965, Hence,
   they argue, lower tax rates produce

   higher revenues. ‘

   What is wrong with this reasoning? This argument overlooks the fact
   that the economy grew from 1964 to 1965. Because people’s incomes grew
   during that period, government revenues also, grew, even though tax
   rates were lower, Careful studies indicate that revenues would have
   been even higher, in 1965 had tax rates not been lowered in 1964. hence
   , this analysis fails to hold other things (namely, total income )
   constant.

   Remember to hold other things constant when you are analyzing the
   impact of (variable on the economic system.

   • The fallacy of composition. Sometimes, we assume that what holds true
   for part of a system also holds true for the whole. In economics,
   however,we often find that the whole is different from the sum of the
   parts.when you  assume that what is true for the part is also true for
   whole , you are  for the whole committing the fallacy’)’ of
   composition.

   Here are some true statements that might surprise surprise  you if
   you ignored the fallacy of composition: (I) If one farmer has a bumper
   crop. she has a higher income; if all farmers produce it record crop,
   farm incomes will fall. (2) If one person receives a great d(‘;11 more
   money, that person will be better off; if everyone receives a great
   deal more money,. the society is likely 10 be worse off. (3) If a high
   tartaric is put on the product of a particular industry, the producers
   in I hat industry are likely to profit: if hi~h tariffs an’ put on all
   industries, most producers and consumers will be worse off.

   I’these examples contain no tricks or magic.Rather, they are the
   results of systems of interacting individuals. Often the behavior of
   the aggregate looks very different from the behavior of’ individual
   people.

   We mention these fallacies only briefly in this introduction. Later, as
   we introduce the tools of economics,we will provide examples of how
   inattention to the logic of economics can lead you to false
   and sometimes costly errors. When you reach the end of this book, you
   can look back to see why each of these paradoxical examples is true.

   [av_button label='Get Any Economics Assignment Solved for US$ 55'
   link='manually,http://economicskey.com/buy-now' link_target=''
   color='red' custom_bg='#444444' custom_font='#ffffff' size='large'
   position='center' icon_select='yes' icon='ue859'
   font='entypo-fontello']

Related Economics Assignments

     * Overview of the Fed’s Operations Overview of the Fed’s Operations
     * Measuring the Waste from Imperfect Competition Measuring the Waste
       from Imperfect Competition
     * Productivity Growth from Economies of Scale Productivity Growth
       from Economies of Scale
     * Liquidity Preference Theory Liquidity Preference Theory
     * A PARABLE ABOUT PRICING A PARABLE ABOUT PRICING
     * Expectations Expectations
     * Advantages Advantages
     * Measuring Economic Activity Measuring Economic Activity

   Search for: ____________________ Search

Categories

     * A Macroeconomic Theory OF The Open Economy
     * Aggregate Demand and Aggregate Supply
     * Application International Trade
     * Application The Costs of Taxation
     * BANKING
     * Business Fluctuations and the theory of Aggregate Demand
     * Central Banking and Monetary Policy
     * Comparative Advantage and Protectionism
     * CONSUMER'S SURPLUS
     * Consumption and Investment
     * Earnings and Discrimination
     * ECONOMIC PLAN MEANING AND TYPE
     * ECONOMIC UNDER DEVELOPMENT
     * Economics Homework & Project
     * Efficiency VS Equality The Big Trade-off
     * Elasticity and Its Application
     * Exchange Rates and the International Financial System
     * Externalities
     * FACTOR OF PRODUCTION
     * Firms' in Competitive Markets
     * FORMS OF ENTREPRENEURIAL ORGANISATION
     * Frontiers of Microeconomics
     * Government Taxation and Expenditure
     * Income Inequality and Poverty
     * INFLATION
     * Interdependence and the Gains from Trade
     * INVESTMENT CRITERIA AND CHOICE OF TECHNIQUES
     * ISOQUANTS OR EQUAL PRODUCT CURVES
     * Land and Capital
     * LAW OF RETURN
     * Market and the Efficiency of Markets
     * Measuring a Nation's Income
     * Measuring Economic Activity
     * Measuring the Cost of Living
     * Money Banking and Financial Markets
     * Money Growth and Inflation
     * Monopolistic Competition
     * Monopoly
     * NATURE OF ECONOMICS
     * Oligopoly
     * Open-Economy Macroeconomics
     * Overview of Macroeconomics
     * PARTIAL EQUILIBRIUM AND GENERAL EQUILIBRIUM ANALYSIS
     * POPULATION THEORIES
     * PRICE OUTPUT UNDER MONOPOLY
     * Production and Growth
     * PRODUCTION POSSIBILITY CURVE AND PRODUCTION FUNCTION
     * PROFIT
     * Promoting More Efficient Markets
     * Public Goods and Common Resources
     * RENT
     * Saving Investment and the Financial System
     * STATICS DYNAMICS AND COMPARATIVE STATICS
     * Ten Principles of Economics
     * The Basic Tools Of Finance
     * The Challenge of Economic Development
     * The Costs of Production
     * The Design of the Tax System
     * THE GENERAL THEORY OF FACTOR. PRICING
     * The Influence of Monetary and Fiscal Policy on Aggregate Demand
     * THE MARKET FORCES OF SUPPLY AND DEMAND
     * The Markets for the Factors of Production
     * The Monetary System
     * The Multiplier Model
     * The Process of Economic Growth
     * The Short-Run Trade-off between Inflation and Unem loyment
     * The Theory of Consumer Choice
     * Thinking Like an Economist
     * Uncategorized
     * Unemployment
     * Unemployment and the Foundations of Aggregate Supply
     * UTILITY ANALYSIS OF DEMAND
     * WAGES

More from Category: Economics Homework & Project

     * Effects on Employment
     * Increasing Costs and Diminishing Returns
     * Monopolists of the Gilded Age
     * Imperfect Competition
     * Appendix I HOW TO READ GRAPHS
     * Constant Cost
     * C. A BALANCE SHEET ON IMPERFECT COMPETITION
     * Taste for Discrimination
     * SUMMING ALL FIRMS' SUPPLY CURVES TO GET MARKET SUPPLY
     * A fundamentals Of Economics

EconomicsKey.com

   Home
   About US
   Services
   FAQ
   Upload Materials
   Buy Now

Search Box

   Search for: ____________________ Search

Sitemap

   WhatsApp: [whatsappnumber.png]

Payment Options

   Payment Option
   Economics Assignment Help
   Copyright © EconomicsKey.com Sitemap Refund Policy Privacy Policy Terms
   of Use

     *
     *
     *
     *
     *

   Share This
     * Facebook
     * Twitter
     * Google+
     * reddit
     * LinkedIn
   (BUTTON)
   (BUTTON)
     * Games
          + Daily Crossword
          + Word Puzzle
          + Word Finder
          + All games
     * Featured
          + Word of the Day
          + Synonym of the Day
          + Word of the Year
          + New words
          + Language stories
          + All featured
     * Pop culture
          + Slang
          + Emoji
          + Memes
          + Acronyms
          + Gender and sexuality
          + All pop culture
     * Writing tips
          + Writing hub
          + Grammar essentials
          + Commonly confused
          + All writing tips

   ____________________ (BUTTON)
     * Games
     * Featured
     * Pop culture
     * Writing tips

   Advertisement
   (BUTTON) Skip to

   Skip to
   (BUTTON)
   (BUTTON)

   logic^1
   noun (6)
   (BUTTON)

   -logic^2
   Definitions (1)

   Advertisement
   View synonyms for logic
   (BUTTON) American (BUTTON) British (BUTTON) Scientific (BUTTON)
   Cultural (BUTTON)

logic

   ^1
   (BUTTON)

   [ loj-ik ]

   (*) Phonetic (Standard) ( ) IPA

noun

    1. the science that investigates the principles governing correct or
       reliable inference.
    2. a particular method of reasoning or argumentation:
       We were unable to follow his logic.
    3. the system or principles of reasoning applicable to any branch of
       knowledge or study.
    4. reason or sound judgment, as in utterances or actions:
       There wasn't much logic in her move.
       Synonyms: cogency, sense
    5. convincing forcefulness; inexorable truth or persuasiveness:
       the irresistible logic of the facts.
    6. Computers. logic circuit.
     __________________________________________________________________
     __________________________________________________________________

   -logic
   ^2
    1. a combining form used in the formation of adjectives corresponding
       to nouns ending in -logy:
       analogic.

   logic

   / ˈlɒdʒɪk /

noun

    1. the branch of philosophy concerned with analysing the patterns of
       reasoning by which a conclusion is properly drawn from a set of
       premises, without reference to meaning or context See also formal
       logic deduction induction
    2. any particular formal system in which are defined axioms and rules
       of inference Compare formal system formal language
    3. the system and principles of reasoning used in a specific field of
       study
    4. a particular method of argument or reasoning
    5. force or effectiveness in argument or dispute
    6. reasoned thought or argument, as distinguished from irrationality
    7. the relationship and interdependence of a series of events, facts,
       etc
    8. chop logic
       to use excessively subtle or involved logic or argument
    9. electronics computing
         1. the principles underlying the units in a computer system that
            perform arithmetical and logical operations See also logic
            circuit
         2. ( as modifier )
            a logic element

   “Collins English Dictionary — Complete & Unabridged” 2012 Digital
   Edition © William Collins Sons & Co. Ltd. 1979, 1986 © HarperCollins
   Publishers 1998, 2000, 2003, 2005, 2006, 2007, 2009, 2012

   logic

   / lŏj′ĭk /
    1. The study of the principles of reasoning, especially of the
       structure of propositions as distinguished from their content and
       of method and validity in deductive reasoning.

   logic
    1. The branch of philosophy dealing with the principles of reasoning.
       Classical logic, as taught in ancient Greece and Rome ,
       systematized rules for deduction . The modern scientific and
       philosophical logic of deduction has become closely allied to
       mathematics , especially in showing how the foundations of
       mathematics lie in logic.

   Discover More

Other Words From

     * logic·less adjective
     * non·logic noun

   Discover More

Word History and Origins

   Origin of logic^1
   First recorded in 1325–75; Middle English logik, from Latin logica,
   noun use of neuter plural (in Medieval Latin taken as feminine
   singular) of Greek logikós “of speech or reason”; logo-, -ic

   Origin of logic^2
   < Greek -logikós. See logic
   Discover More

Word History and Origins

   Origin of logic^1
   C14: from Old French logique from Medieval Latin logica (neuter plural,
   treated in Medieval Latin as feminine singular), from Greek logikos
   concerning speech or reasoning
   Discover More

Example Sentences

   Both men were caught up in the sick logic of toxic masculinity, where
   being "good" is about being dominant and hateful.
   From Salon

   As we saw during the pandemic, they operate by cult logic.
   From Salon

   He could pick apart an argument you made with one or two incisive
   slashes of history, facts, humor or logic, mostly all four put together
   in ways you’d never heard before.
   From Salon

   Timothy Snyder, who is a leading historian of fascism and the author of
   “On Tyranny: Twenty Lessons from the Twentieth Century”, explained the
   logic of “anticipatory obedience” to The Guardian in the following way:
   From Salon

   "We are willing to talk to them with logic. We are willing to talk to
   them with a real proposal."
   From BBC

   Advertisement
   Discover More

Related Words

     * philosophy
     * rationale
     * sanity
     * sense

   Advertisement
   carambola ad carousel

   Advertisement

   Advertisement
     __________________________________________________________________

   logialogical
     __________________________________________________________________

   Browse
     #
     aa
     bb
     cc
     dd
     ee
     ff
     gg
     hh
     ii
     jj
     kk
     ll
     mm
     nn
     oo
     pp
     qq
     rr
     ss
     tt
     uu
     vv
     ww
     xx
     yy
     zz

   [ab34ff65bbd3138890c7.svg] [e8d8d7d566d7f7f23acd.svg]
     About
     Careers
     Contact us

     Cookies, terms, & privacy
     (BUTTON) Do not sell my info
     Help

   Follow us

   Get the Word of the Day every day!
   ____________________ (BUTTON) Sign up

   By clicking "Sign Up", you are accepting Dictionary.com Terms &
   Conditions and Privacy Policies.
   © 2024 Dictionary.com, LLC
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 History
     * 2 PLA
     * 3 PAL
     * 4 GALs
     * 5 CPLDs
     * 6 FPGAs
     * 7 EPLDs
     * 8 Other variants
     * 9 How PLDs retain their configuration
     * 10 PLD programming languages
     * 11 PLD programming devices
     * 12 See also
     * 13 References
     * 14 External links

   [ ] Toggle the table of contents

Programmable logic device

   [ ] 20 languages
     * Català
     * Čeština
     * Deutsch
     * Español
     * Euskara
     * فارسی
     * Français
     * 한국어
     * Italiano
     * 日本語
     * Polski
     * Português
     * Русский
     * Slovenčina
     * Српски / srpski
     * ไทย
     * Українська
     * Tiếng Việt
     * 吴语
     * 中文

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikimedia Commons
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   From Wikipedia, the free encyclopedia
   Reconfigurable digital circuit element

   [40px-Wiki_letter_w.svg.png]
   This article's lead section may be too short to adequately summarize
   the key points. Please consider expanding the lead to provide an
   accessible overview of all important aspects of the article. (January
   2013)
   [300px-Programmable_Logic_Device.svg.png] A simplified PAL device. The
   programmable elements (shown as a fuse) connect both the true and
   complemented inputs to the AND gates. These AND gates, also known as
   product terms, are ORed together to form a sum-of-products logic array.

   A programmable logic device (PLD) is an electronic component used to
   build reconfigurable digital circuits. Unlike digital logic constructed
   using discrete logic gates with fixed functions, the function of a PLD
   is undefined at the time of manufacture. Before the PLD can be used in
   a circuit it must be programmed to implement the desired function.^[1]
   Compared to fixed logic devices, programmable logic devices simplify
   the design of complex logic and may offer superior performance.^[2]
   Unlike for microprocessors, programming a PLD changes the connections
   made between the gates in the device.

   PLDs can broadly be categorised into, in increasing order of
   complexity, simple programmable logic devices (SPLDs), comprising
   programmable array logic, programmable logic array and generic array
   logic; complex programmable logic devices (CPLDs); and
   field-programmable gate arrays (FPGAs).

History

   [edit]

   In 1969, Motorola offered the XC157, a mask-programmed gate array with
   12 gates and 30 uncommitted input/output pins.^[3]

   In 1970, Texas Instruments developed a mask-programmable IC based on
   the IBM read-only associative memory or ROAM. This device, the TMS2000,
   was programmed by altering the metal layer during the production of the
   IC. The TMS2000 had up to 17 inputs and 18 outputs with 8 JK flip-flops
   for memory. TI coined the term programmable logic array (PLA) for this
   device.^[4]

   In 1971, General Electric Company (GE) was developing a programmable
   logic device based on the new programmable read-only memory (PROM)
   technology. This experimental device improved on IBM's ROAM by allowing
   multilevel logic. Intel had just introduced the floating-gate UV EPROM
   so the researcher at GE incorporated that technology. The GE device was
   the first erasable PLD ever developed, predating the Altera EPLD by
   over a decade. GE obtained several early patents on programmable logic
   devices.^[5]^[6]^[7]

   In 1973 National Semiconductor introduced a mask-programmable PLA
   device (DM7575) with 14 inputs and 8 outputs with no memory registers.
   This was more popular than the TI part but the cost of making the metal
   mask limited its use. The device is significant because it was the
   basis for the field programmable logic array produced by Signetics in
   1975, the 82S100. (Intersil actually beat Signetics to market but poor
   yield doomed their part.)^[8]^[9]

   In 1974 GE entered into an agreement with Monolithic Memories (MMI) to
   develop a mask-programmable logic device incorporating the GE
   innovations. The device was named programmable associative logic array
   or PALA. The MMI 5760 was completed in 1976 and could implement
   multilevel or sequential circuits of over 100 gates. The device was
   supported by a GE design environment where Boolean equations would be
   converted to mask patterns for configuring the device. The part was
   never brought to market.^[10]

PLA

   [edit]
   Main article: Programmable logic array

   In 1970, Texas Instruments developed a mask-programmable IC based on
   the IBM read-only associative memory or ROAM. This device, the TMS2000,
   was programmed by altering the metal layer during the production of the
   IC. The TMS2000 had up to 17 inputs and 18 outputs with 8 JK flip-flops
   for memory. TI coined the term programmable logic array for this
   device.^[4]

   A programmable logic array (PLA) has a programmable AND gate array,
   which links to a programmable OR gate array, which can then be
   conditionally complemented to produce an output. A PLA is similar to a
   ROM concept, however a PLA does not provide full decoding of a variable
   and does not generate all the minterms as in a ROM.

PAL

   [edit]
   Main article: Programmable array logic

   PAL devices have arrays of transistor cells arranged in a "fixed-OR,
   programmable-AND" plane used to implement "sum-of-products" binary
   logic equations for each of the outputs in terms of the inputs and
   either synchronous or asynchronous feedback from the outputs.

   MMI introduced a breakthrough device in 1978, the programmable array
   logic or PAL. The architecture was simpler than that of Signetics' FPLA
   because it omitted the programmable OR array. This made the parts
   faster, smaller and cheaper. They were available in 20-pin 300-mil DIP
   packages, while the FPLAs came in 28-pin 600-mil packages. The PAL
   Handbook demystified the design process. The PALASM design software
   (PAL assembler) converted the engineers' Boolean equations into the
   fuse pattern required to program the part. The PAL devices were soon
   second-sourced by National Semiconductor, Texas Instruments and AMD.

   After MMI succeeded with the 20-pin PAL parts, AMD introduced the
   24-pin 22V10 PAL with additional features. After buying out MMI (1987),
   AMD spun off a consolidated operation as Vantis, and that business was
   acquired by Lattice Semiconductor in 1999.

GALs

   [edit]
   Main article: Generic array logic
   [220px-Lattice_GAL_16V8.jpg] Lattice GAL 16V8 and 20V8.  These are 35
   nanosecond devices.

   An improvement on the PAL was the generic array logic device, or GAL,
   invented by Lattice Semiconductor in 1985. This device has the same
   logical properties as the PAL but can be erased and reprogrammed. The
   GAL is very useful in the prototyping stage of a design, when any bugs
   in the logic can be corrected by reprogramming. GALs are programmed and
   reprogrammed using a PAL programmer, or, in the case of chips that
   support it, by using the in-circuit programming technique.

   Lattice GALs combine CMOS and electrically erasable (E^2) floating gate
   technology for a high-speed, low-power logic device. A similar device
   called a PEEL (programmable electrically erasable logic) was introduced
   by the International CMOS Technology (ICT) corporation.

   Sometimes GAL chips are referred as simple programmable logic device
   (SPLD), analogous to complex programmable logic device (CPLD) below.

CPLDs

   [edit]
   Main article: Complex programmable logic device

   PALs and GALs are available only in small sizes, equivalent to a few
   hundred logic gates. For bigger logic circuits, complex PLDs or CPLDs
   can be used. These contain the equivalent of several PALs linked by
   programmable interconnections, all in one integrated circuit. CPLDs can
   replace thousands, or even hundreds of thousands, of logic gates.

   Some CPLDs are programmed using a PAL programmer, but this method
   becomes inconvenient for devices with hundreds of pins. A second method
   of programming is to solder the device to its printed circuit board,
   then feed it with a serial data stream from a personal computer. The
   CPLD contains a circuit that decodes the data stream and configures the
   CPLD to perform its specified logic function. Some manufacturers, such
   as Altera and Atmel (now Microchip), use JTAG to program CPLDs
   in-circuit from .JAM files.

FPGAs

   [edit]
   Main article: Field-programmable gate array

   While PALs were being developed into GALs and CPLDs (all discussed
   above), a separate stream of development was happening. This type of
   device is based on gate array technology and is called the
   field-programmable gate array (FPGA). Early examples of FPGAs are the
   82S100 array, and 82S105 sequencer, by Signetics, introduced in the
   late 1970s. The 82S100 was an array of AND terms. The 82S105 also had
   flip-flop functions.

   (Remark: 82S100 and similar ICs from Signetics have PLA structure,
   AND-plane + OR-plane.)

   FPGAs use a grid of logic gates, and once stored, the data doesn't
   change, similar to that of an ordinary gate array. The term
   field-programmable means the device is programmed by the customer, not
   the manufacturer. FPGAs and gate arrays are similar but gate arrays can
   only be configured at the factory during fabrication.^[11]^[12]^[13]

   FPGAs are usually programmed after being soldered down to the circuit
   board, in a manner similar to that of larger CPLDs. In most larger
   FPGAs, the configuration is volatile and must be re-loaded into the
   device whenever power is applied or different functionality is
   required. Configuration is typically stored in a configuration PROM,
   EEPROM or flash memory.^[14] EEPROM versions may be in-system
   programmable (typically via JTAG).

   The difference between FPGAs and CPLDs is that FPGAs are internally
   based on look-up tables (LUTs), whereas CPLDs form the logic functions
   with sea-of-gates (e.g. sum of products). CPLDs are meant for simpler
   designs while FPGAs are meant for more complex designs. In general,
   CPLDs are a good choice for wide combinational logic applications,
   whereas FPGAs are more suitable for large state machines such as
   microprocessors.

EPLDs

   [edit]
   [220px-PLCC84_UV_Cypress.jpg] An EPLD from Cypress in a PLCC-package

   Using the same technology as EPROMs, EPLDs have a quartz window in the
   package that allows them to be erased on exposure to UV
   light.^[15]^[16]

   Using the same technology as EEPROMs, EEPLDs can be erased
   electrically.^[15]^[16]

   An erasable programmable logic device (EPLD) is an integrated circuit
   that comprises an array of PLDs that do not come pre-connected; the
   connections are programmed electrically by the user. Most GAL and FPGA
   devices are examples of EPLDs.^[citation needed]

Other variants

   [edit]

   These are microprocessor circuits that contain some fixed functions and
   other functions that can be altered by code running on the processor.
   Designing self-altering systems requires that engineers learn new
   methods, and that new software tools be developed.

   PLDs are being sold now that contain a microprocessor with a fixed
   function (the so-called core) surrounded by programmable logic. These
   devices let designers concentrate on adding new features to designs
   without having to worry about making the microprocessor work. Also, the
   fixed-function microprocessor takes less space on the chip than a part
   of the programmable gate array implementing the same processor, leaving
   more space for the programmable gate array to contain the designer's
   specialized circuits.

How PLDs retain their configuration

   [edit]

   A PLD is a combination of a logic device and a memory device. The
   memory is used to store the pattern that was given to the chip during
   programming. Most of the methods for storing data in an integrated
   circuit have been adapted for use in PLDs. These include:
     * Silicon antifuses
     * SRAM
     * EPROM or EEPROM memory cells
     * Flash memory

   Silicon antifuses are connections that are made by applying a voltage
   across a modified area of silicon inside the chip. They are called
   antifuses because they work in the opposite way to normal fuses, which
   begin life as connections until they are broken by an electric current.

   SRAM, or static RAM, is a volatile type of memory, meaning that its
   contents are lost each time the power is switched off. SRAM-based PLDs
   therefore have to be programmed every time the circuit is switched on.
   This is usually done automatically by another part of the circuit.

   An EPROM memory cell is a MOSFET (metal-oxide semiconductor
   field-effect transistor, or MOS transistor) that can be switched on by
   trapping an electric charge permanently on its gate electrode. This is
   done by a PAL programmer. The charge remains for many years and can
   only be removed by exposing the chip to strong ultraviolet light in a
   device called an EPROM eraser.

   Flash memory is non-volatile, retaining its contents even when the
   power is switched off. It is stored on floating-gate MOSFET memory
   cells, and can be erased and reprogrammed as required. This makes it
   useful in PLDs that may be reprogrammed frequently, such as PLDs used
   in prototypes. Flash memory is a kind of EEPROM that holds information
   using trapped electric charges similar to EPROM. Consequently, flash
   memory can hold information for years, but possibly not as many years
   as EPROM.

   As of 2005, most CPLDs are electrically programmable and erasable, and
   non-volatile. This is because they are too small to justify the
   inconvenience of programming internal SRAM cells every time they start
   up, and EPROM cells are more expensive due to their ceramic package
   with a quartz window.

PLD programming languages

   [edit]

   Many PAL programming devices accept input in a standard file format,
   commonly referred to as 'JEDEC files'. They are analogous to software
   compilers. The languages used as source code for logic compilers are
   called hardware description languages, or HDLs.^[1]

   PALASM, ABEL and CUPL are frequently used for low-complexity devices,
   while Verilog and VHDL are popular higher-level description languages
   for more complex devices. The more limited ABEL is often used for
   historical reasons, but for new designs VHDL is more popular, even for
   low-complexity designs.

   For modern PLD programming languages, design flows, and tools, see FPGA
   and reconfigurable computing.

PLD programming devices

   [edit]

   A device programmer is used to transfer the Boolean logic pattern into
   the programmable device. In the early days of programmable logic, every
   PLD manufacturer also produced a specialized device programmer for its
   family of logic devices. Later, universal device programmers came onto
   the market that supported several logic device families from different
   manufacturers. Today's device programmers usually can program common
   PLDs (mostly PAL/GAL equivalents) from all existing manufacturers.
   Common file formats used to store the Boolean logic pattern (fuses) are
   JEDEC, Altera POF (programmable object file), or Xilinx BITstream.^[17]

See also

   [edit]
     * Complex programmable logic device (CPLD)
     * Field-programmable gate array (FPGA)
     * Macrocell array
     * Programmable array logic (PAL)

References

   [edit]
    1. ^ ^a ^b Horowitz, Paul; Hill, Winfield (2015). Horowitz P., Hill W.
       - The Art of Electronics. New York. p. 764.
       ISBN 978-0-521-80926-9.{{cite book}}: CS1 maint: location missing
       publisher (link)
    2. ^ Holdsworth, B.; Woods, R. C. (2003). Digital Logic Design
       (4th ed.). Elsevier. ISBN 978-0-7506-4582-9.
    3. ^ Motorola Semiconductor Data Book, Fourth Edition. Motorola Inc.
       1969. p. IC-73.
    4. ^ ^a ^b Andres, Kent (October 1970). A Texas Instruments
       Application Report: MOS programmable logic arrays. Texas
       Instruments. Bulletin CA-158. Report introduces the TMS2000 and
       TMS2200 series of mask programmable PLAs.
    5. ^ Greer, David L. Electrically Programmable Logic Circuits US
       Patent 3,818,452. Assignee: General Electric, Filed: April 28,
       1972, Granted: June 18, 1974
    6. ^ Greer, David L. Multiple Level Associative Logic Circuits US
       Patent 3,816,725. Assignee: General Electric, Filed: April 28,
       1972, Granted: June 11, 1974
    7. ^ Greer, David L. Segmented Associative Logic Circuits US Patent
       3,849,638. Assignee: General Electric, Filed: July 18, 1973,
       Granted: November 19, 1974
    8. ^ "Semiconductors and IC's : FPLA". EDN. 20 (13). Boston, MA:
       Cahners Publishing: 66. July 20, 1975. Press release on Intersil
       IM5200 field programmable logic array. Fourteen inputs pins and 48
       product terms. Avalanched-induced-migration programming. Unit price
       was $37.50
    9. ^ "FPLA's give quick custom logic". EDN. 20 (13). Boston, MA:
       Cahners Publishing: 61. July 20, 1975. Press release on Signetics
       82S100 and 82S101 field programmable logic arrays. Fourteen inputs
       pins, 8 output pins and 48 product terms. NiCr fuse link
       programming.
   10. ^ Pellerin, David; Michael Holley (1991). Practical Design Using
       Programmable Logic. Prentice-Hall. p. 15. ISBN 0-13-723834-7.
   11. ^ Dorf, Richard C. (3 October 2018). Electronics, Power
       Electronics, Optoelectronics, Microwaves, Electromagnetics, and
       Radar. CRC Press. ISBN 978-1-4200-0315-4.
   12. ^ Vahid, Frank; Givargis, Tony D. (17 October 2001). Embedded
       System Design: A Unified Hardware / Software Introduction. John
       Wiley & Sons. ISBN 978-0-471-38678-0.
   13. ^ Chen, Wai-Kai (3 October 2018). The VLSI Handbook. CRC Press.
       ISBN 978-1-4200-0596-7.
   14. ^ "Using Flash Memory to Configure FPGAs" (PDF). Altera. Retrieved
       2024-08-21.
   15. ^ ^a ^b Tertulien Ndjountche. "Digital Electronics 2: Sequential
       and Arithmetic Logic Circuits". 2016. p. 224.
   16. ^ ^a ^b Clive Maxfield. "The Design Warrior's Guide to FPGAs".
       2004. p. 20
   17. ^ PLD File Formats

External links

   [edit]
   Wikibooks has a book on the topic of: Programmable Logic

   Wikimedia Commons has media related to Programmable logic devices.

     *

   "PLD Tools Creating SVF, JAM, STAPL and other formats". JTAG /
   boundary-scan. Corelis. Dec 1, 2010. Archived from the original on
   March 18, 2012. Retrieved July 18, 2011.

     "FPGAs and CPLDs". Lattice Semiconductor.

     * v
     * t
     * e

   Programmable logic

   Concepts

     * ASIC
     * SoC
     * FPGA
          + Logic block
     * CPLD
     * EPLD
     * PLA
     * PAL
     * GAL
     * PSoC
     * Reconfigurable computing
          + Xputer
     * Soft microprocessor
     * Circuit underutilization
     * High-level synthesis
     * Hardware acceleration

   Languages

     * Verilog
          + A
          + AMS
     * VHDL
          + AMS
          + VITAL
     * SystemVerilog
          + DPI
     * SystemC
     * AHDL
     * Handel-C
     * Lola
     * PSL
     * UPF
     * PALASM
     * ABEL
     * CUPL
     * C to HDL
     * Flow to HDL
     * MyHDL
     * ELLA
     * Chisel

   Companies

     * Accellera
     * Achronix
     * AMD
     * Aldec
     * Arm
     * Cadence
     * Infineon
     * Intel
     * Lattice
     * Microchip Technology
     * NXP
     * Siemens
     * Synopsys
     * Texas Instruments

   Products

   Hardware
     * iCE
     * Stratix
     * Virtex

   Software
     * Intel Quartus Prime
     * Xilinx ISE
     * Vivado
     * ModelSim
     * VTR
     * Simulators

   Intellectual
   property
   Proprietary
     * ARC
     * ARM Cortex-M
     * LEON
     * LatticeMico8
     * MicroBlaze
     * PicoBlaze
     * Nios
     * Nios II

   Open-source
     * JOP
     * LatticeMico32
     * OpenCores
     * OpenRISC
          + 1200
     * Power ISA
          + Libre-SOC
          + Microwatt
     * RISC-V

     * v
     * t
     * e

   Digital electronics

   Components

     * Transistor
     * Resistor
     * Inductor
     * Capacitor
     * Printed electronics
     * Printed circuit board
     * Electronic circuit
     * Flip-flop
     * Memory cell
     * Combinational logic
     * Sequential logic
     * Logic gate
     * Boolean circuit
     * Integrated circuit (IC)
     * Hybrid integrated circuit (HIC)
     * Mixed-signal integrated circuit
     * Three-dimensional integrated circuit (3D IC)
     * Emitter-coupled logic (ECL)
     * Erasable programmable logic device (EPLD)
     * Macrocell array
     * Programmable logic array (PLA)
     * Programmable logic device (PLD)
     * Programmable Array Logic (PAL)
     * Generic Array Logic (GAL)
     * Complex programmable logic device (CPLD)
     * Field-programmable gate array (FPGA)
     * Field-programmable object array (FPOA)
     * Application-specific integrated circuit (ASIC)
     * Tensor Processing Unit (TPU)

   Theory

     * Digital signal
     * Boolean algebra
     * Logic synthesis
     * Logic in computer science
     * Computer architecture
     * Digital signal
          + Digital signal processing
     * Circuit minimization
     * Switching circuit theory
     * Gate equivalent

   Design

     * Logic synthesis
     * Place and route
          + Placement
          + Routing
     * Transaction-level modeling
     * Register-transfer level
          + Hardware description language
          + High-level synthesis
     * Formal equivalence checking
     * Synchronous logic
     * Asynchronous logic
     * Finite-state machine
          + Hierarchical state machine

   Applications

     * Computer hardware
          + Hardware acceleration
     * Digital audio
          + radio
     * Digital photography
     * Digital telephone
     * Digital video
          + cinematography
          + television
     * Electronic literature

   Design issues

     * Metastability
     * Runt pulse

   Authority control databases: National Edit this at Wikidata
     * Czech Republic

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Programmable_logic_device&o
   ldid=1264062025"

   Category:
     * Gate arrays

   Hidden categories:
     * CS1 maint: location missing publisher
     * Articles with short description
     * Short description is different from Wikidata
     * Use American English from April 2019
     * All Wikipedia articles written in American English
     * Wikipedia introduction cleanup from January 2013
     * All pages needing cleanup
     * Articles covered by WikiProject Wikify from January 2013
     * All articles covered by WikiProject Wikify
     * All articles with unsourced statements
     * Articles with unsourced statements from May 2021
     * Commons category link is on Wikidata

     * This page was last edited on 20 December 2024, at 06:01 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 History
     * 2 Concepts
       (BUTTON) Toggle Concepts subsection
          + 2.1 Algorithm = Logic + Control
          + 2.2 Relationship with functional programming
          + 2.3 Relationship with relational programming
          + 2.4 Semantics of Horn clause programs
          + 2.5 Negation as failure
          + 2.6 Metalogic programming
          + 2.7 Relationship with the Computational-representational
            understanding of mind
          + 2.8 Knowledge representation
     * 3 Variants and extensions
       (BUTTON) Toggle Variants and extensions subsection
          + 3.1 Prolog
          + 3.2 Constraint logic programming
          + 3.3 Datalog
          + 3.4 Answer set programming
          + 3.5 Abductive logic programming
          + 3.6 Inductive logic programming
          + 3.7 Concurrent logic programming
          + 3.8 Concurrent constraint logic programming
          + 3.9 Higher-order logic programming
          + 3.10 Linear logic programming
          + 3.11 Object-oriented logic programming
          + 3.12 Transaction logic programming
     * 4 See also
     * 5 Citations
     * 6 Sources
       (BUTTON) Toggle Sources subsection
          + 6.1 General introductions
          + 6.2 Other sources
     * 7 Further reading
     * 8 External links

   [ ] Toggle the table of contents

Logic programming

   [ ] 36 languages
     * العربية
     * বাংলা
     * Български
     * Bosanski
     * Català
     * Čeština
     * Deutsch
     * Eesti
     * Español
     * فارسی
     * Français
     * Gaeilge
     * Galego
     * 한국어
     * Hrvatski
     * Ido
     * Italiano
     * עברית
     * Bahasa Melayu
     * Nederlands
     * 日本語
     * Polski
     * Português
     * Русиньскый
     * Русский
     * Shqip
     * Simple English
     * Српски / srpski
     * Suomi
     * Svenska
     * ไทย
     * Türkçe
     * Українська
     * Tiếng Việt
     * 粵語
     * 中文

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikimedia Commons
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   From Wikipedia, the free encyclopedia
   Programming paradigm based on formal logic

   Logic programming is a programming, database and knowledge
   representation paradigm based on formal logic. A logic program is a set
   of sentences in logical form, representing knowledge about some problem
   domain. Computation is performed by applying logical reasoning to that
   knowledge, to solve problems in the domain. Major logic programming
   language families include Prolog, Answer Set Programming (ASP) and
   Datalog. In all of these languages, rules are written in the form of
   clauses:

          A :- B[1], ..., B[n].

   and are read as declarative sentences in logical form:

          A if B[1] and ... and B[n].

   A is called the head of the rule, B[1], ..., B[n] is called the body,
   and the B[i] are called literals or conditions. When n = 0, the rule is
   called a fact and is written in the simplified form:

          A.

   Queries (or goals) have the same syntax as the bodies of rules and are
   commonly written in the form:

          ?- B[1], ..., B[n].

   In the simplest case of Horn clauses (or "definite" clauses), all of
   the A, B[1], ..., B[n] are atomic formulae of the form p(t[1] ,...,
   t[m]), where p is a predicate symbol naming a relation, like
   "motherhood", and the t[i] are terms naming objects (or individuals).
   Terms include both constant symbols, like "charles", and variables,
   such as X, which start with an upper case letter.

   Consider, for example, the following Horn clause program:
mother_child(elizabeth, charles).
father_child(charles, william).
father_child(charles, harry).
parent_child(X, Y) :-
     mother_child(X, Y).
parent_child(X, Y) :-
     father_child(X, Y).
grandparent_child(X, Y) :-
     parent_child(X, Z),
     parent_child(Z, Y).

   Given a query, the program produces answers. For instance for a query
   ?- parent_child(X, william), the single answer is
X = charles

   Various queries can be asked. For instance the program can be queried
   both to generate grandparents and to generate grandchildren. It can
   even be used to generate all pairs of grandchildren and grandparents,
   or simply to check if a given pair is such a pair:
grandparent_child(X, william).
X = elizabeth

?- grandparent_child(elizabeth, Y).
Y = william;
Y = harry.

?- grandparent_child(X, Y).
X = elizabeth
Y = william;
X = elizabeth
Y = harry.

?- grandparent_child(william, harry).
no
?- grandparent_child(elizabeth, harry).
yes

   Although Horn clause logic programs are Turing complete,^[1]^[2] for
   most practical applications, Horn clause programs need to be extended
   to "normal" logic programs with negative conditions. For example, the
   definition of sibling uses a negative condition, where the predicate =
   is defined by the clause X = X :
sibling(X, Y) :-
     parent_child(Z, X),
     parent_child(Z, Y),
     not(X = Y).

   Logic programming languages that include negative conditions have the
   knowledge representation capabilities of a non-monotonic logic.

   In ASP and Datalog, logic programs have only a declarative reading, and
   their execution is performed by means of a proof procedure or model
   generator whose behaviour is not meant to be controlled by the
   programmer. However, in the Prolog family of languages, logic programs
   also have a procedural interpretation as goal-reduction procedures.
   From this point of view, clause A :- B[1],...,B[n] is understood as:

          to solve A, solve B[1], and ... and solve B[n].

   Negative conditions in the bodies of clauses also have a procedural
   interpretation, known as negation as failure: A negative literal not B
   is deemed to hold if and only if the positive literal B fails to hold.

   Much of the research in the field of logic programming has been
   concerned with trying to develop a logical semantics for negation as
   failure and with developing other semantics and other implementations
   for negation. These developments have been important, in turn, for
   supporting the development of formal methods for logic-based program
   verification and program transformation.

History

   [edit]

   The use of mathematical logic to represent and execute computer
   programs is also a feature of the lambda calculus, developed by Alonzo
   Church in the 1930s. However, the first proposal to use the clausal
   form of logic for representing computer programs was made by Cordell
   Green.^[3] This used an axiomatization of a subset of LISP, together
   with a representation of an input-output relation, to compute the
   relation by simulating the execution of the program in LISP. Foster and
   Elcock's Absys, on the other hand, employed a combination of equations
   and lambda calculus in an assertional programming language that places
   no constraints on the order in which operations are performed.^[4]

   Logic programming, with its current syntax of facts and rules, can be
   traced back to debates in the late 1960s and early 1970s about
   declarative versus procedural representations of knowledge in
   artificial intelligence. Advocates of declarative representations were
   notably working at Stanford, associated with John McCarthy, Bertram
   Raphael and Cordell Green, and in Edinburgh, with John Alan Robinson
   (an academic visitor from Syracuse University), Pat Hayes, and Robert
   Kowalski. Advocates of procedural representations were mainly centered
   at MIT, under the leadership of Marvin Minsky and Seymour Papert.^[5]

   Although it was based on the proof methods of logic, Planner, developed
   by Carl Hewitt at MIT, was the first language to emerge within this
   proceduralist paradigm.^[6] Planner featured pattern-directed
   invocation of procedural plans from goals (i.e. goal-reduction or
   backward chaining) and from assertions (i.e. forward chaining). The
   most influential implementation of Planner was the subset of Planner,
   called Micro-Planner, implemented by Gerry Sussman, Eugene Charniak and
   Terry Winograd. Winograd used Micro-Planner to implement the landmark,
   natural-language understanding program SHRDLU.^[7] For the sake of
   efficiency, Planner used a backtracking control structure so that only
   one possible computation path had to be stored at a time. Planner gave
   rise to the programming languages QA4,^[8] Popler,^[9] Conniver,^[10]
   QLISP,^[11] and the concurrent language Ether.^[12]

   Hayes and Kowalski in Edinburgh tried to reconcile the logic-based
   declarative approach to knowledge representation with Planner's
   procedural approach. Hayes (1973) developed an equational language,
   Golux, in which different procedures could be obtained by altering the
   behavior of the theorem prover.^[13]

   In the meanwhile, Alain Colmerauer in Marseille was working on
   natural-language understanding, using logic to represent semantics and
   using resolution for question-answering. During the summer of 1971,
   Colmerauer invited Kowalski to Marseille, and together they discovered
   that the clausal form of logic could be used to represent formal
   grammars and that resolution theorem provers could be used for parsing.
   They observed that some theorem provers, like hyper-resolution,^[14]
   behave as bottom-up parsers and others, like SL resolution (1971)^[15]
   behave as top-down parsers.

   It was in the following summer of 1972, that Kowalski, again working
   with Colmerauer, developed the procedural interpretation of
   implications in clausal form. It also became clear that such clauses
   could be restricted to definite clauses or Horn clauses, and that
   SL-resolution could be restricted (and generalised) to SLD resolution.
   Kowalski's procedural interpretation and SLD were described in a 1973
   memo, published in 1974.^[16]

   Colmerauer, with Philippe Roussel, used the procedural interpretation
   as the basis of Prolog, which was implemented in the summer and autumn
   of 1972. The first Prolog program, also written in 1972 and implemented
   in Marseille, was a French question-answering system. The use of Prolog
   as a practical programming language was given great momentum by the
   development of a compiler by David H. D. Warren in Edinburgh in 1977.
   Experiments demonstrated that Edinburgh Prolog could compete with the
   processing speed of other symbolic programming languages such as
   Lisp.^[17] Edinburgh Prolog became the de facto standard and strongly
   influenced the definition of ISO standard Prolog.

   Logic programming gained international attention during the 1980s, when
   it was chosen by the Japanese Ministry of International Trade and
   Industry to develop the software for the Fifth Generation Computer
   Systems (FGCS) project. The FGCS project aimed to use logic programming
   to develop advanced Artificial Intelligence applications on massively
   parallel computers. Although the project initially explored the use of
   Prolog, it later adopted the use of concurrent logic programming,
   because it was closer to the FGCS computer architecture.

   However, the committed choice feature of concurrent logic programming
   interfered with the language's logical semantics^[18] and with its
   suitability for knowledge representation and problem solving
   applications. Moreover, the parallel computer systems developed in the
   project failed to compete with advances taking place in the development
   of more conventional, general-purpose computers. Together these two
   issues resulted in the FGCS project failing to meet its objectives.
   Interest in both logic programming and AI fell into world-wide
   decline.^[19]

   In the meanwhile, more declarative logic programming approaches,
   including those based on the use of Prolog, continued to make progress
   independently of the FGCS project. In particular, although Prolog was
   developed to combine declarative and procedural representations of
   knowledge, the purely declarative interpretation of logic programs
   became the focus for applications in the field of deductive databases.
   Work in this field became prominent around 1977, when Hervé Gallaire
   and Jack Minker organized a workshop on logic and databases in
   Toulouse.^[20] The field was eventually renamed as Datalog.

   This focus on the logical, declarative reading of logic programs was
   given further impetus by the development of constraint logic
   programming in the 1980s and Answer Set Programming in the 1990s. It is
   also receiving renewed emphasis in recent applications of Prolog^[21]

   The Association for Logic Programming (ALP) was founded in 1986 to
   promote Logic Programming. Its official journal until 2000, was The
   Journal of Logic Programming. Its founding editor-in-chief was J. Alan
   Robinson.^[22] In 2001, the journal was renamed The Journal of Logic
   and Algebraic Programming, and the official journal of ALP became
   Theory and Practice of Logic Programming, published by Cambridge
   University Press.

Concepts

   [edit]

   Logic programs enjoy a rich variety of semantics and problem solving
   methods, as well as a wide range of applications in programming,
   databases, knowledge representation and problem solving.

Algorithm = Logic + Control

   [edit]

   The procedural interpretation of logic programs, which uses backward
   reasoning to reduce goals to subgoals, is a special case of the use of
   a problem-solving strategy to control the use of a declarative, logical
   representation of knowledge to obtain the behaviour of an algorithm.
   More generally, different problem-solving strategies can be applied to
   the same logical representation to obtain different algorithms.
   Alternatively, different algorithms can be obtained with a given
   problem-solving strategy by using different logical
   representations.^[23]

   The two main problem-solving strategies are backward reasoning (goal
   reduction) and forward reasoning, also known as top-down and bottom-up
   reasoning, respectively.

   In the simple case of a propositional Horn clause program and a
   top-level atomic goal, backward reasoning determines an and-or tree,
   which constitutes the search space for solving the goal. The top-level
   goal is the root of the tree. Given any node in the tree and any clause
   whose head matches the node, there exists a set of child nodes
   corresponding to the sub-goals in the body of the clause. These child
   nodes are grouped together by an "and". The alternative sets of
   children corresponding to alternative ways of solving the node are
   grouped together by an "or".

   Any search strategy can be used to search this space. Prolog uses a
   sequential, last-in-first-out, backtracking strategy, in which only one
   alternative and one sub-goal are considered at a time. For example,
   subgoals can be solved in parallel, and clauses can also be tried in
   parallel. The first strategy is called and-parallel
   and the second strategy is called or-parallel. Other search strategies,
   such as intelligent backtracking,^[24] or best-first search to find an
   optimal solution,^[25] are also possible.

   In the more general, non-propositional case, where sub-goals can share
   variables, other strategies can be used, such as choosing the subgoal
   that is most highly instantiated or that is sufficiently instantiated
   so that only one procedure applies.^[26] Such strategies are used, for
   example, in concurrent logic programming.

   In most cases, backward reasoning from a query or goal is more
   efficient than forward reasoning. But sometimes with Datalog and Answer
   Set Programming, there may be no query that is separate from the set of
   clauses as a whole, and then generating all the facts that can be
   derived from the clauses is a sensible problem-solving strategy. Here
   is another example, where forward reasoning beats backward reasoning in
   a more conventional computation task, where the goal ?- fibonacci(n,
   Result) is to find the n^th fibonacci number:
fibonacci(0, 0).
fibonacci(1, 1).

fibonacci(N, Result) :-
    N > 1,
    N1 is N - 1,
    N2 is N - 2,
    fibonacci(N1, F1),
    fibonacci(N2, F2),
    Result is F1 + F2.

   Here the relation fibonacci(N, M) stands for the function fibonacci(N)
   = M, and the predicate N is Expression is Prolog notation for the
   predicate that instantiates the variable N to the value of Expression.

   Given the goal of computing the fibonacci number of n, backward
   reasoning reduces the goal to the two subgoals of computing the
   fibonacci numbers of n-1 and n-2. It reduces the subgoal of computing
   the fibonacci number of n-1 to the two subgoals of computing the
   fibonacci numbers of n-2 and n-3, redundantly computing the fibonacci
   number of n-2. This process of reducing one fibonacci subgoal to two
   fibonacci subgoals continues until it reaches the numbers 0 and 1. Its
   complexity is of the order 2^n. In contrast, forward reasoning
   generates the sequence of fibonacci numbers, starting from 0 and 1
   without any recomputation, and its complexity is linear with respect to
   n.

   Prolog cannot perform forward reasoning directly. But it can achieve
   the effect of forward reasoning within the context of backward
   reasoning by means of tabling: Subgoals are maintained in a table,
   along with their solutions. If a subgoal is re-encountered, it is
   solved directly by using the solutions already in the table, instead of
   re-solving the subgoals redundantly.^[27]

Relationship with functional programming

   [edit]
   See also: Functional programming § Comparison to logic programming

   Logic programming can be viewed as a generalisation of functional
   programming, in which functions are a special case of relations.^[28]
   For example, the function, mother(X) = Y, (every X has only one mother
   Y) can be represented by the relation mother(X, Y). In this respect,
   logic programs are similar to relational databases, which also
   represent functions as relations.

   Compared with relational syntax, functional syntax is more compact for
   nested functions. For example, in functional syntax the definition of
   maternal grandmother can be written in the nested form:
maternal_grandmother(X) = mother(mother(X)).

   The same definition in relational notation needs to be written in the
   unnested, flattened form:
maternal_grandmother(X, Y) :- mother(X, Z), mother(Z, Y).

   However, nested syntax can be regarded as syntactic sugar for unnested
   syntax. Ciao Prolog, for example, transforms functional syntax into
   relational form and executes the resulting logic program using the
   standard Prolog execution strategy.^[29] Moreover, the same
   transformation can be used to execute nested relations that are not
   functional. For example:
grandparent(X) := parent(parent(X)).
parent(X) := mother(X).
parent(X) := father(X).

mother(charles) := elizabeth.
father(charles) := phillip.
mother(harry) := diana.
father(harry) := charles.

?- grandparent(X,Y).
X = harry,
Y = elizabeth.
X = harry,
Y = phillip.

Relationship with relational programming

   [edit]

   The term relational programming has been used to cover a variety of
   programming languages that treat functions as a special case of
   relations. Some of these languages, such as miniKanren^[28] and
   relational linear programming^[30] are logic programming languages in
   the sense of this article.

   However, the relational language RML is an imperative programming
   language ^[31] whose core construct is a relational expression, which
   is similar to an expression in first-order predicate logic.

   Other relational programming languages are based on the relational
   calculus^[32] or relational algebra.^[33]

Semantics of Horn clause programs

   [edit]
   Main article: Syntax and semantics of logic programming

   Viewed in purely logical terms, there are two approaches to the
   declarative semantics of Horn clause logic programs: One approach is
   the original logical consequence semantics, which understands solving a
   goal as showing that the goal is a theorem that is true in all models
   of the program.

   In this approach, computation is theorem-proving in first-order logic;
   and both backward reasoning, as in SLD resolution, and forward
   reasoning, as in hyper-resolution, are correct and complete
   theorem-proving methods. Sometimes such theorem-proving methods are
   also regarded as providing a separate proof-theoretic (or operational)
   semantics for logic programs. But from a logical point of view, they
   are proof methods, rather than semantics.

   The other approach to the declarative semantics of Horn clause programs
   is the satisfiability semantics, which understands solving a goal as
   showing that the goal is true (or satisfied) in some intended (or
   standard) model of the program. For Horn clause programs, there always
   exists such a standard model: It is the unique minimal model of the
   program.

   Informally speaking, a minimal model is a model that, when it is viewed
   as the set of all (variable-free) facts that are true in the model,
   contains no smaller set of facts that is also a model of the program.

   For example, the following facts represent the minimal model of the
   family relationships example in the introduction of this article. All
   other variable-free facts are false in the model:
mother_child(elizabeth, charles).
father_child(charles, william).
father_child(charles, harry).
parent_child(elizabeth, charles).
parent_child(charles, william).
parent_child(charles, harry).
grandparent_child(elizabeth, william).
grandparent_child(elizabeth, harry).

   The satisfiability semantics also has an alternative, more mathematical
   characterisation as the least fixed point of the function that uses the
   rules in the program to derive new facts from existing facts in one
   step of inference.

   Remarkably, the same problem-solving methods of forward and backward
   reasoning, which were originally developed for the logical consequence
   semantics, are equally applicable to the satisfiability semantics:
   Forward reasoning generates the minimal model of a Horn clause program,
   by deriving new facts from existing facts, until no new additional
   facts can be generated. Backward reasoning, which succeeds by reducing
   a goal to subgoals, until all subgoals are solved by facts, ensures
   that the goal is true in the minimal model, without generating the
   model explicitly.^[34]

   The difference between the two declarative semantics can be seen with
   the definitions of addition and multiplication in successor arithmetic,
   which represents the natural numbers 0, 1, 2, ... as a sequence of
   terms of the form 0, s(0), s(s(0)), .... In general, the term s(X)
   represents the successor of X, namely X + 1. Here are the standard
   definitions of addition and multiplication in functional notation:
     X + 0 = X.
     X + s(Y)    = s(X + Y).
i.e. X + (Y + 1) = (X + Y) + 1

     X × 0 = 0.
     X × s(Y)    = X + (X × Y).
i.e. X × (Y + 1) = X + (X × Y).

   Here are the same definitions as a logic program, using add(X, Y, Z) to
   represent X + Y = Z, and multiply(X, Y, Z) to represent X × Y = Z:
add(X, 0, X).
add(X, s(Y), s(Z)) :- add(X, Y, Z).

multiply(X, 0, 0).
multiply(X, s(Y), W) :- multiply(X, Y, Z), add(X, Z, W).

   The two declarative semantics both give the same answers for the same
   existentially quantified conjunctions of addition and multiplication
   goals. For example 2 × 2 = X has the solution X = 4; and X × X = X + X
   has two solutions X = 0 and X = 2:
?- multiply(s(s(0)), s(s(0)), X).
X = s(s(s(s(0)))).

?- multiply(X, X, Y), add(X, X, Y).
X = 0, Y = 0.
X = s(s(0)), Y = s(s(s(s(0)))).

   However, with the logical-consequence semantics, there are non-standard
   models of the program, in which, for example, add(s(s(0)), s(s(0)),
   s(s(s(s(s(0)))))), i.e. 2 + 2 = 5 is true. But with the satisfiability
   semantics, there is only one model, namely the standard model of
   arithmetic, in which 2 + 2 = 5 is false.

   In both semantics, the goal ?- add(s(s(0)), s(s(0)), s(s(s(s(s(0))))))
   fails. In the satisfiability semantics, the failure of the goal means
   that the truth value of the goal is false. But in the logical
   consequence semantics, the failure means that the truth value of the
   goal is unknown.

Negation as failure

   [edit]
   Main article: Negation as failure

   Negation as failure (NAF), as a way of concluding that a negative
   condition not p holds by showing that the positive condition p fails to
   hold, was already a feature of early Prolog systems. The resulting
   extension of SLD resolution is called SLDNF. A similar construct,
   called "thnot", also existed in Micro-Planner.

   The logical semantics of NAF was unresolved until Keith Clark^[35]
   showed that, under certain natural conditions, NAF is an efficient,
   correct (and sometimes complete) way of reasoning with the logical
   consequence semantics using the completion of a logic program in
   first-order logic.

   Completion amounts roughly to regarding the set of all the program
   clauses with the same predicate in the head, say:

          A :- Body[1].
          ...
          A :- Body[k].

   as a definition of the predicate:

          A iff (Body[1] or ... or Body[k])

   where iff means "if and only if". The completion also includes axioms
   of equality, which correspond to unification. Clark showed that proofs
   generated by SLDNF are structurally similar to proofs generated by a
   natural deduction style of reasoning with the completion of the
   program.

   Consider, for example, the following program:
should_receive_sanction(X, punishment) :-
    is_a_thief(X),
    not should_receive_sanction(X, rehabilitation).

should_receive_sanction(X, rehabilitation) :-
    is_a_thief(X),
    is_a_minor(X),
    not is_violent(X).

is_a_thief(tom).

   Given the goal of determining whether tom should receive a sanction,
   the first rule succeeds in showing that tom should be punished:
?- should_receive_sanction(tom, Sanction).
Sanction = punishment.

   This is because tom is a thief, and it cannot be shown that tom should
   be rehabilitated. It cannot be shown that tom should be rehabilitated,
   because it cannot be shown that tom is a minor.

   If, however, we receive new information that tom is indeed a minor, the
   previous conclusion that tom should be punished is replaced by the new
   conclusion that tom should be rehabilitated:
minor(tom).

?- should_receive_sanction(tom, Sanction).
Sanction = rehabilitation.

   This property of withdrawing a conclusion when new information is
   added, is called non-monotonicity, and it makes logic programming a
   non-monotonic logic.

   But, if we are now told that tom is violent, the conclusion that tom
   should be punished will be reinstated:
violent(tom).

?- should_receive_sanction(tom, Sanction).
Sanction = punishment.

   The completion of this program is:
should_receive_sanction(X, Sanction) iff
    Sanction = punishment, is_a_thief(X),
    not should_receive_sanction(X, rehabilitation)
 or Sanction = rehabilitation, is_a_thief(X), is_a_minor(X),
    not is_violent(X).

is_a_thief(X) iff X = tom.
is_a_minor(X) iff X = tom.
is_violent(X) iff X = tom.

   The notion of completion is closely related to John McCarthy's
   circumscription semantics for default reasoning,^[36] and to Ray
   Reiter's closed world assumption.^[37]

   The completion semantics for negation is a logical consequence
   semantics, for which SLDNF provides a proof-theoretic implementation.
   However, in the 1980s, the satisfiability semantics became more popular
   for logic programs with negation. In the satisfiability semantics,
   negation is interpreted according to the classical definition of truth
   in an intended or standard model of the logic program.

   In the case of logic programs with negative conditions, there are two
   main variants of the satisfiability semantics: In the well-founded
   semantics, the intended model of a logic program is a unique,
   three-valued, minimal model, which always exists. The well-founded
   semantics generalises the notion of inductive definition in
   mathematical logic.^[38] XSB Prolog^[39] implements the well-founded
   semantics using SLG resolution.^[40]

   In the alternative stable model semantics, there may be no intended
   models or several intended models, all of which are minimal and
   two-valued. The stable model semantics underpins answer set programming
   (ASP).

   Both the well-founded and stable model semantics apply to arbitrary
   logic programs with negation. However, both semantics coincide for
   stratified logic programs. For example, the program for sanctioning
   thieves is (locally) stratified, and all three semantics for the
   program determine the same intended model:
should_receive_sanction(tom, punishment).
is_a_thief(tom).
is_a_minor(tom).
is_violent(tom).

   Attempts to understand negation in logic programming have also
   contributed to the development of abstract argumentation
   frameworks.^[41] In an argumentation interpretation of negation, the
   initial argument that tom should be punished because he is a thief, is
   attacked by the argument that he should be rehabilitated because he is
   a minor. But the fact that tom is violent undermines the argument that
   tom should be rehabilitated and reinstates the argument that tom should
   be punished.

Metalogic programming

   [edit]

   Metaprogramming, in which programs are treated as data, was already a
   feature of early Prolog implementations.^[42]^[43] For example, the
   Edinburgh DEC10 implementation of Prolog included "an interpreter and a
   compiler, both written in Prolog itself".^[43] The simplest metaprogram
   is the so-called "vanilla" meta-interpreter:
    solve(true).
    solve((B,C)):- solve(B),solve(C).
    solve(A):- clause(A,B),solve(B).

   where true represents an empty conjunction, and (B,C) is a composite
   term representing the conjunction of B and C. The predicate clause(A,B)
   means that there is a clause of the form A :- B.

   Metaprogramming is an application of the more general use of a
   metalogic or metalanguage to describe and reason about another
   language, called the object language.

   Metalogic programming allows object-level and metalevel representations
   to be combined, as in natural language. For example, in the following
   program, the atomic formula attends(Person, Meeting) occurs both as an
   object-level formula, and as an argument of the metapredicates
   prohibited and approved.
prohibited(attends(Person, Meeting)) :-
    not(approved(attends(Person, Meeting))).

should_receive_sanction(Person, scolding) :- attends(Person, Meeting),
    lofty(Person), prohibited(attends(Person, Meeting)).
should_receive_sanction(Person, banishment) :- attends(Person, Meeting),
    lowly(Person), prohibited(attends(Person, Meeting)).

approved(attends(alice, tea_party)).
attends(mad_hatter, tea_party).
attends(dormouse, tea_party).

lofty(mad_hatter).
lowly(dormouse).

?- should_receive_sanction(X,Y).
Person = mad_hatter,
Sanction = scolding.
Person = dormouse,
Sanction = banishment.

Relationship with the Computational-representational understanding of mind

   [edit]

   In his popular Introduction to Cognitive Science,^[44] Paul Thagard
   includes logic and rules as alternative approaches to modelling human
   thinking. He argues that rules, which have the form IF condition THEN
   action, are "very similar" to logical conditionals, but they are
   simpler and have greater psychological plausability (page 51). Among
   other differences between logic and rules, he argues that logic uses
   deduction, but rules use search (page 45) and can be used to reason
   either forward or backward (page 47). Sentences in logic "have to be
   interpreted as universally true", but rules can be defaults, which
   admit exceptions (page 44).

   He states that "unlike logic, rule-based systems can also easily
   represent strategic information about what to do" (page 45). For
   example, "IF you want to go home for the weekend, and you have bus
   fare, THEN you can catch a bus". He does not observe that the same
   strategy of reducing a goal to subgoals can be interpreted, in the
   manner of logic programming, as applying backward reasoning to a
   logical conditional:
can_go(you, home) :- have(you, bus_fare), catch(you, bus).

   All of these characteristics of rule-based systems - search, forward
   and backward reasoning, default reasoning, and goal-reduction - are
   also defining characteristics of logic programming. This suggests that
   Thagard's conclusion (page 56) that:

     Much of human knowledge is naturally described in terms of rules,
     and many kinds of thinking such as planning can be modeled by
     rule-based systems.

   also applies to logic programming.

   Other arguments showing how logic programming can be used to model
   aspects of human thinking are presented by Keith Stenning and Michiel
   van Lambalgen in their book, Human Reasoning and Cognitive
   Science.^[45] They show how the non-monotonic character of logic
   programs can be used to explain human performance on a variety of
   psychological tasks. They also show (page 237) that "closed–world
   reasoning in its guise as logic programming has an appealing neural
   implementation, unlike classical logic."

   In The Proper Treatment of Events,^[46] Michiel van Lambalgen and Fritz
   Hamm investigate the use of constraint logic programming to code
   "temporal notions in natural language by looking at the way human
   beings construct time".

Knowledge representation

   [edit]

   The use of logic to represent procedural knowledge and strategic
   information was one of the main goals contributing to the early
   development of logic programming. Moreover, it continues to be an
   important feature of the Prolog family of logic programming languages
   today. However, many applications of logic programming, including
   Prolog applications, increasingly focus on the use of logic to
   represent purely declarative knowledge. These applications include both
   the representation of general commonsense knowledge and the
   representation of domain specific expertise.

   Commonsense includes knowledge about cause and effect, as formalised,
   for example, in the situation calculus, event calculus and action
   languages. Here is a simplified example, which illustrates the main
   features of such formalisms. The first clause states that a fact holds
   immediately after an event initiates (or causes) the fact. The second
   clause is a frame axiom, which states that a fact that holds at a time
   continues to hold at the next time unless it is terminated by an event
   that happens at the time. This formulation allows more than one event
   to occur at the same time:
holds(Fact, Time2) :-
    happens(Event, Time1),
    Time2 is Time1 + 1,
    initiates(Event, Fact).

holds(Fact, Time2) :-
        happens(Event, Time1),
    Time2 is Time1 + 1,
    holds(Fact, Time1),
    not(terminated(Fact, Time1)).

terminated(Fact, Time) :-
   happens(Event, Time),
   terminates(Event, Fact).

   Here holds is a meta-predicate, similar to solve above. However,
   whereas solve has only one argument, which applies to general clauses,
   the first argument of holds is a fact and the second argument is a time
   (or state). The atomic formula holds(Fact, Time) expresses that the
   Fact holds at the Time. Such time-varying facts are also called
   fluents. The atomic formula happens(Event, Time) expresses that the
   Event happens at the Time.

   The following example illustrates how these clauses can be used to
   reason about causality in a toy blocks world. Here, in the initial
   state at time 0, a green block is on a table and a red block is stacked
   on the green block (like a traffic light). At time 0, the red block is
   moved to the table. At time 1, the green block is moved onto the red
   block. Moving an object onto a place terminates the fact that the
   object is on any place, and initiates the fact that the object is on
   the place to which it is moved:
holds(on(green_block, table), 0).
holds(on(red_block, green_block), 0).

happens(move(red_block, table), 0).
happens(move(green_block, red_block), 1).

initiates(move(Object, Place), on(Object, Place)).
terminates(move(Object, Place2), on(Object, Place1)).

?- holds(Fact, Time).

Fact = on(green_block,table),
Time = 0.
Fact = on(red_block,green_block),
Time = 0.
Fact = on(green_block,table),
Time = 1.
Fact = on(red_block,table),
Time = 1.
Fact = on(green_block,red_block),
Time = 2.
Fact = on(red_block,table),
Time = 2.

   Forward reasoning and backward reasoning generate the same answers to
   the goal holds(Fact, Time). But forward reasoning generates fluents
   progressively in temporal order, and backward reasoning generates
   fluents regressively, as in the domain-specific use of regression in
   the situation calculus.^[47]

   Logic programming has also proved to be useful for representing
   domain-specific expertise in expert systems.^[48] But human expertise,
   like general-purpose commonsense, is mostly implicit and tacit, and it
   is often difficult to represent such implicit knowledge in explicit
   rules. This difficulty does not arise, however, when logic programs are
   used to represent the existing, explicit rules of a business
   organisation or legal authority.

   For example, here is a representation of a simplified version of the
   first sentence of the British Nationality Act, which states that a
   person who is born in the UK becomes a British citizen at the time of
   birth if a parent of the person is a British citizen at the time of
   birth:
initiates(birth(Person), citizen(Person, uk)):-
    time_of(birth(Person), Time),
    place_of(birth(Person), uk),
    parent_child(Another_Person, Person),
    holds(citizen(Another_Person, uk), Time).

   Historically, the representation of a large portion of the British
   Nationality Act as a logic program in the 1980s^[49] was "hugely
   influential for the development of computational representations of
   legislation, showing how logic programming enables intuitively
   appealing representations that can be directly deployed to generate
   automatic inferences".^[50]

   More recently, the PROLEG system,^[51] initiated in 2009 and consisting
   of approximately 2500 rules and exceptions of civil code and supreme
   court case rules in Japan, has become possibly the largest legal rule
   base in the world.^[52]

Variants and extensions

   [edit]

Prolog

   [edit]
   Main article: Prolog

   The SLD resolution rule of inference is neutral about the order in
   which subgoals in the bodies of clauses can be selected for solution.
   For the sake of efficiency, Prolog restricts this order to the order in
   which the subgoals are written. SLD is also neutral about the strategy
   for searching the space of SLD proofs. Prolog searches this space,
   top-down, depth-first, trying different clauses for solving the same
   (sub)goal in the order in which the clauses are written.

   This search strategy has the advantage that the current branch of the
   tree can be represented efficiently by a stack. When a goal clause at
   the top of the stack is reduced to a new goal clause, the new goal
   clause is pushed onto the top of the stack. When the selected subgoal
   in the goal clause at the top of the stack cannot be solved, the search
   strategy backtracks, removing the goal clause from the top of the
   stack, and retrying the attempted solution of the selected subgoal in
   the previous goal clause using the next clause that matches the
   selected subgoal.

   Backtracking can be restricted by using a subgoal, called cut, written
   as !, which always succeeds but cannot be backtracked. Cut can be used
   to improve efficiency, but can also interfere with the logical meaning
   of clauses. In many cases, the use of cut can be replaced by negation
   as failure. In fact, negation as failure can be defined in Prolog, by
   using cut, together with any literal, say fail, that unifies with the
   head of no clause:
not(P) :- P, !, fail.
not(P).

   Prolog provides other features, in addition to cut, that do not have a
   logical interpretation. These include the built-in predicates assert
   and retract for destructively updating the state of the program during
   program execution.

   For example, the toy blocks world example above can be implemented
   without frame axioms using destructive change of state:
on(green_block, table).
on(red_block, green_block).

move(Object, Place2) :-
        retract(on(Object, Place1)),
        assert(on(Object, Place2).

   The sequence of move events and the resulting locations of the blocks
   can be computed by executing the query:
?- move(red_block, table), move(green_block, red_block), on(Object, Place).

Object = red_block,
Place = table.
Object = green_block,
Place = red_block.

   Various extensions of logic programming have been developed to provide
   a logical framework for such destructive change of
   state.^[53]^[54]^[55]

   The broad range of Prolog applications, both in isolation and in
   combination with other languages is highlighted in the Year of Prolog
   Book,^[21] celebrating the 50 year anniversary of Prolog in 2022.

   Prolog has also contributed to the development of other programming
   languages, including ALF, Fril, Gödel, Mercury, Oz, Ciao, Visual
   Prolog, XSB, and λProlog.

Constraint logic programming

   [edit]
   Main article: Constraint logic programming

   Constraint logic programming (CLP) combines Horn clause logic
   programming with constraint solving. It extends Horn clauses by
   allowing some predicates, declared as constraint predicates, to occur
   as literals in the body of a clause. Constraint predicates are not
   defined by the facts and rules in the program, but are predefined by
   some domain-specific model-theoretic structure or theory.

   Procedurally, subgoals whose predicates are defined by the program are
   solved by goal-reduction, as in ordinary logic programming, but
   constraints are simplified and checked for satisfiability by a
   domain-specific constraint-solver, which implements the semantics of
   the constraint predicates. An initial problem is solved by reducing it
   to a satisfiable conjunction of constraints.

   Interestingly, the first version of Prolog already included a
   constraint predicate dif(term1, term2), from Philippe Roussel's 1972
   PhD thesis, which succeeds if both of its arguments are different
   terms, but which is delayed if either of the terms contains a
   variable.^[52]

   The following constraint logic program represents a toy temporal
   database of john's history as a teacher:
teaches(john, hardware, T) :- 1990 ≤ T, T < 1999.
teaches(john, software, T) :- 1999 ≤ T, T < 2005.
teaches(john, logic, T) :- 2005 ≤ T, T ≤ 2012.
rank(john, instructor, T) :- 1990 ≤ T, T < 2010.
rank(john, professor, T) :- 2010 ≤ T, T < 2014.

   Here ≤ and < are constraint predicates, with their usual intended
   semantics. The following goal clause queries the database to find out
   when john both taught logic and was a professor:
?- teaches(john, logic, T), rank(john, professor, T).

   The solution 2010 ≤ T, T ≤ 2012 results from simplifying the
   constraints 2005 ≤ T, T ≤ 2012, 2010 ≤ T, T < 2014.

   Constraint logic programming has been used to solve problems in such
   fields as civil engineering, mechanical engineering, digital circuit
   verification, automated timetabling, air traffic control, and finance.
   It is closely related to abductive logic programming.

Datalog

   [edit]
   Main article: Datalog

   Datalog is a database definition language, which combines a relational
   view of data, as in relational databases, with a logical view, as in
   logic programming.

   Relational databases use a relational calculus or relational algebra,
   with relational operations, such as union, intersection, set difference
   and cartesian product to specify queries, which access a database.
   Datalog uses logical connectives, such as or, and and not in the bodies
   of rules to define relations as part of the database itself.

   It was recognized early in the development of relational databases that
   recursive queries cannot be expressed in either relational algebra or
   relational calculus, and that this defficiency can be remedied by
   introducing a least-fixed-point operator.^[56]^[57] In contrast,
   recursive relations can be defined naturally by rules in logic
   programs, without the need for any new logical connectives or
   operators.

   Datalog differs from more general logic programming by having only
   constants and variables as terms. Moreover, all facts are
   variable-free, and rules are restricted, so that if they are executed
   bottom-up, then the derived facts are also variable-free.

   For example, consider the family database:
mother_child(elizabeth, charles).
father_child(charles, william).
father_child(charles, harry).
parent_child(X, Y) :-
     mother_child(X, Y).
parent_child(X, Y) :-
     father_child(X, Y).
ancestor_descendant(X, Y) :-
     parent_child(X, X).
ancestor_descendant(X, Y) :-
     ancestor_descendant(X, Z),
     ancestor_descendant(Z, Y).

   Bottom-up execution derives the following set of additional facts and
   terminates:
parent_child(elizabeth, charles).
parent_child(charles, william).
parent_child(charles, harry).

ancestor_descendant(elizabeth, charles).
ancestor_descendant(charles, william).
ancestor_descendant(charles, harry).

ancestor_descendant(elizabeth, william).
ancestor_descendant(elizabeth, harry).

   Top-down execution derives the same answers to the query:
?- ancestor_descendant(X, Y).

   But then it goes into an infinite loop. However, top-down execution
   with tabling gives the same answers and terminates without looping.

Answer set programming

   [edit]

   Main article: Answer Set Programming

   Like Datalog, Answer Set programming (ASP) is not Turing-complete.
   Moreover, instead of separating goals (or queries) from the program to
   be used in solving the goals, ASP treats the whole program as a goal,
   and solves the goal by generating a stable model that makes the goal
   true. For this purpose, it uses the stable model semantics, according
   to which a logic program can have zero, one or more intended models.
   For example, the following program represents a degenerate variant of
   the map colouring problem of colouring two countries red or green:

country(oz).
country(iz).
adjacent(oz, iz).
colour(C, red) :- country(C), not(colour(C, green)).
colour(C, green) :- country(C), not(colour(C, red)).

   The problem has four solutions represented by four stable models:

country(oz). country(iz). adjacent(oz, iz). colour(oz, red).   colour(iz, red).

country(oz). country(iz). adjacent(oz, iz). colour(oz, green). colour(iz, green)
.

country(oz). country(iz). adjacent(oz, iz). colour(oz, red).   colour(iz, green)
.

country(oz). country(iz). adjacent(oz, iz). colour(oz, green). colour(iz, red).

   To represent the standard version of the map colouring problem, we need
   to add a constraint that two adjacent countries cannot be coloured the
   same colour. In ASP, this constraint can be written as a clause of the
   form:

:- country(C1), country(C2), adjacent(C1, C2), colour(C1, X), colour(C2, X).

   With the addition of this constraint, the problem now has only two
   solutions:

country(oz). country(iz). adjacent(oz, iz). colour(oz, red).   colour(iz, green)
.

country(oz). country(iz). adjacent(oz, iz). colour(oz, green). colour(iz, red).

   The addition of constraints of the form :- Body. eliminates models in
   which Body is true.

   Confusingly, constraints in ASP are different from constraints in CLP.
   Constraints in CLP are predicates that qualify answers to queries (and
   solutions of goals). Constraints in ASP are clauses that eliminate
   models that would otherwise satisfy goals. Constraints in ASP are like
   integrity constraints in databases.

   This combination of ordinary logic programming clauses and constraint
   clauses illustrates the generate-and-test methodology of problem
   solving in ASP: The ordinary clauses define a search space of possible
   solutions, and the constraints filter out unwanted solutions.^[58]

   Most implementations of ASP proceed in two steps: First they
   instantiate the program in all possible ways, reducing it to a
   propositional logic program (known as grounding). Then they apply a
   propositional logic problem solver, such as the DPLL algorithm or a
   Boolean SAT solver. However, some implementations, such as s(CASP)^[59]
   use a goal-directed, top-down, SLD resolution-like procedure without
   grounding.

Abductive logic programming

   [edit]

   Main article: Abductive logic programming

   Abductive logic programming^[60] (ALP), like CLP, extends normal logic
   programming by allowing the bodies of clauses to contain literals whose
   predicates are not defined by clauses. In ALP, these predicates are
   declared as abducible (or assumable), and are used as in abductive
   reasoning to explain observations, or more generally to add new facts
   to the program (as assumptions) to solve goals.

   For example, suppose we are given an initial state in which a red block
   is on a green block on a table at time 0:

holds(on(green_block, table), 0).
holds(on(red_block, green_block), 0).

   Suppose we are also given the goal:

?- holds(on(green_block,red_block), 3), holds(on(red_block,table), 3).

   The goal can represent an observation, in which case a solution is an
   explanation of the observation. Or the goal can represent a desired
   future state of affairs, in which case a solution is a plan for
   achieving the goal.^[61]

   We can use the rules for cause and effect presented earlier to solve
   the goal, by treating the happens predicate as abducible:

holds(Fact, Time2) :-
    happens(Event, Time1),
    Time2 is Time1 + 1,
    initiates(Event, Fact).

holds(Fact, Time2) :-
        happens(Event, Time1),
    Time2 is Time1 + 1,
    holds(Fact, Time1),
    not(terminated(Fact, Time1)).

terminated(Fact, Time) :-
   happens(Event, Time),
   terminates(Event, Fact).

initiates(move(Object, Place), on(Object, Place)).
terminates(move(Object, Place2), on(Object, Place1)).

   ALP solves the goal by reasoning backwards and adding assumptions to
   the program, to solve abducible subgoals. In this case there are many
   alternative solutions, including:

happens(move(red_block, table), 0).
happens(tick, 1).
happens(move(green_block, red_block), 2).

happens(tick,0).
happens(move(red_block, table), 1).
happens(move(green_block, red_block), 2).

happens(move(red_block, table), 0).
happens(move(green_block, red_block), 1).
happens(tick, 2).

   Here tick is an event that marks the passage of time without initiating
   or terminating any fluents.

   There are also solutions in which the two move events happen at the
   same time. For example:

happens(move(red_block, table), 0).
happens(move(green_block, red_block), 0).
happens(tick, 1).
happens(tick, 2).

   Such solutions, if not desired, can be removed by adding an integrity
   constraint, which is like a constraint clause in ASP:

:- happens(move(Block1, Place), Time), happens(move(Block2, Block1), Time).

   Abductive logic programming has been used for fault diagnosis,
   planning, natural language processing and machine learning. It has also
   been used to interpret negation as failure as a form of abductive
   reasoning.^[62]

Inductive logic programming

   [edit]

   Main article: Inductive logic programming

   Inductive logic programming (ILP) is an approach to machine learning
   that induces logic programs as hypothetical generalisations of positive
   and negative examples. Given a logic program representing background
   knowledge and positive examples together with constraints representing
   negative examples, an ILP system induces a logic program that
   generalises the positive examples while excluding the negative
   examples.

   ILP is similar to ALP, in that both can be viewed as generating
   hypotheses to explain observations, and as employing constraints to
   exclude undesirable hypotheses. But in ALP the hypotheses are
   variable-free facts, and in ILP the hypotheses are general
   rules.^[63]^[64]

   For example, given only background knowledge of the mother_child and
   father_child relations, and suitable examples of the grandparent_child
   relation, current ILP systems can generate the definition of
   grandparent_child, inventing an auxiliary predicate, which can be
   interpreted as the parent_child relation:^[65]

grandparent_child(X, Y):- auxiliary(X, Z), auxiliary(Z, Y).
auxiliary(X, Y):- mother_child(X, Y).
auxiliary(X, Y):- father_child(X, Y).

   Stuart Russell^[66] has referred to such invention of new concepts as
   the most important step needed for reaching human-level AI.

   Recent work in ILP, combining logic programming, learning and
   probability, has given rise to the fields of statistical relational
   learning and probabilistic inductive logic programming.

Concurrent logic programming

   [edit]

   Main article: Concurrent logic programming

   Concurrent logic programming integrates concepts of logic programming
   with concurrent programming. Its development was given a big impetus in
   the 1980s by its choice for the systems programming language of the
   Japanese Fifth Generation Project (FGCS).^[67]

   A concurrent logic program is a set of guarded Horn clauses of the
   form:

                H :- G[1], ..., G[n] | B[1], ..., B[n].

   The conjunction G[1], ... , G[n] is called the guard of the clause, and
   | is the commitment operator. Declaratively, guarded Horn clauses are
   read as ordinary logical implications:

                H if G[1] and ... and G[n] and B[1] and ... and B[n].

   However, procedurally, when there are several clauses whose heads H
   match a given goal, then all of the clauses are executed in parallel,
   checking whether their guards G[1], ... , G[n] hold. If the guards of
   more than one clause hold, then a committed choice is made to one of
   the clauses, and execution proceeds with the subgoals B[1], ..., B[n]
   of the chosen clause. These subgoals can also be executed in parallel.
   Thus concurrent logic programming implements a form of "don't care
   nondeterminism", rather than "don't know nondeterminism".

   For example, the following concurrent logic program defines a predicate
   shuffle(Left, Right, Merge), which can be used to shuffle two lists
   Left and Right, combining them into a single list Merge that preserves
   the ordering of the two lists Left and Right:

shuffle([], [], []).
shuffle(Left, Right, Merge) :-
    Left = [First | Rest] |
    Merge = [First | ShortMerge],
    shuffle(Rest, Right, ShortMerge).
shuffle(Left, Right, Merge) :-
    Right = [First | Rest] |
    Merge = [First | ShortMerge],
    shuffle(Left, Rest, ShortMerge).

   Here, [] represents the empty list, and [Head | Tail] represents a list
   with first element Head followed by list Tail, as in Prolog. (Notice
   that the first occurrence of | in the second and third clauses is the
   list constructor, whereas the second occurrence of | is the commitment
   operator.) The program can be used, for example, to shuffle the lists
   [ace, queen, king] and [1, 4, 2] by invoking the goal clause:

shuffle([ace, queen, king], [1, 4, 2], Merge).

   The program will non-deterministically generate a single solution, for
   example Merge = [ace, queen, 1, king, 4, 2].

   Carl Hewitt has argued^[68] that, because of the indeterminacy of
   concurrent computation, concurrent logic programming cannot implement
   general concurrency. However, according to the logical semantics, any
   result of a computation of a concurrent logic program is a logical
   consequence of the program, even though not all logical consequences
   can be derived.

Concurrent constraint logic programming

   [edit]

   Main article: Concurrent constraint logic programming

   Concurrent constraint logic programming^[69] combines concurrent logic
   programming and constraint logic programming, using constraints to
   control concurrency. A clause can contain a guard, which is a set of
   constraints that may block the applicability of the clause. When the
   guards of several clauses are satisfied, concurrent constraint logic
   programming makes a committed choice to use only one.

Higher-order logic programming

   [edit]

   Several researchers have extended logic programming with higher-order
   programming features derived from higher-order logic, such as predicate
   variables. Such languages include the Prolog extensions HiLog^[70] and
   λProlog.^[71]

Linear logic programming

   [edit]

   Basing logic programming within linear logic has resulted in the design
   of logic programming languages that are considerably more expressive
   than those based on classical logic. Horn clause programs can only
   represent state change by the change in arguments to predicates. In
   linear logic programming, one can use the ambient linear logic to
   support state change. Some early designs of logic programming languages
   based on linear logic include LO,^[72] Lolli,^[73] ACL,^[74] and
   Forum.^[75] Forum provides a goal-directed interpretation of all linear
   logic.

Object-oriented logic programming

   [edit]

   F-logic^[76] extends logic programming with objects and the frame
   syntax.

   Logtalk^[77] extends the Prolog programming language with support for
   objects, protocols, and other OOP concepts. It supports most
   standard-compliant Prolog systems as backend compilers.

Transaction logic programming

   [edit]

   Transaction logic^[53] is an extension of logic programming with a
   logical theory of state-modifying updates. It has both a
   model-theoretic semantics and a procedural one. An implementation of a
   subset of Transaction logic is available in the Flora-2^[78] system.
   Other prototypes are also available.

See also

   [edit]

     * Automated theorem proving
     * Boolean satisfiability problem
     * Constraint logic programming
     * Control theory
     * Datalog
     * Fril
     * Functional programming
     * Fuzzy logic
     * Inductive logic programming
     * Linear logic
     * Logic in computer science (includes Formal methods)
     * Logic programming languages
     * Programmable logic controller
     * R++
     * Reasoning system
     * Rule-based machine learning
     * Satisfiability
     * Syntax and semantics of logic programming

Citations

   [edit]

    1. ^ Tärnlund, S.Å. (1977). "Horn clause computability". BIT Numerical
       Mathematics. 17 (2): 215–226. doi:10.1007/BF01932293.
       S2CID 32577496.
    2. ^ Andréka, H.; Németi, I. (1978). "The generalised completeness of
       Horn predicate-logic as a programming language". Acta Cybernetica.
       4 (1): 3–10.
    3. ^ Green, Cordell. Application of Theorem Proving to Problem Solving
       (PDF). IJCAI 1969.
    4. ^ Foster, J.M.; Elcock, E.W. (1969). ABSYS 1: An Incremental
       Compiler for Assertions: an Introduction. Fourth Annual Machine
       Intelligence Workshop. Machine Intelligence. Vol. 4. Edinburgh, UK:
       Edinburgh University Press. pp. 423–429.
    5. ^ Kowalski, R. A. (1988). "The early years of logic programming"
       (PDF). Communications of the ACM. 31: 38–43.
       doi:10.1145/35043.35046. S2CID 12259230.
    6. ^ Hewitt, Carl. Planner: A Language for Proving Theorems in Robots
       (PDF). IJCAI 1969.
    7. ^ Winograd, Terry (1972). "Understanding natural language".
       Cognitive Psychology. 3 (1): 1–191.
       doi:10.1016/0010-0285(72)90002-3.
    8. ^ Jeff Rulifson; Jan Derksen; Richard Waldinger (November 1973).
       QA4, A Procedural Calculus for Intuitive Reasoning (PDF) (Technical
       report). SRI AI Center Technical Note 73.
    9. ^ Davies, J.M., 1971. POPLER: a POP-2 planner. Edinburgh
       University, Department of Machine Intelligence and Perception.
   10. ^ McDermott, D.V.; Sussman, G.J. (May 1972). The Conniver reference
       manual (Technical report). Artificial Intelligence Memo No. 259.
   11. ^ Reboh, R.; Sacerdoti, E.D. (August 1973). A preliminary QLISP
       manual (Technical report). Artificial Intelligence Center, SRI
       International.
   12. ^ Kornfeld, W.A.; Hewitt, C.E. (1981). "The scientific community
       metaphor". IEEE Transactions on Systems, Man, and Cybernetics. 11
       (1): 24–33. doi:10.1109/TSMC.1981.4308575. hdl:1721.1/5693.
       S2CID 1322857.
   13. ^ Hayes, Pat (1973). "Computation and Deduction". Proceedings of
       the 2nd MFCS Symposium. Czechoslovak Academy of Sciences.
       pp. 105–118.
   14. ^ Robinson, J. (1965). "Automatic deduction with hyper-resolution".
       International Journal of Computer Mathematics. 1 (3): 227–234.
       doi:10.2307/2272384. JSTOR 2272384.
   15. ^ Kowalski, Robert; Kuehner, Donald (1971). "Linear Resolution with
       Selection Function" (PDF). Artificial Intelligence. 2 (3–4):
       227–260. doi:10.1016/0004-3702(71)90012-9.
   16. ^ Kowalski, Robert (1973). "Predicate Logic as a Programming
       Language" (PDF). Department of Artificial Intelligence, Edinburgh
       University. Memo 70. Also in Proceedings IFIP Congress, Stockholm,
       North Holland Publishing Co., 1974, pp. 569–574.
   17. ^ Warren, D.H.; Pereira, L.M.; Pereira, F. (1977). "Prolog-the
       language and its implementation compared with Lisp". ACM SIGPLAN
       Notices. 12 (8): 109–115. doi:10.1145/872734.806939.
   18. ^ Ueda, K., 2018. Logic/constraint programming and concurrency: The
       hard-won lessons of the fifth generation computer project. Science
       of Computer Programming, 164, pp.3-17.
   19. ^ H.P. Newquist, 2020. The Brain Makers: The History Of Artificial
       Intelligence. The Relayer Group.
   20. ^ Gallaire, Hervé; Minker, John 'Jack', eds. (1978), "Logic and
       Data Bases, Symposium on Logic and Data Bases, Centre d'études et
       de recherches de Toulouse, 1977", Advances in Data Base Theory, New
       York: Plenum Press, ISBN 978-0-306-40060-5.
   21. ^ ^a ^b Warren, D.S. (2023). "Introduction to Prolog". In Warren,
       D.S.; Dahl, V.; Eiter, T.; Hermenegildo, M.V.; Kowalski, R.; Rossi,
       F. (eds.). Prolog: The Next 50 Years. Lecture Notes in Computer
       Science(). Vol. 13900. Springer, Cham. pp. 3–19.
       doi:10.1007/978-3-031-35254-6_1. ISBN 978-3-031-35253-9.
   22. ^ Robinson, J. Alan (2001). "Invited Editorial". Theory and
       Practice of Logic Programming. 1 (1). Cambridge University Press:
       1. doi:10.1017/s1471068400000028 (inactive 1 November 2024).{{cite
       journal}}: CS1 maint: DOI inactive as of November 2024 (link)
   23. ^ R.A.Kowalski (July 1979). "Algorithm=Logic + Control".
       Communications of the ACM. 22 (7): 424–436.
       doi:10.1145/359131.359136. S2CID 2509896.
   24. ^ Bruynooghe, M.; Pereira, L.M. (1984). "Deduction revision by
       intelligent backtracking". Implementations of Prolog. Chichester,
       England: Ellis Horwood. pp. 194–215.
   25. ^ Nakamura, K. (July 1985). Heuristic Prolog: logic program
       execution by heuristic search. Conference on Logic Programming.
       Berlin, Heidelberg: Springer Berlin Heidelberg. pp. 148–155.
   26. ^ Genesereth, M.R.; Ginsberg, M.L. (1985). "Logic programming".
       Communications of the ACM. 28 (9): 933–941. doi:10.1145/4284.4287.
       S2CID 15527861.
   27. ^ Swift, T.; Warren, D.S. (January 2012). "XSB: Extending Prolog
       with tabled logic programming". Theory and Practice of Logic
       Programming. 12 (1–2): 157–187. arXiv:1012.5123.
       doi:10.1017/S1471068411000500. S2CID 6153112.
   28. ^ ^a ^b Daniel Friedman; William Byrd; Oleg Kiselyov; Jason Hemann
       (2018). The Reasoned Schemer, Second Edition. The MIT Press.
   29. ^ A. Casas, D. Cabeza, M. V. Hermenegildo. A Syntactic Approach to
       Combining Functional Notation, Lazy Evaluation and Higher-Order in
       LP Systems. The 8th International Symposium on Functional and Logic
       Programming (FLOPS'06), pages 142-162, April 2006.
   30. ^ Kersting, K., Mladenov, M. and Tokmakov, P., 2017. Relational
       linear programming. Artificial Intelligence, 244, pp.188-216.
   31. ^ Beyer, D., 2006, May. Relational programming with CrocoPat. In
       Proceedings of the 28th International Conference on Software
       engineering (pp. 807-810).
   32. ^ MacLennan, B.J., 1983. Overview of relational programming. ACM
       SIGPLAN Notices, 18(3), pp.36-45.
   33. ^ Behnke, R., Berghammer, R., Meyer, E. and Schneider, P., 1998.
       RELVIEW—A system for calculating with relations and relational
       programming. In Fundamental Approaches to Software Engineering:
       First International Conference, FASE'98 Held as Part of the Joint
       European Conferences on Theory and Practice of Software, ETAPS'98
       Lisbon, Portugal, March 28–April 4, 1998 Proceedings 1 (pp.
       318-321). Springer Berlin Heidelberg.
   34. ^ Van Emden, M.H.; Kowalski, R.A. (October 1976). "The semantics of
       predicate logic as a programming language". Journal of the ACM. 23
       (4): 733–742. doi:10.1145/321978.321991. S2CID 11048276.
   35. ^ Clark, K.L. (1977). "Negation as Failure". Logic and Data Bases.
       Boston, MA: Springer US. pp. 293–322.
       doi:10.1007/978-1-4684-3384-5_11. ISBN 978-1-4684-3386-9.
   36. ^ Gelfond, M.; Przymusinska, H.; Przymusinski, T. (1989). "On the
       relationship between circumscription and negation as failure".
       Artificial Intelligence. 38 (1): 75–94.
       doi:10.1016/0004-3702(89)90068-4.
   37. ^ Shepherdson, J.C. (1984). "Negation as failure: a comparison of
       Clark's completed data base and Reiter's closed world assumption".
       The Journal of Logic Programming. 1 (1): 51–79.
       doi:10.1016/0743-1066(84)90023-2.
   38. ^ Denecker, M.; Ternovska, E. (2008). "A logic of nonmonotone
       inductive definitions". ACM Transactions on Computational Logic. 9
       (2): 14:1–14:52. arXiv:cs/0501025. doi:10.1145/1342991.1342998.
       S2CID 13156469.
   39. ^ Rao, P.; Sagonas, K.; Swift, T.; Warren, D.S.; Freire, J. (July
       28–31, 1997). XSB: A system for efficiently computing well-founded
       semantics. Logic Programming And Nonmonotonic Reasoning: 4th
       International Conference, LPNMR'97. Dagstuhl Castle, Germany:
       Springer Berlin Heidelberg. pp. 430–440.
       doi:10.1007/3-540-63255-7_33.
   40. ^ W. Chen; D. S. Warren (January 1996). "Tabled Evaluation with
       Delaying for General Logic Programs". Journal of the ACM. 43 (1):
       20–74. doi:10.1145/227595.227597. S2CID 7041379.
   41. ^ Phan Minh Dung (1995). "On the acceptability of arguments and its
       fundamental role in nonmonotonic reasoning, logic programming, and
       n–person games". Artificial Intelligence. 77 (2): 321–357.
       doi:10.1016/0004-3702(94)00041-X.
   42. ^ Colmerauer, A. and Roussel, P., 1996. The birth of Prolog. In
       History of programming languages---II (pp. 331-367).
   43. ^ ^a ^b Warren, D.H., Pereira, L.M. and Pereira, F., 1977.
       Prolog-the language and its implementation compared with Lisp. ACM
       SIGPLAN Notices, 12(8), pp.109-115.
   44. ^ Thagard, Paul (2005). Mind: Introduction to Cognitive Science.
       The MIT Press. p. 11.
       ISBN 9780262701099.https://www.google.co.uk/books/edition/Mind_seco
       nd_edition/gjcR1U2HT7kC?hl=en&gbpv=1&pg=PP11&printsec=frontcover
   45. ^ Stenning, Keith; van Lambalgen, Michiel (2008). Human reasoning
       and cognitive science. MIT Press.
       ISBN 978-0-262-19583-6.https://philpapers.org/archive/STEHRA-5.pdf
   46. ^ Van Lambalgen, M. and Hamm, F., 2008. The proper treatment of
       events. John Wiley & Sons.
       https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=3126
       320bb6e37ca3727fed404828b53fc56ff063
   47. ^ Reiter, R., 1991. The frame problem in the situation calculus: A
       simple solution (sometimes) and a completeness result for goal
       regression. Artificial and Mathematical Theory of Computation, 3.
   48. ^ Merritt, D., 2012. Building expert systems in Prolog. Springer
       Science & Business Media.
       https://ds.amu.edu.et/xmlui/bitstream/handle/123456789/4434/%28Text
       %20Book%29%20Building%20Expert%20Systems%20in%20Prolog.pdf?sequence
       =1&isAllowed=y
   49. ^ Sergot, M.J.; Sadri, F.; Kowalski, R.A.; Kriwaczek, F.; Hammond,
       P; Cory, H.T. (1986). "The British Nationality Act as a logic
       program" (PDF). Communications of the ACM. 29 (5): 370–386.
       doi:10.1145/5689.5920. S2CID 5665107.
   50. ^ Prakken, H.; Sartor, G. (October 2015). "Law and logic: a review
       from an argumentation perspective" (PDF). Artificial Intelligence.
       227: 214–245. doi:10.1016/j.artint.2015.06.005. S2CID 4261497.
   51. ^ Satoh, K., 2023. PROLEG: Practical legal reasoning system. In
       Prolog: The Next 50 Years (pp. 277-283). Cham: Springer Nature
       Switzerland.
   52. ^ ^a ^b Körner, Philipp; Leuschel, Michael; Barbosa, João; Costa,
       Vítor Santos; Dahl, Verónica; Hermenegildo, Manuel V.; Morales,
       Jose F.; Wielemaker, Jan; Diaz, Daniel; Abreu, Salvador; Ciatto,
       Giovanni (November 2022). "Fifty Years of Prolog and Beyond".
       Theory and Practice of Logic Programming. 22 (6): 776–858.
       arXiv:2201.10816. doi:10.1017/S1471068422000102. ISSN 1471-0684.
   53. ^ ^a ^b Bonner, A.J. and Kifer, M., 1993, February. Transaction
       Logic Programming. In ICLP (Vol. 93, pp. 257-279).
   54. ^ Genesereth, M., 2023. Dynamic logic programming. In Prolog: The
       Next 50 Years (pp. 197-209). Cham: Springer Nature Switzerland.
   55. ^ Kowalski, R., Sadri, F., Calejo, M. and Dávila, J., 2023.
       Combining logic programming and imperative programming in LPS. In
       Prolog: The Next 50 Years (pp. 210-223). Cham: Springer Nature
       Switzerland.
   56. ^ Aho, A.V. and Ullman, J.D., 1979, January. Universality of data
       retrieval languages. In Proceedings of the 6th ACM SIGACT-SIGPLAN
       symposium on Principles of programming languages (pp. 110-119).
   57. ^ Maier, D., Tekle, K.T., Kifer, M. and Warren, D.S., 2018.
       Datalog: concepts, history, and outlook. In Declarative Logic
       Programming: Theory, Systems, and Applications (pp. 3-100).
   58. ^ Eiter, T., Ianni, G. and Krennwallner, T., 2009. Answer Set
       Programming: A Primer. In Reasoning Web. Semantic Technologies for
       Information Systems: 5th International Summer School 2009,
       Brixen-Bressanone, Italy, August 30-September 4, 2009, Tutorial
       Lectures (pp. 40-110).
   59. ^ Arias, J.; Carro, M.; Salazar, E.; Marple, K.; Gupta, G. (2018).
       "Constraint Answer Set Programming without Grounding". Theory and
       Practice of Logic Programming. 18 (3–4): 337–354. arXiv:1804.11162.
       doi:10.1017/S1471068418000285. S2CID 13754645.
   60. ^ Denecker, M.; Kakas, A.C. (July 2000). "Special issue: abductive
       logic programming". Journal of Logic Programming. 44 (1–3): 1–4.
       doi:10.1016/S0743-1066(99)00078-3.
   61. ^ Eshghi, K., 1988, August. Abductive Planning with Event Calculus.
       In ICLP/SLP (pp. 562-579).
   62. ^ Eshghi, K. and Kowalski, R.A., 1989, June. Abduction Compared
       with Negation by Failure. In ICLP (Vol. 89, pp. 234-255).
   63. ^ Nienhuys-Cheng, Shan-hwei; Wolf, Ronald de (1997). Foundations of
       inductive logic programming. Lecture notes in computer science
       Lecture notes in artificial intelligence. Berlin Heidelberg:
       Springer. p. 173. ISBN 978-3-540-62927-6.
   64. ^ Flach, P.A. and Kakas, A.C., 2000. On the relation between
       abduction and inductive learning. In Abductive Reasoning and
       Learning (pp. 1-33). Dordrecht: Springer Netherlands.
   65. ^ Cropper, A. and Dumančić, S., 2022. Inductive logic programming
       at 30: a new introduction. Journal of Artificial Intelligence
       Research, 74, pp.765-850.
   66. ^ Russell, S., 2019. Human compatible: Artificial intelligence and
       the problem of control. Penguin.
   67. ^ Shunichi Uchida and Kazuhiro Fuchi. Proceedings of the FGCS
       Project Evaluation Workshop. Institute for New Generation Computer
       Technology (ICOT). 1992.
   68. ^ Hewitt, Carl (27 April 2016). "Inconsistency Robustness for Logic
       Programs". Hal Archives. pp. 21–26. Retrieved 7 November 2016.
   69. ^ Saraswat, V.A. and Rinard, M., 1989, December. Concurrent
       constraint programming. In Proceedings of the 17th ACM
       SIGPLAN-SIGACT symposium on Principles of programming languages
       (pp. 232-245).
   70. ^ Chen, Weidong; Kifer, Michael; Warren, David S. (February 1993).
       "HiLog: A foundation for higher-order logic programming". Journal
       of Logic Programming. 15 (3): 187–230.
       doi:10.1016/0743-1066(93)90039-J.
   71. ^ Miller, D.A. and Nadathur, G., 1986, July. Higher-order logic
       programming. In International Conference on Logic Programming (pp.
       448-462). Berlin, Heidelberg: Springer Berlin Heidelberg.
   72. ^ Andreoli, Jean-Marc (1 June 1992). "Logic Programming with
       Focusing Proofs in Linear Logic". Journal of Logic and Computation.
       2 (3): 297–347. doi:10.1093/logcom/2.3.297.
   73. ^ Hodas, Joshua; Miller, Dale (1994). "Logic Programming in a
       Fragment of Intuitionistic Linear Logic". Information and
       Computation. 110 (2): 327–365. doi:10.1006/inco.1994.1036.
   74. ^ Kobayashi, Naoki; Yonezawa, Akinori (1994). Asynchronous
       communication model based on linear logic. US/Japan Workshop on
       Parallel Symbolic Computing. pp. 279–294. CiteSeerX 10.1.1.42.8749.
   75. ^ Miller, Dale (30 September 1996). "Forum: A Multiple-Conclusion
       Specification Logic". Theoretical Computer Science. 165 (1):
       201–232. doi:10.1016/0304-3975(96)00045-X.
   76. ^ Kifer, M. and Lausen, G., 1989, June. F-logic: a higher-order
       language for reasoning about objects, inheritance, and scheme. In
       Proceedings of the 1989 ACM SIGMOD international conference on
       Management of data (pp. 134-146).
   77. ^ de Moura, P.J.L., 2003. Design of an Object-Oriented Logic
       Programming Language (Doctoral dissertation, Universidade da Beira
       Interior).
   78. ^ Yang, G. and Kifer, M., 2000, July. FLORA: Implementing an
       efficient DOOD system using a tabling logic engine. In
       International Conference on Computational Logic (pp. 1078-1093).
       Berlin, Heidelberg: Springer Berlin Heidelberg.

Sources

   [edit]

General introductions

   [edit]

     *

   Baral, C.; Gelfond, M. (1994). "Logic programming and knowledge
   representation" (PDF). The Journal of Logic Programming. 19–20: 73–148.
   doi:10.1016/0743-1066(94)90025-6.

     Kowalski, R. A. (1988). "The early years of logic programming" (PDF).
   Communications of the ACM. 31: 38–43. doi:10.1145/35043.35046.
   S2CID 12259230. [1]

     Lloyd, J. W. (1987). Foundations of Logic Programming (2nd ed.).
   Springer-Verlag.

Other sources

   [edit]

     * John McCarthy. "Programs with common sense". Symposium on
       Mechanization of Thought Processes. National Physical Laboratory.
       Teddington, England. 1958.
     *

   Miller, Dale; Nadathur, Gopalan; Pfenning, Frank; Scedrov, Andre
   (1991). "Uniform proofs as a foundation for logic programming". Annals
   of Pure and Applied Logic. 51 (1–2): 125–157.
   doi:10.1016/0168-0072(91)90068-W.

     Ehud Shapiro (Editor). Concurrent Prolog. MIT Press. 1987.

     James Slagle. "Experiments with a Deductive Question-Answering
   Program". CACM. December 1965.

     Gabbay, Dov M.; Hogger, Christopher John; Robinson, J.A., eds.
   (1993-1998). Handbook of Logic in Artificial Intelligence and Logic
   Programming.Vols. 1–5, Oxford University Press.

Further reading

   [edit]

     * Carl Hewitt. "Procedural Embedding of Knowledge in Planner". IJCAI
       1971.
     * Carl Hewitt. "The Repeated Demise of Logic Programming and Why It
       Will Be Reincarnated". AAAI Spring Symposium: What Went Wrong and
       Why: Lessons from AI Research and Applications 2006: 2–9.
     * Evgeny Dantsin, Thomas Eiter, Georg Gottlob, Andrei Voronkov:
       Complexity and expressive power of logic programming. ACM Comput.
       Surv. 33(3): 374–425 (2001)
     * Ulf Nilsson and Jan Maluszynski, Logic, Programming and Prolog

External links

   [edit]

   Wikimedia Commons has media related to Logic programming.

     * Logic Programming Virtual Library entry
     * Bibliographies on Logic Programming Archived 2008-12-04 at the
       Wayback Machine
     * Association for Logic Programming (ALP)
     * Theory and Practice of Logic Programming (journal)
     * Logic programming in C++ with Castor
     * Logic programming Archived 2011-09-03 at the Wayback Machine in Oz
     * Prolog Development Center
     * Racklog: Logic Programming in Racket

     * v
     * t
     * e

   Programming paradigms (Comparison by language)

   Imperative

   Structured
     * Jackson structures
     * Block-structured
     * Modular
     * Non-structured
     * Procedural
     * Programming in the large and in the small
     * Design by contract
     * Invariant-based
     * Nested function

   Object-oriented
   (comparison, list)
     * Class-based, Prototype-based, Object-based
     * Agent
     * Immutable object
     * Persistent
     * Uniform Function Call Syntax

   Declarative

   Functional
   (comparison)
     * Recursive
     * Anonymous function (Partial application)
     * Higher-order
     * Purely functional
     * Total
     * Strict
     * GADTs
     * Dependent types
     * Functional logic
     * Point-free style
     * Expression-oriented
     * Applicative, Concatenative
     * Function-level, Value-level

   Dataflow
     * Flow-based
     * Reactive (Functional reactive)
     * Signals
     * Streams
     * Synchronous

   Logic
     * Abductive logic
     * Answer set
     * Constraint (Constraint logic)
     * Inductive logic
     * Nondeterministic
     * Ontology
     * Probabilistic logic
     * Query

   DSL
     * Algebraic modeling
     * Array
     * Automata-based (Action)
     * Command (Spacecraft)
     * Differentiable
     * End-user
     * Grammar-oriented
     * Interface description
     * Language-oriented
     * List comprehension
     * Low-code
     * Modeling
     * Natural language
     * Non-English-based
     * Page description
     * Pipes and filters
     * Probabilistic
     * Quantum
     * Scientific
     * Scripting
     * Set-theoretic
     * Simulation
     * Stack-based
     * System
     * Tactile
     * Templating
     * Transformation (Graph rewriting, Production, Pattern)
     * Visual

   Concurrent,
   distributed,
   parallel

     * Actor-based
     * Automatic mutual exclusion
     * Choreographic programming
     * Concurrent logic (Concurrent constraint logic)
     * Concurrent OO
     * Macroprogramming
     * Multitier programming
     * Organic computing
     * Parallel programming models
     * Partitioned global address space
     * Process-oriented
     * Relativistic programming
     * Service-oriented
     * Structured concurrency

   Metaprogramming

     * Attribute-oriented
     * Automatic (Inductive)
     * Dynamic
     * Extensible
     * Generic
     * Homoiconicity
     * Interactive
     * Macro (Hygienic)
     * Metalinguistic abstraction
     * Multi-stage
     * Program synthesis (Bayesian, Inferential, by demonstration, by
       example)
     * Reflective
     * Self-modifying code
     * Symbolic
     * Template

   Separation
   of concerns

     * Aspects
     * Components
     * Data-driven
     * Data-oriented
     * Event-driven
     * Features
     * Intentional
     * Literate
     * Roles
     * Subjects

     * v
     * t
     * e

   Types of programming languages

   Level

     * Machine
     * Assembly
     * Compiled
     * Interpreted

     * Low-level
     * High-level
     * Very high-level
     * Esoteric

   Generation

     * First
     * Second
     * Third
     * Fourth
     * Fifth

   Authority control databases: National Edit this at Wikidata
     * Germany
     * United States
     * France
     * BnF data
     * Czech Republic
     * Spain
     * Israel

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Logic_programming&oldid=125
   9279203"

   Categories:
     * Logic programming
     * Computer-related introductions in 1972
     * Programming paradigms
     * Logic

   Hidden categories:
     * CS1 maint: DOI inactive as of November 2024
     * Articles with short description
     * Short description matches Wikidata
     * CS1: long volume value
     * Commons category link from Wikidata
     * Webarchive template wayback links

     * This page was last edited on 24 November 2024, at 08:48 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 Definition
     * 2 Basic concepts
     * 3 Deductive reasoning
     * 4 Non-deductive reasoning
       (BUTTON) Toggle Non-deductive reasoning subsection
          + 4.1 Inductive
          + 4.2 Abductive
          + 4.3 Analogical
     * 5 Fallacies
     * 6 As a skill
     * 7 See also
     * 8 References
       (BUTTON) Toggle References subsection
          + 8.1 Citations
          + 8.2 Sources

   [ ] Toggle the table of contents

Logical reasoning

   [ ] 15 languages
     * العربية
     * Deutsch
     * Eesti
     * فارسی
     * Français
     * Қазақша
     * Nederlands
     * 日本語
     * پنجابی
     * Português
     * Русский
     * Türkçe
     * اردو
     * 粵語
     * 中文

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   This is a good article. Click here for more information.
   From Wikipedia, the free encyclopedia

   Process of drawing correct inferences
   Argument
   Deductive
   Valid

   Sound

   Unsound
   Invalid

   Unsound
   Non‑deductive
   Strong

   Cogent

   Uncogent
   Weak

   Uncogent
   Logical reasoning is concerned with the correctness of arguments. A key
   distinction is between deductive and non-deductive arguments.

   Logical reasoning is a mental activity that aims to arrive at a
   conclusion in a rigorous way. It happens in the form of inferences or
   arguments by starting from a set of premises and reasoning to a
   conclusion supported by these premises. The premises and the conclusion
   are propositions, i.e. true or false claims about what is the case.
   Together, they form an argument. Logical reasoning is norm-governed in
   the sense that it aims to formulate correct arguments that any rational
   person would find convincing. The main discipline studying logical
   reasoning is logic.

   Distinct types of logical reasoning differ from each other concerning
   the norms they employ and the certainty of the conclusion they arrive
   at. Deductive reasoning offers the strongest support: the premises
   ensure the conclusion, meaning that it is impossible for the conclusion
   to be false if all the premises are true. Such an argument is called a
   valid argument, for example: all men are mortal; Socrates is a man;
   therefore, Socrates is mortal. For valid arguments, it is not important
   whether the premises are actually true but only that, if they were
   true, the conclusion could not be false. Valid arguments follow a rule
   of inference, such as modus ponens or modus tollens. Deductive
   reasoning plays a central role in formal logic and mathematics.

   For non-deductive logical reasoning, the premises make their conclusion
   rationally convincing without ensuring its truth. This is often
   understood in terms of probability: the premises make it more likely
   that the conclusion is true and strong inferences make it very likely.
   Some uncertainty remains because the conclusion introduces new
   information not already found in the premises. Non-deductive reasoning
   plays a central role in everyday life and in most sciences.
   Often-discussed types are inductive, abductive, and analogical
   reasoning. Inductive reasoning is a form of generalization that infers
   a universal law from a pattern found in many individual cases. It can
   be used to conclude that "all ravens are black" based on many
   individual observations of black ravens. Abductive reasoning, also
   known as "inference to the best explanation", starts from an
   observation and reasons to the fact explaining this observation. An
   example is a doctor who examines the symptoms of their patient to make
   a diagnosis of the underlying cause. Analogical reasoning compares two
   similar systems. It observes that one of them has a feature and
   concludes that the other one also has this feature.

   Arguments that fall short of the standards of logical reasoning are
   called fallacies. For formal fallacies, like affirming the consequent,
   the error lies in the logical form of the argument. For informal
   fallacies, like false dilemmas, the source of the faulty reasoning is
   usually found in the content or the context of the argument. Some
   theorists understand logical reasoning in a wide sense that is roughly
   equivalent to critical thinking. In this regard, it encompasses
   cognitive skills besides the ability to draw conclusions from premises.
   Examples are skills to generate and evaluate reasons and to assess the
   reliability of information. Further factors are to seek new
   information, to avoid inconsistencies, and to consider the advantages
   and disadvantages of different courses of action before making a
   decision.
   Argument_terminology.svg

Definition

   [edit]

   Logical reasoning is a form of thinking that is concerned with arriving
   at a conclusion in a rigorous way.^[1] This happens in the form of
   inferences by transforming the information present in a set of premises
   to reach a conclusion.^[2]^[3] It can be defined as "selecting and
   interpreting information from a given context, making connections, and
   verifying and drawing conclusions based on provided and interpreted
   information and the associated rules and processes."^[4] Logical
   reasoning is rigorous in the sense that it does not generate any
   conclusion but ensures that the premises support the conclusion and act
   as reasons for believing it.^[5]^[6] One central aspect is that this
   support is not restricted to a specific reasoner but that any rational
   person would find the conclusion convincing based on the
   premises.^[6]^[1] This way, logical reasoning plays a role in expanding
   knowledge.^[7]

   The main discipline studying logical reasoning is called logic. It is
   divided into formal and informal logic, which study formal and informal
   logical reasoning.^[8]^[9]^[10] Traditionally, logical reasoning was
   primarily associated with deductive reasoning studied by formal
   logic.^[11] But in a wider sense, it also includes forms of
   non-deductive reasoning, such as inductive, abductive, and analogical
   reasoning.^[12]^[13]^[14]

   The forms of logical reasoning have in common that they use premises to
   make inferences in a norm-governed way. As norm-governed practices,
   they aim at inter-subjective agreement about the application of the
   norms, i.e. agreement about whether and to what degree the premises
   support their conclusion. The types of logical reasoning differ
   concerning the exact norms they use as well as the certainty of the
   conclusion they arrive at.^[1]^[15] Deductive reasoning offers the
   strongest support and implies its conclusion with certainty, like
   mathematical proofs. For non-deductive reasoning, the premises make the
   conclusion more likely but do not ensure it. This support comes in
   degrees: strong arguments make the conclusion very likely, as is the
   case for well-researched issues in the empirical sciences.^[1]^[16]
   Some theorists give a very wide definition of logical reasoning that
   includes its role as a cognitive skill responsible for high-quality
   thinking. In this regard, it has roughly the same meaning as critical
   thinking.^[13]^[17]

Basic concepts

   [edit]

   A variety of basic concepts is used in the study and analysis of
   logical reasoning. Logical reasoning happens by inferring a conclusion
   from a set of premises.^[3] Premises and conclusions are normally seen
   as propositions. A proposition is a statement that makes a claim about
   what is the case. In this regard, propositions act as truth-bearers:
   they are either true or false.^[18]^[19]^[3] For example, the sentence
   "The water is boiling." expresses a proposition since it can be true or
   false. The sentences "Is the water boiling?" or "Boil the water!", on
   the other hand, express no propositions since they are neither true nor
   false.^[20]^[3] The propositions used as the starting point of logical
   reasoning are called the premises. The proposition inferred from them
   is called the conclusion.^[18]^[19] For example, in the argument "all
   puppies are dogs; all dogs are animals; therefore all puppies are
   animals", the propositions "all puppies are dogs" and "all dogs are
   animals" act as premises while the proposition "all puppies are
   animals" is the conclusion.^[21]^[22]

   A set of premises together with a conclusion is called an
   argument.^[23]^[3] An inference is the mental process of reasoning that
   starts from the premises and arrives at the conclusion.^[18]^[24] But
   the terms "argument" and "inference" are often used interchangeably in
   logic. The purpose of arguments is to convince a person that something
   is the case by providing reasons for this belief.^[25]^[26] Many
   arguments in natural language do not explicitly state all the premises.
   Instead, the premises are often implicitly assumed, especially if they
   seem obvious and belong to common sense.^[25]^[27] Some theorists
   distinguish between simple and complex arguments. A complex argument is
   made up of many sub-arguments. This way, a chain is formed in which the
   conclusions of earlier arguments act as premises for later arguments.
   Each link in this chain has to be successful for a complex argument to
   succeed.^[18]^[25]

   An argument is correct or incorrect depending on whether the premises
   offer support for the conclusion. This is often understood in terms of
   probability: if the premises of a correct argument are true, it raises
   the probability that its conclusion is also true. Forms of logical
   reasoning can be distinguished based on how the premises support the
   conclusion. Deductive arguments offer the strongest possible support.
   Non-deductive arguments are weaker but are nonetheless correct forms of
   reasoning.^[28]^[29] The term "proof" is often used for deductive
   arguments or very strong non-deductive arguments.^[30] Incorrect
   arguments offer no or not sufficient support and are called
   fallacies,^[31]^[32] although the use of incorrect arguments does not
   mean their conclusions are incorrect.^[33]

Deductive reasoning

   [edit]
   Main article: Deductive reasoning

   Deductive reasoning is the mental process of drawing deductive
   inferences. Deductively valid inferences are the most reliable form of
   inference: it is impossible for their conclusion to be false if all the
   premises are true.^[34]^[35] This means that the truth of the premises
   ensures the truth of the conclusion. A deductive argument is sound if
   it is valid and all its premises are true.^[36] For example, inferring
   the conclusion "no cats are frogs" from the premises "all frogs are
   amphibians" and "no cats are amphibians" is a sound argument. But even
   arguments with false premises can be deductively valid, like inferring
   that "no cats are frogs" from the premises "all frogs are mammals" and
   "no cats are mammals". In this regard, it only matters that the
   conclusion could not be false if the premises are true and not whether
   they actually are true.^[37]

   Deductively valid arguments follow a rule of inference.^[38] A rule of
   inference is a scheme of drawing conclusions that depends only on the
   logical form of the premises and the conclusion but not on their
   specific content.^[39]^[40] The most-discussed rule of inference is the
   modus ponens. It has the following form: p; if p then q; therefore q.
   This scheme is deductively valid no matter what p and q stand
   for.^[41]^[5] For example, the argument "today is Sunday; if today is
   Sunday then I don't have to go to work today; therefore I don't have to
   go to work today" is deductively valid because it has the form of modus
   ponens.^[42] Other popular rules of inference include modus tollens
   (not q; if p then q; therefore not p) and the disjunctive syllogism (p
   or q; not p; therefore q).^[42]^[43]

   The rules governing deductive reasoning are often expressed formally as
   logical systems for assessing the correctness of deductive arguments.
   Aristotelian logic is one of the earliest systems and was treated as
   the canon of logic in the Western world for over two thousand years. It
   is based on syllogisms, like concluding that "Socrates is a mortal"
   from the premises "Socrates is a man" and "all men are
   mortal".^[44]^[45]^[46] The currently dominant system is known as
   classical logic and covers many additional forms of inferences besides
   syllogisms. So-called extended logics are based on classical logic and
   introduce additional rules of inference for specific domains. For
   example, modal logic can be used to reason about what is possible and
   what is necessary. Temporal logic can be used to draw inferences about
   what happened before, during, and after an event.^[47]^[48]^[49]
   Classical logic and its extensions rest on a set of basic logical
   intuitions accepted by most logicians. They include the law of excluded
   middle, the double negation elimination, the principle of explosion,
   and the bivalence of truth.^[50] So-called deviant logics reject some
   of these basic intuitions and propose alternative rules governing the
   validity of arguments.^[44]^[51]^[52] For example, intuitionistic
   logics reject the law of excluded middle and the double negation
   elimination while paraconsistent logics reject the principle of
   explosion.^[52]^[53]^[54]

   Deductive reasoning plays a central role in formal logic and
   mathematics.^[1] In mathematics, it is used to prove mathematical
   theorems based on a set of premises, usually called axioms. For
   example, Peano arithmetic is based on a small set of axioms from which
   all essential properties of natural numbers can be inferred using
   deductive reasoning.^[55]^[56]

Non-deductive reasoning

   [edit]

   Non-deductive reasoning is an important form of logical reasoning
   besides deductive reasoning. It happens in the form of inferences drawn
   from premises to reach and support a conclusion, just like its
   deductive counterpart. The hallmark of non-deductive reasoning is that
   this support is fallible. This means that if the premises are true, it
   makes it more likely but not certain that the conclusion is also
   true.^[57]^[58] So for a non-deductive argument, it is possible for all
   its premises to be true while its conclusion is still false. There are
   various types of non-deductive reasoning, like inductive, abductive,
   and analogical reasoning.^[1]^[59] Non-deductive reasoning is more
   common in everyday life than deductive reasoning.^[60]

   Non-deductive reasoning is ampliative and defeasible.^[61]^[62]
   Sometimes, the terms non-deductive reasoning, ampliative reasoning, and
   defeasible reasoning are used synonymously even though there are slight
   differences in their meaning. Non-deductive reasoning is ampliative in
   the sense that it arrives at information not already present in the
   premises. Deductive reasoning, by contrast, is non-ampliative since it
   only extracts information already present in the premises without
   adding any additional information.^[62]^[63]^[59] So with non-deductive
   reasoning, one can learn something new that one did not know before.
   But the fact that new information is added means that this additional
   information may be false. This is why non-deductive reasoning is not as
   secure as deductive reasoning.^[58]^[64]

   A closely related aspect is that non-deductive reasoning is defeasible
   or non-monotonic. This means that one may have to withdraw a conclusion
   upon learning new information. For example, if all birds a person has
   seen so far can fly, this person is justified in reaching the inductive
   conclusion that all birds fly. This conclusion is defeasible because
   the reasoner may have to revise it upon learning that penguins are
   birds that do not fly.^[65]^[66]^[67]

Inductive

   [edit]
   Main article: Inductive reasoning
   Photo of an Australian raven Based on many individual observations of
   black ravens, inductive reasoning can be used to infer that all ravens
   are black.

   Inductive reasoning starts from a set of individual instances and uses
   generalization to arrive at a universal law governing all
   cases.^[68]^[69]^[70] Some theorists use the term in a very wide sense
   to include any form of non-deductive reasoning, even if no
   generalization is involved.^[69]^[71]^[68] In the more narrow sense, it
   can be defined as "the process of inferring a general law or principle
   from the observations of particular instances."^[68] For example,
   starting from the empirical observation that "all ravens I have seen so
   far are black", inductive reasoning can be used to infer that "all
   ravens are black". In a slightly weaker form, induction can also be
   used to infer an individual conclusion about a single case, for
   example, that "the next raven I will see is black".^[69]^[1] Inductive
   reasoning is closely related to statistical reasoning and probabilistic
   reasoning.^[72] Like other forms of non-deductive reasoning, induction
   is not certain. This means that the premises support the conclusion by
   making it more probable but do not ensure its truth. In this regard,
   the conclusion of an inductive inference contains new information not
   already found in the premises.^[68]^[60]^[1]

   Various aspects of the premises are important to ensure that they offer
   significant support to the conclusion. In this regard, the sample size
   should be large to guarantee that many individual cases were considered
   before drawing the conclusion.^[60]^[73] An intimately connected factor
   is that the sample is random and representative. This means that it
   includes a fair and balanced selection of individuals with different
   key characteristics. For example, when making a generalization about
   human beings, the sample should include members of different races,
   genders, and age groups.^[60]^[74]^[75] A lot of reasoning in everyday
   life is inductive. For example, when predicting how a person will react
   to a situation, inductive reasoning can be employed based on how the
   person reacted previously in similar circumstances. It plays an equally
   central role in the sciences, which often start with many particular
   observations and then apply the process of generalization to arrive at
   a universal law.^[76]^[77]^[1]

   A well-known issue in the field of inductive reasoning is the so-called
   problem of induction. It concerns the question of whether or why anyone
   is justified in believing the conclusions of inductive inferences. This
   problem was initially raised by David Hume, who holds that future
   events need not resemble past observations. In this regard, inductive
   reasoning about future events seems to rest on the assumption that
   nature remains uniform.^[78]^[79]

Abductive

   [edit]
   Main article: Abductive reasoning

   Abductive reasoning is usually understood as an inference from an
   observation to a fact explaining this observation. Inferring that it
   has rained after seeing that the streets are wet is one example. Often,
   the expression "inference to the best explanation" is used as a
   synonym.^[80]^[81]^[1] This expression underlines that there are
   usually many possible explanations of the same fact and that the
   reasoner should only infer the best explanation. For example, a tsunami
   could also explain why the streets are wet but this is usually not the
   best explanation. As a form of non-deductive reasoning, abduction does
   not guarantee the truth of the conclusion even if the premises are
   true.^[80]^[82]

   The more plausible the explanation is, the stronger it is supported by
   the premises. In this regard, it matters that the explanation is
   simple, i.e. does not include any unnecessary claims, and that it is
   consistent with established knowledge.^[83]^[81]^[84] Other central
   criteria for a good explanation are that it fits observed and commonly
   known facts and that it is relevant, precise, and not circular.
   Ideally, the explanation should be verifiable by empirical evidence. If
   the explanation involves extraordinary claims then it requires very
   strong evidence.^[84]
   Photo of a medical examination Doctors use abductive reasoning when
   investigating the symptoms of a patient to determine their underlying
   cause.

   Abductive reasoning plays a central role in science when researchers
   discover unexplained phenomena. In this case, they often resort to a
   form of guessing to come up with general principles that could explain
   the observations. The hypotheses are then tested and compared to
   discover which one provides the best explanation.^[85]^[84] This
   pertains particularly to cases of causal reasoning that try to discover
   the relation between causes and effects.^[84] Abduction is also very
   common in everyday life. It is used there in a similar but less
   systematic form.^[85]^[84] This relates, for example, to the trust
   people put in what other people say. The best explanation of why a
   person asserts a claim is usually that they believe it and have
   evidence for it. This form of abductive reasoning is relevant to why
   one normally trusts what other people say even though this inference is
   usually not drawn in an explicit way. Something similar happens when
   the speaker's statement is ambiguous and the audience tries to discover
   and explain what the speaker could have meant.^[85] Abductive reasoning
   is also common in medicine when a doctor examines the symptoms of their
   patient in order to arrive at a diagnosis of their underlying
   cause.^[1]

Analogical

   [edit]
   Photo of a Zucker rat Analogical reasoning can be used to transfer
   insights from animal experiments to humans, like in the case of
   research on obesity and hypertension performed on Zucker
   rats.^[86]^[87]

   Analogical reasoning involves the comparison of two systems in relation
   to their similarity. It starts from information about one system and
   infers information about another system based on the resemblance
   between the two systems.^[88]^[89] Expressed schematically, arguments
   from analogy have the following form: (1) a is similar to b; (2) a has
   feature F; (3) therefore b probably also has feature F.^[89]^[90]
   Analogical reasoning can be used, for example, to infer information
   about humans from medical experiments on animals: (1) rats are similar
   to humans; (2) birth control pills affect the brain development of
   rats; (3) therefore they may also affect the brain development of
   humans.^[86]

   Through analogical reasoning, knowledge can be transferred from one
   situation or domain to another. Arguments from analogy provide support
   for their conclusion but do not guarantee its truth. Their strength
   depends on various factors. The more similar the systems are, the more
   likely it is that a given feature of one object also characterizes the
   other object. Another factor concerns not just the degree of similarity
   but also its relevance. For example, an artificial strawberry made of
   plastic may be similar to a real strawberry in many respects, including
   its shape, color, and surface structure. But these similarities are
   irrelevant to whether the artificial strawberry tastes as sweet as the
   real one.^[91]

   Analogical reasoning plays a central role in problem-solving,
   decision-making, and learning. It can be used both for simple physical
   characteristics and complex abstract ideas.^[92]^[93] In science,
   analogies are often used in models to understand complex phenomena in a
   simple way. For example, the Bohr model explains the interactions of
   sub-atomic particles in analogy to how planets revolve around the
   sun.^[94]^[95]

Fallacies

   [edit]
   Main article: Fallacy

   A fallacy is an incorrect argument or a faulty form of reasoning. This
   means that the premises provide no or not sufficient support for the
   conclusion. Fallacies often appear to be correct on the first
   impression and thereby seduce people into accepting and using them. In
   logic, the term "fallacy" does not mean that the conclusion is false.
   Instead, it only means that some kind of error was committed on the way
   to reaching the conclusion. An argument can be a fallacy even if, by a
   fortuitous accident, the conclusion is true. Outside the field of
   logic, the term "fallacy" is sometimes used in a slightly different
   sense for a false belief or theory and not for an
   argument.^[32]^[96]^[97]

   Fallacies are usually divided into formal and informal fallacies.
   Formal fallacies are expressed in a formal language and usually belong
   to deductive reasoning. Their fault lies in the logical form of the
   argument, i.e. that it does not follow a valid rule of
   inference.^[98]^[99] A well-known formal fallacy is affirming the
   consequent. It has the following form: (1) q; (2) if p then q; (3)
   therefore p. This fallacy is committed, for example, when a person
   argues that "the burglars entered by the front door" based on the
   premises "the burglars forced the lock" and "if the burglars entered by
   the front door, then they forced the lock".^[100] This fallacy is
   similar to the valid rule of inference known as modus ponens. It is
   faulty because the first premise and the conclusion are switched
   around. Other well-known formal fallacies are denying the antecedent,
   affirming a disjunct, denying a conjunct, and the fallacy of the
   undistributed middle.^[32]^[96]^[101]

   Informal fallacies are expressed in natural language. Their main fault
   usually lies not in the form of the argument but has other sources,
   like its content or context.^[96]^[99] Some informal fallacies, like
   some instances of false dilemmas and strawman fallacies, even involve
   correct deductive reasoning on the formal level.^[97] The content of an
   argument is the idea that is expressed in it. For example, a false
   dilemma is an informal fallacy that is based on an error in one of the
   premises. The faulty premise oversimplifies reality: it states that
   things are either one way or another way but ignore many other viable
   alternatives.^[102]^[103] False dilemmas are often used by politicians
   when they claim that either their proposal is accepted or there will be
   dire consequences. Such claims usually ignore that various alternatives
   exist to avoid those consequences, i.e. that their proposal is not the
   only viable solution.^[104]

   The strawman fallacy is another informal fallacy. Its error happens on
   the level of the context. It consists in misrepresenting the view of an
   opponent and then refuting this view. The refutation itself is often
   correct but the error lies in the false assumption that the opponent
   actually defends this view. For example, an alcohol lobbyist may
   respond to the suggestion to ban alcohol advertisements on television
   by claiming that it is impossible to make people give up drinking
   alcohol. This is a strawman fallacy since the suggestion was merely to
   ban advertisements and not to stop all alcohol
   consumption.^[105]^[96]^[106]

   Ambiguous and vague expressions in natural language are often
   responsible for the faulty reasoning in informal fallacies. For
   example, this is the case for fallacies of ambiguity, like the argument
   "(1) feathers are light; (2) light is opposed to darkness; (3)
   therefore feathers are opposed to darkness". The error is found in the
   ambiguous term "light", which has one meaning in the first premise
   ("not heavy") and a different meaning in the second premise ("visible
   electromagnetic radiation").^[107]^[108]^[109]

As a skill

   [edit]

   Some theorists discuss logical reasoning in a very wide sense that
   includes its role as a broad skill responsible for high-quality
   thinking. In this sense, it is roughly equivalent to critical thinking
   and includes the capacity to select and apply the appropriate rules of
   logic to specific situations.^[110] It encompasses a great variety of
   abilities besides drawing conclusions from premises. Examples are to
   understand a position, to generate and evaluate reasons for and against
   it as well as to critically assess whether to accept or reject certain
   information. It is about making judgments and drawing conclusions after
   careful evaluation and contrasts in this regard with uncritical snap
   judgments and gut feelings.^[17] Other core skills linked to logical
   reasoning are to assess reasons before accepting a claim and to search
   for new information if more is needed to reach a reliable conclusion.
   It also includes the ability to consider different courses of action
   and compare the advantages and disadvantages of their consequences, to
   use common sense, and to avoid inconsistencies.^[111]^[112] The skills
   responsible for logical reasoning can be learned, trained, and
   improved.^[17]^[113]

   Logical reasoning is relevant both on the theoretical and practical
   level.^[114]^[115] On the theoretical level, it helps decrease the
   number of false beliefs. A central aspect concerns the abilities used
   to distinguish facts from mere opinions, like the process of finding
   and evaluating reasons for and against a position to come to one's own
   conclusion.^[114] This includes being able to differentiate between
   reliable and unreliable sources of information. This matters for
   effective reasoning since it is often necessary to rely on information
   provided by other people instead of checking every single fact for
   oneself. ^[116]^[117] This way, logical reasoning can help the person
   avoid the effects of propaganda or being manipulated by
   others.^[118]^[119] When important information is missing, it is often
   better to suspend judgment than to jump to conclusions.^[118] In this
   regard, logical reasoning should be skeptical and open-minded at the
   same time.^[120]

   On the practical level, logical reasoning concerns the issue of making
   rational and effective decisions.^[114]^[115] For many real-life
   decisions, various courses of action are available to the agent. For
   each possible action, there can be conflicting reasons, some in favor
   of it and others opposed to it. In such cases, logical reasoning
   includes weighing the potential benefits and drawbacks as well as
   considering their likelihood in order to arrive at a balanced
   all-things-considered decision.^[121]^[122] For example, when a person
   runs out of drinking water in the middle of a hiking trip, they could
   employ the skills associated with logical reasoning to decide whether
   to boil and drink water from a stream that might contain dangerous
   microorganisms rather than break off the trip and hike back to the
   parking lot. This could include considering factors like assessing how
   dangerous the microorganisms are and the likelihood that they survive
   the boiling procedure. It may also involve gathering relevant
   information to make these assessments, for example, by asking other
   hikers.^[123]

   Time also plays a central role in logical reasoning.^[124] If one lacks
   important information, it is often better to delay a decision and look
   for new information before coming to a conclusion.^[111] If the
   decision is time-sensitive, on the other hand, logical reasoning may
   imply making a fast decision based on the currently available evidence
   even if it is very limited. For example, if a friend yells "Duck!"
   during a baseball game the most logical response may be to blindly
   trust them and duck instead of demanding an explanation or
   investigating what might have prompted their exclamation.^[124]^[125]
   Generally speaking, the less time there is, the more significant it is
   to trust intuitions and gut feelings. If there is more time, on the
   other hand, it becomes important to examine ambiguities and assess
   contradictory information.^[126]

See also

   [edit]
     * Argumentation theory
     * Dialogical logic
     * Epilogism
     * List of rules of inference
     * Transduction (machine learning)
     * Transduction (psychology)

References

   [edit]

Citations

   [edit]
    1. ^ ^a ^b ^c ^d ^e ^f ^g ^h ^i ^j ^k Nunes 2011, p. 2066–9, Logical
       Reasoning and Learning.
    2. ^ Bronkhorst et al. 2020, p. 1675.
    3. ^ ^a ^b ^c ^d ^e Dowden 2020, p. 24.
    4. ^ Bronkhorst et al. 2020, p. 1676.
    5. ^ ^a ^b Franks et al. 2013, p. 146.
    6. ^ ^a ^b Dowden 2020, p. 5.
    7. ^ Chang 2014, p. 37.
    8. ^ Haack 1978, p. 1–10, 1. 'Philosophy of logics'.
    9. ^ Dowden 2020, p. 355.
   10. ^ Girod 2014, p. 13.
   11. ^ Craig 1996, Formal and informal logic.
   12. ^ Bronkhorst et al. 2020, p. 1674-6.
   13. ^ ^a ^b Enyeart, Baker & Vanharlingen 1980, p. 263–267.
   14. ^ Flick 2013, p. 123.
   15. ^ Dowden 2020, p. 5, 432.
   16. ^ Dowden 2020, p. 346-7, 432, 470.
   17. ^ ^a ^b ^c Dowden 2020, p. 1.
   18. ^ ^a ^b ^c ^d Audi 1999, Philosophy of logic.
   19. ^ ^a ^b Honderich 2005, philosophical logic.
   20. ^ Copi, Cohen & Rodych 2018, p. 4.
   21. ^ Kenny 2018, p. 140.
   22. ^ Kaye 2012, p. 57.
   23. ^ Blackburn 2008, p. 29, argument.
   24. ^ Johnson 2017, p. 2.
   25. ^ ^a ^b ^c Dowden 2020, p. 67-8.
   26. ^ Gabbay 2002, p. 15.
   27. ^ Bronkhorst et al. 2020, p. 1676-7.
   28. ^ Dowden 2020, p. 67-8, 432, 470.
   29. ^ Copi, Cohen & Rodych 2018, p. 22–6.
   30. ^ Dowden 2020, p. 31-2, 67-8.
   31. ^ Girod 2014, p. 54.
   32. ^ ^a ^b ^c Hansen 2020.
   33. ^ Arp, Barbone & Bruce 2018, p. 115.
   34. ^ Johnson-Laird 2009, p. 8–17.
   35. ^ Dowden 2020, p. 432.
   36. ^ Evans 2005, 8. Deductive reasoning.
   37. ^ Evans 2005, p. 169, 8. Deductive Reasoning.
   38. ^ Byrne, Evans & Newstead 2019, p. 59.
   39. ^ Dowden 2020, p. 392.
   40. ^ Jamieson 2013, p. 34.
   41. ^ Blackburn 2016, p. 422, rule of inference.
   42. ^ ^a ^b Velleman 2006, p. 8, 103.
   43. ^ Church 1996, p. 104.
   44. ^ ^a ^b Jacquette 2006, p. 1–12, Introduction: Philosophy of logic
       today.
   45. ^ Smith 2020.
   46. ^ Groarke 2022.
   47. ^ Haack 1978, p. 170, 222.
   48. ^ Norman & Sylvan 2012, p. 419.
   49. ^ Goranko & Rumberg 2022.
   50. ^ Shapiro & Kouri Kissel 2021.
   51. ^ Haack 1996, p. 1, 4, 1. 'Alternative' in 'Alternative Logic'.
   52. ^ ^a ^b Borchert 2006, Logic, Non-Classical.
   53. ^ Moschovakis 2021.
   54. ^ Priest, Tanaka & Weber 2018.
   55. ^ Weaver 2015, p. 70.
   56. ^ Sayward 2009, p. 15.
   57. ^ Dowden 2020, p. 432, 470.
   58. ^ ^a ^b Anshakov & Gergely 2010, p. 128.
   59. ^ ^a ^b Magnani & Bertolotti 2017, p. 152.
   60. ^ ^a ^b ^c ^d Dowden 2020, p. 470.
   61. ^ Amaya 2015, p. 202.
   62. ^ ^a ^b Bertolaso & Sterpetti 2020, p. 110.
   63. ^ Cellucci 2017, p. 154.
   64. ^ Nadler & Shapiro 2021, p. 81.
   65. ^ Koons 2022.
   66. ^ Nute 2012, p. 82.
   67. ^ Niiniluoto, Sintonen & Wolenski 2004, p. 901.
   68. ^ ^a ^b ^c ^d Li & Vitányi 2019, p. 345–448, Inductive Reasoning.
   69. ^ ^a ^b ^c Vickers 2022.
   70. ^ Porta 2016, Inductive Reasoning.
   71. ^ Dowden 2020, p. 432, 450, 470.
   72. ^ Bird 2006, p. 123.
   73. ^ Lorenzano, Rheinberger & Galles 2010, p. 103.
   74. ^ Mizrahi 2020, p. 83.
   75. ^ Asher, Banks & Scheuren 2007, p. 22.
   76. ^ Heit 2007, p. 1–24, What Is Induction and Why Study It?.
   77. ^ Dowden 2020, p. 346-7, 432.
   78. ^ Henderson 2022.
   79. ^ Psillos 2023.
   80. ^ ^a ^b Douven 2022.
   81. ^ ^a ^b Koslowski 2017, p. 366–382, Abductive reasoning and
       explanation.
   82. ^ Walton 2014, p. 1–3.
   83. ^ Douven 2011, Explicating Abduction.
   84. ^ ^a ^b ^c ^d ^e Dowden 2020, p. 519-20.
   85. ^ ^a ^b ^c Douven 2011, 1.2 The ubiquity of abduction.
   86. ^ ^a ^b Salmon 2012, p. 132–3.
   87. ^ Kurtz, Morris & Pershadsingh 1989, p. 896–901.
   88. ^ Bunnin & Yu 2008, p. 25.
   89. ^ ^a ^b Bartha 2019.
   90. ^ Sandkühler 2010, Analogie.
   91. ^
          + Salmon 2012, p. 133–4
          + Bartha 2022
          + Goswami 2013, p. 86
          + Sriram 2012, p. 286
   92. ^ Fasko & Fair 2020, p. 51.
   93. ^ Demir 2017, p. 32.
   94. ^ Margolis et al. 1986, p. 167.
   95. ^ Ornek & Saleh 2012, p. 82.
   96. ^ ^a ^b ^c ^d Dowden 2023.
   97. ^ ^a ^b Dowden 2020, p. 290.
   98. ^ Kilcrease 2021, p. 100.
   99. ^ ^a ^b Vleet 2011, p. ix.
   100. ^ Colman 2009, affirming the consequent.
   101. ^ Kohar 2016, p. 54, 57.
   102. ^ Tomić 2013, p. 347–368.
   103. ^ Dowden 2021.
   104. ^ Tuman 2008, p. 75.
   105. ^ Walton 2013, p. 250–2.
   106. ^ Walton 1987, p. 10.
   107. ^ Engel 2014, p. 74, 108–11.
   108. ^ Mackie 2006, Fallacies.
   109. ^ Atwater 1867, p. 167.
   110. ^
          + Enyeart, Baker & Vanharlingen 1980, p. 263–267
          + Dowden 2020, p. 1
          + Bronkhorst et al. 2020, p. 1674
          + Ivory 2021, p. 73
          + Halpern 2014, p. 81
   111. ^ ^a ^b Dowden 2020, p. 18.
   112. ^ Nelson 2005, p. 167.
   113. ^ Conati et al. 2015, p. 738.
   114. ^ ^a ^b ^c Dowden 2020, p. 1, 13.
   115. ^ ^a ^b Mele & Rawling 2004, p. 3–14, Introduction: Aspects of
       Rationality.
   116. ^ Dowden 2020, p. 143, 172.
   117. ^ Cottrell 2017, p. 110.
   118. ^ ^a ^b Dowden 2020, p. 263-4.
   119. ^ Gambrill 2012, p. 540.
   120. ^ Dowden 2020, p. 19.
   121. ^ Dowden 2020, p. 6.
   122. ^ Robertson 2009, p. 192.
   123. ^ Dowden 2020, p. 2-5.
   124. ^ ^a ^b Dowden 2020, p. 9.
   125. ^ Viale 2020, p. 746.
   126. ^ Dowden 2020, p. 10.

Sources

   [edit]
     * Amaya, Amalia (30 April 2015). The Tapestry of Reason: An Inquiry
       into the Nature of Coherence and its Role in Legal Argument.
       Bloomsbury Publishing. p. 202. ISBN 9781782255161.
     *

   Anshakov, Oleg M.; Gergely, Tamás (11 March 2010). Cognitive Reasoning:
   A Formal Approach. Springer Science & Business Media. p. 128.
   ISBN 9783540688754.

     Arp, Robert; Barbone, Steven; Bruce, Michael (28 September 2018). Bad
   Arguments: 100 of the Most Important Fallacies in Western Philosophy.
   John Wiley & Sons. p. 115. ISBN 978-1-119-16580-4.

     Asher, Jana; Banks, David; Scheuren, Fritz J. (26 December 2007).
   Statistical Methods for Human Rights. Springer Science & Business
   Media. p. 22. ISBN 9780387728377.

     Atwater, Lyman Hotchkiss (1867). Manual of Elementary Logic: Designed
   Especially for the Use of Teachers and Learners. J. B. Lippincott.
   p. 167.

     Audi, Robert (1999). "Philosophy of logic". The Cambridge Dictionary
   of Philosophy. Cambridge University Press. ISBN 9781107643796. Archived
   from the original on 14 April 2021. Retrieved 29 December 2021.

     Bartha, Paul (2019). "Analogy and Analogical Reasoning". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Retrieved 21 January 2021.

     Bartha, Paul (2022). "Analogy and Analogical Reasoning: 2.4
   Analogical inference rules?". The Stanford Encyclopedia of Philosophy.
   Metaphysics Research Lab, Stanford University. Retrieved 19 January
   2023.

     Bertolaso, Marta; Sterpetti, Fabio (5 February 2020). A Critical
   Reflection on Automated Science: Will Science Remain Human?. Springer
   Nature. p. 110. ISBN 9783030250010.

     Bird, Alexander (9 May 2006). Philosophy Of Science. Routledge.
   p. 123. ISBN 9781135364236.

     Blackburn, Simon (24 March 2016). "rule of inference". A Dictionary
   of Philosophy. Oxford University Press. p. 422. ISBN 9780198735304.
   Archived from the original on 8 January 2022. Retrieved 8 January 2022.

     Blackburn, Simon (1 January 2008). "argument". The Oxford Dictionary
   of Philosophy. Oxford University Press. p. 29. ISBN 9780199541430.
   Archived from the original on 8 January 2022. Retrieved 8 January 2022.

     Borchert, Donald (2006). "Logic, Non-Classical". Macmillan
   Encyclopedia of Philosophy, 2nd Edition. Macmillan. ISBN 9780028657905.

     Bronkhorst, Hugo; Roorda, Gerrit; Suhre, Cor; Goedhart, Martin
   (December 2020). "Logical Reasoning in Formal and Everyday Reasoning
   Tasks". International Journal of Science and Mathematics Education. 18
   (8): 1673–1694. Bibcode:2020IJSME..18.1673B.
   doi:10.1007/s10763-019-10039-8. S2CID 254541202.

     Bunnin, Nicholas; Yu, Jiyuan (15 April 2008). The Blackwell
   Dictionary of Western Philosophy. Wiley. p. 25. ISBN 9780470997215.

     Byrne, Ruth M. J.; Evans, Jonathan St B. T.; Newstead, Stephen E. (18
   June 2019). Human Reasoning: The Psychology Of Deduction. Routledge.
   p. 59. ISBN 9781317716266.

     Cellucci, Carlo (29 March 2017). Rethinking Knowledge: The Heuristic
   View. Springer. p. 154. ISBN 9783319532370.

     Chang, Mark (22 July 2014). Principles of Scientific Methods. CRC
   Press. p. 37. ISBN 9781482238099.

     Church, Alonzo (1996). Introduction to Mathematical Logic. Princeton
   University Press. p. 104. ISBN 9780691029061.

     Colman, Andrew M. (1 January 2009). "affirming the consequent". A
   Dictionary of Psychology. Oxford University Press. ISBN 9780199534067.

     Conati, Cristina; Heffernan, Neil; Mitrovic, Antonija; Verdejo, M.
   Felisa (16 June 2015). Artificial Intelligence in Education: 17th
   International Conference, AIED 2015, Madrid, Spain, June 22-26, 2015.
   Proceedings. Springer. p. 738. ISBN 9783319197739.

     Copi, Irving M.; Cohen, Carl; Rodych, Victor (3 September 2018).
   Introduction to Logic. Routledge. ISBN 9781351386975.

     Cottrell, Stella (14 March 2017). Critical Thinking Skills: Effective
   Analysis, Argument and Reflection. Bloomsbury Publishing. p. 110.
   ISBN 9781350314672.

     Craig, Edward (1996). "Formal and informal logic". Routledge
   Encyclopedia of Philosophy. Routledge. ISBN 9780415073103. Archived
   from the original on 16 January 2021. Retrieved 29 December 2021.

     Demir, Imran (24 March 2017). Overconfidence and Risk Taking in
   Foreign Policy Decision Making: The Case of Turkey's Syria Policy.
   Springer. p. 32. ISBN 9783319526058.

     Douven, Igor (2022). "Abduction and Explanatory Reasoning". Oxford
   Bibliographies. Oxford University Press. Retrieved 18 January 2023.

     Douven, Igor (9 March 2011). "Abduction". Stanford Encyclopedia of
   Philosophy. Retrieved 18 January 2023.

     Dowden, Bradley (2023). "Fallacies". Internet Encyclopedia of
   Philosophy. Retrieved 22 January 2023.

     Dowden, Bradley (2021). "Fallacies: 6. Partial List of Fallacies".
   Internet Encyclopedia of Philosophy. Retrieved 13 March 2021.

     Dowden, Bradley H. (2020). Logical Reasoning (PDF). (for an earlier
   version, see: Dowden, Bradley Harris (1993). Logical Reasoning.
   Wadsworth Publishing Company. ISBN 9780534176884.)

     Engel, S. Morris (2014). With Good Reason an Introduction to Informal
   Fallacies. St. Martin's Press. pp. 74, 108–11. ISBN 9781457695957.

     Enyeart, Morris A.; Baker, Dale; Vanharlingen, Dave (May 1980).
   "Correlation of inductive and deductive logical reasoning to college
   physics achievement". Journal of Research in Science Teaching. 17 (3):
   263–267. Bibcode:1980JRScT..17..263E. doi:10.1002/tea.3660170311.

     Evans, Jonathan (18 April 2005). Morrison, Robert (ed.). The
   Cambridge Handbook of Thinking and Reasoning. Cambridge University
   Press. ISBN 9780521824170.

     Fasko, Daniel; Fair, Frank (12 October 2020). Critical Thinking and
   Reasoning: Theory, Development, Instruction, and Assessment. Brill.
   p. 51. ISBN 9789004444591.

     Flick, Uwe (10 December 2013). The SAGE Handbook of Qualitative Data
   Analysis. SAGE. p. 123. ISBN 9781446296691.

     Franks, Bridget A.; Therriault, David J.; Buhr, Miriam I.; Chiang,
   Evelyn S.; Gonzalez, Claire M.; Kwon, Heekyung K.; Schelble, Jenni L.;
   Wang, Xuesong (August 2013). "Looking back: reasoning and metacognition
   with narrative texts". Metacognition and Learning. 8 (2): 146.
   doi:10.1007/s11409-013-9099-2. S2CID 255162310.

     Gabbay, Michael (4 September 2002). Logic With Added Reasoning.
   Broadview Press. p. 15. ISBN 9781551114057.

     Gambrill, Eileen (1 May 2012). Critical Thinking in Clinical
   Practice: Improving the Quality of Judgments and Decisions. John Wiley
   & Sons. p. 540. ISBN 9780470904381.

     Girod, Robert J. (25 September 2014). Logical Investigative Methods:
   Critical Thinking and Reasoning for Successful Investigations. CRC
   Press. ISBN 9781482243147.

     Goranko, Valentin; Rumberg, Antje (2022). "Temporal Logic". The
   Stanford Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Retrieved 24 January 2023.

     Goswami, Usha (23 October 2013). Analogical Reasoning in Children.
   Routledge. p. 86. ISBN 9781317775393.

     Groarke, Louis F. (2022). "Aristotle: Logic". Internet Encyclopedia
   of Philosophy. Archived from the original on 29 December 2021.
   Retrieved 1 January 2022.

     Haack, Susan (1996). "1. 'Alternative' in 'Alternative Logic'".
   Deviant Logic, Fuzzy Logic: Beyond the Formalism. Chicago and London:
   University of Chicago Press. pp. 1, 4. ISBN 9780226311333.

     Haack, Susan (27 July 1978). Philosophy of Logics. Cambridge
   University Press. ISBN 9780521293297.

     Halpern, Diane F. (4 February 2014). Critical Thinking Across the
   Curriculum: A Brief Edition of Thought & Knowledge. Routledge. p. 81.
   ISBN 9781317778370.

     Hansen, Hans (2020). "Fallacies". The Stanford Encyclopedia of
   Philosophy. Metaphysics Research Lab, Stanford University. Archived
   from the original on 29 March 2021. Retrieved 18 March 2021.

     Heit, Evan (2007). "What Is Induction and Why Study It?". Inductive
   Reasoning: Experimental, Developmental, and Computational Approaches.
   Cambridge University Press. pp. 1–24. ISBN 9780521856485.

     Henderson, Leah (2022). "The Problem of Induction: 1. Hume's
   Problem". The Stanford Encyclopedia of Philosophy. Metaphysics Research
   Lab, Stanford University. Retrieved 18 January 2023.

     Honderich, Ted (2005). "philosophical logic". The Oxford Companion to
   Philosophy. Oxford University Press. ISBN 9780199264797. Archived from
   the original on 29 January 2021. Retrieved 2 January 2022.

     Ivory, Sarah Birrell (11 January 2021). Becoming a Critical Thinker:
   For Your University Studies and Beyond. Oxford University Press. p. 73.
   ISBN 9780198841531.

     Jacquette, Dale (2006). "Introduction: Philosophy of logic today".
   Philosophy of Logic. North Holland. pp. 1–12. ISBN 9780444515414.
   Archived from the original on 7 December 2021. Retrieved 29 December
   2021.

     Jamieson, D. (9 March 2013). Language, Mind, and Art: Essays in
   Appreciation and Analysis, in Honor of Paul Ziff. Springer Science &
   Business Media. p. 34. ISBN 9789401583138.

     Johnson, Gregory (6 January 2017). Argument and Inference: An
   Introduction to Inductive Logic. MIT Press. p. 2. ISBN 9780262035255.

     Johnson-Laird, Phil (30 December 2009). "Deductive reasoning". WIREs
   Cognitive Science. 1 (1): 8–17. doi:10.1002/wcs.20. ISSN 1939-5078.
   PMID 26272833.

     Kaye, Sharon M. (1 December 2012). Critical Thinking: A Beginner's
   Guide. Simon and Schuster. p. 57. ISBN 9781780741475.

     Kenny, Anthony (15 October 2018). An Illustrated Brief History of
   Western Philosophy, 20th Anniversary Edition. John Wiley & Sons.
   p. 140. ISBN 9781119531173.

     Kilcrease, Bethany (2021). Falsehood and Fallacy: How to Think, Read,
   and Write in the Twenty-First Century. University of Toronto Press.
   p. 100. ISBN 9781487588618.

     Kohar, Richard (15 June 2016). Basic Discrete Mathematics: Logic, Set
   Theory, And Probability. World Scientific Publishing Company. pp. 54,
   57. ISBN 9789814730419.

     Koons, Robert (2022). "Defeasible Reasoning". The Stanford
   Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Retrieved 22 January 2023.

     Koslowski, Barbara (14 November 2017). "Abductive reasoning and
   explanation". International Handbook of Thinking and Reasoning.
   Routledge. pp. 366–382. doi:10.4324/9781315725697. ISBN 9781315725697.

     Kurtz, T W; Morris, R C; Pershadsingh, H A (June 1989). "The Zucker
   fatty rat as a genetic model of obesity and hypertension".
   Hypertension. 13 (6_pt_2): 896–901. doi:10.1161/01.HYP.13.6.896.
   PMID 2786848. S2CID 109606.

     Li, Ming; Vitányi, Paul (2019). "Inductive Reasoning". An
   Introduction to Kolmogorov Complexity and Its Applications. Texts in
   Computer Science. Springer International Publishing. pp. 345–448.
   doi:10.1007/978-3-030-11298-1_5. ISBN 9783030112981.

     Lorenzano, Pablo; Rheinberger, Hans-Jörg; Galles, Eduardo Ortiz and
   Carlos Delfino (27 September 2010). History and Philosophy of Science
   and Technology. Eolss Publishers / UNESCO. p. 103. ISBN 9781848263239.

     Mackie, J. L. (2006). "Fallacies". In Borchert, Donald (ed.).
   Macmillan Encyclopedia of Philosophy, 2nd Edition. Macmillan.
   ISBN 9780028657905.

     Magnani, Lorenzo; Bertolotti, Tommaso (22 May 2017). Springer
   Handbook of Model-Based Science. Springer. p. 152. ISBN 9783319305264.

     Margolis, James M.; Margolis, Joseph; Krausz, Michael; Krausz, A. S.;
   Burian, R.; Margolis, Professor Joseph (31 October 1986). Rationality,
   Relativism and the Human Sciences. Springer Science & Business Media.
   p. 167. ISBN 9789024732715.

     Mele, Alfred R.; Rawling, Piers. (2004). "INTRODUCTION: Aspects of
   Rationality". The Oxford Handbook of Rationality. Oxford University
   Press. pp. 3–14. doi:10.1093/0195145399.001.0001. ISBN 9780195145397.

     Mizrahi, Moti (29 September 2020). The Relativity of Theory: Key
   Positions and Arguments in the Contemporary Scientific
   Realism/Antirealism Debate. Springer Nature. p. 83. ISBN 9783030580476.

     Moschovakis, Joan (2021). "Intuitionistic Logic: 1. Rejection of
   Tertium Non Datur". The Stanford Encyclopedia of Philosophy.
   Metaphysics Research Lab, Stanford University. Retrieved 11 December
   2021.

     Nadler, Steven; Shapiro, Lawrence (31 August 2021). When Bad Thinking
   Happens to Good People: How Philosophy Can Save Us from Ourselves.
   Princeton University Press. p. 81. ISBN 9780691220086.

     Nelson, Hazel E. (2005). Cognitive-behavioural Therapy with Delusions
   and Hallucinations: A Practice Manual. Nelson Thornes. p. 167.
   ISBN 9780748792566.

     Niiniluoto, I.; Sintonen, Matti; Wolenski, Jan (31 March 2004).
   Handbook of Epistemology. Springer Science & Business Media. p. 901.
   ISBN 9781402019852.

     Norman, J.; Sylvan, R. (6 December 2012). Directions in Relevant
   Logic. Springer Science & Business Media. p. 419. ISBN 9789400910058.

     Nunes, Terezinha (5 October 2011). "Logical Reasoning and Learning".
   In Seel, Norbert M. (ed.). Encyclopedia of the Sciences of Learning.
   Springer Science & Business Media. pp. 2066–9. ISBN 9781441914279.

     Nute, Donald (6 December 2012). Defeasible Deontic Logic. Springer
   Science & Business Media. p. 82. ISBN 9789401588515.

     Ornek, Dr Funda; Saleh, Dr Issa M. (1 May 2012). Contemporary Science
   Teaching Approaches: Promoting Conceptual Understanding in Science.
   IAP. p. 82. ISBN 9781617356100.

     Porta, Miquel (21 July 2016). "Inductive Reasoning". A Dictionary of
   Epidemiology. Oxford University Press. ISBN 9780199976720.

     Priest, Graham; Tanaka, Koji; Weber, Zach (2018). "Paraconsistent
   Logic". The Stanford Encyclopedia of Philosophy. Metaphysics Research
   Lab, Stanford University. Retrieved 14 December 2021.

     Psillos, Stathis (2023). "Induction, The Problem of". Internet
   Encyclopedia of Philosophy. Retrieved 22 January 2023.

     Robertson, Simon (1 October 2009). Spheres of Reason: New Essays in
   the Philosophy of Normativity. OUP Oxford. p. 192. ISBN 9780191610219.

     Salmon, Merrilee (2012). Introduction to Logic and Critical Thinking.
   Cengage Learning. ISBN 978-1133711643.^[permanent dead link‍]

     Sandkühler, Hans Jörg (2010). "Analogie". Enzyklopädie Philosophie.
   Meiner. ISBN 9783787319992. Archived from the original on 2021-03-11.
   Retrieved 2023-01-24.

     Sayward, Charles (2009). Dialogues Concerning Natural Numbers. Peter
   Lang. p. 15. ISBN 9781433107801.

     Shapiro, Stewart; Kouri Kissel, Teresa (2021). "Classical Logic". The
   Stanford Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford
   University. Archived from the original on 3 May 1998. Retrieved 4
   December 2021.

     Smith, Robin (2020). "Aristotle's Logic". The Stanford Encyclopedia
   of Philosophy. Metaphysics Research Lab, Stanford University. Archived
   from the original on 26 December 2021. Retrieved 1 January 2022.

     Sriram, Ram D. (6 December 2012). Intelligent Systems for
   Engineering: A Knowledge-based Approach. Springer Science & Business
   Media. p. 286. ISBN 9781447106319.

     Tomić, Taeda (2013). "False Dilemma: A Systematic Exposition".
   Argumentation. 27 (4): 347–368. doi:10.1007/s10503-013-9292-0.
   S2CID 144781912.

     Tuman, Joseph S. (2008). Political Communication in American
   Campaigns. SAGE. p. 75. ISBN 9781412909457.

     Velleman, Daniel J. (16 January 2006). How to Prove It: A Structured
   Approach. Cambridge University Press. p. 8, 103. ISBN 9780521675994.

     Viale, Riccardo (2 December 2020). Routledge Handbook of Bounded
   Rationality. Routledge. p. 746. ISBN 9781317330790.

     Vickers, John M. (2022). "Inductive Reasoning". Oxford
   Bibliographies. Oxford University Press. Retrieved 18 January 2023.

     Vleet, Jacob E. Van (2011). Informal Logical Fallacies: A Brief
   Guide. University Press of America. p. ix. ISBN 9780761854333.

     Walton, Douglas (15 May 2014). Abductive Reasoning. University of
   Alabama Press. pp. 1–3. ISBN 9780817357825.

     Walton, Douglas (26 August 2013). Methods of Argumentation. Cambridge
   University Press. pp. 250–2. ISBN 9781107039308.

     Walton, Douglas N. (1987). Informal Fallacies: Towards a Theory of
   Argument Criticisms. John Benjamins Publishing. p. 10.
   ISBN 9789027250056.

     Weaver, Nik (22 April 2015). Truth And Assertibility. World
   Scientific. p. 70. ISBN 9789814619981.

   Authority control databases: National Edit this at Wikidata
     * United States
     * Israel

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Logical_reasoning&oldid=126
   1294958"

   Categories:
     * Reasoning
     * Concepts in logic

   Hidden categories:
     * Good articles
     * Articles with short description
     * Short description is different from Wikidata
     * All articles with dead external links
     * Articles with dead external links from August 2024
     * Articles with permanently dead external links

     * This page was last edited on 5 December 2024, at 09:20 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 Formal accounts
     * 2 A priori property of logical consequence
     * 3 Proofs and models
       (BUTTON) Toggle Proofs and models subsection
          + 3.1 Syntactic consequence
          + 3.2 Semantic consequence
     * 4 Modal accounts
       (BUTTON) Toggle Modal accounts subsection
          + 4.1 Modal-formal accounts
          + 4.2 Warrant-based accounts
          + 4.3 Non-monotonic logical consequence
     * 5 See also
     * 6 Notes
     * 7 Resources
     * 8 External links

   [ ] Toggle the table of contents

Logical consequence

   [ ] 28 languages
     * العربية
     * Български
     * Català
     * Deutsch
     * Ελληνικά
     * Español
     * Esperanto
     * فارسی
     * Français
     * Galego
     * 한국어
     * हिन्दी
     * Bahasa Indonesia
     * עברית
     * Nederlands
     * 日本語
     * Polski
     * Português
     * Русский
     * Slovenščina
     * کوردی
     * Српски / srpski
     * Suomi
     * Svenska
     * ไทย
     * Українська
     * 粵語
     * 中文

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikimedia Commons
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   From Wikipedia, the free encyclopedia
   Relationship where one statement follows from another
   "Entailment" redirects here. For other uses, see Entail
   (disambiguation).
   "Therefore" redirects here. For the therefore symbol ∴, see Therefore
   sign.
   "Logical implication" redirects here. For the binary connective, see
   Material conditional.
   "⊧" redirects here. For the symbol, see Double turnstile.

   Logical consequence (also entailment or implication) is a fundamental
   concept in logic which describes the relationship between statements
   that hold true when one statement logically follows from one or more
   statements. A valid logical argument is one in which the conclusion is
   entailed by the premises, because the conclusion is the consequence of
   the premises. The philosophical analysis of logical consequence
   involves the questions: In what sense does a conclusion follow from its
   premises? and What does it mean for a conclusion to be a consequence of
   premises?^[1] All of philosophical logic is meant to provide accounts
   of the nature of logical consequence and the nature of logical
   truth.^[2]

   Logical consequence is necessary and formal, by way of examples that
   explain with formal proof and models of interpretation.^[1] A sentence
   is said to be a logical consequence of a set of sentences, for a given
   language, if and only if, using only logic (i.e., without regard to any
   personal interpretations of the sentences) the sentence must be true if
   every sentence in the set is true.^[3]

   Logicians make precise accounts of logical consequence regarding a
   given language
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mrow class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-caligraphic"
   mathvariant="script">L</mi> </mrow> </mrow> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle {\mathcal
   {L}}}</annotation> </semantics> :MATH]
   {\displaystyle {\mathcal {L}}} , either by constructing a deductive
   system for
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mrow class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-caligraphic"
   mathvariant="script">L</mi> </mrow> </mrow> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle {\mathcal
   {L}}}</annotation> </semantics> :MATH]
   {\displaystyle {\mathcal {L}}} or by formal intended semantics for
   language
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mrow class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-caligraphic"
   mathvariant="script">L</mi> </mrow> </mrow> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle {\mathcal
   {L}}}</annotation> </semantics> :MATH]
   {\displaystyle {\mathcal {L}}} . The Polish logician Alfred Tarski
   identified three features of an adequate characterization of
   entailment: (1) The logical consequence relation relies on the logical
   form of the sentences: (2) The relation is a priori, i.e., it can be
   determined with or without regard to empirical evidence (sense
   experience); and (3) The logical consequence relation has a modal
   component.^[3]

Formal accounts

   [edit]

   The most widely prevailing view on how best to account for logical
   consequence is to appeal to formality. This is to say that whether
   statements follow from one another logically depends on the structure
   or logical form of the statements without regard to the contents of
   that form.

   Syntactic accounts of logical consequence rely on schemes using
   inference rules. For instance, we can express the logical form of a
   valid argument as:

          All X are Y
          All Y are Z
          Therefore, all X are Z.

   This argument is formally valid, because every instance of arguments
   constructed using this scheme is valid.

   This is in contrast to an argument like "Fred is Mike's brother's son.
   Therefore Fred is Mike's nephew." Since this argument depends on the
   meanings of the words "brother", "son", and "nephew", the statement
   "Fred is Mike's nephew" is a so-called material consequence of "Fred is
   Mike's brother's son", not a formal consequence. A formal consequence
   must be true in all cases, however this is an incomplete definition of
   formal consequence, since even the argument "P is Q's brother's son,
   therefore P is Q's nephew" is valid in all cases, but is not a formal
   argument.^[1]

A priori property of logical consequence

   [edit]

   If it is known that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>Q</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle Q}</annotation>
   </semantics> :MATH]
   {\displaystyle Q} follows logically from
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle P}</annotation>
   </semantics> :MATH]
   {\displaystyle P} , then no information about the possible
   interpretations of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle P}</annotation>
   </semantics> :MATH]
   {\displaystyle P} or
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>Q</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle Q}</annotation>
   </semantics> :MATH]
   {\displaystyle Q} will affect that knowledge. Our knowledge that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>Q</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle Q}</annotation>
   </semantics> :MATH]
   {\displaystyle Q} is a logical consequence of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>P</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle P}</annotation>
   </semantics> :MATH]
   {\displaystyle P} cannot be influenced by empirical knowledge.^[1]
   Deductively valid arguments can be known to be so without recourse to
   experience, so they must be knowable a priori.^[1] However, formality
   alone does not guarantee that logical consequence is not influenced by
   empirical knowledge. So the a priori property of logical consequence is
   considered to be independent of formality.^[1]

Proofs and models

   [edit]

   The two prevailing techniques for providing accounts of logical
   consequence involve expressing the concept in terms of proofs and via
   models. The study of the syntactic consequence (of a logic) is called
   (its) proof theory whereas the study of (its) semantic consequence is
   called (its) model theory.^[4]

Syntactic consequence

   [edit]
   See also: ∴ and ⊢

   A formula
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A} is a syntactic consequence^[5]^[6]^[7]^[8]^[9] within
   some formal system
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mrow class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-caligraphic"
   mathvariant="script">F</mi> <mi class="MJX-tex-caligraphic"
   mathvariant="script">S</mi> </mrow> </mrow> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle {\mathcal
   {FS}}}</annotation> </semantics> :MATH]
   {\displaystyle {\mathcal {FS}}} of a set
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">Γ</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Gamma }</annotation>
   </semantics> :MATH]
   {\displaystyle \Gamma } of formulas if there is a formal proof in
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mrow class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-caligraphic"
   mathvariant="script">F</mi> <mi class="MJX-tex-caligraphic"
   mathvariant="script">S</mi> </mrow> </mrow> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle {\mathcal
   {FS}}}</annotation> </semantics> :MATH]
   {\displaystyle {\mathcal {FS}}} of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A} from the set
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">Γ</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Gamma }</annotation>
   </semantics> :MATH]
   {\displaystyle \Gamma } . This is denoted
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">Γ</mi>
   <msub> <mo>⊢</mo> <mrow class="MJX-TeXAtom-ORD"> <mrow
   class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-caligraphic"
   mathvariant="script">F</mi> <mi class="MJX-tex-caligraphic"
   mathvariant="script">S</mi> </mrow> </mrow> </msub> <mi>A</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Gamma \vdash _{\mathcal
   {FS}}A}</annotation> </semantics> :MATH]
   {\displaystyle \Gamma \vdash _{\mathcal {FS}}A} . The turnstile symbol
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>⊢</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \vdash
   }</annotation> </semantics> :MATH]
   {\displaystyle \vdash } was originally introduced by Frege in 1879, but
   its current use only dates back to Rosser and Kleene (1934–1935). ^[9]

   Syntactic consequence does not depend on any interpretation of the
   formal system.^[10]

Semantic consequence

   [edit]
   See also: ⊨

   A formula
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A} is a semantic consequence within some formal system
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mrow class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-caligraphic"
   mathvariant="script">F</mi> <mi class="MJX-tex-caligraphic"
   mathvariant="script">S</mi> </mrow> </mrow> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle {\mathcal
   {FS}}}</annotation> </semantics> :MATH]
   {\displaystyle {\mathcal {FS}}} of a set of statements
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">Γ</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Gamma }</annotation>
   </semantics> :MATH]
   {\displaystyle \Gamma } if and only if there is no model
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mrow class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-caligraphic"
   mathvariant="script">I</mi> </mrow> </mrow> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle {\mathcal
   {I}}}</annotation> </semantics> :MATH]
   {\displaystyle {\mathcal {I}}} in which all members of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">Γ</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Gamma }</annotation>
   </semantics> :MATH]
   {\displaystyle \Gamma } are true and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A} is false.^[11] This is denoted
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">Γ</mi>
   <msub> <mo>⊨</mo> <mrow class="MJX-TeXAtom-ORD"> <mrow
   class="MJX-TeXAtom-ORD"> <mi class="MJX-tex-caligraphic"
   mathvariant="script">F</mi> <mi class="MJX-tex-caligraphic"
   mathvariant="script">S</mi> </mrow> </mrow> </msub> <mi>A</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Gamma \models _{\mathcal
   {FS}}A}</annotation> </semantics> :MATH]
   {\displaystyle \Gamma \models _{\mathcal {FS}}A} . Or, in other words,
   the set of the interpretations that make all members of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">Γ</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Gamma }</annotation>
   </semantics> :MATH]
   {\displaystyle \Gamma } true is a subset of the set of the
   interpretations that make
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A} true.

Modal accounts

   [edit]

   Modal accounts of logical consequence are variations on the following
   basic idea:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">Γ</mi> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \Gamma
          }</annotation> </semantics> :MATH]
          {\displaystyle \Gamma }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mo>⊢</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          \vdash }</annotation> </semantics> :MATH]
          {\displaystyle \vdash }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          A}</annotation> </semantics> :MATH]
          {\displaystyle A} is true if and only if it is necessary that if
          all of the elements of
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">Γ</mi> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \Gamma
          }</annotation> </semantics> :MATH]
          {\displaystyle \Gamma } are true, then
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          A}</annotation> </semantics> :MATH]
          {\displaystyle A} is true.

   Alternatively (and, most would say, equivalently):

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">Γ</mi> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \Gamma
          }</annotation> </semantics> :MATH]
          {\displaystyle \Gamma }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mo>⊢</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          \vdash }</annotation> </semantics> :MATH]
          {\displaystyle \vdash }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          A}</annotation> </semantics> :MATH]
          {\displaystyle A} is true if and only if it is impossible for
          all of the elements of
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">Γ</mi> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \Gamma
          }</annotation> </semantics> :MATH]
          {\displaystyle \Gamma } to be true and
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          A}</annotation> </semantics> :MATH]
          {\displaystyle A} false.

   Such accounts are called "modal" because they appeal to the modal
   notions of logical necessity and logical possibility. 'It is necessary
   that' is often expressed as a universal quantifier over possible
   worlds, so that the accounts above translate as:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">Γ</mi> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \Gamma
          }</annotation> </semantics> :MATH]
          {\displaystyle \Gamma }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mo>⊢</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          \vdash }</annotation> </semantics> :MATH]
          {\displaystyle \vdash }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          A}</annotation> </semantics> :MATH]
          {\displaystyle A} is true if and only if there is no possible
          world at which all of the elements of
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">Γ</mi> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \Gamma
          }</annotation> </semantics> :MATH]
          {\displaystyle \Gamma } are true and
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          A}</annotation> </semantics> :MATH]
          {\displaystyle A} is false (untrue).

   Consider the modal account in terms of the argument given as an example
   above:

          All frogs are green.
          Kermit is a frog.
          Therefore, Kermit is green.

   The conclusion is a logical consequence of the premises because we can
   not imagine a possible world where (a) all frogs are green; (b) Kermit
   is a frog; and (c) Kermit is not green.

Modal-formal accounts

   [edit]

   Modal-formal accounts of logical consequence combine the modal and
   formal accounts above, yielding variations on the following basic idea:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">Γ</mi> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \Gamma
          }</annotation> </semantics> :MATH]
          {\displaystyle \Gamma }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mo>⊢</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          \vdash }</annotation> </semantics> :MATH]
          {\displaystyle \vdash }
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          A}</annotation> </semantics> :MATH]
          {\displaystyle A} if and only if it is impossible for an
          argument with the same logical form as
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi
          mathvariant="normal">Γ</mi> </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle \Gamma
          }</annotation> </semantics> :MATH]
          {\displaystyle \Gamma } /
          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          A}</annotation> </semantics> :MATH]
          {\displaystyle A} to have true premises and a false conclusion.

Warrant-based accounts

   [edit]

   The accounts considered above are all "truth-preservational", in that
   they all assume that the characteristic feature of a good inference is
   that it never allows one to move from true premises to an untrue
   conclusion. As an alternative, some have proposed
   "warrant-preservational" accounts, according to which the
   characteristic feature of a good inference is that it never allows one
   to move from justifiably assertible premises to a conclusion that is
   not justifiably assertible. This is (roughly) the account favored by
   intuitionists.

Non-monotonic logical consequence

   [edit]

   See also: Non-monotonic logic and Belief revision § Non-monotonic
   inference relation

   The accounts discussed above all yield monotonic consequence relations,
   i.e. ones such that if
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A} is a consequence of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">Γ</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Gamma }</annotation>
   </semantics> :MATH]
   {\displaystyle \Gamma } , then
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A} is a consequence of any superset of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">Γ</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \Gamma }</annotation>
   </semantics> :MATH]
   {\displaystyle \Gamma } . It is also possible to specify non-monotonic
   consequence relations to capture the idea that, e.g., 'Tweety can fly'
   is a logical consequence of

          {Birds can typically fly, Tweety is a bird}

   but not of

          {Birds can typically fly, Tweety is a bird, Tweety is a
          penguin}.

See also

   [edit]

     * Abstract algebraic logic
     * Ampheck
     * Boolean algebra (logic)
     * Boolean domain
     * Boolean function
     * Boolean logic
     * Causality
     * Deductive reasoning
     * Logic gate
     * Logical graph
     * Peirce's law
     * Probabilistic logic
     * Propositional calculus
     * Sole sufficient operator
     * Strawson entailment
     * Strict conditional
     * Tautology (logic)
     * Tautological consequence
     * Therefore sign
     * Turnstile (symbol)
     * Double turnstile
     * Validity

Notes

   [edit]

    1. ^ ^a ^b ^c ^d ^e ^f Beall, JC and Restall, Greg, Logical
       Consequence The Stanford Encyclopedia of Philosophy (Fall 2009
       Edition), Edward N. Zalta (ed.).
    2. ^ Quine, Willard Van Orman, Philosophy of Logic.
    3. ^ ^a ^b McKeon, Matthew, Logical Consequence Internet Encyclopedia
       of Philosophy.
    4. ^ Kosta Dosen (1996). "Logical consequence: a turn in style". In
       Maria Luisa Dalla Chiara; Kees Doets; Daniele Mundici; Johan van
       Benthem (eds.). Logic and Scientific Methods: Volume One of the
       Tenth International Congress of Logic, Methodology and Philosophy
       of Science, Florence, August 1995. Springer. p. 292.
       ISBN 978-0-7923-4383-7.
    5. ^ Dummett, Michael (1993) philosophy of language Harvard University
       Press, p.82ff
    6. ^ Lear, Jonathan (1986) and Logical Theory Cambridge University
       Press, 136p.
    7. ^ Creath, Richard, and Friedman, Michael (2007) Cambridge companion
       to Carnap Cambridge University Press, 371p.
    8. ^ FOLDOC: "syntactic consequence" Archived 2013-04-03 at the
       Wayback Machine
    9. ^ ^a ^b S. C. Kleene, Introduction to Metamathematics (1952), Van
       Nostrand Publishing. p.88.
   10. ^ Hunter, Geoffrey (1996) [1971]. Metalogic: An Introduction to the
       Metatheory of Standard First-Order Logic. University of California
       Press (published 1973). p. 101. ISBN 9780520023567. OCLC 36312727.
       (accessible to patrons with print disabilities)
   11. ^ Etchemendy, John, Logical consequence, The Cambridge Dictionary
       of Philosophy

Resources

   [edit]

     *

   Anderson, A.R.; Belnap, N.D. Jr. (1975), Entailment, vol. 1, Princeton,
   NJ: Princeton.

     Augusto, Luis M. (2017), Logical consequences. Theory and
   applications: An introduction. London: College Publications. Series:
   Mathematical logic and foundations.

     Barwise, Jon; Etchemendy, John (2008), Language, Proof and Logic,
   Stanford: CSLI Publications.

     Brown, Frank Markham (2003), Boolean Reasoning: The Logic of Boolean
   Equations 1st edition, Kluwer Academic Publishers, Norwell, MA. 2nd
   edition, Dover Publications, Mineola, NY, 2003.

     Davis, Martin, ed. (1965), The Undecidable, Basic Papers on
   Undecidable Propositions, Unsolvable Problems And Computable Functions,
   New York: Raven Press, ISBN 9780486432281. Papers include those by
   Gödel, Church, Rosser, Kleene, and Post.

     Dummett, Michael (1991), The Logical Basis of Metaphysics, Harvard
   University Press, ISBN 9780674537866.

     Edgington, Dorothy (2001), Conditionals, Blackwell in Lou Goble
   (ed.), The Blackwell Guide to Philosophical Logic.

     Edgington, Dorothy (2006), "Indicative Conditionals", Conditionals,
   Metaphysics Research Lab, Stanford University in Edward N. Zalta (ed.),
   The Stanford Encyclopedia of Philosophy.

     Etchemendy, John (1990), The Concept of Logical Consequence, Harvard
   University Press.

     Goble, Lou, ed. (2001), The Blackwell Guide to Philosophical Logic,
   Blackwell.

     Hanson, William H (1997), "The concept of logical consequence", The
   Philosophical Review, 106 (3): 365–409, doi:10.2307/2998398,
   JSTOR 2998398 365–409.

     Hendricks, Vincent F. (2005), Thought 2 Talk: A Crash Course in
   Reflection and Expression, New York: Automatic Press / VIP,
   ISBN 978-87-991013-7-5

     Planchette, P. A. (2001), Logical Consequence in Goble, Lou, ed., The
   Blackwell Guide to Philosophical Logic. Blackwell.

     Quine, W.V. (1982), Methods of Logic, Cambridge, MA: Harvard
   University Press (1st ed. 1950), (2nd ed. 1959), (3rd ed. 1972), (4th
   edition, 1982).

     Shapiro, Stewart (2002), Necessity, meaning, and rationality: the
   notion of logical consequence in D. Jacquette, ed., A Companion to
   Philosophical Logic. Blackwell.

     Tarski, Alfred (1936), On the concept of logical consequence
   Reprinted in Tarski, A., 1983. Logic, Semantics, Metamathematics, 2nd
   ed. Oxford University Press. Originally published in Polish and German.

     Ryszard Wójcicki (1988). Theory of Logical Calculi: Basic Theory of
   Consequence Operations. Springer. ISBN 978-90-277-2785-5.

     A paper on 'implication' from math.niu.edu, Implication Archived
   2014-10-21 at the Wayback Machine

     A definition of 'implicant' AllWords

External links

   [edit]

   Wikimedia Commons has media related to Logical consequence.

     *

   Beall, Jc; Restall, Greg (2013-11-19). "Logical Consequence". In Zalta,
   Edward N. (ed.). Stanford Encyclopedia of Philosophy (Winter 2016 ed.).

     "Logical consequence". Internet Encyclopedia of Philosophy.

     Logical consequence at the Indiana Philosophy Ontology Project

     Logical consequence at PhilPapers

     "Implication", Encyclopedia of Mathematics, EMS Press, 2001 [1994]

     * v
     * t
     * e

   Logic

     * Outline
     * History

   Major fields

     * Computer science
     * Formal semantics (natural language)
     * Inference
     * Philosophy of logic
     * Proof
     * Semantics of logic
     * Syntax

   Logics
     * Classical
     * Informal
          + Critical thinking
          + Reason
     * Mathematical
     * Non-classical
     * Philosophical

   Theories
     * Argumentation
     * Metalogic
     * Metamathematics
     * Set

   Foundations

     * Abduction
     * Analytic and synthetic propositions
     * Antecedent
     * Consequent
     * Contradiction
          + Paradox
          + Antinomy
     * Deduction
     * Deductive closure
     * Definition
     * Description
     * Entailment
          + Linguistic
     * Form
     * Induction
     * Logical truth
     * Name
     * Necessity and sufficiency
     * Premise
     * Probability
     * Proposition
     * Reference
     * Statement
     * Substitution
     * Truth
     * Validity

   Lists

   topics
     * Mathematical logic
     * Boolean algebra
     * Set theory

   other
     * Logicians
     * Rules of inference
     * Paradoxes
     * Fallacies
     * Logic symbols

     * Philosophy portal
     * Category
     * WikiProject (talk)
     * changes

     * v
     * t
     * e

   Mathematical logic

   General

     * Axiom
          + list
     * Cardinality
     * First-order logic
     * Formal proof
     * Formal semantics
     * Foundations of mathematics
     * Information theory
     * Lemma
     * Logical consequence
     * Model
     * Theorem
     * Theory
     * Type theory

   Theorems (list)
    and paradoxes

     * Gödel's completeness and incompleteness theorems
     * Tarski's undefinability
     * Banach–Tarski paradox
     * Cantor's theorem, paradox and diagonal argument
     * Compactness
     * Halting problem
     * Lindström's
     * Löwenheim–Skolem
     * Russell's paradox

   Logics

   Traditional
     * Classical logic
     * Logical truth
     * Tautology
     * Proposition
     * Inference
     * Logical equivalence
     * Consistency
          + Equiconsistency
     * Argument
     * Soundness
     * Validity
     * Syllogism
     * Square of opposition
     * Venn diagram

   Propositional
     * Boolean algebra
     * Boolean functions
     * Logical connectives
     * Propositional calculus
     * Propositional formula
     * Truth tables
     * Many-valued logic
          + 3
          + finite
          + ∞

   Predicate
     * First-order
          + list
     * Second-order
          + Monadic
     * Higher-order
     * Fixed-point
     * Free
     * Quantifiers
     * Predicate
     * Monadic predicate calculus

   Set theory

     * Set
          + hereditary
     * Class
     * (Ur-)Element
     * Ordinal number
     * Extensionality
     * Forcing
     * Relation
          + equivalence
          + partition
     * Set operations:
          + intersection
          + union
          + complement
          + Cartesian product
          + power set
          + identities

   Types of sets
     * Countable
     * Uncountable
     * Empty
     * Inhabited
     * Singleton
     * Finite
     * Infinite
     * Transitive
     * Ultrafilter
     * Recursive
     * Fuzzy
     * Universal
     * Universe
          + constructible
          + Grothendieck
          + Von Neumann

   Maps and cardinality
     * Function/Map
          + domain
          + codomain
          + image
     * In/Sur/Bi-jection
     * Schröder–Bernstein theorem
     * Isomorphism
     * Gödel numbering
     * Enumeration
     * Large cardinal
          + inaccessible
     * Aleph number
     * Operation
          + binary

   Set theories
     * Zermelo–Fraenkel
          + axiom of choice
          + continuum hypothesis
     * General
     * Kripke–Platek
     * Morse–Kelley
     * Naive
     * New Foundations
     * Tarski–Grothendieck
     * Von Neumann–Bernays–Gödel
     * Ackermann
     * Constructive

   Formal systems (list),
   language and syntax

     * Alphabet
     * Arity
     * Automata
     * Axiom schema
     * Expression
          + ground
     * Extension
          + by definition
          + conservative
     * Relation
     * Formation rule
     * Grammar
     * Formula
          + atomic
          + closed
          + ground
          + open
     * Free/bound variable
     * Language
     * Metalanguage
     * Logical connective
          + ¬
          + ∨
          + ∧
          + →
          + ↔
          + =
     * Predicate
          + functional
          + variable
          + propositional variable
     * Proof
     * Quantifier
          + ∃
          + !
          + ∀
          + rank
     * Sentence
          + atomic
          + spectrum
     * Signature
     * String
     * Substitution
     * Symbol
          + function
          + logical/constant
          + non-logical
          + variable
     * Term
     * Theory
          + list

   Example axiomatic
   systems (list)
     * of arithmetic:
          + Peano
          + second-order
          + elementary function
          + primitive recursive
          + Robinson
          + Skolem
     * of the real numbers
          + Tarski's axiomatization
     * of Boolean algebras
          + canonical
          + minimal axioms
     * of geometry:
          + Euclidean:
               o Elements
               o Hilbert's
               o Tarski's
          + non-Euclidean

     * Principia Mathematica

   Proof theory

     * Formal proof
     * Natural deduction
     * Logical consequence
     * Rule of inference
     * Sequent calculus
     * Theorem
     * Systems
          + axiomatic
          + deductive
          + Hilbert
               o list
     * Complete theory
     * Independence (from ZFC)
     * Proof of impossibility
     * Ordinal analysis
     * Reverse mathematics
     * Self-verifying theories

   Model theory

     * Interpretation
          + function
          + of models
     * Model
          + equivalence
          + finite
          + saturated
          + spectrum
          + submodel
     * Non-standard model
          + of arithmetic
     * Diagram
          + elementary
     * Categorical theory
     * Model complete theory
     * Satisfiability
     * Semantics of logic
     * Strength
     * Theories of truth
          + semantic
          + Tarski's
          + Kripke's
     * T-schema
     * Transfer principle
     * Truth predicate
     * Truth value
     * Type
     * Ultraproduct
     * Validity

   Computability theory

     * Church encoding
     * Church–Turing thesis
     * Computably enumerable
     * Computable function
     * Computable set
     * Decision problem
          + decidable
          + undecidable
          + P
          + NP
          + P versus NP problem
     * Kolmogorov complexity
     * Lambda calculus
     * Primitive recursive function
     * Recursion
     * Recursive set
     * Turing machine
     * Type theory

   Related

     * Abstract logic
     * Algebraic logic
     * Automated theorem proving
     * Category theory
     * Concrete/Abstract category
     * Category of sets
     * History of logic
     * History of mathematical logic
          + timeline
     * Logicism
     * Mathematical object
     * Philosophy of mathematics
     * Supertask

   icon Mathematics portal

     * v
     * t
     * e

   Common logical connectives

     * Tautology/True
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mi
       mathvariant="normal">⊤</mi> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \top }</annotation>
       </semantics> :MATH]
       {\displaystyle \top }

   [80px-Logical_connectives_Hasse_diagram.svg.png]

     * Alternative denial (NAND gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">↑</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \uparrow }</annotation>
       </semantics> :MATH]
       {\displaystyle \uparrow }
     * Converse implication
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">←</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \leftarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \leftarrow }
     * Implication (IMPLY gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">→</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \rightarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \rightarrow }
     * Disjunction (OR gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>∨</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle \lor
       }</annotation> </semantics> :MATH]
       {\displaystyle \lor }

     * Negation (NOT gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mi
       mathvariant="normal">¬</mi> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \neg }</annotation>
       </semantics> :MATH]
       {\displaystyle \neg }
     * Exclusive or (XOR gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>↮</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle \not
       \leftrightarrow }</annotation> </semantics> :MATH]
       {\displaystyle \not \leftrightarrow }
     * Biconditional (XNOR gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">↔</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \leftrightarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \leftrightarrow }
     * Statement (Digital buffer)

     * Joint denial (NOR gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">↓</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \downarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \downarrow }
     * Nonimplication (NIMPLY gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>↛</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle
       \nrightarrow }</annotation> </semantics> :MATH]
       {\displaystyle \nrightarrow }
     * Converse nonimplication
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>↚</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle \nleftarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \nleftarrow }
     * Conjunction (AND gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>∧</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle \land
       }</annotation> </semantics> :MATH]
       {\displaystyle \land }

     * Contradiction/False
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mi
       mathvariant="normal">⊥</mi> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \bot }</annotation>
       </semantics> :MATH]
       {\displaystyle \bot }

   Philosophy portal

     * v
     * t
     * e

   Common logical symbols

   ∧  or  &
   and
   ∨
   or
   ¬  or  ~
   not
   →
   implies
   ⊃
   implies,
   superset
   ↔  or  ≡
   iff
   |
   nand
   ∀
   universal
   quantification
   ∃
   existential
   quantification
   ⊤
   true,
   tautology
   ⊥
   false,
   contradiction
   ⊢
   entails,
   proves
   ⊨
   entails,
   therefore
   ∴
   therefore
   ∵
   because

   Philosophy portal
   icon Mathematics portal

     * v
     * t
     * e

   Formal semantics (natural language)

   Central concepts

     * Compositionality
     * Denotation
     * Entailment
     * Extension
     * Generalized quantifier
     * Intension
     * Logical form
     * Presupposition
     * Proposition
     * Reference
     * Scope
     * Speech act
     * Syntax–semantics interface
     * Truth conditions

   Topics

   Areas
     * Anaphora
     * Ambiguity
     * Binding
     * Conditionals
     * Definiteness
     * Disjunction
     * Evidentiality
     * Focus
     * Indexicality
     * Lexical semantics
     * Modality
     * Negation
     * Propositional attitudes
     * Tense–aspect–mood
     * Quantification
     * Vagueness

   Phenomena
     * Antecedent-contained deletion
     * Cataphora
     * Coercion
     * Conservativity
     * Counterfactuals
     * Crossover effects
     * Cumulativity
     * De dicto and de re
     * De se
     * Deontic modality
     * Discourse relations
     * Donkey anaphora
     * Epistemic modality
     * Exhaustivity
     * Faultless disagreement
     * Free choice inferences
     * Givenness
     * Homogeneity (linguistics)
     * Hurford disjunction
     * Inalienable possession
     * Intersective modification
     * Logophoricity
     * Mirativity
     * Modal subordination
     * Opaque contexts
     * Performatives
     * Polarity items
     * Privative adjectives
     * Quantificational variability effect
     * Responsive predicate
     * Rising declaratives
     * Scalar implicature
     * Sloppy identity
     * Subsective modification
     * Subtrigging
     * Telicity
     * Temperature paradox
     * Veridicality

   Formalism

   Formal systems
     * Alternative semantics
     * Categorial grammar
     * Combinatory categorial grammar
     * Discourse representation theory (DRT)
     * Dynamic semantics
     * Generative grammar
     * Glue semantics
     * Inquisitive semantics
     * Intensional logic
     * Lambda calculus
     * Mereology
     * Montague grammar
     * Segmented discourse representation theory (SDRT)
     * Situation semantics
     * Supervaluationism
     * Type theory
     * TTR

   Concepts
     * Autonomy of syntax
     * Context set
     * Continuation
     * Conversational scoreboard
     * Downward entailing
     * Existential closure
     * Function application
     * Meaning postulate
     * Monads
     * Plural quantification
     * Possible world
     * Quantifier raising
     * Quantization
     * Question under discussion
     * Semantic parsing
     * Squiggle operator
     * Strawson entailment
     * Strict conditional
     * Type shifter
     * Universal grinder

   See also

     * Cognitive semantics
     * Computational semantics
     * Distributional semantics
     * Formal grammar
     * Inferentialism
     * Logic translation
     * Linguistics wars
     * Philosophy of language
     * Pragmatics
     * Semantics of logic

   Authority control databases: National Edit this at Wikidata
     * Germany
     * Poland

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Logical_consequence&oldid=1
   265514428"

   Categories:
     * Logical consequence
     * Philosophical logic
     * Metalogic
     * Propositional calculus
     * Semantic units
     * Deductive reasoning
     * Concepts in logic
     * Syntax (logic)
     * Binary operations

   Hidden categories:
     * Webarchive template wayback links
     * Articles with short description
     * Short description is different from Wikidata
     * Commons category link from Wikidata
     * Articles with Internet Encyclopedia of Philosophy links

     * This page was last edited on 27 December 2024, at 08:29 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 Inclusive and exclusive disjunction
     * 2 Notation
     * 3 Classical disjunction
       (BUTTON) Toggle Classical disjunction subsection
          + 3.1 Semantics
          + 3.2 Defined by other operators
          + 3.3 Properties
     * 4 Applications in computer science
       (BUTTON) Toggle Applications in computer science subsection
          + 4.1 Bitwise operation
          + 4.2 Logical operation
          + 4.3 Constructive disjunction
     * 5 Set theory
     * 6 Natural language
     * 7 See also
     * 8 Notes
     * 9 References
     * 10 External links

   [ ] Toggle the table of contents

Logical disjunction

   [ ] 48 languages
     * العربية
     * Azərbaycanca
     * Български
     * Bosanski
     * Català
     * Čeština
     * Dansk
     * Deutsch
     * Eesti
     * Ελληνικά
     * Emiliàn e rumagnòl
     * Español
     * Esperanto
     * Euskara
     * فارسی
     * Français
     * Galego
     * 한국어
     * Հայերեն
     * Ido
     * Bahasa Indonesia
     * Italiano
     * עברית
     * Қазақша
     * Lietuvių
     * Magyar
     * Македонски
     * Nederlands
     * 日本語
     * Norsk bokmål
     * Piemontèis
     * Polski
     * Português
     * Română
     * Русиньскый
     * Русский
     * Simple English
     * Slovenčina
     * Slovenščina
     * کوردی
     * Српски / srpski
     * Srpskohrvatski / српскохрватски
     * Suomi
     * Svenska
     * ไทย
     * Українська
     * 粵語
     * 中文

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikimedia Commons
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   From Wikipedia, the free encyclopedia
   Logical connective OR
   "Disjunction" redirects here. For the logic gate, see OR gate. For
   separation of chromosomes, see Meiosis. For disjunctions in
   distribution, see Disjunct distribution.
   "Logical OR" redirects here. For the operator ‖, see Vertical bars
   (disambiguation).

   CAPTION: Logical disjunction

                       OR
   Venn diagram of Logical disjunction
   Definition
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>x</mi> <mo>+</mo> <mi>y</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle x+y}</annotation>
   </semantics> :MATH]
   {\displaystyle x+y}
   Truth table
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo stretchy="false">(</mo>
   <mn>1110</mn> <mo stretchy="false">)</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle (1110)}</annotation>
   </semantics> :MATH]
   {\displaystyle (1110)}
        Logic gate      [70px-OR_ANSI.svg.png]
                  Normal forms
   Disjunctive
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>x</mi> <mo>+</mo> <mi>y</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle x+y}</annotation>
   </semantics> :MATH]
   {\displaystyle x+y}
   Conjunctive
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>x</mi> <mo>+</mo> <mi>y</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle x+y}</annotation>
   </semantics> :MATH]
   {\displaystyle x+y}
   Zhegalkin polynomial
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>x</mi> <mo>⊕</mo> <mi>y</mi>
   <mo>⊕</mo> <mi>x</mi> <mi>y</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle x\oplus y\oplus
   xy}</annotation> </semantics> :MATH]
   {\displaystyle x\oplus y\oplus xy}
                 Post's lattices
       0-preserving     yes
       1-preserving     yes
         Monotone       yes
          Affine        no
        Self-dual       no
     * v
     * t
     * e

   Logical connectives
   NOT
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mi>A</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \neg A}</annotation>
   </semantics> :MATH]
   {\displaystyle \neg A} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>−</mo> <mi>A</mi> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   -A}</annotation> </semantics> :MATH]
   {\displaystyle -A} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mover> <mi>A</mi> <mo accent="false">¯</mo> </mover> </mrow> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   {\overline {A}}}</annotation> </semantics> :MATH]
   {\displaystyle {\overline {A}}} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∼</mo> <mi>A</mi> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle \sim
   A}</annotation> </semantics> :MATH]
   {\displaystyle \sim A}
   AND
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∧</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\land B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\land B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>⋅</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\cdot B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\cdot B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mi>B</mi> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle
   AB}</annotation> </semantics> :MATH]
   {\displaystyle AB} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mi
   mathvariant="normal">&</mi> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\&B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\&B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mi
   mathvariant="normal">&</mi> <mi mathvariant="normal">&</mi> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\&\&B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\&\&B}
   NAND
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mrow
   class="MJX-TeXAtom-ORD"> <mover> <mo>∧</mo> <mo accent="false">¯</mo>
   </mover> </mrow> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A{\overline {\land
   }}B}</annotation> </semantics> :MATH]
   {\displaystyle A{\overline {\land }}B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo
   stretchy="false">↑</mo> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\uparrow B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\uparrow B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∣</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\mid B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\mid B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mover> <mrow> <mi>A</mi> <mo>⋅</mo> <mi>B</mi> </mrow> <mo
   accent="false">¯</mo> </mover> </mrow> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle {\overline {A\cdot
   B}}}</annotation> </semantics> :MATH]
   {\displaystyle {\overline {A\cdot B}}}
   OR
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∨</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\lor B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\lor B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>+</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A+B}</annotation>
   </semantics> :MATH]
   {\displaystyle A+B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∣</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\mid B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\mid B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∥</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\parallel B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\parallel B}
   NOR
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mrow
   class="MJX-TeXAtom-ORD"> <mover> <mo>∨</mo> <mo accent="false">¯</mo>
   </mover> </mrow> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A{\overline {\lor
   }}B}</annotation> </semantics> :MATH]
   {\displaystyle A{\overline {\lor }}B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo
   stretchy="false">↓</mo> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\downarrow B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\downarrow B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mrow class="MJX-TeXAtom-ORD">
   <mover> <mrow> <mi>A</mi> <mo>+</mo> <mi>B</mi> </mrow> <mo
   accent="false">¯</mo> </mover> </mrow> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle {\overline
   {A+B}}}</annotation> </semantics> :MATH]
   {\displaystyle {\overline {A+B}}}
   XNOR
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mtext> </mtext> <mrow
   class="MJX-TeXAtom-ORD"> <mtext>XNOR</mtext> </mrow> <mtext> </mtext>
   <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\ {\text{XNOR}}\
   B}</annotation> </semantics> :MATH]
   {\displaystyle A\ {\text{XNOR}}\ B}
   └ equivalent
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>≡</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\equiv B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\equiv B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo
   stretchy="false">⇔</mo> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\Leftrightarrow
   B}</annotation> </semantics> :MATH]
   {\displaystyle A\Leftrightarrow B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo
   stretchy="false">⇋</mo> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\leftrightharpoons
   B}</annotation> </semantics> :MATH]
   {\displaystyle A\leftrightharpoons B}
   XOR
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mrow
   class="MJX-TeXAtom-ORD"> <munder> <mo>∨</mo> <mo>_</mo> </munder>
   </mrow> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A{\underline {\lor
   }}B}</annotation> </semantics> :MATH]
   {\displaystyle A{\underline {\lor }}B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>⊕</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\oplus B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\oplus B}
   └nonequivalent
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>≢</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\not \equiv
   B}</annotation> </semantics> :MATH]
   {\displaystyle A\not \equiv B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>⇎</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\not \Leftrightarrow
   B}</annotation> </semantics> :MATH]
   {\displaystyle A\not \Leftrightarrow B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>↮</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\nleftrightarrow
   B}</annotation> </semantics> :MATH]
   {\displaystyle A\nleftrightarrow B}
   implies
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo
   stretchy="false">⇒</mo> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\Rightarrow
   B}</annotation> </semantics> :MATH]
   {\displaystyle A\Rightarrow B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>⊃</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\supset B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\supset B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo
   stretchy="false">→</mo> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\rightarrow
   B}</annotation> </semantics> :MATH]
   {\displaystyle A\rightarrow B}
   converse
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo
   stretchy="false">⇐</mo> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\Leftarrow B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\Leftarrow B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>⊂</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\subset B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\subset B} ,
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo
   stretchy="false">←</mo> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\leftarrow B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\leftarrow B}
   Related concepts
     * Propositional calculus
     * Predicate logic
     * Boolean algebra
     * Truth table
     * Truth function
     * Boolean function
     * Functional completeness
     * Scope (logic)

   Applications
     * Digital logic
     * Programming languages
     * Mathematical logic
     * Philosophy of logic

   Category
     * v
     * t
     * e

   [220px-Venn_0111_1111.svg.png] Venn diagram of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mstyle displaystyle="false"
   scriptlevel="1"> <mi>A</mi> <mo>∨</mo> <mi>B</mi> <mo>∨</mo> <mi>C</mi>
   </mstyle> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \scriptstyle A\lor B\lor
   C}</annotation> </semantics> :MATH]
   {\displaystyle \scriptstyle A\lor B\lor C}

   In logic, disjunction, also known as logical disjunction or logical or
   or logical addition or inclusive disjunction, is a logical connective
   typically notated as
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∨</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \lor
   }</annotation> </semantics> :MATH]
   {\displaystyle \lor } and read aloud as "or". For instance, the English
   language sentence "it is sunny or it is warm" can be represented in
   logic using the disjunctive formula
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>S</mi> <mo>∨</mo> <mi>W</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle S\lor W}</annotation>
   </semantics> :MATH]
   {\displaystyle S\lor W} , assuming that
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>S</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle S}</annotation>
   </semantics> :MATH]
   {\displaystyle S} abbreviates "it is sunny" and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>W</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle W}</annotation>
   </semantics> :MATH]
   {\displaystyle W} abbreviates "it is warm".

   In classical logic, disjunction is given a truth functional semantics
   according to which a formula
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>ϕ</mi> <mo>∨</mo> <mi>ψ</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \phi \lor \psi
   }</annotation> </semantics> :MATH]
   {\displaystyle \phi \lor \psi } is true unless both
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>ϕ</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \phi
   }</annotation> </semantics> :MATH]
   {\displaystyle \phi } and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>ψ</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \psi
   }</annotation> </semantics> :MATH]
   {\displaystyle \psi } are false. Because this semantics allows a
   disjunctive formula to be true when both of its disjuncts are true, it
   is an inclusive interpretation of disjunction, in contrast with
   exclusive disjunction. Classical proof theoretical treatments are often
   given in terms of rules such as disjunction introduction and
   disjunction elimination. Disjunction has also been given numerous
   non-classical treatments, motivated by problems including Aristotle's
   sea battle argument, Heisenberg's uncertainty principle, as well as the
   numerous mismatches between classical disjunction and its nearest
   equivalents in natural languages.^[1]^[2]

   An operand of a disjunction is a disjunct.^[3]

Inclusive and exclusive disjunction

   [edit]

   Because the logical or means a disjunction formula is true when either
   one or both of its parts are true, it is referred to as an inclusive
   disjunction. This is in contrast with an exclusive disjunction, which
   is true when one or the other of the arguments are true, but not both
   (referred to as exclusive or, or XOR).

   When it is necessary to clarify whether inclusive or exclusive or is
   intended, English speakers sometimes uses the phrase and/or. In terms
   of logic, this phrase is identical to or, but makes the inclusion of
   both being true explicit.

Notation

   [edit]

   In logic and related fields, disjunction is customarily notated with an
   infix operator
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∨</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \lor
   }</annotation> </semantics> :MATH]
   {\displaystyle \lor } (Unicode U+2228
   ∨ LOGICAL OR).^[1] Alternative notations include
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>+</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle +}</annotation>
   </semantics> :MATH]
   {\displaystyle +} , used mainly in electronics, as well as
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo fence="false"
   stretchy="false">|</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \vert }</annotation>
   </semantics> :MATH]
   {\displaystyle \vert } and
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo fence="false"
   stretchy="false">|</mo> <mspace width="negativethinmathspace" /> <mo
   fence="false" stretchy="false">|</mo> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \vert \!\vert
   }</annotation> </semantics> :MATH]
   {\displaystyle \vert \!\vert } in many programming languages. The
   English word or is sometimes used as well, often in capital letters. In
   Jan Łukasiewicz's prefix notation for logic, the operator is
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A} , short for Polish alternatywa (English:
   alternative).^[4]

   In mathematics, the disjunction of an arbitrary number of elements
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <msub> <mi>a</mi> <mrow
   class="MJX-TeXAtom-ORD"> <mn>1</mn> </mrow> </msub> <mo>,</mo>
   <mo>…</mo> <mo>,</mo> <msub> <mi>a</mi> <mrow class="MJX-TeXAtom-ORD">
   <mi>n</mi> </mrow> </msub> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle a_{1},\ldots
   ,a_{n}}</annotation> </semantics> :MATH]
   {\displaystyle a_{1},\ldots ,a_{n}} can be denoted as an iterated
   binary operation using a larger ⋁ (Unicode U+22C1
   ⋁ N-ARY LOGICAL OR):^[5]

   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <munderover> <mo>⋁</mo> <mrow
   class="MJX-TeXAtom-ORD"> <mi>i</mi> <mo>=</mo> <mn>1</mn> </mrow> <mrow
   class="MJX-TeXAtom-ORD"> <mi>n</mi> </mrow> </munderover> <msub>
   <mi>a</mi> <mrow class="MJX-TeXAtom-ORD"> <mi>i</mi> </mrow> </msub>
   <mo>=</mo> <msub> <mi>a</mi> <mrow class="MJX-TeXAtom-ORD"> <mn>1</mn>
   </mrow> </msub> <mo>∨</mo> <msub> <mi>a</mi> <mrow
   class="MJX-TeXAtom-ORD"> <mn>2</mn> </mrow> </msub> <mo>∨</mo>
   <mo>…</mo> <msub> <mi>a</mi> <mrow class="MJX-TeXAtom-ORD"> <mi>n</mi>
   <mo>−</mo> <mn>1</mn> </mrow> </msub> <mo>∨</mo> <msub> <mi>a</mi>
   <mrow class="MJX-TeXAtom-ORD"> <mi>n</mi> </mrow> </msub> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle \bigvee
   _{i=1}^{n}a_{i}=a_{1}\lor a_{2}\lor \ldots a_{n-1}\lor
   a_{n}}</annotation> </semantics> :MATH]
   {\displaystyle \bigvee _{i=1}^{n}a_{i}=a_{1}\lor a_{2}\lor \ldots
   a_{n-1}\lor a_{n}}

Classical disjunction

   [edit]

Semantics

   [edit]

   In the semantics of logic, classical disjunction is a truth functional
   operation which returns the truth value true unless both of its
   arguments are false. Its semantic entry is standardly given as
   follows:^[a]

                [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
                displaystyle="true" scriptlevel="0"> <mo>⊨</mo> <mi>ϕ</mi>
                <mo>∨</mo> <mi>ψ</mi> </mstyle> </mrow> <annotation
                encoding="application/x-tex">{\displaystyle \models \phi
                \lor \psi }</annotation> </semantics> :MATH]
                {\displaystyle \models \phi \lor \psi }     if
                [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
                displaystyle="true" scriptlevel="0"> <mo>⊨</mo> <mi>ϕ</mi>
                </mstyle> </mrow> <annotation
                encoding="application/x-tex">{\displaystyle \models \phi
                }</annotation> </semantics> :MATH]
                {\displaystyle \models \phi }     or
                [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
                displaystyle="true" scriptlevel="0"> <mo>⊨</mo> <mi>ψ</mi>
                </mstyle> </mrow> <annotation
                encoding="application/x-tex">{\displaystyle \models \psi
                }</annotation> </semantics> :MATH]
                {\displaystyle \models \psi }     or     both

   This semantics corresponds to the following truth table:^[1]

   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>B</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle B}</annotation>
   </semantics> :MATH]
   {\displaystyle B}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∨</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\lor B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\lor B}
                    F                                                        F F
                    F                                                        T T
                    T                                                        F T
                    T                                                        T T

Defined by other operators

   [edit]

   In classical logic systems where logical disjunction is not a
   primitive, it can be defined in terms of the primitive and (
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∧</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \land
   }</annotation> </semantics> :MATH]
   {\displaystyle \land } ) and not (
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \lnot }</annotation>
   </semantics> :MATH]
   {\displaystyle \lnot } ) as:

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∨</mo>
          <mi>B</mi> <mo>=</mo> <mi mathvariant="normal">¬</mi> <mo
          stretchy="false">(</mo> <mo stretchy="false">(</mo> <mi
          mathvariant="normal">¬</mi> <mi>A</mi> <mo
          stretchy="false">)</mo> <mo>∧</mo> <mo stretchy="false">(</mo>
          <mi mathvariant="normal">¬</mi> <mi>B</mi> <mo
          stretchy="false">)</mo> <mo stretchy="false">)</mo> </mstyle>
          </mrow> <annotation encoding="application/x-tex">{\displaystyle
          A\lor B=\neg ((\neg A)\land (\neg B))}</annotation> </semantics>
          :MATH]
          {\displaystyle A\lor B=\neg ((\neg A)\land (\neg B))} .

   Alternatively, it may be defined in terms of implies (
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo stretchy="false">→</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \to }</annotation>
   </semantics> :MATH]
   {\displaystyle \to } ) and not as:^[6]

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∨</mo>
          <mi>B</mi> <mo>=</mo> <mo stretchy="false">(</mo> <mi
          mathvariant="normal">¬</mi> <mi>A</mi> <mo
          stretchy="false">)</mo> <mo stretchy="false">→</mo> <mi>B</mi>
          </mstyle> </mrow> <annotation
          encoding="application/x-tex">{\displaystyle A\lor B=(\lnot A)\to
          B}</annotation> </semantics> :MATH]
          {\displaystyle A\lor B=(\lnot A)\to B} .

   The latter can be checked by the following truth table:

   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>B</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle B}</annotation>
   </semantics> :MATH]
   {\displaystyle B}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mi>A</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \neg A}</annotation>
   </semantics> :MATH]
   {\displaystyle \neg A}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi mathvariant="normal">¬</mi>
   <mi>A</mi> <mo stretchy="false">→</mo> <mi>B</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \neg
   A\rightarrow B}</annotation> </semantics> :MATH]
   {\displaystyle \neg A\rightarrow B}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∨</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\lor B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\lor B}
   F F T F F
   F T T T T
   T F F T T
   T T F T T

   It may also be defined solely in terms of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo stretchy="false">→</mo>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle \to }</annotation>
   </semantics> :MATH]
   {\displaystyle \to } :

          [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
          displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∨</mo>
          <mi>B</mi> <mo>=</mo> <mo stretchy="false">(</mo> <mi>A</mi> <mo
          stretchy="false">→</mo> <mi>B</mi> <mo stretchy="false">)</mo>
          <mo stretchy="false">→</mo> <mi>B</mi> </mstyle> </mrow>
          <annotation encoding="application/x-tex">{\displaystyle A\lor
          B=(A\to B)\to B}</annotation> </semantics> :MATH]
          {\displaystyle A\lor B=(A\to B)\to B} .

   It can be checked by the following truth table:

   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle A}</annotation>
   </semantics> :MATH]
   {\displaystyle A}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>B</mi> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle B}</annotation>
   </semantics> :MATH]
   {\displaystyle B}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo
   stretchy="false">→</mo> <mi>B</mi> </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\rightarrow
   B}</annotation> </semantics> :MATH]
   {\displaystyle A\rightarrow B}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo stretchy="false">(</mo>
   <mi>A</mi> <mo stretchy="false">→</mo> <mi>B</mi> <mo
   stretchy="false">)</mo> <mo stretchy="false">→</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle (A\rightarrow B)\rightarrow
   B}</annotation> </semantics> :MATH]
   {\displaystyle (A\rightarrow B)\rightarrow B}
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>A</mi> <mo>∨</mo> <mi>B</mi>
   </mstyle> </mrow> <annotation
   encoding="application/x-tex">{\displaystyle A\lor B}</annotation>
   </semantics> :MATH]
   {\displaystyle A\lor B}
   F F T F F
   F T T T T
   T F F T T
   T T T T T

Properties

   [edit]

   The following properties apply to disjunction:
     * Associativity:
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mi>a</mi> <mo>∨</mo> <mo
       stretchy="false">(</mo> <mi>b</mi> <mo>∨</mo> <mi>c</mi> <mo
       stretchy="false">)</mo> <mo>≡</mo> <mo stretchy="false">(</mo>
       <mi>a</mi> <mo>∨</mo> <mi>b</mi> <mo stretchy="false">)</mo>
       <mo>∨</mo> <mi>c</mi> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle a\lor (b\lor c)\equiv
       (a\lor b)\lor c}</annotation> </semantics> :MATH]
       {\displaystyle a\lor (b\lor c)\equiv (a\lor b)\lor c} ^[7]
     * Commutativity:
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mi>a</mi> <mo>∨</mo>
       <mi>b</mi> <mo>≡</mo> <mi>b</mi> <mo>∨</mo> <mi>a</mi> </mstyle>
       </mrow> <annotation encoding="application/x-tex">{\displaystyle
       a\lor b\equiv b\lor a}</annotation> </semantics> :MATH]
       {\displaystyle a\lor b\equiv b\lor a}
     * Distributivity:
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">(</mo>
       <mi>a</mi> <mo>∧</mo> <mo stretchy="false">(</mo> <mi>b</mi>
       <mo>∨</mo> <mi>c</mi> <mo stretchy="false">)</mo> <mo
       stretchy="false">)</mo> <mo>≡</mo> <mo stretchy="false">(</mo> <mo
       stretchy="false">(</mo> <mi>a</mi> <mo>∧</mo> <mi>b</mi> <mo
       stretchy="false">)</mo> <mo>∨</mo> <mo stretchy="false">(</mo>
       <mi>a</mi> <mo>∧</mo> <mi>c</mi> <mo stretchy="false">)</mo> <mo
       stretchy="false">)</mo> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle (a\land (b\lor
       c))\equiv ((a\land b)\lor (a\land c))}</annotation> </semantics>
       :MATH]
       {\displaystyle (a\land (b\lor c))\equiv ((a\land b)\lor (a\land
       c))}

                      [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD">
                      <mstyle displaystyle="true" scriptlevel="0"> <mo
                      stretchy="false">(</mo> <mi>a</mi> <mo>∨</mo> <mo
                      stretchy="false">(</mo> <mi>b</mi> <mo>∧</mo>
                      <mi>c</mi> <mo stretchy="false">)</mo> <mo
                      stretchy="false">)</mo> <mo>≡</mo> <mo
                      stretchy="false">(</mo> <mo stretchy="false">(</mo>
                      <mi>a</mi> <mo>∨</mo> <mi>b</mi> <mo
                      stretchy="false">)</mo> <mo>∧</mo> <mo
                      stretchy="false">(</mo> <mi>a</mi> <mo>∨</mo>
                      <mi>c</mi> <mo stretchy="false">)</mo> <mo
                      stretchy="false">)</mo> </mstyle> </mrow>
                      <annotation
                      encoding="application/x-tex">{\displaystyle (a\lor
                      (b\land c))\equiv ((a\lor b)\land (a\lor
                      c))}</annotation> </semantics> :MATH]
                      {\displaystyle (a\lor (b\land c))\equiv ((a\lor
                      b)\land (a\lor c))}
                      [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD">
                      <mstyle displaystyle="true" scriptlevel="0"> <mo
                      stretchy="false">(</mo> <mi>a</mi> <mo>∨</mo> <mo
                      stretchy="false">(</mo> <mi>b</mi> <mo>∨</mo>
                      <mi>c</mi> <mo stretchy="false">)</mo> <mo
                      stretchy="false">)</mo> <mo>≡</mo> <mo
                      stretchy="false">(</mo> <mo stretchy="false">(</mo>
                      <mi>a</mi> <mo>∨</mo> <mi>b</mi> <mo
                      stretchy="false">)</mo> <mo>∨</mo> <mo
                      stretchy="false">(</mo> <mi>a</mi> <mo>∨</mo>
                      <mi>c</mi> <mo stretchy="false">)</mo> <mo
                      stretchy="false">)</mo> </mstyle> </mrow>
                      <annotation
                      encoding="application/x-tex">{\displaystyle (a\lor
                      (b\lor c))\equiv ((a\lor b)\lor (a\lor
                      c))}</annotation> </semantics> :MATH]
                      {\displaystyle (a\lor (b\lor c))\equiv ((a\lor
                      b)\lor (a\lor c))}
                      [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD">
                      <mstyle displaystyle="true" scriptlevel="0"> <mo
                      stretchy="false">(</mo> <mi>a</mi> <mo>∨</mo> <mo
                      stretchy="false">(</mo> <mi>b</mi> <mo>≡</mo>
                      <mi>c</mi> <mo stretchy="false">)</mo> <mo
                      stretchy="false">)</mo> <mo>≡</mo> <mo
                      stretchy="false">(</mo> <mo stretchy="false">(</mo>
                      <mi>a</mi> <mo>∨</mo> <mi>b</mi> <mo
                      stretchy="false">)</mo> <mo>≡</mo> <mo
                      stretchy="false">(</mo> <mi>a</mi> <mo>∨</mo>
                      <mi>c</mi> <mo stretchy="false">)</mo> <mo
                      stretchy="false">)</mo> </mstyle> </mrow>
                      <annotation
                      encoding="application/x-tex">{\displaystyle (a\lor
                      (b\equiv c))\equiv ((a\lor b)\equiv (a\lor
                      c))}</annotation> </semantics> :MATH]
                      {\displaystyle (a\lor (b\equiv c))\equiv ((a\lor
                      b)\equiv (a\lor c))}

     * Idempotency:
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mi>a</mi> <mo>∨</mo>
       <mi>a</mi> <mo>≡</mo> <mi>a</mi> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle a\lor a\equiv
       a}</annotation> </semantics> :MATH]
       {\displaystyle a\lor a\equiv a}
     * Monotonicity:
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">(</mo>
       <mi>a</mi> <mo stretchy="false">→</mo> <mi>b</mi> <mo
       stretchy="false">)</mo> <mo stretchy="false">→</mo> <mo
       stretchy="false">(</mo> <mo stretchy="false">(</mo> <mi>c</mi>
       <mo>∨</mo> <mi>a</mi> <mo stretchy="false">)</mo> <mo
       stretchy="false">→</mo> <mo stretchy="false">(</mo> <mi>c</mi>
       <mo>∨</mo> <mi>b</mi> <mo stretchy="false">)</mo> <mo
       stretchy="false">)</mo> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle (a\rightarrow
       b)\rightarrow ((c\lor a)\rightarrow (c\lor b))}</annotation>
       </semantics> :MATH]
       {\displaystyle (a\rightarrow b)\rightarrow ((c\lor a)\rightarrow
       (c\lor b))}

                      [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD">
                      <mstyle displaystyle="true" scriptlevel="0"> <mo
                      stretchy="false">(</mo> <mi>a</mi> <mo
                      stretchy="false">→</mo> <mi>b</mi> <mo
                      stretchy="false">)</mo> <mo stretchy="false">→</mo>
                      <mo stretchy="false">(</mo> <mo
                      stretchy="false">(</mo> <mi>a</mi> <mo>∨</mo>
                      <mi>c</mi> <mo stretchy="false">)</mo> <mo
                      stretchy="false">→</mo> <mo stretchy="false">(</mo>
                      <mi>b</mi> <mo>∨</mo> <mi>c</mi> <mo
                      stretchy="false">)</mo> <mo stretchy="false">)</mo>
                      </mstyle> </mrow> <annotation
                      encoding="application/x-tex">{\displaystyle
                      (a\rightarrow b)\rightarrow ((a\lor c)\rightarrow
                      (b\lor c))}</annotation> </semantics> :MATH]
                      {\displaystyle (a\rightarrow b)\rightarrow ((a\lor
                      c)\rightarrow (b\lor c))}

     * Truth-preserving: The interpretation under which all variables are
       assigned a truth value of 'true', produces a truth value of 'true'
       as a result of disjunction.
     * Falsehood-preserving: The interpretation under which all variables
       are assigned a truth value of 'false', produces a truth value of
       'false' as a result of disjunction.

Applications in computer science

   [edit]

   [icon]
   This section needs expansion. You can help by adding to it. (February
   2021)

   [150px-Or-gate-en.svg.png] OR logic gate

   Operators corresponding to logical disjunction exist in most
   programming languages.

Bitwise operation

   [edit]

   Disjunction is often used for bitwise operations. Examples:
     * 0 or 0 = 0
     * 0 or 1 = 1
     * 1 or 0 = 1
     * 1 or 1 = 1
     * 1010 or 1100 = 1110

   The or operator can be used to set bits in a bit field to 1, by or-ing
   the field with a constant field with the relevant bits set to 1. For
   example, x = x | 0b00000001 will force the final bit to 1, while
   leaving other bits unchanged.^[citation needed]

Logical operation

   [edit]

   Many languages distinguish between bitwise and logical disjunction by
   providing two distinct operators; in languages following C, bitwise
   disjunction is performed with the single pipe operator (|), and logical
   disjunction with the double pipe (||) operator.

   Logical disjunction is usually short-circuited; that is, if the first
   (left) operand evaluates to true, then the second (right) operand is
   not evaluated. The logical disjunction operator thus usually
   constitutes a sequence point.

   In a parallel (concurrent) language, it is possible to short-circuit
   both sides: they are evaluated in parallel, and if one terminates with
   value true, the other is interrupted. This operator is thus called the
   parallel or.

   Although the type of a logical disjunction expression is Boolean in
   most languages (and thus can only have the value true or false), in
   some languages (such as Python and JavaScript), the logical disjunction
   operator returns one of its operands: the first operand if it evaluates
   to a true value, and the second operand otherwise.^[8]^[9] This allows
   it to fulfill the role of the Elvis operator.

Constructive disjunction

   [edit]

   The Curry–Howard correspondence relates a constructivist form of
   disjunction to tagged union types.^[citation needed]^[10]

Set theory

   [edit]

   [icon]
   This section needs expansion. You can help by adding to it. (February
   2021)

   The membership of an element of a union set in set theory is defined in
   terms of a logical disjunction:
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mi>x</mi> <mo>∈</mo> <mi>A</mi>
   <mo>∪</mo> <mi>B</mi> <mo stretchy="false">⇔</mo> <mo
   stretchy="false">(</mo> <mi>x</mi> <mo>∈</mo> <mi>A</mi> <mo
   stretchy="false">)</mo> <mo>∨</mo> <mo stretchy="false">(</mo>
   <mi>x</mi> <mo>∈</mo> <mi>B</mi> <mo stretchy="false">)</mo> </mstyle>
   </mrow> <annotation encoding="application/x-tex">{\displaystyle x\in
   A\cup B\Leftrightarrow (x\in A)\vee (x\in B)}</annotation> </semantics>
   :MATH]
   {\displaystyle x\in A\cup B\Leftrightarrow (x\in A)\vee (x\in B)} .
   Because of this, logical disjunction satisfies many of the same
   identities as set-theoretic union, such as associativity,
   commutativity, distributivity, and de Morgan's laws, identifying
   logical conjunction with set intersection, logical negation with set
   complement.^[11]

Natural language

   [edit]

   Disjunction in natural languages does not precisely match the
   interpretation of
   [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
   displaystyle="true" scriptlevel="0"> <mo>∨</mo> </mstyle> </mrow>
   <annotation encoding="application/x-tex">{\displaystyle \lor
   }</annotation> </semantics> :MATH]
   {\displaystyle \lor } in classical logic. Notably, classical
   disjunction is inclusive while natural language disjunction is often
   understood exclusively, as the following English example typically
   would be.^[1]

          + Mary is eating an apple or a pear.

   This inference has sometimes been understood as an entailment, for
   instance by Alfred Tarski, who suggested that natural language
   disjunction is ambiguous between a classical and a nonclassical
   interpretation. More recent work in pragmatics has shown that this
   inference can be derived as a conversational implicature on the basis
   of a semantic denotation which behaves classically. However,
   disjunctive constructions including Hungarian vagy... vagy and French
   soit... soit have been argued to be inherently exclusive, rendering
   ungrammaticality in contexts where an inclusive reading would otherwise
   be forced.^[1]

   Similar deviations from classical logic have been noted in cases such
   as free choice disjunction and simplification of disjunctive
   antecedents, where certain modal operators trigger a conjunction-like
   interpretation of disjunction. As with exclusivity, these inferences
   have been analyzed both as implicatures and as entailments arising from
   a nonclassical interpretation of disjunction.^[1]

          + You can have an apple or a pear.

                [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
                displaystyle="true" scriptlevel="0"> <mo
                stretchy="false">⇝</mo> </mstyle> </mrow> <annotation
                encoding="application/x-tex">{\displaystyle
                \rightsquigarrow }</annotation> </semantics> :MATH]
                {\displaystyle \rightsquigarrow } You can have an apple
                and you can have a pear (but you can't have both)

   In many languages, disjunctive expressions play a role in question
   formation.

          + Is Mary a philosopher or a linguist?

   For instance, while the above English example can be interpreted as a
   polar question asking whether it's true that Mary is either a
   philosopher or a linguist, it can also be interpreted as an alternative
   question asking which of the two professions is hers. The role of
   disjunction in these cases has been analyzed using nonclassical logics
   such as alternative semantics and inquisitive semantics, which have
   also been adopted to explain the free choice and simplification
   inferences.^[1]

   In English, as in many other languages, disjunction is expressed by a
   coordinating conjunction. Other languages express disjunctive meanings
   in a variety of ways, though it is unknown whether disjunction itself
   is a linguistic universal. In many languages such as Dyirbal and
   Maricopa, disjunction is marked using a verb suffix. For instance, in
   the Maricopa example below, disjunction is marked by the suffix
   šaa.^[1]

   Johnš

   John-NOM

   Billš

   Bill-NOM

   vʔaawuumšaa

   3-come-PL-FUT-INFER

   Johnš Billš vʔaawuumšaa

   John-NOM Bill-NOM 3-come-PL-FUT-INFER

   'John or Bill will come.'

See also

   [edit]

     * Affirming a disjunct
     * Boolean algebra (logic)
     * Boolean algebra topics
     * Boolean domain
     * Boolean function
     * Boolean-valued function
     * Conjunction/disjunction duality
     * Disjunctive syllogism
     * Fréchet inequalities
     * Free choice inference
     * Hurford disjunction
     * Logical graph
     * Simplification of disjunctive antecedents

Notes

   [edit]

    1. ^ For the sake of generality across classical systems, this entry
       suppresses the parameters of evaluation. The double turnstile
       symbol
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>⊨</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle \models
       }</annotation> </semantics> :MATH]
       {\displaystyle \models } here is intended to mean "semantically
       entails".

     * George Boole, closely following analogy with ordinary mathematics,
       premised, as a necessary condition to the definition of x + y, that
       x and y were mutually exclusive. Jevons, and practically all
       mathematical logicians after him, advocated, on various grounds,
       the definition of logical addition in a form that does not
       necessitate mutual exclusiveness.

References

   [edit]

    1. ^ ^a ^b ^c ^d ^e ^f ^g ^h Aloni, Maria (2016), "Disjunction", in
       Zalta, Edward N. (ed.), The Stanford Encyclopedia of Philosophy
       (Winter 2016 ed.), Metaphysics Research Lab, Stanford University,
       retrieved 2020-09-03
    2. ^ "Disjunction | logic". Encyclopedia Britannica. Retrieved
       2020-09-03.
    3. ^ Beall, Jeffrey C. (2010). Logic: the basics (1. publ ed.).
       London: Routledge. p. 57. ISBN 978-0-203-85155-5.
    4. ^ Józef Maria Bocheński (1959), A Précis of Mathematical Logic,
       translated by Otto Bird from the French and German editions,
       Dordrecht, North Holland: D. Reidel, passim.
    5. ^ Weisstein, Eric W. "OR". MathWorld--A Wolfram Web Resource.
       Retrieved 24 September 2024.
    6. ^ Walicki, Michał (2016). Introduction to Mathematical Logic. WORLD
       SCIENTIFIC. p. 150. doi:10.1142/9783. ISBN 978-9814343879.
    7. ^ Howson, Colin (1997). Logic with trees: an introduction to
       symbolic logic. London; New York: Routledge. p. 38.
       ISBN 978-0-415-13342-5.
    8. ^ "Python 3.12.1 Documentation - The Python Language Reference -
       6.11 Boolean operations". Retrieved 25 Dec 2023.
    9. ^ "JavaScript References - Expressions & Operators - Logical AND
       (&&)". 25 September 2023. Retrieved 25 Dec 2023.
   10. ^ Marcus Vinícius Midena Ramos; de Queiroz, Ruy J. G. B. (2015).
       "Context-Free Language Theory Formalization". Universidade Federal
       de Pernambuco: 6. arXiv:1505.00061.
   11. ^ Ebbinghaus, Heinz-Dieter (2021). Einführung in die Mengenlehre
       (in German) (5 ed.). Springer. p. 32. ISBN 978-3-662-63865-1.

External links

   [edit]

     *

   "Disjunction", Encyclopedia of Mathematics, EMS Press, 2001 [1994]

     Aloni, Maria. "Disjunction". In Zalta, Edward N. (ed.). Stanford
   Encyclopedia of Philosophy.

     Eric W. Weisstein. "Disjunction." From MathWorld—A Wolfram Web
   Resource

     * v
     * t
     * e

   Common logical connectives

     * Tautology/True
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mi
       mathvariant="normal">⊤</mi> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \top }</annotation>
       </semantics> :MATH]
       {\displaystyle \top }

   [80px-Logical_connectives_Hasse_diagram.svg.png]

     * Alternative denial (NAND gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">↑</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \uparrow }</annotation>
       </semantics> :MATH]
       {\displaystyle \uparrow }
     * Converse implication
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">←</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \leftarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \leftarrow }
     * Implication (IMPLY gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">→</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \rightarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \rightarrow }
     * Disjunction (OR gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>∨</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle \lor
       }</annotation> </semantics> :MATH]
       {\displaystyle \lor }

     * Negation (NOT gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mi
       mathvariant="normal">¬</mi> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \neg }</annotation>
       </semantics> :MATH]
       {\displaystyle \neg }
     * Exclusive or (XOR gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>↮</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle \not
       \leftrightarrow }</annotation> </semantics> :MATH]
       {\displaystyle \not \leftrightarrow }
     * Biconditional (XNOR gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">↔</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \leftrightarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \leftrightarrow }
     * Statement (Digital buffer)

     * Joint denial (NOR gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo stretchy="false">↓</mo>
       </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \downarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \downarrow }
     * Nonimplication (NIMPLY gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>↛</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle
       \nrightarrow }</annotation> </semantics> :MATH]
       {\displaystyle \nrightarrow }
     * Converse nonimplication
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>↚</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle \nleftarrow
       }</annotation> </semantics> :MATH]
       {\displaystyle \nleftarrow }
     * Conjunction (AND gate)
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mo>∧</mo> </mstyle> </mrow>
       <annotation encoding="application/x-tex">{\displaystyle \land
       }</annotation> </semantics> :MATH]
       {\displaystyle \land }

     * Contradiction/False
       [MATH: <semantics> <mrow class="MJX-TeXAtom-ORD"> <mstyle
       displaystyle="true" scriptlevel="0"> <mi
       mathvariant="normal">⊥</mi> </mstyle> </mrow> <annotation
       encoding="application/x-tex">{\displaystyle \bot }</annotation>
       </semantics> :MATH]
       {\displaystyle \bot }

   Philosophy portal

     * v
     * t
     * e

   Mathematical logic

   General

     * Axiom
          + list
     * Cardinality
     * First-order logic
     * Formal proof
     * Formal semantics
     * Foundations of mathematics
     * Information theory
     * Lemma
     * Logical consequence
     * Model
     * Theorem
     * Theory
     * Type theory

   Theorems (list)
    and paradoxes

     * Gödel's completeness and incompleteness theorems
     * Tarski's undefinability
     * Banach–Tarski paradox
     * Cantor's theorem, paradox and diagonal argument
     * Compactness
     * Halting problem
     * Lindström's
     * Löwenheim–Skolem
     * Russell's paradox

   Logics

   Traditional
     * Classical logic
     * Logical truth
     * Tautology
     * Proposition
     * Inference
     * Logical equivalence
     * Consistency
          + Equiconsistency
     * Argument
     * Soundness
     * Validity
     * Syllogism
     * Square of opposition
     * Venn diagram

   Propositional
     * Boolean algebra
     * Boolean functions
     * Logical connectives
     * Propositional calculus
     * Propositional formula
     * Truth tables
     * Many-valued logic
          + 3
          + finite
          + ∞

   Predicate
     * First-order
          + list
     * Second-order
          + Monadic
     * Higher-order
     * Fixed-point
     * Free
     * Quantifiers
     * Predicate
     * Monadic predicate calculus

   Set theory

     * Set
          + hereditary
     * Class
     * (Ur-)Element
     * Ordinal number
     * Extensionality
     * Forcing
     * Relation
          + equivalence
          + partition
     * Set operations:
          + intersection
          + union
          + complement
          + Cartesian product
          + power set
          + identities

   Types of sets
     * Countable
     * Uncountable
     * Empty
     * Inhabited
     * Singleton
     * Finite
     * Infinite
     * Transitive
     * Ultrafilter
     * Recursive
     * Fuzzy
     * Universal
     * Universe
          + constructible
          + Grothendieck
          + Von Neumann

   Maps and cardinality
     * Function/Map
          + domain
          + codomain
          + image
     * In/Sur/Bi-jection
     * Schröder–Bernstein theorem
     * Isomorphism
     * Gödel numbering
     * Enumeration
     * Large cardinal
          + inaccessible
     * Aleph number
     * Operation
          + binary

   Set theories
     * Zermelo–Fraenkel
          + axiom of choice
          + continuum hypothesis
     * General
     * Kripke–Platek
     * Morse–Kelley
     * Naive
     * New Foundations
     * Tarski–Grothendieck
     * Von Neumann–Bernays–Gödel
     * Ackermann
     * Constructive

   Formal systems (list),
   language and syntax

     * Alphabet
     * Arity
     * Automata
     * Axiom schema
     * Expression
          + ground
     * Extension
          + by definition
          + conservative
     * Relation
     * Formation rule
     * Grammar
     * Formula
          + atomic
          + closed
          + ground
          + open
     * Free/bound variable
     * Language
     * Metalanguage
     * Logical connective
          + ¬
          + ∨
          + ∧
          + →
          + ↔
          + =
     * Predicate
          + functional
          + variable
          + propositional variable
     * Proof
     * Quantifier
          + ∃
          + !
          + ∀
          + rank
     * Sentence
          + atomic
          + spectrum
     * Signature
     * String
     * Substitution
     * Symbol
          + function
          + logical/constant
          + non-logical
          + variable
     * Term
     * Theory
          + list

   Example axiomatic
   systems (list)
     * of arithmetic:
          + Peano
          + second-order
          + elementary function
          + primitive recursive
          + Robinson
          + Skolem
     * of the real numbers
          + Tarski's axiomatization
     * of Boolean algebras
          + canonical
          + minimal axioms
     * of geometry:
          + Euclidean:
               o Elements
               o Hilbert's
               o Tarski's
          + non-Euclidean

     * Principia Mathematica

   Proof theory

     * Formal proof
     * Natural deduction
     * Logical consequence
     * Rule of inference
     * Sequent calculus
     * Theorem
     * Systems
          + axiomatic
          + deductive
          + Hilbert
               o list
     * Complete theory
     * Independence (from ZFC)
     * Proof of impossibility
     * Ordinal analysis
     * Reverse mathematics
     * Self-verifying theories

   Model theory

     * Interpretation
          + function
          + of models
     * Model
          + equivalence
          + finite
          + saturated
          + spectrum
          + submodel
     * Non-standard model
          + of arithmetic
     * Diagram
          + elementary
     * Categorical theory
     * Model complete theory
     * Satisfiability
     * Semantics of logic
     * Strength
     * Theories of truth
          + semantic
          + Tarski's
          + Kripke's
     * T-schema
     * Transfer principle
     * Truth predicate
     * Truth value
     * Type
     * Ultraproduct
     * Validity

   Computability theory

     * Church encoding
     * Church–Turing thesis
     * Computably enumerable
     * Computable function
     * Computable set
     * Decision problem
          + decidable
          + undecidable
          + P
          + NP
          + P versus NP problem
     * Kolmogorov complexity
     * Lambda calculus
     * Primitive recursive function
     * Recursion
     * Recursive set
     * Turing machine
     * Type theory

   Related

     * Abstract logic
     * Algebraic logic
     * Automated theorem proving
     * Category theory
     * Concrete/Abstract category
     * Category of sets
     * History of logic
     * History of mathematical logic
          + timeline
     * Logicism
     * Mathematical object
     * Philosophy of mathematics
     * Supertask

   icon Mathematics portal

     * v
     * t
     * e

   Common logical symbols

   ∧  or  &
   and
   ∨
   or
   ¬  or  ~
   not
   →
   implies
   ⊃
   implies,
   superset
   ↔  or  ≡
   iff
   |
   nand
   ∀
   universal
   quantification
   ∃
   existential
   quantification
   ⊤
   true,
   tautology
   ⊥
   false,
   contradiction
   ⊢
   entails,
   proves
   ⊨
   entails,
   therefore
   ∴
   therefore
   ∵
   because

   Philosophy portal
   icon Mathematics portal

     * v
     * t
     * e

   Formal semantics (natural language)

   Central concepts

     * Compositionality
     * Denotation
     * Entailment
     * Extension
     * Generalized quantifier
     * Intension
     * Logical form
     * Presupposition
     * Proposition
     * Reference
     * Scope
     * Speech act
     * Syntax–semantics interface
     * Truth conditions

   Topics

   Areas
     * Anaphora
     * Ambiguity
     * Binding
     * Conditionals
     * Definiteness
     * Disjunction
     * Evidentiality
     * Focus
     * Indexicality
     * Lexical semantics
     * Modality
     * Negation
     * Propositional attitudes
     * Tense–aspect–mood
     * Quantification
     * Vagueness

   Phenomena
     * Antecedent-contained deletion
     * Cataphora
     * Coercion
     * Conservativity
     * Counterfactuals
     * Crossover effects
     * Cumulativity
     * De dicto and de re
     * De se
     * Deontic modality
     * Discourse relations
     * Donkey anaphora
     * Epistemic modality
     * Exhaustivity
     * Faultless disagreement
     * Free choice inferences
     * Givenness
     * Homogeneity (linguistics)
     * Hurford disjunction
     * Inalienable possession
     * Intersective modification
     * Logophoricity
     * Mirativity
     * Modal subordination
     * Opaque contexts
     * Performatives
     * Polarity items
     * Privative adjectives
     * Quantificational variability effect
     * Responsive predicate
     * Rising declaratives
     * Scalar implicature
     * Sloppy identity
     * Subsective modification
     * Subtrigging
     * Telicity
     * Temperature paradox
     * Veridicality

   Formalism

   Formal systems
     * Alternative semantics
     * Categorial grammar
     * Combinatory categorial grammar
     * Discourse representation theory (DRT)
     * Dynamic semantics
     * Generative grammar
     * Glue semantics
     * Inquisitive semantics
     * Intensional logic
     * Lambda calculus
     * Mereology
     * Montague grammar
     * Segmented discourse representation theory (SDRT)
     * Situation semantics
     * Supervaluationism
     * Type theory
     * TTR

   Concepts
     * Autonomy of syntax
     * Context set
     * Continuation
     * Conversational scoreboard
     * Downward entailing
     * Existential closure
     * Function application
     * Meaning postulate
     * Monads
     * Plural quantification
     * Possible world
     * Quantifier raising
     * Quantization
     * Question under discussion
     * Semantic parsing
     * Squiggle operator
     * Strawson entailment
     * Strict conditional
     * Type shifter
     * Universal grinder

   See also

     * Cognitive semantics
     * Computational semantics
     * Distributional semantics
     * Formal grammar
     * Inferentialism
     * Logic translation
     * Linguistics wars
     * Philosophy of language
     * Pragmatics
     * Semantics of logic

   Authority control databases: National Edit this at Wikidata
     * Germany
     * United States
     * Israel

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Logical_disjunction&oldid=1
   263344395"

   Categories:
     * Logical connectives
     * Semantics
     * Formal semantics (natural language)

   Hidden categories:
     * CS1 German-language sources (de)
     * Articles with short description
     * Short description matches Wikidata
     * Articles to be expanded from February 2021
     * All articles to be expanded
     * All articles with unsourced statements
     * Articles with unsourced statements from February 2021
     * Pages with interlinear glosses using more than three unnamed
       parameters
     * Pages using interlinear with unknown parameters

     * This page was last edited on 16 December 2024, at 03:36 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 Overview
     * 2 Enhanced BIOS
       (BUTTON) Toggle Enhanced BIOS subsection
          + 2.1 LBA-assisted translation
          + 2.2 LBA48
     * 3 CHS conversion
       (BUTTON) Toggle CHS conversion subsection
          + 3.1 Operating system dependencies
     * 4 See also
     * 5 Notes
     * 6 References
     * 7 External links

   [ ] Toggle the table of contents

Logical block addressing

   [ ] 16 languages
     * Català
     * Čeština
     * Deutsch
     * Español
     * Français
     * Galego
     * 한국어
     * Italiano
     * Nederlands
     * 日本語
     * Polski
     * Português
     * Русский
     * Svenska
     * Українська
     * 中文

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   From Wikipedia, the free encyclopedia
   Way to specify the location of data on computer storage devices

   Logical block addressing (LBA) is a common scheme used for specifying
   the location of blocks of data stored on computer storage devices,
   generally secondary storage systems such as hard disk drives. LBA is a
   particularly simple linear addressing scheme; blocks are located by an
   integer index, with the first block being LBA 0, the second LBA 1, and
   so on.

   The IDE standard included 22-bit LBA as an option, which was further
   extended to 28-bit with the release of ATA-1 (1994) and to 48-bit with
   the release of ATA-6 (2003), whereas the size of entries in on-disk and
   in-memory data structures holding the address is typically 32 or 64
   bits. Most hard disk drives released after 1996 implement logical block
   addressing.

Overview

   [edit]
   See also: Fixed-block architecture

   In logical block addressing, only one number is used to address data,
   and each linear base address describes a single block.

   The LBA scheme replaces earlier schemes which exposed the physical
   details of the storage device to the software of the operating system.
   Chief among these was the cylinder-head-sector (CHS) scheme, where
   blocks were addressed by means of a tuple which defined the cylinder,
   head, and sector at which they appeared on the hard disk. CHS did not
   map well to devices other than hard disks (such as tapes and networked
   storage), and was generally not used for them. CHS was used in early
   MFM and RLL drives, and both it and its successor, extended
   cylinder-head-sector (ECHS), were used in the first ATA drives.
   However, current disk drives use zone bit recording, where the number
   of sectors per track depends on the track number. Even though the disk
   drive will report some CHS values as sectors per track (SPT) and heads
   per cylinder (HPC), they have little to do with the disk drive's true
   geometry.

   LBA was first introduced in 1981 by SASI, the precursor of SCSI, as an
   abstraction. While the drive controller still addresses data blocks by
   their CHS address, this information is generally not used by the SCSI
   device driver, the OS, filesystem code, or any applications (such as
   databases) that access the "raw" disk. System calls requiring
   block-level I/O pass LBA definitions to the storage device driver; for
   simple cases (where one volume maps to one physical drive), this LBA is
   then passed directly to the drive controller.

   In redundant array of independent disks (RAID) devices and storage area
   networks (SANs) and where logical drives (logical unit numbers, LUNs)
   are composed via LUN virtualization and aggregation, LBA addressing of
   individual disk should be translated by a software layer to provide
   uniform LBA addressing for the entire storage device.

Enhanced BIOS

   [edit]
   See also: INT 13h

   The earlier IDE standard from Western Digital introduced 22-bit LBA; in
   1994, the ATA-1 standard allowed for 28 bit addresses in both LBA and
   CHS modes. The CHS scheme used 16 bits for cylinder, 4 bits for head
   and 8 bits for sector, counting sectors from 1 to 255. This means the
   reported number of heads never exceeds 16 (0–15), the number of sectors
   can be 255 (1–255; though 63 is often the largest used) and the number
   of cylinders can be as large as 65,536 (0–65535), limiting disk size to
   128 GiB (≈137.4 GB), assuming 512 byte sectors. These values can be
   accessed by issuing the ATA command "Identify Device" (ECh) to the
   drive.^[1]^: 87 

   However, the IBM BIOS implementation defined in the INT 13h disk access
   routines used quite a different 24-bit scheme for CHS addressing, with
   10 bits for cylinder, 8 bits for head, and 6 bits for sector, or 1024
   cylinders, 256 heads, and 63 sectors.^[2] This INT 13h implementation
   had pre-dated the ATA standard, as it was introduced when the IBM PC
   had only floppy disk storage, and when hard disk drives were introduced
   on the IBM PC/XT, INT 13h interface could not be practically redesigned
   due to backward compatibility issues. Overlapping ATA CHS mapping with
   BIOS CHS mapping produced the lowest common denominator of 10:4:6 bits,
   or 1024 cylinders, 16 heads, and 63 sectors, which gave the practical
   limit of 1024×16×63 sectors and 528 MB (504 MiB), assuming 512 byte
   sectors.

   In order for the BIOS to overcome this limit and successfully work with
   larger hard drives, a CHS translation scheme had to be
   implemented^[when?] in the BIOS disk I/O routines which would convert
   between 24-bit CHS used by INT 13h and 28-bit CHS numbering used by
   ATA. The translation scheme was called large or bit shift translation.
   This method would remap 16:4:8 bit ATA cylinders and heads to 10:8:6
   bit scheme used by INT 13h, generating much more "virtual" drive heads
   than the physical disk reported. This increased the practical limit to
   1024×256×63 sectors, or 8.4 GB (7.8 GiB).

   To further overcome this limit, INT 13h Extensions were
   introduced^[when?] with the BIOS Enhanced Disk Drive Services, which
   removed practical limits on disk size for operating systems which are
   aware of this new interface, such as the DOS 7.0 component in Windows
   95. This enhanced BIOS subsystem supports LBA addressing with LBA or
   LBA-assisted method, which uses native 28-bit LBA for addressing ATA
   disks and performs CHS conversion as needed.

   The normal or none method reverts to the earlier 10:4:6 bit CHS mode
   which does not support addressing more than 528 MB.

   [220px-Installation_of_the_Western_Digital%27s_EZ_Drive%2C_on_a_3.5-inc
   h_floppy_disk.jpg] Installation of Western Digital's OEM-version of EZ
   Drive, on a 3.5-inch floppy disk.

   Until the release of ATA-2 standard in 1996, there were a handful of
   large hard drives which did not support LBA addressing, so only large
   or normal methods could be used. However, using the large method also
   introduced portability problems, as different BIOSes often used
   different and incompatible translation methods, and hard drives
   partitioned on a computer with a BIOS from a particular vendor often
   could not be read on a computer with a different make of BIOS. The
   solution was to use conversion software such as OnTrack Disk Manager,
   Micro House EZ-Drive/EZ-BIOS, etc., which installed to the disk's OS
   loader and replaced INT 13h routines at boot time with custom code.
   This software could also enable LBA and INT 13h Extensions support for
   older computers with non LBA-compliant BIOSes.

LBA-assisted translation

   [edit]

   When the BIOS is configured to use a disk in LBA-assisted translation
   mode, the BIOS accesses the hardware using LBA mode, but also presents
   a translated CHS geometry via the INT 13h interface. The number of
   cylinders, heads, and sectors in the translated geometry depends on the
   total size of the disk, as shown in the following table.^[3]
           Disk size         Sectors/track Heads      Cylinders
   1 < X ≤ 504 MiB           63            16    X ÷ (63 × 16 × 512)
   504 MiB < X ≤ 1008 MiB    63            32    X ÷ (63 × 32 × 512)
   1008 MiB < X ≤ 2016 MiB   63            64    X ÷ (63 × 64 × 512)
   2016 MiB < X ≤ 4032 MiB   63            128   X ÷ (63 × 128 × 512)
   4032 MiB < X ≤ 8032.5 MiB 63            255   X ÷ (63 × 255 × 512)

LBA48

   [edit]

   The current 48-bit LBA scheme was introduced in 2002 with the ATA-6
   standard,^[4] raising the addressing limit to 2^48 × 512 bytes, which
   is exactly 128 PiB or approximately 144 PB. Current PC-compatible
   computers support INT 13h Extensions, which use 64-bit structures for
   LBA addressing and should encompass any future extension of LBA
   addressing, though modern operating systems implement direct disk
   access and do not use the BIOS subsystems, except at boot load time.
   However, the common DOS style Master Boot Record (MBR) partition table
   only supports disk partitions up to 2 TiB in size. For larger
   partitions this needs to be replaced by another scheme, for instance
   the GUID Partition Table (GPT) which has the same 64-bit limit as the
   current INT 13h Extensions. Windows XP SP2 is known to support LBA48
   (and enabled by default).

CHS conversion

   [edit]

   CAPTION: LBA and CHS equivalence with 16 heads per cylinder

    LBA value   CHS tuple
   0          0, 0, 1
   1          0, 0, 2
   2          0, 0, 3
   62         0, 0, 63
   63         0, 1, 1
   945        0, 15, 1
   1007       0, 15, 63
   1008       1, 0, 1
   1070       1, 0, 63
   1071       1, 1, 1
   1133       1, 1, 63
   1134       1, 2, 1
   2015       1, 15, 63
   2016       2, 0, 1
   16,127     15, 15, 63
   16,128     16, 0, 1
   32,255     31, 15, 63
   32,256     32, 0, 1
   16,450,559 16319, 15, 63
   16,514,063 16382, 15, 63

   In the LBA addressing scheme, sectors are numbered as integer indexes;
   when mapped to CHS (cylinder-head-sector) tuples, LBA numbering starts
   with the first cylinder, first head, and track's first sector. Once the
   track is exhausted, numbering continues to the second head, while
   staying inside the first cylinder. Once all heads inside the first
   cylinder are exhausted, numbering continues from the second cylinder,
   etc. Thus, the lower the LBA value is, the closer the physical sector
   is to the hard drive's first (that is, outermost^[5]) cylinder.

   CHS tuples can be mapped to LBA address with the following
   formula:^[6]^[7]

          LBA = (C × HPC + H) × SPT + (S − 1)

   where
     * C, H and S are the cylinder number, the head number, and the sector
       number
     * LBA is the logical block address
     * HPC is the maximum number of heads per cylinder (reported by disk
       drive, typically 16 for 28-bit LBA)
     * SPT is the maximum number of sectors per track (reported by disk
       drive, typically 63 for 28-bit LBA)

   LBA addresses can be mapped to CHS tuples with the following formula
   ("mod" is the modulo operation, i.e. the remainder, and "÷" is integer
   division, i.e. the quotient of the division where any fractional part
   is discarded):

          C = LBA ÷ (HPC × SPT)
          H = (LBA ÷ SPT) mod HPC
          S = (LBA mod SPT) + 1

   According to the ATA specifications, "If the content of words (61:60)
   is greater than or equal to 16,514,064, then the content of word 1 [the
   number of logical cylinders] shall be equal to 16,383."^[1]^: 20 
   Therefore, for LBA 16450559, an ATA drive may actually respond with the
   CHS tuple (16319, 15, 63), and the number of cylinders in this scheme
   must be much larger than 1024 allowed by INT 13h.^[a]

Operating system dependencies

   [edit]
   This section does not cite any sources. Please help improve this
   section by adding citations to reliable sources. Unsourced material may
   be challenged and removed. (June 2024) (Learn how and when to remove
   this message)

   Operating systems that are sensitive to BIOS-reported drive geometry
   include Solaris, DOS and Windows NT family, where NTLDR (NT, 2000, XP,
   Server 2003) or BOOTMGR (Vista, Server 2008, Windows 7 and Server 2008
   R2) use Master boot record which addresses the disk using CHS; x86-64
   and Itanium versions of Windows can partition the drive with GUID
   Partition Table which uses LBA addressing.

   Some operating systems do not require any translation because they do
   not use geometry reported by BIOS in their boot loaders. Among these
   operating systems are BSD, Linux, macOS, OS/2 and ReactOS.

See also

   [edit]
     * Block (data storage)
     * Cylinder-head-sector (CHS)
     * Disk formatting
     * Disk partitioning
     * Disk storage

Notes

   [edit]
    1. ^ Though CHS addressing definitely uses the mathematical concept of
       tuple, it may also be considered an example of the general scheme
       called mixed radix by viewing its cylinders, heads and sectors as
       having different numerical bases; e.g., cylinders counting from 0
       to 1023, heads from 0 to 254 and sectors from 1 to 63.

References

   [edit]
    1. ^ ^a ^b "Information Technology - AT Attachment with Packet
       Interface - 5 (ATA/ATAPI-5)" (PDF). www.t13.org. 29 February 2000.
       Archived from the original (PDF) on 6 August 2020. Retrieved 15
       December 2020.
    2. ^ "KB224526: Windows NT 4.0 supports maximum of 7.8-GB system
       partition". Support.microsoft.com. 2007-02-23. Retrieved
       2013-07-30.
    3. ^ Steunebrink, Jan. "The BIOS IDE Harddisk Limitations". Archived
       from the original on 6 October 2013. Retrieved 6 October 2013.
    4. ^ "Information Technology - AT Attachment with Packet Interface - 6
       (ATA/ATAPI-6)" (PDF). www.t13.org. 26 February 2002. Archived from
       the original (PDF) on 6 August 2020. Retrieved 15 December 2020.
    5. ^ "Hard Disk Drive Basics". active-undelete.com. Retrieved
       2015-02-10. "Track numbers start at 0, and track 0 is the outermost
       track of the disk. The highest numbered track is next to the
       spindle."
    6. ^ "Large Disk HOWTO, Section 3. Disk Access". tldp.org. 2004-11-08.
       Retrieved 2015-02-10.
    7. ^ "The CHS to LBA Conversion Formulas". pcrepairclass.tripod.com.
       Retrieved 2014-08-26.

External links

   [edit]
     * LBAs explained Archived 2021-02-25 at the Wayback Machine
     * LBA and CHS format, LBA mapping
     * CHS to LBA Translation Tutorial
     * Microsoft article on 7.8 GB limit on NT 4.0
     * Hard Drive Size Limitations and Barriers Archived 2021-02-25 at the
       Wayback Machine
     * Upgrading and Repairing PC's, by Scott Mueller. Pages 524–531.
     * AT Attachment 8 - ATA/ATAPI Command Set (ATA8-ACS)

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Logical_block_addressing&ol
   did=1247543314"
   Categories:
     * Computer storage devices
     * SCSI
     * AT Attachment
     * BIOS

   Hidden categories:
     * Articles with short description
     * Short description is different from Wikidata
     * All articles with vague or ambiguous time
     * Vague or ambiguous time from November 2023
     * Articles needing additional references from June 2024
     * All articles needing additional references
     * Webarchive template wayback links

     * This page was last edited on 24 September 2024, at 19:31 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 Basic idea
     * 2 Advantages
     * 3 Disadvantages
       (BUTTON) Toggle Disadvantages subsection
          + 3.1 Trusted computing base
          + 3.2 Efficiency and complexity of proof procedures
     * 4 Influences
     * 5 Notes
     * 6 References

   [ ] Toggle the table of contents

Logic for Computable Functions

   [ ] 3 languages
     * Español
     * Русский
     * Türkçe

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   From Wikipedia, the free encyclopedia
   1970s automated theorem prover
   See also: Logic of Computable Functions

   Logic for Computable Functions (LCF) is an interactive automated
   theorem prover developed at Stanford and Edinburgh by Robin Milner and
   collaborators in early 1970s, based on the theoretical foundation of
   logic of computable functions previously proposed by Dana Scott. Work
   on the LCF system introduced the general-purpose programming language
   ML to allow users to write theorem-proving tactics, supporting
   algebraic data types, parametric polymorphism, abstract data types, and
   exceptions.

Basic idea

   [edit]

   Theorems in the system are terms of a special "theorem" abstract data
   type. The general mechanism of abstract data types of ML ensures that
   theorems are derived using only the inference rules given by the
   operations of the theorem abstract type. Users can write arbitrarily
   complex ML programs to compute theorems; the validity of theorems does
   not depend on the complexity of such programs, but follows from the
   soundness of the abstract data type implementation and the correctness
   of the ML compiler.

Advantages

   [edit]

   The LCF approach provides similar trustworthiness to systems that
   generate explicit proof certificates but without the need to store
   proof objects in memory. The Theorem data type can be easily
   implemented to optionally store proof objects, depending on the
   system's run-time configuration, so it generalizes the basic
   proof-generation approach. The design decision to use a general-purpose
   programming language for developing theorems means that, depending on
   the complexity of programs written, it is possible to use the same
   language to write step-by-step proofs, decision procedures, or theorem
   provers.

Disadvantages

   [edit]

Trusted computing base

   [edit]

   The implementation of the underlying ML compiler adds to the trusted
   computing base. Work on CakeML^[1] resulted in a formally verified ML
   compiler, alleviating some of these concerns.

Efficiency and complexity of proof procedures

   [edit]

   Theorem proving often benefits from decision procedures and theorem
   proving algorithms, whose correctness has been extensively analyzed. A
   straightforward way of implementing these procedures in an LCF approach
   requires such procedures to always derive outcomes from the axioms,
   lemmas, and inference rules of the system, as opposed to directly
   computing the outcome. A potentially more efficient approach is to use
   reflection to prove that a function operating on formulas always gives
   correct result.^[2]

Influences

   [edit]

   Among subsequent implementations is Cambridge LCF. Later systems
   simplified the logic to use total instead of partial functions, leading
   to HOL, HOL Light, and the Isabelle proof assistant that supports
   various logics. As of 2019, the Isabelle proof assistant still contains
   an implementation of an LCF logic, Isabelle/LCF.

Notes

   [edit]
    1. ^ "CakeML". Retrieved 2 November 2019.
    2. ^ Boyer, Robert S; Moore, J Strother. Metafunctions: Proving Them
       Correct and Using Them Efficiently as New Proof Procedures (PDF)
       (Report). Technical Report CSL-108, SRI Projects 8527/4079.
       pp. 1–111. Archived (PDF) from the original on November 2, 2019.
       Retrieved 2 November 2019.

References

   [edit]
     *

   Gordon, Michael J.; Milner, Arthur J.; Wadsworth, Christopher P.
   (1979). Edinburgh LCF: A Mechanised Logic of Computation. Lecture Notes
   in Computer Science. Vol. 78. Berlin Heidelberg: Springer.
   doi:10.1007/3-540-09724-4. ISBN 978-3-540-09724-2. S2CID 21159098.

     Gordon, Michael J. C. (2000). "From LCF to HOL: a short history".
   Proof, language, and interaction. Cambridge, Massachusetts: MIT Press.
   pp. 169–185. ISBN 0-262-16188-5. Retrieved 2007-10-11.

     Loeckx, Jacques; Sieber, Kurt (1987). The Foundations of Program
   Verification (2nd ed.). Vieweg+Teubner Verlag.
   doi:10.1007/978-3-322-96753-4. ISBN 978-3-322-96754-1.

     Milner, Robin (May 1972). Logic for Computable Functions: description
   of a machine implementation (PDF). Stanford University.

     Milner, Robin (1979). "Lcf: A way of doing proofs with a machine". In
   Bečvář, Jiří (ed.). Mathematical Foundations of Computer Science 1979.
   Lecture Notes in Computer Science. Vol. 74. Berlin Heidelberg:
   Springer. pp. 146–159. doi:10.1007/3-540-09526-8_11.
   ISBN 978-3-540-09526-2.

     * v
     * t
     * e

   ML programming

   Software

   Implementations,
   dialects
   Caml
     * OCaml°
          + Eff
          + F*°
          + F#°
          + JoCaml°
          + Reason°

   Standard ML
     * Alice°
     * Concurrent ML
     * Extended ML
     * MLton°
     * Standard ML of New Jersey° (SML/NJ)

   Dependent ML
     * ATS°

     * Futhark°
     * Lazy ML
     * MacroML
     * Ur°

   Programming tools

     Alt-Ergo°

     Astrée

     Camlp4°

     FFTW°

     Frama-C°

     Haxe°

     Marionnet°

     MTASC°

     Poplog°

     Semgrep°

     SLAM project
   Theorem provers,
   proof assistants
     * Coq°
     * HOL°
          + HOL Light°
     * Isabelle°
     * LEGO
     * Logic for Computable Functions
     * Matita°
     * Twelf°

     * GeneWeb°

   [110px-OCaml_Logo.svg.png]

   Community

   Designers

     Lennart Augustsson (Lazy ML)

     Damien Doligez (OCaml)

     Gérard Huet (Caml)

     Xavier Leroy (Caml, OCaml)

     Robin Milner (ML)

     Don Sannella (Extended ML)

     Don Syme (F#)

     * Thierry Coquand
     * Steven G. Johnson
     * Christine Paulin-Mohring
     * Frank Pfenning
     * Simon Thompson

     Italics = discontinued

     ° = Open-source software
   Book Category:Family:ML Category:Family:OCaml Category:Software:OCaml

   Stub icon

   This mathematical logic-related article is a stub. You can help
   Wikipedia by expanding it.

     * v
     * t
     * e

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Logic_for_Computable_Functi
   ons&oldid=1236574973"

   Categories:
     * Logic in computer science
     * Proof assistants
     * Mathematical logic stubs

   Hidden categories:
     * Articles with short description
     * Short description is different from Wikidata
     * All stub articles

     * This page was last edited on 25 July 2024, at 12:41 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   #FAQ in RDF FAQ RSS1.0 feed

   W3C SW Logo

   On this page: What is the Semantic Web? | How does the Semantic Web
   relate to… | How do I participate in the Semantic Web? | Questions on
   RDF, Ontologies, SPARQL, Rules…
   Further links: RSS 1.0 feed to this FAQ | Activity News | Activity Home
   page
   Expand all questions | Collapse all questions

                  W3C Semantic Web Frequently Asked Questions

     The Semantic Web provides a common framework that allows data to be
     shared and reused across application, enterprise, and community
     boundaries. It is a collaborative effort led by W3C with
     participation from a large number of researchers and industrial
     partners.

   Click on the question to see the answer; clicking on the question again
   will collapse it. Alternatively, the "tab" character can be used to
   jump from question to question and the "enter"/"return" to
   expand/collapse a it. Finally, all questions can be expanded (or
   collapsed) with one click.

   There is also a wiki page where new or current questions, and the
   answers thereof, can be discussed.

What is the Semantic Web?

How would you define the main goals of the Semantic Web?

   The Semantic Web is a Web of data. There is a lot of data we all use
   every day, and it's not part of the Web. For example, I can see my bank
   statements on the web, and my photographs, and I can see my
   appointments in a calendar. But can I see my photos in a calendar to
   see what I was doing when I took them? Can I see bank statement lines
   in a calendar? Why not? Because we don't have a web of data. Because
   data is controlled by applications, and each application keeps it to
   itself.

   The vision of the Semantic Web is to extend principles of the Web from
   documents to data. Data should be accessed using the general Web
   architecture using, e.g., URI-s; data should be related to one another
   just as documents (or portions of documents) are already. This also
   means creation of a common framework that allows data to be shared and
   reused across application, enterprise, and community boundaries, to be
   processed automatically by tools as well as manually, including
   revealing possible new relationships among pieces of data.

   Semantic Web technologies can be used in a variety of application
   areas; for example: in data integration, whereby data in various
   locations and various formats can be integrated in one, seamless
   application; in resource discovery and classification to provide
   better, domain specific search engine capabilities; in cataloging for
   describing the content and content relationships available at a
   particular Web site, page, or digital library; by intelligent software
   agents to facilitate knowledge sharing and exchange; in content rating;
   in describing collections of pages that represent a single logical
   “document”; for describing intellectual property rights of Web pages
   (see, eg, the Creative Commons), and in many others. The list of
   Semantic Web Case Studies and Use Cases gives some further examples.

   (permalink)

Are there any other definitions or thought of Semantic Web, if any?

   No formal definitions, but of course there are different approaches.
   Indeed, the complexity and variety of applications referring to the
   Semantic Web is increasing every day, which means that various
   application areas, implementers, developers, etc, would emphasize
   different aspects of Semantic Web technologies. This wide range of
   applications include data integration, knowledge representation and
   analysis, cataloguing services, improving search algorithms and
   methods, social networks, etc.

   (permalink)

What are the major building blocks of the Semantic Web?

   In order to achieve the goals described above, the most important is to
   be able to define and describe the relations among data (i.e.,
   resources) on the Web. This is not unlike the usage of hyperlinks on
   the current Web that connect the current page with another one: the
   hyperlinks defines a relationship between the current page and the
   target. One major difference is that, on the Semantic Web, such
   relationships can be established between any two resources, there is no
   notion of “current” page. Another major difference is that the
   relationship (i.e, the link) itself is named, whereas the link used by
   a human on the (traditional) Web is not and their role is deduced by
   the human reader. The definition of those relations allow for a better
   and automatic interchange of data. RDF, which is one of the fundamental
   building blocks of the Semantic Web, gives a formal definition for that
   interchange.

   On that basis, additional building blocks are built around this central
   notion. Some examples are:
     * Tools to query information described through such relationships
       (eg, SPARQL)
     * Tools to have a finer and more detailed classification and
       characterization of those relationships as well as the resources
       being characterized. This ensures interoperability, more complex
       automatic behaviors. For example, a community can agree what name
       to use for a relationship connecting a page to one’s calendar; this
       name can then be used by a large number of users and applications
       without the necessity to redefine such names every time. (E.g., RDF
       Schemas, OWL, SKOS)
     * For more complex cases, tools are available to define logical
       relationships among resources and their relationships (for example,
       if a relationships binds a person to his/her email address, it is
       feasible to declare that the email address is unique, ie, the
       address is not shared by several persons). Tools based on this
       level (e.g., OWL, Rules) can ensure more interoperability, can
       reveal inconsistencies and find new relationships.
     * Tools to extract from, and to bind to traditional data sources to
       ensure their interchange with data from other sources. (E.g.,
       GRDDL, RDFa, POWDER)

   (permalink)

What is the “killer application” for the Semantic Web?

   It is difficult to predict what a “killer application” is for a
   specific technology, and the prediction is often erroneous. That said,
   the integration of currently unbound and independent “silos” of data in
   a coherent application is certainly a good candidate. Specific examples
   are currently explored in areas like Health Care and Life Sciences,
   Public Administration, Engineering, etc.

   (permalink)

Will I “see” the Semantic Web in my everyday browser?

   Not necessarily, at least not directly. The Semantic Web technologies
   may act behind the scenes, resulting in a better user experience,
   rather than directly influencing the “look” on the browser. This is
   already happening: there are Web Sites (e.g., Sun’s white paper
   collection site, or Nokia’s support portal for their S60 series device,
   Oracle’s virtual press room, Harper’s online magazine, or Yahoo!’s
   Finance portal) that use Semantic Web technologies in the background.

   (permalink)

Is the Semantic Web just research, or does it have industrial applications?

   As all innovative technologies, the Semantic Web underwent an evolution
   starting at research labs, being then picked up by the Open Source
   community, then by small and specialized startups and finally by
   business in general. Remember: the Web was originally developed in a
   High Energy Physics center!

   At present, the Semantic Web is increasingly used by small and large
   business. Oracle, IBM, Adobe, Software AG, or Yahoo! are only some of
   the large corporations that have picked up this technology already and
   are selling tools as well as complete business solutions. Large
   application areas, like the Health Care and Life Sciences, look at the
   data integration possibilities of the Semantic Web as one of the
   technologies that might offer significant help in solving their R&D
   problems.

   It is worth consulting the list of Semantic Web Case Studies and Use
   Cases; it gives a good overview of existing applications. Note that the
   list is often updated, when new application examples come in.

   (permalink)

Does one have to understand the theory of formal ontologies and logic to use
the Semantic Web?

   First of all, as pointed out elsewhere in this document, one can
   develop Semantic Web applications without using ontologies. Very useful
   applications can be built without those, relying on the most
   fundamental, and simple concept of the Semantic Web. However, even if
   ontologies, rules, reasoners, etc, are used, the average user should
   not care about the complexities of, say, the details of reasoning. All
   this is done “under the hood”. What the developer needs to operate with
   are usually simple logical patterns of the sort “Given that
   (Flipper isA Dolphin) and (Dolphin isAlso Mammal), one can conclude
   that (Flipper isA Mammal)".

   Compare it to SQL. The official SQL standards, the formal semantics of
   SQL, and indeed its implementations, are extremely complex and
   understood by a few specialists only. Nevertheless, a large number of
   users use SQL in practice, without caring about the underlying
   complexities.

   (permalink)

How is the Semantic Web related to the existing Web?

   The Semantic Web is an extension of the current Web and not its
   replacement. Islands of RDF and possibly related ontologies can be
   developed incrementally. Major application areas (like Health Care and
   Life Sciences) may choose to “locally” adopt Semantic Web technologies,
   and this can then spread over the Web in general. In other words, one
   should not think in terms of “rebuilding” the Web.

   (permalink)

Aren't there major copyright questions if the data in an integration process
are cached?

   There are and there aren't. There is just the way the Web raises this
   issue already; after all, documents browsed by a traditional browser
   are usually cached on the client side. And there aren't, because this
   does not seem to have created major problems on the Web so far, and the
   Semantic Web is not fundamentally different in this respect.

   (permalink)

What is the Semantic Web activity at W3C?

   The Semantic Web Activity at W3C groups together all the Working and
   Interest Groups whose goals are to improve the current Semantic Web
   technologies or to contribute to their wider adoption. The activity
   home page gives an up-to-date list of the current work at W3C.

   (permalink)

How does the Semantic Web relate to…

… Artificial Intelligence?

   Some parts of the Semantic Web technologies are based on results of
   Artificial Intelligence research, like knowledge representation (e.g.,
   for ontologies or rules), model theory (e.g., for the precise semantics
   of RDF and RDF Schemas), or various types of logics (e.g., for rules).
   However, it must be noted that Artificial Intelligence has a number of
   research areas (e.g., image recognition) that are completely orthogonal
   to the Semantic Web.

   It is also true that the development of the Semantic Web brought some
   new perspectives to the Artificial Intelligence community: the “Web
   effect”, i.e., the merge of knowledge coming from different sources,
   usage of URIs, the necessity to reason with incomplete data; etc.

   (permalink)

… Description Logic?

   Description Logic is the mathematical theory (stemming from knowledge
   representation) that is at the basis of some of the technologies
   defined on the Semantic Web, like the so-called “Direct Semantics” of
   OWL (loosely referred to as OWL-DL).

   (permalink)

… XML? When should I use RDF and when should I use XML?

   Both formalisms have their strengths and weaknesses; their area of
   usage is different. The two data models serve different constituencies
   and the choice really depends on the application. There is no better or
   worse; only different.

   One of XML’s strengths is its ability to describe strict hierarchies.
   Applications may rely on and indeed exploit the position of an element
   in a hierarchy: for example, most browsers provide a different
   rendering of HTML’s li element depending on how “deep” the enclosing
   list is. XML makes it easy to control the content via XML Schemas and
   combine XML data that abide to the same Schema or DTD.

   However, combining different XML hierarchies (technically, DOM trees)
   within the same application may become very complex. XML is not an easy
   tool for data integration. On the other hand, RDF consists of a very
   loose set of relations (triples). Due to its usage of URIs it is very
   easy to seamlessly merge triple sets, ie, data described in RDF within
   the same application; it is therefore ideal for the integration of
   possibly heterogenous information on the Web. But this has its price:
   reconstructing hierarchies from RDF may become quite complex. As an
   example, it would be fairly complicated (and unnecessary) to describe,
   eg, vector graphics, using RDF; use SVG instead!

   RDF based vocabularies, and the accompanying semantic formalisms like
   RDFS or OWL, also make it easy to define inference possibilities on RDF
   data. Although this could be done around XML dialects, too, it would
   remain application specific and not portable.

   For existing XML-based vocabularies, one can develop an GRDDL
   transformation to RDF using a language such as XSLT and then use the
   power of RDF to merge your pre-existing XML formats. For new
   vocabularies, this technique allows you to use both XML and RDF-based
   versions of your vocabulary, gaining the advantages of both.

   (permalink)

… XML Schemas? What do ontologies buy me that XML and XML Schema don't?

   This issue is also related to the issue of using XML or RDF, addressed
   in a previous question. First of all, let us quote from the OWL Guide
   recommendation:

     * An ontology differs from an XML Schema in that it is a knowledge
       representation, not a message format. Most industry based Web
       standards consist of a combination of message formats and protocol
       specifications. These formats have been given an operational
       semantics, such as, “Upon receipt of this PurchaseOrder message,
       transfer Amount dollars from AccountFrom to AccountTo and ship
       Product.” But the specification is not designed to support
       reasoning outside the transaction context. For example, we won’t in
       general have a mechanism to conclude that because the Product is a
       type of Chardonnay it must also be a white wine.
     * One advantage of OWL ontologies will be the availability of tools
       that can reason about them. Tools will provide generic support that
       is not specific to the particular subject domain, which would be
       the case if one were to build a system to reason about a specific
       industry-standard XML schema. […] They will benefit from third
       party tools based on the formal properties of the OWL language,
       tools that will deliver an assortment of capabilities that most
       organizations would be hard pressed to duplicate.

   Also, XML data is very sensitive to the XML Schema it refers to. If the
   XML Schema changes, the same XML data may become invalid, i.e., being
   rejected by Schema-aware parsers. Somewhat similar dependence on RDF
   Schemas and Ontologies exist for RDF data, too: if the RDF Schema or
   OWL Ontology changes, the inferences drawn from the RDF data may
   change. However, the core RDF data is still usable, there is no notion
   of the data being “rejected” by, e.g., a parser due to a
   Schema/Ontology change. In general, RDF is more robust against changing
   of Schemas and Ontologies than XML is versus Schemas. Note that a GRDDL
   transformation from XML to RDF may be given by an XML Schema as
   described in the GRDDL specification. This allows any XML document that
   validates according to the XML Schema given at the namespace URI of the
   XML vocabulary to be converted to RDF.

   (permalink)

… HTML meta headers?

   The meta and link elements in HTML can be used to add metadata to an
   HTML page. In Semantic Web terms, this is equivalent to the process of
   defining RDF relationships for that page as a “source”. Note, however,
   that these elements can be used to define relationships for the
   enclosing HTML file only, whereas the Semantic Web allows the
   definition of relationships on any resource on the Web. That also means
   that the meta and link elements can be used by the author of the
   document only, whereas, on the Semantic Web, anybody could publish
   metadata concerning that page. GRDDL allows easy and automatic
   extraction of meta header data, such as that given by Dublin Core, to
   RDF.

   (permalink)

… tagging, folksonomies

   Tagging has emerged as a popular method of categorizing content. Users
   are allowed to attach arbitrary strings to their data items (for
   example, blog entries and photographs). While tagging is easy and
   useful, it often discards a lot of the semantics of the data. A
   folksonomy tag is typically 2/3 of an RDF triple. The subject is known:
   e.g., the URL for the flickr image being tagged, or the URL being
   bookmarked in delicious. The object is known: e.g.,
   http://flickr.com/photos/tags/cats or http://del.icio.us/tag/cats. But
   the predicate to connect them is often missing. Machine-tags lend
   themselves to RDF more since they better capture the relationship
   between the subject and the object. Folksonomy providers are encouraged
   to capture or infer the semantics around their tags and to leverage
   semantic web technologies such as RDF and SKOS to publish machine
   readable versions of their concept schemes.

   Another issue arising with tags is that the number of different tags
   meaning the same things but differing in spelling, lower or upper case,
   usage of space or underscore characters etc., may create major
   obstacles to them being used on a larger scale. There are a number of
   initiatives, start-up companies, projects, etc., that aim at combining
   the two approaches, providing a little bit of extra rigour using
   Semantic Web techniques to create new type of applications (Reuters’
   Open Calais service, Radar Networks’ Twine, the MOAT initiative, Common
   Tag, etc.).

   (permalink)

… microformats

   Microformats are usually relatively small and simple sets of terms
   agreed upon by a community. Data models developed within the framework
   of the Semantic Web have the potential to be more expressive, rigorous,
   and formal (and are usually larger). Both can be used to express
   structured data within web pages. In some cases, microformats are
   appropriate because the extra features provided by Semantic Web
   technologies are not necessary. Other cases requiring more rigor will
   not be able to use microformats.

   Data described in microformats each address a specific problem area.
   One has to develop a program well-adapted to a particular microformat,
   to the way it uses, say, the class and property="dc:date" content
   attributes. It also becomes difficult (though possible) to combine
   different microformats. In contrast, RDF can represent any
   information—including that extracted from microformats present on the
   page. This is where microformats can benefit from RDF—the generality of
   the Semantic Web tools makes it easier to reuse existing tools, eg, a
   query language and combining statements from different origins easily
   belongs to the very essence of the Semantic Web.

   GRDDL is a “bridge” to the microformats approach; it defines a general
   procedure whereby microformats stored in an XHTML file can be
   transformed into RDF on–the–fly. A list of microformat to RDF
   vocabulary can be found on on the ESW Wiki. Another technology is RDFa
   that defines an XHTML1.1 module giving the possibility to use virtually
   any RDF vocabulary as annotations of the XHTML content; a bit like
   microformats with somewhat more rigor and a better way of integrating
   different vocabularies within the same document. There is also an
   ongoing work to adapt RDFa to the upcoming HTML version, HTML5.

   (permalink)

… Web 2.0?

   One aspect of Web 2.0, beyond the exciting new interfaces and the usage
   of a common intelligence, is that it pushes intelligence and active
   agents from the server to the client, more specifically the browser.
   Development of active client-side application also means that these
   applications use all kinds of data; data that are on the Web somewhere,
   or data that is embedded in the page though not necessarily visible on
   the screen. Examples are microformats type annotation of the page,
   calendar data on the Web, tagged images or links stored on a web site,
   etc. This aspect of Web 2.0, ie, that applications are based on
   combining various types of data (“mashing up” the data) that are spread
   all around on the Web coincides with the very essence of the Semantic
   Web. What the Semantic Web provides is a more consistent model and
   tools for the definition and the usage of qualified relationships among
   data on the Web. I.e., both technologies focus on intelligent data
   sharing. A number of typical Web 2.0 demonstrations and applications
   emerge that, in the background, use Semantic Web tools combined with
   AJAX and other, exciting user interface approaches.

   In many cases, using RDF-based techniques makes the mashing up process
   easier, mainly when data collected by one application is reused by
   another one somewhere down the line. The general nature of RDF makes
   this “mashup chaining” straightforward, which is not always the case
   for simpler Web 2.0 applications.

   Trying to present these two approaches as alternatives, or even
   claiming folksonomies to be superior to the Semantic Web approach, has
   been a topic of the blogosphere and various publications for a while,
   but both communities realize these days that these two techniques are
   complementary rather than competitive.

   (permalink)

How do I participate in the Semantic Web?

Does the Semantic Web require me to manually markup all the existing
web-pages, or to convert all the data in relational databases into RDF?

   The Semantic Web is about a web of data. The data itself can reside in
   databases, spreadsheets, Wiki pages, or indeed traditional web pages.

   The challenge is to develop tools that can “export” these data into RDF
   form: RDF plays the role of a common model, as a kind of a “glue” to
   integrate the data. That does not mean that the data must be physically
   converted into RDF form and stored in, say, RDF/XML. Instead, automatic
   procedures, for example SQL to RDF converters for relational databases,
   GRDDL processors for XHTML files with microformats, RDFa, etc, can
   produce RDF data on-the-fly as an answer to, eg, queries. RDF data may
   also be included in the data via other tools (e.g, Adobe’s XMP data
   that gets automatically added to JPEG images by Photoshop). Authoring
   tools also exist to develop, eg, ontologies on a high level instead of
   editing the ontology files directly. Of course, direct editing of RDF
   data is sometimes necessary, but it can be expected to become less and
   less prevalent as smarter editors come to the fore.

   Clearly, lots of development is still to be done in this area, and it
   is a subject of active Research and Development. The goal is to reuse,
   as much as possible, existing data in its existing form, and minimize
   the RDF data that has to be created manually. Note that, in fall 2009,
   W3C has started a Working Group, called RDB2RDF WG, that aims at
   standardizing the description on how relational database data should be
   converted into RDF. First results of that group are expected in early
   2010.

   (permalink)

Does the Semantic Web require me to put all my data into the public domain?
What about my sensitive data?

   The Semantic Web provides an application framework that extends the
   current Web, does not replace it. That also means that the current
   infrastructure of firewalls, various levels of protections, encryption,
   etc, remain in place. If, for whatever reason (privacy, business, etc),
   the data should be kept behind the firewall on the Intranet, rather
   than being in the open, this just means that that particular Semantic
   Web application operates on the Intranet. This is not unlike the
   development of the traditional Web, the usage of Web Services, etc: a
   number of applications were developed to be used behind corporate
   firewalls; some of them migrated later to the full Web, some other
   stayed behind the firewall. The same is valid for Semantic Web
   applications.

   (permalink)

Where do I find tools for Semantic Web development?

   There are several lists on the Web that give a more-or-less
   comprehensive overview of the various available tools. There is a Wiki
   page on the W3C ESW Wiki site that is maintained by the W3C staff as
   well as the community at large. This page includes references to
   programming environments, validators that can be used to validate
   RDF/XML data or OWL ontologies, SPARQL endpoints, specialized editors
   or triple databases. It also includes references to other lists.

   (permalink)

Are the SW tools as robust and as ubiquitous as, say, the xerces XML parser?

   In general most of the tools are of a good quality already. On the open
   source domain Jena, Sesame, or Redland, for example, can easily be
   compared to xerces in their widespread usage and richness of features;
   databases like Mulgara, AllegroGraph, or Virtuoso are also in
   widespread use and have undergone a very thorough development in the
   past few years. There are more and more commercial tools, including
   editors, professional databases, content management systems, ontology
   creation and validation tools, etc. The Wiki page on the W3C ESW Wiki
   site gives a good overview of most of those.

   Obviously, there is room for improvement. SW is a younger technology
   than XML and it still needs time to catch up and have tools of the same
   maturity and efficiency level than the XML World. However, huge
   improvements have already been made in the past few years in all areas,
   and large-scale enterprise deployment is also happening already. In
   general: availability of tools is not a reason any more for not
   developing Semantic Web applications…

   (permalink)

How do I put RDF into my (X)HTML Pages?

   The GRDDL provides a “bridge” to the microformats approach while RDFa
   provides an XHTML1.1 module that gives the possibility to use virtually
   any RDF vocabulary as annotations of the XHTML content, yielding RDF
   data. Both approaches can be used.

   (permalink)

How do I export my data from a Relational Database?

   There are a number of open source tools; see the W3C Wiki page for a
   few examples. These tools typically have their own languages for
   defining the mapping between the database to RDF. W3C has started work
   on defining standards in this area in September 2009, done by the
   RDB2RDF Working Group.

   In general, methods exist to convert RDF queries (e.g., in SPARQL) into
   SQL queries on-the-fly; ie, the RDB looks like an RDF store when
   queried by an RDF tool. The details of the mapping from Relational
   Tables to RDF notions is usually described for a specific database
   using either a small ontology and/or a set of rules; this is the only
   manual information to be generated for the conversion.

   (permalink)

How can I learn more about the Semantic Web?

   Dave Beckett's Resource Description Framework (RDF) Resource Guide
   gives a quite comprehensive list of references to Semantic Web related
   articles. The home page of the Semantic Web Activity lists all the
   recommendations, gives references to some of the presentations,
   articles, etc, that have been given by the W3C staff or the members of
   the working groups on the subject. A separate page lists a number of
   tutorials that might be of interest.

   The (now defunct) Semantic Web Best Practices and Deployment Working
   Group has produced a number of notes that might be useful when
   developing ontologies, setting up servers to serve RDF data, using XML
   Schema datatypes with RDF, etc.

   A number of books have also been published. A list of books is given on
   W3C’s Wiki site, comprising (at this moment) over 40 books in different
   languages, published by major publishers like O’Reilly, MIT Press,
   Cambridge University Press, Springer Verlag, …

   (permalink)

Where can I find papers/publications about the Semantic Web?

   There are a number of conference series that are either dedicated to
   the Semantic Web or which always have a significant Semantic Web track.
   The best known are:
     * The “International Semantic Web Conference” series is a yearly
       event that publishes its proceedings by Springer (the proceedings
       are online since 2006). While these conferences typically circulate
       around the globe, the “European Semantic Web Conference” and the
       “Asian Semantic Web Conference” series are held somewhere in
       Europe, respectively in Asia.
     * The “International World Wide Web Conference” is a major yearly
       conference on World Wide Web Technologies in general, which always
       has a strong Semantic Web track both for the academic and the
       developers’ communities. Look at the page of the organizing
       committee for further details on these conferences and links to
       their proceedings.
     * The yearly Semantic Technologies conference has also become a major
       event. It is less focussed on the research aspects of the Semantic
       Web but concentrates rather on the industrial, business aspects,
       new applications and developments.

   (permalink)

Where do I find ontologies, terminologies, or datasets for my applications?

   There are several portals that collect information on existing
   ontologies. A good example is SchemaWeb. Another one is the
   “PingTheSemanticWeb” service which collects information about new RDF
   documents on the Web based on “pings” sent by applications generating
   data and on RDF autodiscovery links found by people browsing the Web.
   It currently contains information about ~7 million RDF files. There are
   also search engines, like Falcon, Sindice, or Watson and others (see
   the separate section on the tool’s wiki page) that specialize on
   searching Semantic Web documents.

   (permalink)

Can I see Semantic Web data directly in my browser?

   You can have a human-readable display of RDF data by using RDF data
   browsers like the Tabulator, Disco, Sig.ma, VisiNav, or the OpenLink
   RDF Browser, and web browser extensions like the Semantic Radar. While
   end users will not have a need to see Semantic Web data (instead they
   will benefit from better information systems built on top of it) it may
   be helpful to developers to be aware of Semantic Web data directly so
   that they can use this information in their applications.

   (permalink)

Is there a community of developers I can join?

   The W3C Semantic Web Interest Group is one of those and probably the
   best place to join first. It is a public mailing list and is also
   active on the #swig IRC channel Freenode.

   There are also various grass-root communities that concentrate on some
   specific aspects or goal around the Semantic Web. Some examples:
     * DOAP: a project to describe information about open-source software
       projects
     * FOAF: a project to describe information about people and their
       social relations (see also the #foaf IRC channel on Freenode)
     * SIOC: a project to describe information about online community
       sites (blogs, bulletin boards, …) and use this information to
       connect these sites together.
     * Linking Open Data on the Semantic Web: is project whose goal is to
       make various open data sources available on the Web as RDF and to
       set RDF links between data items from different data sources.

   Another source is the PlanetRDF Blog aggregator that aggregates the
   blogs of a number active Semantic Web developers from around the World.

   (permalink)

Why has W3C developed the new cube logo?

   The new logo has been created as a high level image to represent the
   Semantic Web, and the technology buttons have been designed to create
   consistent branding for all of the standards that make up the Semantic
   Web. Going forwards we are planning to create pictograms for the
   standards for t-shirts, mugs, etc. In that context, you'll be seeing
   the familiar blue RDF triple again.

   (permalink)

Questions on RDF, Ontologies, SPARQL, Rules…

What is RDF?

   RDF—the Resource Description Framework—is a standard model for data
   interchange on the Web. RDF has features that facilitate data merging
   even if the underlying schemas differ, and it specifically supports the
   evolution of schemas over time without requiring all the data consumers
   to be changed.

   RDF extends the linking structure of the Web to use URIs to name the
   relationship between things as well as the two ends of the link (this
   is usually referred to as a “triple”). Using this simple model, it
   allows structured and semi-structured data to be mixed, exposed, and
   shared across different applications.

   This linking structure forms a directed, labelled graph, where the
   edges represent the named link between two resources, represented by
   the graph nodes. This graph view is the easiest possible mental model
   for RDF and is often used in easy-to-understand visual explanations.

   The “RDF Primer” is a good material for further reading on RDF.

   (permalink)

What formats can RDF be represented in?

   RDF statements (or triples) can be encoded in a number of different
   formats, whether XML based (e.g., RDF/XML) or not (Turtle, N-triples,
   …). In general it does not really matter which of these formats (or
   serializations) are used to express data—the information is represented
   in RDF triples and the particular format is only the “syntactic sugar”.
   Most RDF tools can parse several of these serialization formats.

   Compare to “numbers” as opposed to “numerals”. Numbers are mathematical
   concepts; numerals are a representation thereof using Roman, Arabic,
   hexadecimal, octal, etc, representations. Some of those representations
   (like Roman) may be very complicated, some of those may be simpler or
   more familiar, but they all represent the same abstract concept.

   (permalink)

Isn’t RDF simply an XML application?

   No. The fundamental model of RDF is independent of XML. RDF is a model
   describing qualified (or named) relationships between two (Web)
   resources, or between a Web resource and a literal. At that fundamental
   level, the only commonality between RDF and the XML World is the usage
   of the XML Schema datatypes to characterize literals in RDF. In fact,
   using GRDDL, a way to automate mappings from XML to RDF easily, many
   XML vocabularies can be considered applications of RDF.

   Note that one of the serialization formats of RDF is indeed based on
   XML (RDF/XML), and this is probably the most widely used format today.
   But others exist, see the separate question on RDF representation.

   (permalink)

Where is the “Web” in the Semantic Web?

   The Semantic Web standards follow the design principles of the Web in
   order to allow the growth of a planet-wide collection of
   semantically-rich data. The key element of this design is the use of
   Web addresses (URIs) to name things. Because the meaning of a term in a
   language without central control becomes established by its consistent
   use to achieve the same effect, and URIs are used around the World to
   access web pages, the Web is used to establish globally-shared meaning
   for URIs in the Semantic Web. (This is what people mean when they say
   RDF URIs are “grounded” in the Web.)

   As with the Web in general, this approach allows the Semantic Web to
   grow and evolve without any central control or authority, but while
   still maintaining as much consistency and authorial control as needed
   for particular applications or particular enterprises. The techniques
   for doing all this are still evolving, but ideally whenever anyone sees
   a Semantic Web URI they can use it in their browser and see
   authoritative documentation about its use. Moreover, whenever some
   software encounters a URI in a Semantic Web context, it can dereference
   it and find an ontology which precisely specifies how the term is
   related to other terms. The software may thus learn and exploit new
   terms which are synonymous with terms it already knows, or related in
   more complex and useful (but logically precise) ways.

   All this results in the ability to find and correctly merge data from
   multiple sources, sometimes even when they are provided with different
   ontologies.

   “In the Semantic Web, it is not the Semantic which is new, it is the
   Web which is new” Chris Welty, IBM

   (permalink)

How can I query RDF data?

   The W3C Data Access Working Group has developed the SPARQL Query
   Language. SPARQL defines queries in terms of graph patterns that are
   matched against the directed graph representing the RDF data. SPARQL
   contains capabilities for querying required and optional graph patterns
   along with their conjunctions and disjunctions. The result of the match
   can also be used to construct new RDF graphs using separate graph
   patterns.

   SPARQL can be used as part of a general programming environment, like
   Jena, but queries can also be sent as messages to a remote SPARQL
   endpoints using the companion technologies SPARQL Protocol and SPARQL
   Query Result in XML. Using such SPARQL endpoints, applications can
   query remote RDF data and even construct new RDF graphs, without any
   local processing or programming burden. For more questions on SPARQL,
   see also the separate FAQ on SPARQL.

   (permalink)

Why not use SQL and/or XQuery to query RDF data? Why develop yet another
query language?

   SPARQL is a query language developed for the RDF data model; queries
   themselves look and act like RDF. I.e., the queries are independent of
   the physical representation of the RDF data (the structure of the
   databases, their representation in an RDF/XML file, etc). If query was
   done via, for example, XQuery, the application would have to know how
   that particular RDF data exactly represented as RDF/XML (and RDF/XML is
   only one of the possible serialization of the RDF data).

   (permalink)

Can I use SPARQL to insert, delete, or update RDF data?

   The current, standardized version of SPARQL deals only with retrieving
   selected data from RDF graphs. There is no equivalent of the SQL
   INSERT, UPDATE, or DELETE statements. Most RDF-based applications
   handle new, changing, and stale data directly via the APIs provided by
   specific RDF storage systems. Alternatively, RDF data can exist
   virtually (i.e. created on-demand in response to a SPARQL query). Also,
   there are systems which create RDF data from other forms of markup,
   such as Wiki markup or the Atom Syndication Format.

   However, there is indeed demand to cover this functionality, too. The
   SPARQL Working Group is currently active in developing a new version of
   SPARQL, and this will include these facilities, too. A first, draft
   version of the SPARQL 1.1 Update document is already available.

   (permalink)

Will there be a SPARQL “Next”? When will feature X be standardized?

   SPARQL users have asked for many extensions to the SPARQL query
   language. Some of these have been accomodated by SPARQL
   implementations. In an attempt to inform SPARQL users and to minimize
   implementation differences of non-standard SPARQL features a new SPARQL
   Working Group has been set up early 2009. This group is busy defining
   the minimal number of extensions that can be done without backward
   incompatibilities and do not require a too large addition to the
   initial version of SPARQL. The first drafts have been published in
   October 2009 and the work is planned to be completed (resulting in an
   updated version of SPARQL, currently called SPARQL 1.1) by the end of
   2010.

   (permalink)

What role do ontologies and/or rules have on the Semantic Web?

   On the Semantic Web both ontologies and rules are used to express extra
   constraints and logical relationships among resources. An example for
   their usage is to help data integration when, for example, different
   terms are used to describe the same thing in different data sets, or
   when a bit of extra knowledge may lead to the discovery of new
   relationships.

   Ontologies and rules refer to two different traditions stemming from
   logic, as developed in the past decades. Whereas ontologies are more
   closely related to classification systems, and particularly to
   description logic, rules rely more on the advances of logic programming
   and rule based systems.

   See the separate questions on Ontologies and on Rules.

   (permalink)

What are ontologies in the Semantic Web context?

   Ontologies define the concepts and relationships used to describe and
   represent an area of knowledge. Ontologies are used to classify the
   terms used in a particular application, characterize possible
   relationships, and define possible constraints on using those
   relationships. In practice, ontologies can be very complex (with
   several thousands of terms) or very simple (describing one or two
   concepts only).

   An example for the role of ontologies or rules on the Semantic Web is
   to help data integration when, for example, ambiguities may exist on
   the terms used in the different data sets, or when a bit of extra
   knowledge may lead to the discovery of new relationships.

   A general example may help. A bookseller may want to integrate data
   coming from different publishers. The data can be imported into a
   common RDF model, eg, by using converters to the publishers’ databases.
   However, one database may use the term “author”, whereas the other may
   use the term “creator”. To make the integration complete, and extra
   “glue” should be added to the RDF data, describing the fact that the
   relationship described as “author” is the same as “creator”. This extra
   piece of information is, in fact, an ontology, albeit an extremely
   simple one.

   Languages like RDF Schemas and various variants of OWL provide
   languages to express ontologies in the Semantic Web context. These are
   stable specifications, published in 2004, with an update of OWL
   (denoted by “OWL 2”) published 2009.

   (permalink)

What are rules on the Semantic Web?

   The term “rules” in the context of the Semantic Web refers to elements
   of logic programming and rule based systems bound to Semantic Web data.
   Rules offer a way to express, for example, constraints on the
   relationships defined by by RDF, or may be used to discover new,
   implicit relationships.

   Various rule systems (production rules, Prolog-like systems, etc) are
   very different from one another, and it is not possible to define one
   rule language to encompass them all. However, it is possible to define
   a “core” that is essentially understood by all rule systems. This core
   is based on restricted kind of rule, called a “Horn” rule, which (like
   most rules) has the form “if conditions then consequence”, but it
   places certain restrictions on the kinds of conditions and consequences
   that can be used.

   A general example may help. While integrating data coming from
   different sources, the data may include references to persons, their
   name, homepage, email addresses, etc. However, the data does not say
   when two persons should be considered as identical, although this is
   clearly important for a full integration. An extra condition can be
   expressed stating that “if two persons have similar names, home pages,
   and email addresses, then they are identical”. Such condition can be
   naturally expressed with Horn rules.

   The Rule Interchange Format (RIF) Working Group is currently working on
   a precise definition of this “core” Rule language, on ways to extend
   this rule language to various variants (production rules, logic
   programming, etc), to exchange expression of rules among systems, and
   to define the precise relationships of these rules with OWL ontologies
   and their usage with RDF triples.

   (permalink)

How do I know when to use OWL and when to Rules? How can I use them both
together?

   First of all, the question arises whether it is possible to use these
   two technologies together. The answer is yes. One of the six
   recommendation track documents of RIF is called “RIF RDF and OWL
   Compatibility”. In layman’s term, what it describes is how the two
   “sides”, i.e., the rule and the classification sides, should work
   together on the same data set. It defines some sort of an interplay
   between two different mechanisms: the, shall we say, logic programming
   part and the knowledge representation part. Implementations doing both
   are a bit like hybrid cars: they have two parallel engines and a well
   defined connections between those two. That said, the document only
   defines what the combination means; whether, for example, engines will
   always succeed in handling the two worlds together in a finite time is
   not necessarily guaranteed in all cases. But we can be positive: in
   many cases (ie, by accepting restrictions here and there) this
   combination does work well, and there are, actually, good
   implementations out there that do just that.

   The substantive differences is that RIF (i.e., logic programming) and
   OWL are designed to allow for optimizations of different sets of
   problems. Very broadly speaking, OWL optimizes for taxonomic reasoning
   problems within an ontology specification (i.e., without the data), and
   logic programs optimize for reasoning problems within the data (i.e.,
   without the ontology). So a reasonable rule of thumb is, if one’s
   ontology is very large one should probably use OWL, and if data set is
   very large, one should probably use RIF. That being said, the
   expressive differences are quite minor, and it very often boils down to
   personal experience and taste: some feel more comfortable using rules
   while others prefer knowledge representation.

   (permalink)

What is “inference” on the Semantic Web?

   Broadly speaking, inference on the Semantic Web can be characterized by
   discovering new relationships. As described elsewhere in this FAQ, the
   data is modeled as a set of (named) relationships between resources.
   “Inference” means that automatic procedures can generate new
   relationships based on the data and based on some additional
   information in the form of an ontology or a set of rules. Whether the
   new relationships are explicitly added to the set of data, or are
   returned at query time, is simply an implementation issue.

   A simple example may help. The data set to be considered may include
   the relationship (Flipper isA Dolphin). An ontology may declare that
   “every Dolphin is also a Mammal”. That means that a Semantic Web
   program understanding the notion of “X is also Y” can add to the set of
   relationships the statement (Flipper isA Mammal), although that was not
   part of the original data. One can also say that the new relationship
   was “discovered”.

   (permalink)

Must I use ontologies for Semantic Web Applications?

   It depends on the application. The answer on the role of ontologies
   and/or rules includes a very simple ontology example. Some applications
   may decide not to use even such small ontologies, and rely on the logic
   of the application program. Some application may choose to use very
   simple ontologies like the one described, and let a general Semantic
   Web environment use that extra information to make the identification
   of the terms. Some applications need an agreement on common
   terminologies, without any rigor imposed by a logic system. Finally,
   some applications may need more complex ontologies with complex
   reasoning procedures. It all depends on the requirements and the goals
   of the applications.

   The current Semantic Web technologies offer a large palette of
   languages to describe simple or complex terminologies: RDF Schemas,
   SKOS, RIF or various dialects/profiles of OWL (OWL DL, OWL 2 QL, OWL 2
   EL, OWL 2 RL, OWL Full). These technologies differ in expressiveness
   but also in complexity. Applications have a choice along a range from
   RDF Schema for representing the simplest ontology level, to OWL Full
   for maximum expressiveness. In addition semantic web users are
   encouraged to leverage existing ontologies where possible: e.g., SKOS
   for representing basic structures like thesauri, taxonomies or other
   controlled vocabularies. Good places to look for existing ontologies
   are detailed elsewhere in this FAQ. They also have a choice of not to
   use any of those; the usage of ontologies is not a requirement for
   Semantic Web applications.

   (permalink)

Does the Semantic Web try to impose meaning from the top?

   No. What the Semantic Web technologies do is to define the “language”
   with well understood rules and internal semantics, ie, RDF Schemas,
   various dialects of OWL, or SKOS. Which of those formalisms are used
   (if any) and what is “expressed” in those language is entirely up to
   the applications. Ontologies may be developed by small communities,
   from “below”, so to say, and shared with other communities.

   (permalink)

Does the Semantic Web require everybody to subscribe to a single, predefined,
giant ontology?

   Obviously, that would not be feasible. If ontologies are used, they can
   come from anywhere and be mixed freely. In fact the “ethos” of the
   Semantic Web is to share and reuse as much as possible, and lot of work
   is done to semi-automatically bridge different vocabularies. Typical
   Semantic Web applications mix ontologies developed by different
   communities on the Web, like the Dublin Core metadata, FOAF
   (friend-of-a-friend) terms, etc.

   The Semantic Web’s attitude to ontologies is no more than a
   rationalization of actual data-sharing practice. Applications can and
   do interact without achieving or attempting to achieve global
   consistency and coverage. A system that presents a retailer’s wares to
   customers will harvest information from suppliers’ databases
   (themselves likely to use heterogeneous formats) and map it onto the
   retailer’s preferred data format for re-presentation. Automatic tax
   return software takes bank data, in the bank’s preferred format, and
   maps them onto the tax form. There is no requirement for global
   ontologies here. There isn’t even a requirement for agreement or global
   translations between the specific ontologies being used except in the
   subset of terms relevant for the particular transaction. Agreement need
   only be local, but adoption of vocabularies from existing ontologies
   facilitates data sharing and integration. Of course, some of the
   vocabularies may become more and more widely used and adopted, but the
   evolution is more bottom-up, rather than top-down.

   (permalink)

People will never get common agreement on terms; won’t this lead to the
failure of the Semantic Web?

   The issue, referred to by this question, is that different people will
   not agree on exactly how to define all concepts. Eg, while most people
   have a fairly standard concept of a “dog” or a “cat”, not everyone can
   distinguish between a “scalar” and a “vector”, for instance. Any
   computer application which tries to standardize its ontology will
   necessarily distort what at least some people are really trying to
   express; as a consequence, there will be ontological mismatches across
   parts of the Web designed by different people. The issue is whether
   this may not ruin the very goals of the Semantic Web.

   However, the Semantic Web does not rely on having one, big,
   all-encompassing ontology. Instead, the Semantic Web is built up from
   small like-minded communities that can find agreement on terms amongst
   themselves. Applications, then, can and do interact without attempting
   to achieve global consensus. There is no requirement for global
   ontologies: instead, an application need only map the terms relevant
   for a particular transaction into a common vocabulary. Of course,
   though agreement need only be local, adoption of existing vocabularies
   facilitates data sharing and integration.

   Note that this issue is, essentially, the same as the one asking
   whether the Semantic Web requires everybody to subscribe to a single,
   predefined, giant ontology; see also the answer to that question,
   including further examples.

   (permalink)

What is involved in developing an ontology using Semantic Web technologies?

   The real difficulty, when developing an ontology, is to understand the
   problem that has to be modeled and find an agreement on a community
   level. RDF Schemas and/or OWL provide a framework to formalize those
   ontologies in a specific language; the time and energy needed to learn
   and use them is only a fraction of the time needed to develop an
   ontology itself, ie, understand the terms and the relationships of
   given area of knowledge and agree with your peers. Ontology development
   tools, like Protégé or SWOOP, hide most of the syntax complexity and
   let the user concentrate on the real representation issues.

   (permalink)

Consequences of inconsistency in formal logic: doesn’t that ruin the Semantic
Web?

   The problem referred to by this question is the fact that, in formal
   logic, if there is an inconsitency somewhere, then it is possible to
   draw all conclusions and their negations. The issue is whether this
   would not create major difficulties on the Semantic Web.

   “Inference” in terms of the Semantic Web can be characterized by
   discovering new relationships (as explained in the answer of another
   question). These inferences are mostly done within a restricted,
   “guarded” subset of first order logic. Usually, reasoning on the
   Semantic Web does not use the full power of first order (or higher
   order) logic, and therefore avoids some of the dangerous issues that
   can come from an inferred inconsistency. In other words, in practice,
   no major difficulties can be expected.

   (permalink)

Will W3C be standardizing any particular ontologies?

   In general, ontologies should be created and maintained by various,
   specialized communities. The preference of W3C is to let these other
   communities develop their own ontologies; this is the case for well
   known ontologies like the Dublin Core, FOAF, DOAP, etc.

   There are cases, however, when ontologies are developed at W3C. This is
   the case when, for example, another W3C technology needs its own,
   specialized ontology (EARL is a good example), when W3C feels that the
   existence of a particular ontology is crucial for the advancement of
   the Semantic Web, or when the community prefers to use, for example,
   the facilities offered by the Incubator Activity of W3C.

   (permalink)

What is SKOS?

   The Simple Knowledge Organization System (SKOS) is an ontology for
   expressing the basic structure and content of concept schemes such as
   thesauri, classification schemes, subject heading lists, taxonomies,
   glossaries, folksonomies, other types of controlled vocabularies. It
   provides a standard, low-cost way of migrating existing concept schemes
   to the Semantic Web, so that they can be used as-is for the development
   of lightweight Semantic Web applications. SKOS is increasingly seen as
   a bridging technology, providing the missing link between the rigorous
   logical formalism of ontology languages such as OWL and the chaotic,
   informal and weakly-structured world of social approaches to
   information management, as exemplified by social tagging applications.

   (permalink)

Is there an uptake in public datasets for the Semantic Web? Are there major
data published for the Semantic Web already?

   Major datasets (or access to existing datasets) are created quite often
   these days. Just some examples:
     * The DBpedia community effort to query Wikipedia like a database
       (see also a more detailed blog entry on this project).
     * IngentaConnect bibliographic metadata (around 200 million triples)
     * RDF/OWL representation of Wordnet
     * eBusiness ontology for products and services: eClassOwl
     * the Gene Ontology, to describe gene and gene products attributes in
       any organisms
     * protein sequence and annotation data: UniProt
     * Geonames Ontology and associated RDF data: geographical features
       (e.g., information on the city of Berlin) encoded in RDF

   Whereas these are randomly chosen and individual examples, the “Linking
   Open Data on the Semantic Web” community project aims not only at
   making various open data sources available on the Web as RDF, but also
   to create links among the various data sets, thereby creating a nucleus
   for a Web of Data. All data sets bound together by this projects
   include billions of RDF triples, with millions of triples among the
   various datasets.

   (permalink)
     __________________________________________________________________


    Maintained by Ivan Herman (<ivan@w3.org>), (W3C) Semantic Web
    Activity Lead
    2009-11-12
    The faq.js script is the work of Lee Feigenbaum.

   $Id: SW-FAQ.html,v 1.97 2009/11/12 10:51:33 ivan Exp $

   Copyright © 1994-2009 W3C ^® (MIT, ERCIM, Keio), All Rights Reserved.
   W3C liability, trademark, document use and software licensing rules
   apply. Your interactions with this site are in accordance with our
   public and Member privacy statements.

   rdf icon for the file in RDF   Valid XHTML + RDFa
   #alternate Edit this page Wikipedia (en) Wikipedia Atom feed

   Jump to content

   [ ] Main menu
   Main menu
   (BUTTON) move to sidebar (BUTTON) hide
   Navigation
     * Main page
     * Contents
     * Current events
     * Random article
     * About Wikipedia
     * Contact us

   Contribute
     * Help
     * Learn to edit
     * Community portal
     * Recent changes
     * Upload file

   Wikipedia The Free Encyclopedia
   Search
   ____________________
   (BUTTON) Search

   [ ] Appearance

     * Donate
     * Create account
     * Log in

   [ ] Personal tools
     * Donate
     * Create account
     * Log in

   Pages for logged out editors learn more
     * Contributions
     * Talk

Contents

   (BUTTON) move to sidebar (BUTTON) hide
     * (Top)
     * 1 Theoretical foundations and analysis
     * 2 Computers to assist logicians
     * 3 Logic applications for computers
     * 4 See also
     * 5 References
     * 6 Further reading
     * 7 External links

   [ ] Toggle the table of contents

Logic in computer science

   [ ] 7 languages
     * العربية
     * Azərbaycanca
     * فارسی
     * Português
     * Українська
     * 粵語
     * 中文

   Edit links

     * Article
     * Talk

   [ ] English

     * Read
     * Edit
     * View history

   [ ] Tools
   Tools
   (BUTTON) move to sidebar (BUTTON) hide
   Actions
     * Read
     * Edit
     * View history

   General
     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page
     * Get shortened URL
     * Download QR code

   Print/export
     * Download as PDF
     * Printable version

   In other projects
     * Wikimedia Commons
     * Wikidata item

   Appearance
   (BUTTON) move to sidebar (BUTTON) hide
   From Wikipedia, the free encyclopedia
   Academic discipline
   For the academic conference LICS, see Symposium on Logic in Computer
   Science.
   [220px-Logic_Gates.svg.png] Diagrammatic representation of computer
   logic gates

   Logic in computer science covers the overlap between the field of logic
   and that of computer science. The topic can essentially be divided into
   three main areas:
     * Theoretical foundations and analysis
     * Use of computer technology to aid logicians
     * Use of concepts from logic for computer applications

Theoretical foundations and analysis

   [edit]

   Logic plays a fundamental role in computer science. Some of the key
   areas of logic that are particularly significant are computability
   theory (formerly called recursion theory), modal logic and category
   theory. The theory of computation is based on concepts defined by
   logicians and mathematicians such as Alonzo Church and Alan
   Turing.^[1]^[2] Church first showed the existence of algorithmically
   unsolvable problems using his notion of lambda-definability. Turing
   gave the first compelling analysis of what can be called a mechanical
   procedure and Kurt Gödel asserted that he found Turing's analysis
   "perfect.".^[3] In addition some other major areas of theoretical
   overlap between logic and computer science are:
     * Gödel's incompleteness theorem proves that any logical system
       powerful enough to characterize arithmetic will contain statements
       that can neither be proved nor disproved within that system. This
       has direct application to theoretical issues relating to the
       feasibility of proving the completeness and correctness of
       software.^[4]
     * The frame problem is a basic problem that must be overcome when
       using first-order logic to represent the goals of an artificial
       intelligence agent and the state of its environment.^[5]
     * The Curry–Howard correspondence is a relation between logical
       systems and programming languages. This theory established a
       precise correspondence between proofs and programs. In particular
       it showed that terms in the simply typed lambda calculus correspond
       to proofs of intuitionistic propositional logic.
     * Category theory represents a view of mathematics that emphasizes
       the relations between structures. It is intimately tied to many
       aspects of computer science: type systems for programming
       languages, the theory of transition systems, models of programming
       languages and the theory of programming language semantics.^[6]
     * Logic programming is a programming, database and knowledge
       representation paradigm that is based on formal logic. A logic
       program is a set of sentences about some problem domain.
       Computation is performed by applying logical reasoning to solve
       problems in the domain. Major logic programming language families
       include Prolog, Answer Set Programming (ASP) and Datalog.

Computers to assist logicians

   [edit]

   One of the first applications to use the term artificial intelligence
   was the Logic Theorist system developed by Allen Newell, Cliff Shaw,
   and Herbert Simon in 1956. One of the things that a logician does is to
   take a set of statements in logic and deduce the conclusions
   (additional statements) that must be true by the laws of logic. For
   example, if given the statements "All humans are mortal" and "Socrates
   is human" a valid conclusion is "Socrates is mortal". Of course this is
   a trivial example. In actual logical systems the statements can be
   numerous and complex. It was realized early on that this kind of
   analysis could be significantly aided by the use of computers. Logic
   Theorist validated the theoretical work of Bertrand Russell and Alfred
   North Whitehead in their influential work on mathematical logic called
   Principia Mathematica. In addition, subsequent systems have been
   utilized by logicians to validate and discover new mathematical
   theorems and proofs.^[7]

Logic applications for computers

   [edit]

   There has always been a strong influence from mathematical logic on the
   field of artificial intelligence (AI). From the beginning of the field
   it was realized that technology to automate logical inferences could
   have great potential to solve problems and draw conclusions from facts.
   Ron Brachman has described first-order logic (FOL) as the metric by
   which all AI knowledge representation formalisms should be evaluated.
   First-order logic is a general and powerful method for describing and
   analyzing information. The reason FOL itself is simply not used as a
   computer language is that it is actually too expressive, in the sense
   that FOL can easily express statements that no computer, no matter how
   powerful, could ever solve. For this reason every form of knowledge
   representation is in some sense a trade off between expressivity and
   computability. The more expressive the language is, the closer it is to
   FOL, the more likely it is to be slower and prone to an infinite
   loop.^[8]

   For example, IF–THEN rules used in expert systems approximate to a very
   limited subset of FOL. Rather than arbitrary formulas with the full
   range of logical operators the starting point is simply what logicians
   refer to as modus ponens. As a result, rule-based systems can support
   high-performance computation, especially if they take advantage of
   optimization algorithms and compilation.^[9]

   On the other hand, logic programming, which combines the Horn clause
   subset of first-order logic with a non-monotonic form of negation, has
   both high expressive power and efficient implementations. In
   particular, the logic programming language Prolog is a Turing complete
   programming language. Datalog extends the relational database model
   with recursive relations, while answer set programming is a form of
   logic programming oriented towards difficult (primarily NP-hard) search
   problems.

   Another major area of research for logical theory is software
   engineering. Research projects such as the Knowledge Based Software
   Assistant and Programmer's Apprentice programs have applied logical
   theory to validate the correctness of software specifications. They
   have also used logical tools to transform the specifications into
   efficient code on diverse platforms and to prove the equivalence
   between the implementation and the specification.^[10] This formal
   transformation-driven approach is often far more effortful than
   traditional software development. However, in specific domains with
   appropriate formalisms and reusable templates the approach has proven
   viable for commercial products. The appropriate domains are usually
   those such as weapons systems, security systems, and real-time
   financial systems where failure of the system has excessively high
   human or financial cost. An example of such a domain is Very Large
   Scale Integrated (VLSI) design—the process for designing the chips used
   for the CPUs and other critical components of digital devices. An error
   in a chip can be catastrophic. Unlike software, chips can't be patched
   or updated. As a result, there is commercial justification for using
   formal methods to prove that the implementation corresponds to the
   specification.^[11]

   Another important application of logic to computer technology has been
   in the area of frame languages and automatic classifiers. Frame
   languages such as KL-ONE can be directly mapped to set theory and
   first-order logic. This allows specialized theorem provers called
   classifiers to analyze the various declarations between sets, subsets,
   and relations in a given model. In this way the model can be validated
   and any inconsistent definitions flagged. The classifier can also infer
   new information, for example define new sets based on existing
   information and change the definition of existing sets based on new
   data. The level of flexibility is ideal for handling the ever changing
   world of the Internet. Classifier technology is built on top of
   languages such as the Web Ontology Language to allow a logical semantic
   level on top of the existing Internet. This layer is called the
   Semantic Web.^[12]^[13]

   Temporal logic is used for reasoning in concurrent systems.^[14]

See also

   [edit]
     * Automated reasoning
     * Computational logic
     * Logic programming

References

   [edit]
    1. ^ Lewis, Harry R. (1981). Elements of the Theory of Computation.
       Prentice Hall.
    2. ^ Davis, Martin (11 May 1995). "Influences of Mathematical Logic on
       Computer Science". In Rolf Herken (ed.). The Universal Turing
       Machine. Springer Verlag. ISBN 9783211826379. Retrieved 26 December
       2013.
    3. ^ Kennedy, Juliette (2014-08-21). Interpreting Godel. Cambridge
       University Press. ISBN 9781107002661. Retrieved 17 August 2015.
    4. ^ Hofstadter, Douglas R. (1999-02-05). Gödel, Escher, Bach: An
       Eternal Golden Braid. Basic Books. ISBN 978-0465026562.
    5. ^ McCarthy, John; P.J. Hayes (1969). "Some philosophical problems
       from the standpoint of artificial intelligence" (PDF). Machine
       Intelligence. 4: 463–502.
    6. ^ Barr, Michael; Charles Wells (1998). Category Theory for
       Computing Science (PDF). Centre de Recherches Mathématiques.
    7. ^ Newell, Allen; J.C. Shaw; H.C. Simon (1963). "Empirical
       explorations with the logic theory machine". In Ed Feigenbaum
       (ed.). Computers and Thought. McGraw Hill. pp. 109–133.
       ISBN 978-0262560924.
    8. ^ Levesque, Hector; Ronald Brachman (1985). "A Fundamental Tradeoff
       in Knowledge Representation and Reasoning". In Ronald Brachman and
       Hector J. Levesque (ed.). Reading in Knowledge Representation.
       Morgan Kaufmann. p. 49. ISBN 0-934613-01-X. "The good news in
       reducing KR service to theorem proving is that we now have a very
       clear, very specific notion of what the KR system should do; the
       bad new is that it is also clear that the services can not be
       provided... deciding whether or not a sentence in FOL is a
       theorem... is unsolvable."
    9. ^ Forgy, Charles (1982). "Rete: A Fast Algorithm for the Many
       Pattern/Many Object Pattern Match Problem*" (PDF). Artificial
       Intelligence. 19: 17–37. doi:10.1016/0004-3702(82)90020-0. Archived
       from the original (PDF) on 2013-12-27. Retrieved 25 December 2013.
   10. ^ Rich, Charles; Richard C. Waters (November 1987). "The
       Programmer's Apprentice Project: A Research Overview" (PDF). IEEE
       Expert. Archived from the original (PDF) on 2017-07-06. Retrieved
       26 December 2013.
   11. ^ Stavridou, Victoria (1993). Formal Methods in Circuit Design.
       Press Syndicate of the University of Cambridge. ISBN 0-521-443369.
       Retrieved 26 December 2013.
   12. ^ MacGregor, Robert (June 1991). "Using a description classifier to
       enhance knowledge representation". IEEE Expert. 6 (3): 41–46.
       doi:10.1109/64.87683. S2CID 29575443.
   13. ^ Berners-Lee, Tim; James Hendler; Ora Lassila (May 17, 2001). "The
       Semantic Web A new form of Web content that is meaningful to
       computers will unleash a revolution of new possibilities".
       Scientific American. 284: 34–43.
       doi:10.1038/scientificamerican0501-34. Archived from the original
       on April 24, 2013.
   14. ^ Colin Stirling (1992). "Modal and Temporal Logics". In S.
       Abramsky; D. M. Gabbay; T. S. E. Maibaum (eds.). Handbook of Logic
       in Computer Science. Vol. II. Oxford University Press. pp. 477–563.
       ISBN 0-19-853761-1.

Further reading

   [edit]
     *

   Ben-Ari, Mordechai (2012). Mathematical Logic for Computer Science
   (3rd ed.). Springer-Verlag. ISBN 978-1447141280.

     Harrison, John (2009). Handbook of Practical Logic and Automated
   Reasoning (1st ed.). Cambridge University Press. ISBN 978-0521899574.



   Huth, Michael; Ryan, Mark (2004). Logic in Computer Science: Modelling
   and Reasoning about Systems (2nd ed.). Cambridge University Press.
   ISBN 978-0521543101.

     Burris, Stanley N. (1997). Logic for Mathematics and Computer Science
   (1st ed.). Prentice Hall. ISBN 978-0132859745.

External links

   [edit]

     * Article on Logic and Artificial Intelligence at the Stanford
       Encyclopedia of Philosophy.
     * IEEE Symposium on Logic in Computer Science (LICS)
     * Alwen Tiu, Introduction to logic video recording of a lecture at
       ANU Logic Summer School '09 (aimed mostly at computer scientists)

     * v
     * t
     * e

   Logic

     * Outline
     * History

   Major fields

     * Computer science
     * Formal semantics (natural language)
     * Inference
     * Philosophy of logic
     * Proof
     * Semantics of logic
     * Syntax

   Logics
     * Classical
     * Informal
          + Critical thinking
          + Reason
     * Mathematical
     * Non-classical
     * Philosophical

   Theories
     * Argumentation
     * Metalogic
     * Metamathematics
     * Set

   Foundations

     * Abduction
     * Analytic and synthetic propositions
     * Antecedent
     * Consequent
     * Contradiction
          + Paradox
          + Antinomy
     * Deduction
     * Deductive closure
     * Definition
     * Description
     * Entailment
          + Linguistic
     * Form
     * Induction
     * Logical truth
     * Name
     * Necessity and sufficiency
     * Premise
     * Probability
     * Proposition
     * Reference
     * Statement
     * Substitution
     * Truth
     * Validity

   Lists

   topics
     * Mathematical logic
     * Boolean algebra
     * Set theory

   other
     * Logicians
     * Rules of inference
     * Paradoxes
     * Fallacies
     * Logic symbols

     * Philosophy portal
     * Category
     * WikiProject (talk)
     * changes

     * v
     * t
     * e

   Digital electronics

   Components

     * Transistor
     * Resistor
     * Inductor
     * Capacitor
     * Printed electronics
     * Printed circuit board
     * Electronic circuit
     * Flip-flop
     * Memory cell
     * Combinational logic
     * Sequential logic
     * Logic gate
     * Boolean circuit
     * Integrated circuit (IC)
     * Hybrid integrated circuit (HIC)
     * Mixed-signal integrated circuit
     * Three-dimensional integrated circuit (3D IC)
     * Emitter-coupled logic (ECL)
     * Erasable programmable logic device (EPLD)
     * Macrocell array
     * Programmable logic array (PLA)
     * Programmable logic device (PLD)
     * Programmable Array Logic (PAL)
     * Generic Array Logic (GAL)
     * Complex programmable logic device (CPLD)
     * Field-programmable gate array (FPGA)
     * Field-programmable object array (FPOA)
     * Application-specific integrated circuit (ASIC)
     * Tensor Processing Unit (TPU)

   Theory

     * Digital signal
     * Boolean algebra
     * Logic synthesis
     * Logic in computer science
     * Computer architecture
     * Digital signal
          + Digital signal processing
     * Circuit minimization
     * Switching circuit theory
     * Gate equivalent

   Design

     * Logic synthesis
     * Place and route
          + Placement
          + Routing
     * Transaction-level modeling
     * Register-transfer level
          + Hardware description language
          + High-level synthesis
     * Formal equivalence checking
     * Synchronous logic
     * Asynchronous logic
     * Finite-state machine
          + Hierarchical state machine

   Applications

     * Computer hardware
          + Hardware acceleration
     * Digital audio
          + radio
     * Digital photography
     * Digital telephone
     * Digital video
          + cinematography
          + television
     * Electronic literature

   Design issues

     * Metastability
     * Runt pulse

   Retrieved from
   "https://en.wikipedia.org/w/index.php?title=Logic_in_computer_science&o
   ldid=1224919025"

   Categories:
     * Logic in computer science
     * Formal methods

   Hidden categories:
     * Articles with short description
     * Short description matches Wikidata

     * This page was last edited on 21 May 2024, at 08:19 (UTC).
     * Text is available under the Creative Commons Attribution-ShareAlike
       4.0 License; additional terms may apply. By using this site, you
       agree to the Terms of Use and Privacy Policy. Wikipedia® is a
       registered trademark of the Wikimedia Foundation, Inc., a
       non-profit organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Code of Conduct
     * Developers
     * Statistics
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
   Skip to content
   geeksforgeeks
     * Courses
          + DSA to Development
          + Machine Learning & Data Science
          + Generative AI & ChatGPT
          + Become AWS Certified
          + DSA Courses
               o Data Structure & Algorithm(C++/JAVA)
               o Data Structure & Algorithm(Python)
               o Data Structure & Algorithm(JavaScript)
          + Programming Languages
               o CPP
               o Java
               o Python
               o JavaScript
               o C
          + All Courses
     * Tutorials
          + Python Tutorial
               o Taking Input in Python
               o Python Operators
               o Python Data Types
               o Python Loops and Control Flow
                    # Python Conditional Statements
                    # Python Loops
               o Python Functions
               o Python OOPS Concept
               o Python Data Structures
               o Python Exception Handling
               o Python File Handling
               o Python Exercises
          + Java
               o Learn Java Programming Language
               o Java Collections
               o Java 8 Tutorial
               o Java Programs
               o Java Interview Questions
                    # Java Interview Questions
                    # Core Java Interview Questions-Freshers
                    # Java Multithreading Interview Questions
                    # OOPs Interview Questions and Answers
               o Java Exercises
               o Java Quiz
                    # Java Quiz
                    # Core Java MCQ
               o Java Projects
               o Advance Java
                    # Spring Tutorial
                    # Spring Boot Tutorial
                    # Spring Boot Interview Questions
                    # Spring MVC Tutorial
                    # Spring MVC Interview Questions
                    # Hibernate Tutorial
                    # Hibernate Interview Questions
          + Programming Languages
               o JavaScript
               o C++
               o R Tutorial
               o SQL
               o PHP
               o C#
               o C
               o Scala
               o Perl
               o Go Language
               o Kotlin
          + System Design
               o System Design Tutorial
               o Software Design Patterns
               o System Design Roadmap
               o Top 10 System Design Interview Questions and Answers
          + Interview Corner
               o Company Preparation
               o Top Topics
               o Practice Company Questions
               o Interview Experiences
               o Experienced Interviews
               o Internship Interviews
               o Competitive Programming
               o Multiple Choice Quizzes
               o Aptitude for Placements
          + Computer Science Subjects
               o Operating System
               o DBMS
               o Computer Networks
               o Engineering Mathematics
               o Computer Organization and Architecture
               o Theory of Computation
               o Compiler Design
               o Digital Logic
               o Software Engineering
          + DevOps
               o GIT
               o AWS
               o Docker
               o Kubernetes
               o Microsoft Azure Tutorial
               o Google Cloud Platform
          + Linux
               o Linux Tutorial
               o Linux Commands A-Z
               o Linux Commands Cheatsheet
               o File Permission Commands
               o Linux System Administration
               o Linux File System
               o Linux Shell Scripting
               o Linux Networking
               o Linux Interview Questions
          + Software Testing
               o Software Testing Tutorial
               o Software Engineering Tutorial
               o Testing Interview Questions
               o Jira
          + Databases
               o DBMS Tutorial
               o SQL Tutorial
               o PostgreSQL Tutorial
               o MongoDB Tutorial
               o SQL Interview Questions
               o MySQL Interview Questions
               o PL/SQL Interview Questions
          + Android
               o Android Tutorial
               o Android Studio Tutorial
               o Kotlin For Android
               o Android Projects
               o Android Interview Questions
               o 6 Weeks of Android App Development
          + Excel
               o MS Excel Tutorial
               o Introduction to MS Excel
               o Data Analysis in Excel
               o Basic Excel Formulas & Functions
               o Data Analysis in Advanced Excel
               o Workbooks
               o Statistical Functions
               o Data Visualization in Excel
               o Pivot Tables in Excel
               o Excel Spreadsheets in Python
               o Basic Excel Shortcuts
          + Mathematics
               o Number System
               o Algebra
               o Linear Algebra
               o Trigonometry
               o Set Theory
               o Statistics
               o Probability
               o Geometry
               o Mensuration
               o Logarithms
               o Calculus
     * DSA
          + Data Structures
               o Arrays
               o Matrix
               o Strings
               o Linked List
               o Stack
               o Queue
               o Tree
               o Heap
               o Hashing
               o Graph
               o Set Data Structure
               o Map Data Structure
               o Advanced Data Structure
               o Data Structures Tutorial
          + Algorithms
               o Analysis of Algorithms
                    # Design and Analysis of Algorithms
                    # Asymptotic Analysis
                    # Asymptotic Notations
                    # Worst, Average and Best Cases
               o Searching Algorithms
                    # Linear Search
                    # Binary Search
                    # Searching Algorithms Tutorial
               o Sorting Algorithms
                    # Selection Sort
                    # Bubble Sort
                    # Insertion Sort
                    # Merge Sort
                    # Quick Sort
                    # Heap Sort
                    # Counting Sort
                    # Radix Sort
                    # Bucket Sort
                    # Sorting Algorithms Tutorial
               o Greedy Algorithms
               o Dynamic Programming
               o Graph Algorithms
               o Pattern Searching
               o Recursion
               o Backtracking
               o Divide and Conquer
               o Mathematical Algorithms
               o Geometric Algorithms
               o Bitwise Algorithms
               o Randomized Algorithms
               o Branch and Bound
               o Algorithms Tutorial
          + DSA Tutorial
          + Practice
               o All DSA Problems
               o Problem of the Day
               o Company Wise Coding Practice
                    # Amazon
                    # Microsoft
                    # Flipkart
                    # Explore All
               o GfG SDE Sheet
               o Practice Problems Difficulty Wise
                    # School
                    # Basic
                    # Easy
                    # Medium
                    # Hard
               o Language Wise Coding Practice
                    # CPP
                    # Java
                    # Python
               o Curated DSA Lists
                    # Beginner's DSA Sheet
                    # Top 50 Array Problems
                    # Top 50 String Problems
                    # Top 50 DP Problems
                    # Top 50 Graph Problems
                    # Top 50 Tree Problems
          + Competitive Programming
          + Company Wise SDE Sheets
               o Facebook SDE Sheet
               o Amazon SDE Sheet
               o Apple SDE Sheet
               o Netflix SDE Sheet
               o Google SDE Sheet
          + DSA Cheat Sheets
               o SDE Sheet
               o DSA Sheet for Beginners
               o FAANG Coding Sheet
               o Product-Based Coding Sheet
               o Company-Wise Preparation Sheet
          + Top Interview Questions
          + Puzzles
               o All Puzzles
               o Top 100 Puzzles Asked In Interviews
               o Top 20 Puzzles Commonly Asked During SDE Interviews
     * Data Science
          + Python Tutorial
          + R Tutorial
          + Machine Learning
          + Data Science using Python
          + Data Science using R
          + Data Science Packages
               o Pandas Tutorial
               o NumPy Tutorial
          + Data Visualization
               o Python Data Visualization Tutorial
               o Data Visualization with R
          + Data Analysis
               o Data Analysis with Python
               o Data Analysis with R
          + Deep Learning
          + NLP Tutorial
     * Web Tech
          + HTML Tutorial
          + CSS Tutorial
          + JavaScript Tutorial
          + PHP Tutorial
          + ReactJS Tutorial
          + NodeJS Tutorial
          + Bootstrap Tutorial
          + Typescript
          + Web Development Using Python
               o Django
                    # Django Tutorial
                    # Django Projects
                    # Django Interview Questions
               o Flask
                    # Flask Tutorial
                    # Flask Projects
                    # Flask Interview Questions
               o Postman
               o Github
          + Cheat Sheets
               o HTML Cheat Sheet
               o CSS Cheat Sheet
               o JavaScript Cheat Sheet
               o React Cheat Sheet
               o Angular Cheat Sheet
               o jQuery Cheat Sheet
               o Bootstrap Cheat Sheet
          + Learn Complete Web Development

     * ____________________ (BUTTON)
     * (BUTTON)
     *
     *

   (BUTTON)
     * Aptitude
     * Engineering Mathematics
     * Discrete Mathematics
     * Operating System
     * DBMS
     * Computer Networks
     * Digital Logic and Design
     * C Programming
     * Data Structures
     * Algorithms
     * Theory of Computation
     * Compiler Design
     * Computer Org and Architecture

   (BUTTON)

   (BUTTON) ▲

   Open In App

Program to Implement Logic Gates

   Last Updated : 30 Aug, 2024
   Summarize
   Comments
   Improve
     *
     *
     *

   Suggest changes
   Like Article
   Like
   Save
   Share
   Report
   News Follow

   In a computer, most of the electronic circuits are made up logic gates.
   Logic gates are used to create a circuit that performs calculations,
   data storage or shows off object-oriented programming especially the
   power of inheritance. Logic gates can also be constructed using vacuum
   tubes, electromagnetic elements like optics, molecule etc.

What is Logic Gate?

   A Logic gate is an elementary building block of any digital circuits.
   It takes one or two inputs and produces output based on those inputs.
   Outputs may be high (1) or low (0). Logic gates are implemented using
   diodes or transistors. There are seven basic logic gates defined, these
   are:
    1. AND gate,
    2. OR gate,
    3. NOT gate,
    4. NAND gate,
    5. NOR gate,
    6. XOR gate and
    7. XNOR gate.

   Below are the brief details about them along with their implementation:

1. AND Gate

   The AND gate gives an output of 1 if both the two inputs are 1, it
   gives 0 otherwise. [andpg.png] Below are the programs to implement AND
   gate using various methods:
     * Using product method.
     * Using if else condition.
     * Using “AND (&&)” operator.

   If-Else
// C program implementing the AND gate
// using if and else condition

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, ans;

    for (i = 0; i < 5; i++) {
        if (a[i] == 0 && b[i] == 0)
            ans = 0;

        else if (a[i] == 0 && b[i] == 1)
            ans = 0;

        else if (a[i] == 1 && b[i] == 0)
            ans = 0;
        else
            ans = 1;

        printf("\n %d AND %d = %d",
               a[i], b[i], ans);
    }
}

   Product Method
// C program implementing the AND gate
// through product method.

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, product;

    for (i = 0; i < 5; i++) {

        // using product method
        product = a[i] * b[i];

        printf("\n %d AND %d = %d",
               a[i], b[i], product);
    }
}

   &amp;amp; Operator
// C program implementing the AND gate
// using & operator

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, and_ans;

    for (i = 0; i < 5; i++) {

        // using the & operator
        and_ans = a[i] & b[i];

        printf("\n %d AND %d = %d",
               a[i], b[i], and_ans);
    }
}

   Output
 1 AND 0 = 0
 0 AND 1 = 0
 1 AND 1 = 1
 0 AND 0 = 0
 1 AND 0 = 0

2. OR Gate

   The OR gate gives an output of 1 if either of the two inputs are 1, it
   gives 0 otherwise. [or-2.png] Below are the programs to implement AND
   gate using various methods:
     * Using + operator.
     * Using | operator.
     * Using || operator.
     * Using if else.

   If-Else
// C program implementing the OR gate
// using if else

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, or_ans;

    for (i = 0; i < 5; i++) {

        // using the if-else conditions
        if (a[i] == 0 && b[i] == 0)
            or_ans = 0;
        else
            or_ans = 1;

        printf("\n %d AND %d = %d",
               a[i], b[i], or_ans);
    }
}

   + Operator
// C program implementing the OR gate
// using + operator

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, or_ans;

    for (i = 0; i < 5; i++) {

        // using the + operator
        if (a[i] + b[i] > 0)
            or_ans = 1;
        else
            or_ans = 0;

        printf("\n %d AND %d = %d",
               a[i], b[i], or_ans);
    }
}

   | Operator
// C program implementing the OR gate
// using | operator

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, or_ans;

    for (i = 0; i < 5; i++) {

        // using the | operator
        or_ans = a[i] | b[i];

        printf("\n %d AND %d = %d",
               a[i], b[i], or_ans);
    }
}

   || operator
// C program implementing the OR gate
// using || operator

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, or_ans;

    for (i = 0; i < 5; i++) {

        // using the || operator
        or_ans = a[i] || b[i];

        printf("\n %d AND %d = %d",
               a[i], b[i], or_ans);
    }
}

   Output
 1 AND 0 = 1
 0 AND 1 = 1
 1 AND 1 = 1
 0 AND 0 = 0
 1 AND 0 = 1

3. NAND Gate

   The NAND gate (negated AND) gives an output of 0 if both inputs are 1,
   it gives 1 otherwise. [nand.png] Below are the programs to implement
   NAND gate using various methods:
     * Using if else.
     * Using Complement of the product.

   If-Else
// C program implementing the NAND gate

#include <stdio.h>
#include <stdlib.h>

int main()
{

    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, ans;

    for (i = 0; i < 5; i++) {
        if (a[i] == 1 && b[i] == 1)
            ans = 0;
        else
            ans = 1;
        printf("\n %d NAND %d = %d",
               a[i], b[i], ans);
    }
}

   Complement of the product
// C program implementing the NAND gate

#include <stdio.h>
#include <stdlib.h>

int main()
{

    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, ans;

    for (i = 0; i < 5; i++) {
        ans = !(a[i] * b[i]);
        printf("\n %d NAND %d = %d",
               a[i], b[i], ans);
    }
}

   Output
 1 NAND 0 = 1
 0 NAND 1 = 1
 1 NAND 1 = 0
 0 NAND 0 = 1
 1 NAND 0 = 1

4. NOR Gate

   The NOR gate (negated OR) gives an output of 1 if both inputs are 0, it
   gives 1 otherwise. [Nor.png] Below are the programs to implement NOR
   gate using various methods:
     * Using + Operator.
     * Using if else.

   + Operator.
// C program implementing the NOR gate
#include <stdio.h>
#include <stdlib.h>

int main()
{

    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, ans;

    for (i = 0; i < 5; i++) {
        ans = !(a[i] + b[i]);
        printf("\n %d NOR %d = %d",
               a[i], b[i], ans);
    }
}

   If-Else
// C program implementing the NOR gate
#include <stdio.h>
#include <stdlib.h>

int main()
{

    int a[5] = { 1, 0, 1, 0, 1 };
    int b[5] = { 0, 1, 1, 0, 0 };
    int i, ans;

    for (i = 0; i < 5; i++) {
        if (a[i] == 0 && b[i] == 0)
            ans = 1;
        else
            ans = 0;
        printf("\n %d NOR %d = %d",
               a[i], b[i], ans);
    }
}

   Output
 1 NOR 0 = 0
 0 NOR 1 = 0
 1 NOR 1 = 0
 0 NOR 0 = 1
 1 NOR 0 = 0

5. NOT Gate

   It acts as an inverter. It takes only one input. If the input is given
   as 1, it will invert the result as 0 and vice-versa. [Not.png] Below
   are the programs to implement NOT gate using various methods:
     * Using ! Operator.
     * Using if else.

   If-Else
// C program implementing the NOT gate
#include <stdio.h>
#include <stdlib.h>

int main()
{

    int a[5] = { 1, 0, 1, 0, 1 };
    int i, ans;

    for (i = 0; i < 5; i++) {
        if (a[i] == 0)
            ans = 1;
        else
            ans = 0;
        printf("\n  NOT %d = %d", a[i], ans);
    }
}

   ! Operator
// C program implementing the NOT gate
#include <stdio.h>
#include <stdlib.h>

int main()
{

    int a[5] = {1, 0, 1, 0, 1};
    int i, ans;

    for (i = 0; i < 5; i++)
    {
        ans = !(a[i]);
        printf("\n  NOT %d = %d", a[i], ans);
    }
}

   Output
  NOT 1 = 0
  NOT 0 = 1
  NOT 1 = 0
  NOT 0 = 1
  NOT 1 = 0

Conclusion

   Logic gates are basic building components of digital circuits necessary
   to design complex systems. They are used to perform logical operations.
   It is important to understanding the working and combination of these
   gates in order to design circuits that perform tasks correctly and
   efficiently. Logic gates can help develop a solid foundation in digital
   electronics and pave the way for exploring more advanced topics.

Frequently Asked Questions on Logic Gates – FAQs

How to Implement Logic Gates?

     Logic gates are implemented using diodes or transistors. They can
     also be constructed using vacuum tubes, molecules, etc.

How are Logic Gates Implemented in Real Life?

     Logic gates are implemented in thermostats, locks, water systems and
     many other electronic devices.

What are the Applications of Logic Gates?

     Logic gates are used in microcontrollers, microprocessors, and
     embedded systems.

   (BUTTON)
   Comment
   (BUTTON)
   More info
   Next Article
   Two Level Implementation of Logic Gates
   author
   sunilkannur98
   (sunilkannur98) Follow
   News
   (BUTTON)
   Improve
   Article Tags :
     * C Language
     * Digital Logic
     * Programming Language

Similar Reads

     * Program to Implement Logic Gates
       In a computer, most of the electronic circuits are made up logic
       gates. Logic gates are used to create a circuit that performs
       calculations, data storage or shows off object-oriented programming
       especially the power of inheritance. Logic gates can also be
       constructed using vacuum tubes, electromagne
       8 min read
     * Two Level Implementation of Logic Gates
       The term "two-level logic" refers to a logic design that uses no
       more than two logic gates between input and output. This does not
       mean that the entire design will only have two logic gates, but it
       does mean that the single path from input to output will only have
       two logic gates. In two-level logic
       10 min read
     * C++ program to implement Half Adder
       Prerequisite : Half Adder in Digital Logic We are given with two
       inputs A and B. Our task is to implement Half Adder circuit and
       print the outputs sum and carry of two inputs. Introduction : The
       Half adder is a combinational circuit which add two1-bit binary
       numbers which are augend and addend to gi
       2 min read
     * Python program to implement Full Adder
       Prerequisite : Full Adder in Digital LogicGiven three inputs of
       Full Adder A, B,C-IN. The task is to implement the Full Adder
       circuit and Print output i.e sum and C-Out of three inputs. Full
       Adder : A Full Adder is a logical circuit that performs an addition
       operation on three one-bit binary numbers
       2 min read
     * Python program to implement 2:4 Multiplexer
       Prerequisite : Multiplexers in Digital Logic Introduction : It is a
       combinational circuit which have many data inputs and single output
       depending on control or select inputs.​ For N input lines, log n
       (base2) selection lines, or we can say that for 2n input lines, n
       selection lines are required. Mul
       3 min read
     * C++ program to implement full subtractor
       Prerequisite : Full SubtractorGiven three inputs of Full Subtractor
       A, B, Bin. The task is to implement the Full Subtractor circuit and
       Print output states difference (D) and Bout of three inputs.
       Introduction :The full subtractor is used to subtract three 1-bit
       numbers which are minuend, subtrahend
       2 min read
     * Introduction of Logic Gates
       In Boolean Algebra, there are three basic operations, [Tex]
       +,\:.\:,\:^\prime [/Tex] which are analogous to disjunction,
       conjunction, and negation in propositional logic . Each of these
       operations has a corresponding logic gate. Apart from these, there
       are a few other logic gates as well. It was inv
       10 min read
     * Implementation of OR Gate from NOR Gate
       The Logic gates are the Fundamental Building Blocks of the Digital
       Circuits. The Logic Gate takes one or more Binary inputs and
       performs logical Operations to Produce a single binary Output.
       Understanding through the Different Combinations of gates is
       important for the Designer to produce the desire
       5 min read
     * Implementation of NOR gate using 2 : 1 Mux
       In Digital Electronics, the concepts of Gates and Mux are a must to
       design the Digital circuit. The gates are the building block in
       Digital electronics and a MUX is a combinational logic circuit used
       in Digital Electronics. By Combining different types of gates we
       can design a complex circuit that c
       6 min read
     * Python Program to implement Full Subtractor
       Prerequisite -Full Subtractor in Digital Logic In this, we will
       discuss the overview of the full subtractor and will implement the
       full subtractor logic in the python language. Also, we will cover
       with the help of examples. Let's discuss it one by one. Given three
       inputs of Full Subtractor A, B, Bin
       4 min read
     * Programming Array Logic
       Programmable Array Logic (PAL) is a commonly used programmable
       logic device (PLD). It has programmable AND array and fixed OR
       array. Because only the AND array is programmable, it is easier to
       use but not flexible as compared to Programmable Logic Array (PLA).
       PAL's only limitation is number of AND
       5 min read
     * Implementation of Full Adder using NOR Gates
       In Digital Logic Circuit, Full Adder is a Digital Logic Circuit
       that can add three inputs and give two outputs. The three inputs A,
       B, and input carry as Cin. Cout is represented as output carry and
       Sum is represented as output. We can say Cout is called the
       majority 1’s detector, when more than one
       8 min read
     * Program for Hexadecimal to Decimal
       Given a hexadecimal number as input, we need to write a program to
       convert the given hexadecimal number into an equivalent decimal
       number. Examples:   Input : 67Output: 103Input : 512Output:
       1298Input : 123Output: 291We know that hexadecimal number uses 16
       symbols {0, 1, 2, 4, 5, 6, 7, 8, 9, A, B, C
       8 min read
     * Programmable Logic Array
       A Programmable Logic Array therefore, comprises of a PLA chip
       having a fixed wiring structure of AND gates followed by OR gates
       that can be programmed. PLA is a type of programmable logic device
       to construct a reconfigurable digital circuit on its architecture.
       It includes memory as well as logical
       6 min read
     * Implementation of OR Gate from NAND Gate
       Logic gates are an essential component of digital electronics and
       are used to handle binary data. Because of its universal nature,
       the NAND gate is particularly significant among these gates. This
       article explores the use of NAND gates to implement an OR gate,
       demonstrating the adaptability and usef
       4 min read
     * Universal Logic Gates
       A logic gate is an active electronic component that uses one or
       more inputs to produce an output based on the bolean algebra each
       gate is designed to perform. Though there are various types of
       gates including AND, OR, NOT, NAND, NOR etc.. NAND and NOR gates
       are a little special. NAND gate and NOR ga
       7 min read
     * Implementation of AND gate using 2 : 1 Mux
       In Digital Electronics, The concept of the Gates and Multiplexer is
       Important for Building any Digital Logical Circuit. The Gates are
       the Building Block of the Digital Electronics. On the Other hand,
       Multiplexers are an Important Component in Digital Electronics.
       They Enable the Selection of one dat
       5 min read
     * Implementation of Digital System
       Prerequisite - Introduction to Digital Systems Implementation means
       how the system is constructed from smaller and simpler components
       called modules. The modules can vary from simple Gates to complex
       processors. Digital system follows some Hierarchical
       implementation. Hierarchical implementation : I
       2 min read
     * Implementation of AND Gate from NAND Gate
       It is worth mentioning that Boolean algebra is a fundamental part
       of the digital electronics field that uses binary variables and
       logical operations. Think of it as the mind that makes the
       computers work effectively. Then, imagine that logic gates (AND,
       OR, and NOT) could be the necessary helpers in
       5 min read

   (BUTTON) Like
   three90RightbarBannerImg
   Explore More

   geeksforgeeks-footer-logo
   Corporate & Communications Address:- A-143, 7th Floor, Sovereign
   Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) |
   Registered Address:- K 061, Tower K, Gulshan Vivante Apartment, Sector
   137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305
   GFG App on Play Store GFG App on App Store
   Advertise with us
     * Company
     * About Us
     * Legal
     * In Media
     * Contact Us
     * Advertise with us
     * GFG Corporate Solution
     * Placement Training Program
     * GeeksforGeeks Community

     * Languages
     * Python
     * Java
     * C++
     * PHP
     * GoLang
     * SQL
     * R Language
     * Android Tutorial
     * Tutorials Archive

     * DSA
     * Data Structures
     * Algorithms
     * DSA for Beginners
     * Basic DSA Problems
     * DSA Roadmap
     * Top 100 DSA Interview Problems
     * DSA Roadmap by Sandeep Jain
     * All Cheat Sheets

     * Data Science & ML
     * Data Science With Python
     * Data Science For Beginner
     * Machine Learning
     * ML Maths
     * Data Visualisation
     * Pandas
     * NumPy
     * NLP
     * Deep Learning

     * Web Technologies
     * HTML
     * CSS
     * JavaScript
     * TypeScript
     * ReactJS
     * NextJS
     * Bootstrap
     * Web Design

     * Python Tutorial
     * Python Programming Examples
     * Python Projects
     * Python Tkinter
     * Web Scraping
     * OpenCV Tutorial
     * Python Interview Question
     * Django

     * Computer Science
     * Operating Systems
     * Computer Network
     * Database Management System
     * Software Engineering
     * Digital Logic Design
     * Engineering Maths
     * Software Development
     * Software Testing

     * DevOps
     * Git
     * Linux
     * AWS
     * Docker
     * Kubernetes
     * Azure
     * GCP
     * DevOps Roadmap

     * System Design
     * High Level Design
     * Low Level Design
     * UML Diagrams
     * Interview Guide
     * Design Patterns
     * OOAD
     * System Design Bootcamp
     * Interview Questions

     * Inteview Preparation
     * Competitive Programming
     * Top DS or Algo for CP
     * Company-Wise Recruitment Process
     * Company-Wise Preparation
     * Aptitude Preparation
     * Puzzles

     * School Subjects
     * Mathematics
     * Physics
     * Chemistry
     * Biology
     * Social Science
     * English Grammar
     * Commerce
     * World GK

     * GeeksforGeeks Videos
     * DSA
     * Python
     * Java
     * C++
     * Web Development
     * Data Science
     * CS Subjects

   @GeeksforGeeks, Sanchhaya Education Private Limited, All rights
   reserved

   We use cookies to ensure you have the best browsing experience on our
   website. By using our site, you acknowledge that you have read and
   understood our Cookie Policy & Privacy Policy (BUTTON) Got It !

   Lightbox

   Improvement
   (BUTTON) Suggest changes
   Suggest Changes
   Help us improve. Share your suggestions to enhance the article.
   Contribute your expertise and make a difference in the GeeksforGeeks
   portal.
   geeksforgeeks-suggest-icon
   Create Improvement
   Enhance the article with your expertise. Contribute to the
   GeeksforGeeks community and help create better learning resources for
   all.
   geeksforgeeks-improvement-icon
   Suggest Changes
   min 4 words, max CharLimit:2000
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   (BUTTON)

What kind of Experience do you want to share?

   Interview Experiences
   Admission Experiences
   Career Journeys
   Work Experiences
   Campus Experiences
   Competitive Exam Experiences
   W3C

RIF Overview (Second Edition)

W3C Working Group Note 5 February 2013

   This version:
          http://www.w3.org/TR/2013/NOTE-rif-overview-20130205/

   Latest version:
          http://www.w3.org/TR/rif-overview/

   Previous version:
          http://www.w3.org/TR/2012/NOTE-rif-overview-20121211/

   Editors:
          Michael Kifer, State University of New York at Stony Brook
          Harold Boley, National Research Council Canada

   A color-coded version of this document showing changes made since the
   previous version is also available.

   This document is also available in these non-normative formats: PDF
   version.

   Copyright © 2013 W3C^® (MIT, ERCIM, Keio, Beihang), All Rights
   Reserved. W3C liability, trademark and document use rules apply.
     __________________________________________________________________

Abstract

   This document is an overview of the Rule Interchange Format (RIF). It
   provides a high-level explanation of RIF concepts and architecture as
   well as a general survey of RIF documents.

Status of this Document

    May Be Superseded

   This section describes the status of this document at the time of its
   publication. Other documents may supersede this document. A list of
   current W3C publications and the latest revision of this technical
   report can be found in the W3C technical reports index at
   http://www.w3.org/TR/.

    Set of Documents

   This document is being published as one of a set of 13 documents:
    1. RIF Overview (Second Edition) (this document)
    2. RIF Use Cases and Requirements (Second Edition)
    3. RIF Core Dialect (Second Edition)
    4. RIF Basic Logic Dialect (Second Edition)
    5. RIF Production Rule Dialect (Second Edition)
    6. RIF Framework for Logic Dialects (Second Edition)
    7. RIF Datatypes and Built-Ins 1.0 (Second Edition)
    8. RIF RDF and OWL Compatibility (Second Edition)
    9. OWL 2 RL in RIF (Second Edition)
   10. RIF Combination with XML data (Second Edition)
   11. RIF In RDF (Second Edition)
   12. RIF Test Cases (Second Edition)
   13. RIF Primer (Second Edition)

    Document Unchanged

   There have been no changes to the body of this document since the
   previous version. For details on earlier changes, see the change log.

    Please Send Comments

   Please send any comments to public-rif-comments@w3.org (public
   archive). Although work on this document by the Rule Interchange Format
   (RIF) Working Group is complete, comments may be addressed in the
   errata or in future revisions. Open discussion among developers is
   welcome at public-rif-dev@w3.org (public archive).

    No Endorsement

   Publication as a Working Group Note does not imply endorsement by the
   W3C Membership. This is a draft document and may be updated, replaced
   or obsoleted by other documents at any time. It is inappropriate to
   cite this document as other than work in progress.

    Patents

   This document was produced by a group operating under the 5 February
   2004 W3C Patent Policy. W3C maintains a public list of any patent
   disclosures made in connection with the deliverables of the group; that
   page also includes instructions for disclosing a patent. An individual
   who has actual knowledge of a patent which the individual believes
   contains Essential Claim(s) must disclose the information in accordance
   with section 6 of the W3C Patent Policy.
     __________________________________________________________________

Table of Contents

     * 1 Introduction
     * 2 RIF Dialects
     * 3 RIF Framework for Logic Dialects
     * 4 RDF and OWL Compatibility
     * 5 A General Survey of the RIF Documents
     * 6 References
     * 7 Appendix: Change Log (Informative)

1 Introduction

   The Rule Interchange Format (RIF) Working Group was chartered by the
   World Wide Web Consortium in 2005 to create a standard for exchanging
   rules among rule systems, in particular among Web rule engines. RIF
   focused on exchange rather than trying to develop a single one-fits-all
   rule language because, in contrast to other Semantic Web standards,
   such as RDF, OWL, and SPARQL, it was immediately clear that a single
   language would not satisfy the needs of many popular paradigms for
   using rules in knowledge representation and business modeling. But even
   rule exchange alone was recognized as a daunting task. Known rule
   systems fall into three broad categories: first-order,
   logic-programming, and action rules. These paradigms share little in
   the way of syntax and semantics. Moreover, there are large differences
   between systems even within the same paradigm.

   Given this diversity, what is the most useful notion of rule exchange?
   The approach taken by the Working Group was to design a family of
   languages, called dialects, with rigorously specified syntax and
   semantics. The family of RIF dialects is intended to be uniform and
   extensible. RIF uniformity means that dialects are expected to share as
   much as possible of the existing syntactic and semantic apparatus.
   Extensibility here means that it should be possible for motivated
   experts to define a new RIF dialect as a syntactic extension to an
   existing RIF dialect, with new elements corresponding to desired
   additional functionality. These new RIF dialects would be non-standard
   when defined, but might eventually become standards.

   Because of the emphasis on rigor, the word format in the name of RIF is
   somewhat of an understatement. RIF in fact provides more than just a
   format. However, the concept of format is essential to the way RIF is
   intended to be used. Ultimately, the medium of exchange between
   different rule systems is XML, a format for data exchange. Central to
   the idea behind rule exchange through RIF is that different systems
   will provide syntactic mappings from their native languages to RIF
   dialects and back. These mappings are required to be
   semantics-preserving, and thus rule sets can be communicated from one
   system to another provided that the systems can talk through a suitable
   dialect, which they both support.

2 RIF Dialects

   The RIF Working Group has focused on two kinds of dialects: logic-based
   dialects and dialects for rules with actions. Generally, logic-based
   dialects include languages that employ some kind of logic, such as
   first-order logic (often restricted to Horn logic) or non-first-order
   logics underlying the various logic programming languages (e.g., logic
   programming under the well-founded or stable semantics). The
   rules-with-actions dialects include production rule systems, such as
   Jess, Drools and JRules, as well as reactive (or
   event-condition-action) rules, such as Reaction RuleML and XChange. Due
   to the limited resources of the RIF Working Group, it defined only two
   logic dialects, the Basic Logic Dialect (RIF-BLD) and a subset, the RIF
   Core Dialect, shared with RIF-PRD; the Production Rule Dialect
   (RIF-PRD) is the only rules-with-actions dialect defined by the group.
   Other dialects are expected to be defined by the various user
   communities.

   Present and future RIF dialects are expected to share datatypes,
   built-in functions, and built-in predicates as defined by RIF Datatypes
   and Built-Ins (RIF-DTB). In particular, the current dialects RIF-BLD,
   RIF-Core, and RIF-PRD all share the foundations of RIF-DTB 1.0.

3 RIF Framework for Logic Dialects

   The RIF Working Group spent almost four years on developing the above
   three dialects, and this begs a question: If dialect development is so
   time consuming, who will donate the necessary resources for the next
   round of development and who will ensure the uniformity of
   community-developed dialects once the RIF Working Group disbands? The
   Working Group partially addressed these questions by also developing an
   extensibility framework, called the Framework for Logic Dialects, or
   RIF-FLD. A comparable framework for rules with actions might be
   developed later.

   Developing RIF-FLD as a framework turned out to be feasible because
   despite the diversity of logical theories underlying the different
   logic rule systems, they share much of the same syntactic and semantic
   machinery. Moreover, the ways to combine the different pieces of that
   machinery in order to create those logic systems are well studied.
   However, the RIF-FLD specification is unique in that it digests much of
   this knowledge, presents it in a coherent form, and uses XML even on
   the framework level.

   RIF-FLD is a very general logic language that includes a great deal of
   commonly used syntactic and semantic apparatus; however, it purposely
   leaves certain parameters unspecified to enable designers of concrete
   dialects to fill in the necessary details. For instance, RIF-FLD
   provides machinery to tweak the rules of syntax through the notion of
   signatures. It also specifies certain semantic notions, such as models
   and logical entailment, but it leaves certain other options open (for
   instance, which exact models are to be used for entailment). A dialect
   designer can then define the syntax of a dialect by specializing it
   from the syntax of RIF-FLD, and the semantics by specializing it from
   the semantics of RIF-FLD. While doing so, the designer will make
   choices by selecting from the options provided by RIF-FLD, but he or
   she will not have to repeat the definitions of formulas, datatypes,
   models, entailment, and so on. This approach is illustrated using the
   RIF-BLD dialect. This dialect is specified in two ways, both normative:
   directly, by spelling out all the definitions, which takes about 40
   dense pages, and by specialization from RIF-FLD -- just about 5 pages.
   Any discrepancy between the two specifications is to be treated as a
   bug that must be clarified and corrected. This dual specification of
   RIF-BLD is also intended to serve as an example of dialect design by
   specialization from the RIF framework -- the preferred mode of
   specification for various future logic dialects.

   The RIF framework is not a monument that is cut in stone and is likely
   to see several extensions in the future. One, as we already mentioned,
   might be to cover the paradigm of actions and reactive rules.

4 RDF and OWL Compatibility

   Recognizing that RIF rules should be able to interface with RDF and OWL
   ontologies, the RIF Working Group has also defined the necessary
   concepts to ensure compatibility of RIF with RDF and OWL. RIF, RDF, and
   OWL are exchange languages with dissimilar syntaxes and semantics. How,
   then, should RIF rules refer to RDF and OWL facts, and what is the
   logical meaning of the overall language? RIF-RDF and OWL Compatibility
   defines just that. The basic idea is that RIF uses its frame syntax to
   communicate with RDF/OWL. These frames are mapped onto RDF triples and
   a joint semantics is defined for the combination.

5 A General Survey of the RIF Documents

   Besides this Overview, the RIF Working Group has produced twelve
   documents, six of which have become W3C Recommendations. The following
   general survey can help the reader to navigate these documents.
     * RIF Primer. The Primer is a self-contained informal introduction to
       RIF, developing simple rule examples over movie data.

     * RIF-BLD: The Basic Logic Dialect. This is one of the two major
       dialects, and the main logic-based dialect, developed by the group.
       Technically, this dialect corresponds to Horn logic with various
       syntactic and semantic extensions. The main syntactic extensions
       include the frame syntax and predicates with named arguments. The
       main semantic extensions include datatypes and externally defined
       predicates. Although this dialect is not expressive enough for many
       applications of rules, it covers many existing rule systems, and
       development of such a dialect was necessary as a starting point for
       future, more expressive dialects. This future activity is expected
       to take place within the RIF extensibility framework, RIF-FLD.

     * RIF-PRD: The Production Rule Dialect. This is the other major
       dialect developed by the group, capturing the main aspects of
       various production rule systems. Serious industrial interest in
       production rule technology has been demonstrated by major players.
       Production rules, as they are currently practiced in main-stream
       systems like Jess or JRules, are defined using ad hoc computational
       mechanisms, which are not based on a logic. For this reason,
       RIF-PRD is not part of the suite of logical RIF dialects and stands
       apart from them. However, significant effort has been extended to
       ensure as much sharing with the other dialects as possible. This
       sharing was the main reason for the development of the RIF Core
       dialect.

     * RIF-Core: The Core Dialect. This dialect is a subset of both
       RIF-BLD and RIF-PRD based on RIF-DTB 1.0, thus enabling limited
       rule exchange between logic rule dialects and production rules.
       RIF-Core corresponds to Horn logic without function symbols (often
       called 'Datalog') with a number of extensions to support features
       such as objects and frames as in F-logic, internationalized
       resource identifiers for concepts, and XML Schema datatypes.

     * RIF-FLD: The Framework for Logic Dialects. RIF-FLD is not a dialect
       in its own right, but rather a general logical extensibility
       framework. It was introduced in order to drastically lower the
       amount of effort needed to define and verify new logic dialects
       that extend the capabilities of RIF-BLD.

     * RIF-RDF+OWL: RDF and OWL Compatibility. Rules interchanged via RIF
       may depend on or be used in combination with RDF data and RDF
       Schema or OWL ontologies. This document enables interoperability
       between RIF and these other Semantic Web standards. It defines the
       syntax and semantics of combined RIF+RDF and RIF+OWL 2 languages.

     * RIF-DTB: Datatypes and Built-ins. Rules often refer to built-ins
       (e.g., arithmetics, string manipulation) and datatypes (e.g.,
       integers, strings, Booleans). To enable semantics-preserving
       exchange of such rules, it is necessary that most commonly used
       datatypes and built-in functions and predicates are identified and
       their semantics are defined precisely. This purpose is served by
       the RIF-DTB document.

     * RIF+XML-Data: RIF Combination with XML Data. Rules should be
       combinable with XML data sources. This document specifies how such
       combinations can be done.

     * RIF-OWLRL: OWL 2 RL in RIF. OWL 2 RL is an OWL 2 subset defined via
       a partial axiomatization of the OWL 2 RDF-based semantics in the
       form of implications. That definition can be used as the basis for
       a rule-based implementation as shown in this document using RIF.

     * RIF in RDF. Although the standard exchange syntax for RIF is XML,
       as defined in the dialect specifications, it is possible to map
       this XML to RDF graphs, so that RDF systems can more easily store
       and process RIF documents. Since RDF is compatible with RIF frames
       (see RIF RDF and OWL Compatibility), this mapping also provides an
       interoperable way to write RIF rules that process RIF documents.

     * RIF-UCR: Use Cases and Requirements. One of the first tasks of the
       RIF Working Group was to identify classes of applications that the
       RIF suite of dialects should be able to address, and use that to
       derive requirements to RIF. To a large extent, the design of RIF
       dialects was driven by the requirements found in the RIF-UCR
       document.

     * RIF-Test: Test Cases. This document is primarily of concern to RIF
       implementers. It includes the description of test cases -- both
       positive and negative -- that can be used in order to give an
       indication of whether a particular implementation of a RIF dialect
       is compliant with the specifications. There is a companion
       repository of the source code for the various test cases.

6 References

   [OWL-Reference]
          OWL Web Ontology Language Reference, M. Dean, G. Schreiber,
          Editors, W3C Recommendation, 10 February 2004. Latest version
          available at http://www.w3.org/TR/owl-ref/.

   [RDF-Concepts]
          Resource Description Framework (RDF): Concepts and Abstract
          Syntax], G. Klyne, J. Carrol, Editors, W3C Recommendation, 10
          February 2004,
          http://www.w3.org/TR/2004/REC-rdf-concepts-20040210/. Latest
          version available at http://www.w3.org/TR/rdf-concepts/.

   [RIF-BLD]
          RIF Basic Logic Dialect (Second Edition) Harold Boley, Michael
          Kifer, eds. W3C Recommendation, 5 February 2013,
          http://www.w3.org/TR/2013/REC-rif-bld-20130205/. Latest version
          available at http://www.w3.org/TR/rif-bld/.

   [RIF-Core]
          RIF Core Dialect (Second Edition) Harold Boley, Gary Hallmark,
          Michael Kifer, Adrian Paschke, Axel Polleres, Dave Reynolds,
          eds. W3C Recommendation, 5 February 2013,
          http://www.w3.org/TR/2013/REC-rif-core-20130205/. Latest version
          available at http://www.w3.org/TR/rif-core/.

   [RIF-DTB]
          RIF Datatypes and Built-Ins 1.0 (Second Edition) Axel Polleres,
          Harold Boley, Michael Kifer, eds. W3C Recommendation, 5 February
          2013, http://www.w3.org/TR/2013/REC-rif-dtb-20130205/. Latest
          version available at http://www.w3.org/TR/rif-dtb/.

   [RIF-Primer]
          RIF Primer (Second Edition) Leora Morgenstern, Chris Welty,
          Harold Boley, Gary Hallmark, eds. W3C Working Group Note, 5
          February 2013,
          http://www.w3.org/TR/2013/NOTE-rif-primer-20130205/. Latest
          version available at http://www.w3.org/TR/rif-primer/.

   [RIF in RDF]
          RIF In RDF (Second Edition) Sandro Hawke, Axel Polleres, eds.
          W3C Working Group Note, 5 February 2013,
          http://www.w3.org/TR/2013/NOTE-rif-in-rdf-20130205/. Latest
          version available at http://www.w3.org/TR/rif-in-rdf/.

   [RIF+XML-Data]
          RIF Combination with XML data (Second Edition) Christian de
          Sainte Marie, editor. W3C Working Group Note, 5 February 2013,
          http://www.w3.org/TR/2013/NOTE-rif-xml-data-20130205/. Latest
          version available at http://www.w3.org/TR/rif-xml-data/.

   [RIF-OWLRL]
          OWL 2 RL in RIF (Second Edition) Dave Reynolds, editor. W3C
          Working Group Note, 5 February 2013,
          http://www.w3.org/TR/2013/NOTE-rif-owl-rl-20130205/. Latest
          version available at http://www.w3.org/TR/rif-owl-rl/.

   [RIF-FLD]
          RIF Framework for Logic Dialects (Second Edition) Harold Boley,
          Michael Kifer, eds. W3C Recommendation, 5 February 2013,
          http://www.w3.org/TR/2013/REC-rif-fld-20130205/. Latest version
          available at http://www.w3.org/TR/rif-fld/.

   [RIF-PRD]
          RIF Production Rule Dialect (Second Edition) Christian de Sainte
          Marie, Gary Hallmark, Adrian Paschke, eds. W3C Recommendation, 5
          February 2013, http://www.w3.org/TR/2013/REC-rif-prd-20130205/.
          Latest version available at http://www.w3.org/TR/rif-prd/.

   [RIF-RDF+OWL]
          RIF RDF and OWL Compatibility (Second Edition) Jos de Bruijn,
          Chris Welty, eds. W3C Recommendation, 5 February 2013,
          http://www.w3.org/TR/2013/REC-rif-rdf-owl-20130205/. Latest
          version available at http://www.w3.org/TR/rif-rdf-owl/.

   [RIF-Test]
          RIF Test Cases (Second Edition) Stella Mitchell, Leora
          Morgenstern, Adrian Paschke, eds. W3C Working Group Note, 5
          February 2013,
          http://www.w3.org/TR/2013/NOTE-rif-test-20130205/. Latest
          version available at http://www.w3.org/TR/rif-test/.

   [RIF-UCR]
          RIF Use Cases and Requirements (Second Edition) Adrian Paschke,
          Leora Morgenstern, David Hirtle, Allen Ginsberg, Paula-Lavinia
          Patranjan, Frank McCabe, eds. W3C Working Group Note, 5 February
          2013, http://www.w3.org/TR/2013/NOTE-rif-ucr-20130205/. Latest
          version available at http://www.w3.org/TR/rif-ucr/.

   [SPARQL]
          SPARQL Query Language for RDF, E. Prud'hommeaux, A. Seaborne
          (Editors), W3C Recommendation, World Wide Web Consortium, 12
          January 2008,
          http://www.w3.org/TR/2008/REC-rdf-sparql-query-20080115/. Latest
          version available at http://www.w3.org/TR/rdf-sparql-query/.

   [GL88]
          The Stable Model Semantics for Logic Programming, M. Gelfond and
          V. Lifschitz. Logic Programming: Proceedings of the Fifth
          Conference and Symposium, pages 1070-1080, 1988.

   [GRS91]
          The Well-Founded Semantics for General Logic Programs, A. Van
          Gelder, K.A. Ross, J.S. Schlipf. Journal of ACM, 38:3, pages
          620-650, 1991.

7 Appendix: Change Log (Informative)

     * Various wording changes; fixed references, links; typos fixed.
     * Added "RIF in RDF" to the General Survey and the References.
     * Added "RIF Primer" to the General Survey and the References.
                      Let's Reason on the Web: Metalog

                      Massimo Marchiori, Janne Saarela
                          {massimo,jsaarela}@w3.org

                     The World Wide Web Consortium (W3C)

   The Resource Description Framework (RDF) Model&Syntax Specification
   describes a metadata infrastructure which can accommodate
   classification elements from different vocabularies i.e. schemas. The
   underlying model consists of a labeled directed acyclic graph which can
   be linearized into eXtensible Markup Language (XML) transfer syntax for
   interchange between applications.

   This paper will demonstrate how a new querying language, Metalog,
   allows users to write inference rules and queries in English-like
   syntax. We will demonstrate how these reasoning rules have equivalent
   representation both as RDF descriptions and as logic programs. We will
   also show how an automated compilation between these translations is
   possible.

   For the sake of clarity, here we will just give an overview of the
   system, trying to avoid technicalities and cumbersome details.

Query Languages

   In general, query languages are formal languages to retrieve data from
   a database. Standardadized languages already exist to retrieve
   information from different types of databases such as Structured Query
   Language (SQL) for relational databases and Object Query Language (OQL)
   and SQL3 for object relational databases.

   Semi-structured query languages such as XML-QL [3] operate on a
   document level structure taking advantage of the internal element
   structure of an XML document.

   Logic programs consist of facts and rules where valid inference rules
   are used to arrives into new facts i.e. query results.

   With RDF, the most suitable approach is to focus on the underlying data
   model. Even though XML-QL could be used to query RDF descriptions in
   their XML encoded form, a single RDF data model could not be correctly
   determined with a single XML-QL query due to the fact that RDF allows
   several XML syntax encodings for the same data model.

The Metalog Approach

   RDF provides the basis for structuring the data present on the Web in a
   consistent and accurate way. However, RDF is only the first step
   towards the construction of what Tim Berners-Lee calls the "Web of
   knowledge", a World Wide Web where data is structured, and users can
   fully benefit by this structure when accessing information on the Web.
   RDF only provides the "basic vocabulary" in which data can be expressed
   and structured. Then, the whole problem of accessing an managing these
   data structures arises.

   Metalog provides a "logical" view of metadata present on the Web. The
   Metalog approach is composed of several components.

   In the first component, a particular data semantics is established.
   Metalog provides way to express logical relationships such as "and",
   "or" and to build up complex inference rules that encode logical
   reasoning. This "semantic layer" builds on top of RDF using a so-called
   RDF schema.

   The second component consists of a "logical interpretation" of RDF data
   (optionally enriched with the semantic schema) into logic programming.
   This way, the understood semantics of RDF is unwielded into its logical
   components (a logic program, indeed). This means that every reasonment
   on RDF data can be performed acting upon the corresponding logical
   view, the logic program, providing a neat and powerful way to reason
   about data.

   The third component is a language interface to writing structured data
   and reasoning rules. In principle, the first component already
   suffices: data and rules can be written directly in RDF, using RDF
   syntax and the Metalog schema. However, this is not convenient from the
   practical viewpoint. Indeed, RDF syntax aims at being more an encoding
   language rather than a user-friendly language, and it is well
   recognised in the RDF community and among vendors that the typical
   applications will provide more user-friendly interfaces between the
   "raw RDF" code and the user. Our proposed language is innovative in
   that it tries to stress user-friendliness as much as possible: a
   program is a collection of natural language assertions. We think this
   feature will be particularly important for the wide deployment not only
   of metalog, but of RDF itself: the measure of the success of metadata
   and proper structuring of information on the Web is given by the number
   of people that will actually lose time and energy in write (and/or
   translate) data into the structured format. Therefore, it is of primary
   importance that the entry level is kept extremely easy, to avoid that
   the difficuly of just learning how to encode and structure data will
   just block the widespread diffusion of metadata on the Web.

   Another important feature of the language, in this respect, is indeed
   that it can be used just as an interface to RDF, without the metalog
   extensions. This way, users will be able to access and structure
   metadata using RDF in a smooth and seamless way, using the metalog
   language.

The Metalog Schema

   The first correspondance in Metalog is between the basic RDF data model
   and the predicates in logic. The RDF data model consists of so-called
   statements. Statements are triples where there is a subject (the
   "resource"), a predicate (the "property"), and an object (the
   "literal"). Metalog views an RDF statement in the logical setting as
   just a binary predicate involving the subject and the literal. For
   example, the RDF statement expressing the fact that Tim Berners-Lee
   invented the Web (formally, the RDF triple {invented, Tim Berners-Lee,
   Web}) is seen in logic programming as the predicate invented(Tim
   Berners-Lee, Web).

   Once we have estalished the basic correspondance between the basic RDF
   data model and predicates in logic, the next step becomes easy: we can
   extend RDF so that the mapping to logic is able to take advantage of
   all of the logical relationships present in logical systems: that is to
   say, beyond the ability of expressing static facts, we want the ability
   to encode dynamic reasoning rules, like in logic programming.

   In order to do so, we need at least:
     * the standard logical connectors (and, or, not)
     * variables

   The Metalog schema extends plain RDF with this "logical layer",
   enabling the expression of arbitrary logical relationships within RDF.
   In fact, the Metalog schema provides more accessories besides the
   aforementioned basic ones. Without elaborating here all the Metalog
   schema elements since they will be presented later, what the reader
   should keep in mind is just that the Metalog schema provides the
   "meta-logic" operators to reason with RDF statements.

   Technically, this is quite easy to do: the metalog schema is just a
   schema as defined by the RDF schema specification [Brickley99] where,
   for example, and and or are sub-instances of the RDF Bag connector.

   The mapping between "metalog RDF" and logical formulas is then
   completely natural: for each RDF statement that does not use a Metalog
   connector, there is a corresponding logical predicate as defined
   before. Then, the metalog connectors are translated into the
   corresponding logical connectors in the natural way (so, for instance,
   the metalog and connector is mapped using logical conjunction, while
   the metalog or connector is mapped using logical disjunction).

The Metalog Syntax

   Note that the RDF metalog schema and the corresponding translation into
   logical formulas is absolutely general. However, in practicse, one need
   also to then be able to process the resulting logical formulas in an
   effective ways. In other words, while the RDF metalog schema nicely
   extends RDF with the full power of first order predicate calculus, thus
   increasing by far the expressibility of basic RDF, there is still the
   other, computational, side of the coin: how to process and effectively
   reason with all these logical inference rules.

   It is well known that in general dealing with full first order
   predicate calculus is totally unfeasable computationally. So, what we
   would like to have is a subset of predicate calculus that is still
   expressible enough, and also computationally feasible: our choice went
   to logic programming. Logic programming (see e.g. [1]) is a well known
   programming paradigm that selects a subset of full first-order
   predicate calculus (so called Horn clauses); it is a very powerful and
   expressive paradigm, and has the further advantage that it has been
   widely studied in the database community (a subset of logic
   programming, datalog, has even the advantage of having computations
   always terminating, a feature of obvious interest for Web queries).

   The third level is then the actual syntax interface between the user
   and this "metalog RDF" encoding, with the constraint that the
   expressibility of the language must fit within the one provided by
   logic programming.

   The metalog syntax has been explicitly designed with the purpose of
   being totally natural-language based, trying to avoid any possible
   technicalities, and therefore making the language extrememly readable
   and self-descriptive.

   The way metalog reaches this scope is by a careful use of upper/lower
   case, quotes, and by allowing a rather liberal positioning of the
   keywords (an advanced parser then disambiguates the keywords from each
   metalog program line).

  Metalog grammar

   The tokens in the Metalog language can be rougly divided into four
   categories:
    1. variables
    2. literals
    3. keywords
    4. noise words

   In the following subsections we present how these tokens are
   recognized. There is also an example following each of these
   subsections to demonstrate how the recognization works in practice.

    Variables

   Upper/lower case is used to distingush between normal keywords and
   variables: variables are expressed using names all in upper case (for
   example, FOO is a variable). Words that are in lower case either are
   keywords (reserved words), or if not, they are ignored. For example,
   then is a keyword, while foo is not, and so it is just ignored (it is
   only syntactic sugaring). Other words can be either keywords, or they
   are just ignored. In the current version of metalog, words cannot
   intermingle upper and lower case: this helps to reduce errors and to
   improve readability, since it strengthens the layout difference between
   variables and the other words.
SHE X Y CAR RDF

    Literals

   Any name which is between double quotes (for example, "John") is a
   literal (datum, a fixed constant).
"en" "http://www.w3.org/" "Massimo" "a=b+2"

    Keywords

   The following set of keywords are reserved in metalog. Interpretation
   of the keywords is done in metalog on a positional basis: the position
   of the keyword with respect to other keywords and/or other data
   determines the interpretation of the sentence. The reserved keywords
   are:
     * then is a keyword for the logical implication (=>)
       For example,
       if SHE has a "degree" in "math" then SHE "is" "smart"
       is translated into the logical formula
       degree(SHE,"math") => is(SHE,"smart")
       (Note that, here and in the following examples, we provide directly
       the translation into the logical formula, to save space; a more
       detailed translation would have to also show the intermediate RDF
       model, which is in any case trivial to derive).
     * imply is a keyword for the logical implication (=>)
     * implies is a keyword for the logical implication (=>)
     * and can be either the metalog and, or it can be used to indicate
       the presence of an RDF Bag: this is disambiguated by the context
       For example,
       if SHE has a "degree" in "math" and SHE has a "degree" in "computer
       science" as well then SHE "is" "really smart".
       is translated into the logical formula
       (degree(SHE,"math") and degree(SHE,"computer science"))=>
       is(SHE,"really smart")
       On the other hand, as said, and can be used to denote an RDF Bag (a
       set):
       the "technical report 231" has as "authors" "Mary" and "John".
       is translated into the logical formulas (the translation here is
       more involved since the RDF Bag construct is used):
       authors("technical report 231",foo).
       rdf:type(0,rdf:Bag).
       rdf:_1(0,"Mary").
       rdf:_2(0,"John").
     * or can be either the metalog or, or it can be used to indicate the
       presence of an RDF Alt (an alternatives list) : this is
       disambiguated by the context
     * order the presence of this keyword turns an RDF Bag into an RDF Seq
       (an ordered list).
       For example,
       the "technical report 231" has as "authors" "Mary" and "John" in
       this order.
       is translated into the logical formulas (the translation here is
       more involved since the RDF Bag construct is used):
       authors("technical report 231",foo).
       rdf:type(foo,rdf:Seq).
       rdf:_1(foo,"Mary").
       rdf:_2(foo,"John").
     * not can be combined with any other metalog constructs, and its
       interpretation is logical negation.
       For example,
       if SHE has a "degree" in "math" then SHE "is" not "stupid".
       is translated into the logical formula
       degree(SHE,"math") => not(is(SHE,"stupid"))

   The dot is the separator between metalog program lines. For formatting
   purposes, carriage returns, line feeds can tabs can be used: they are
   simply ignored. Similarly, commas and semicolon can be used as well.

   A trailing question mark is used to denote a query.

   Note: metalog programs also have a facility to express namespaces via
   the keyword namespace. We will not go in further details since we won't
   be explicitly using namespaces sugaring here, but en passant we just
   mention that essentially the namespace keyword has the same
   functionality as the xmlns attribute for XML namespaces. Also, there
   are a number of other keywords that deal. for example, with numbers
   operations (e.g., greater, less, etc.), but for the sake of brevity we
   don't go in their (rather obvious) description.
if then and or order not what who of 'is one of'

    Noise words

   Any token not recognized by the rules above is discarded during the
   parsing process which is the reason why we call them noise words. The
   following example presents input for Metalog with detailed description
   what tokenization rule are used.
The "language" of "http://www.w3.org/RDF/Metalog/ is "en"
->
Noise(The) Literal(language) Keyword(of)
Literal(http://www.w3.org/RDF/Metalog)
Keyword(is) Literal(en).

    Complete grammar

rule 1    start -> query
rule 2    start -> statements
rule 3    start -> rules
rule 4    statements -> statements statement
rule 5    statements -> statement
rule 6    rules -> rules rule
rule 7    rules -> rule
rule 8    rule -> IF conditions THEN conditions
rule 9    statement -> LITERAL OF LITERAL IS negation value
rule 10   statement -> LITERAL OF VARIABLE IS negation value
rule 11   statement -> LITERAL OF STATEMENT statement IS negation value
rule 12   value -> ONE_OF literals
rule 13   value -> VARIABLE order
rule 14   value -> literals order
rule 15   order -> IN_THIS_ORDER
rule 16   order ->              /* empty */
rule 17   literals -> literals connector LITERAL
rule 18   literals -> LITERAL
rule 19   conditions -> conditions connector statement
rule 20   conditions -> statement
rule 21   connector -> AND
rule 22   connector -> OR
rule 23   negation -> NOT
rule 24   negation ->           /* empty */
rule 25   query -> WHAT IS querybody
rule 26   query -> IS LITERAL OF LITERAL negation value
rule 27   querybody -> LITERAL OF LITERAL
rule 28   querybody -> LITERAL OF VARIABLE

Completeness requirements

   Designing a new query language for RDF data model requires inherently
   that the language covers all RDF constructs. These constructs are
     * statements
     * containers: bag, alt, seq
     * higher-order statements

Conflicts with Natural Language

   The main issue when dealing with a syntax based on natural English
   language is how to determine predicate, subject, and object always
   correctly? (i.e. the building blocks of RDF statements)
Janne's email is jsaarela@w3.org
vs.
The email of Janne of jsaarela@w3.org
Homepage of W3C is at http://www.w3.org/
vs.
W3C homepage is at http://www.w3.org

Restrictions on the natural language

   The 's genetive form is available for people only. Nouns need of
   genetive structure as well. People can also use of genetive -> adopt
   only one structure i.e. of.

   If the predicate is a verb and not an adjective e.g.
Janne speaks English

   it is not possible to translate this to Metalog!? "Speaks" of "Janne"
   is "English"

  Reserved keywords

   Metalog reserves the use of the following keywords in the input syntax
   and cannot be used by the author.
     * if
     * then
     * and
     * or
     * order
     * not
     * what/who
     * of
     * is one of
     __________________________________________________________________

Roles of Metalog

   Metalog can be used into three different purposes: authoring and
   understanding facts, rules, and queries. We will elaborate their
   definition and expression in Metalog in the following subsections.

  Facts in Metalog

   Facts are recognized by the lack of existance of both if and what
   keywords withn a Metalog sentence. In this case, the first token will
   be a variable or a literal.

   Some examples of tokenization of Metalog facts:
"language" of "http://www.w3.org/" is "en" ->

literal keyword(of) literal keyword(is) literal
"author" of "http://www.w3.org/RDF/Metalog" are
"Massimo Marchiori" and "Janne Saarela" ->

literal keyword(of) literal keyword(are)
literal keyword(are) literal

  Rules in Metalog

   Rules are recognized by the existance of the if keyword as the first
   token of a Metalog sentence.

   Let us examine an example of tokenization of a rule:
If the "language" of RESOURCE is X and
the "author" of RESOURCE if Y then
the "connaissance" of Y is X. ->

keyword(if) literal variable variable keyword(and)
literal keyword(of) variable variable keyword(then)
literal keyword(of) variable variable

  Queries in Metalog

   Queries are recognized by the existance of the what keyword as the
   first token of a Metalog sentence.

   Let us examine an example of tokenization of a query:
What is the "language" of "http://www.w3.org/"? ->

keyword(what) literal keyword(of) literal
     __________________________________________________________________

Containers in RDF

   Metalog supports the container structures of RDF i.e. bags,
   alternatives, and sequences. The following subsections elaborate how
   these structures differ from each other and how they are encoded in
   Metalog.

  Bags

   Bags do not preserve of implicate order. Thus, it is safe to say
   multiple values within a statement i.e.
The "author" of "http://www.w3.org/RDF/Metalog" are
"Massimo Marchiori" and "Janne Saarela". ->

literal keyword(of) literal keyword(are)
literal keyword(and) literal

  Alternatives

   Alternatives imply that only one member of a Alternative container is
   valid at a time. This sets requirements for authoring and querying. In
   authoring, the Metalog statement must imply the values of the statement
   are mutually exclusive with the reserved keyword combination is one of.
   In querying ..?

   Let us examine the tokenization of Metalog sentences using
   Alternatives:
The "author" of "http://www.w3.org/RDF/Metalog" is one of
"Massimo Marchiori" and "Janne Saarela". ->

literal keyword(of) literal keyword(is one of)
literal keyword(and) literal

  Sequences

   Sequences do preserve order in RDF which sets requirements for
   authoring and querying. In authoring, the Metalog statement must imply
   the values of the statement have order with the order reserved keyword.
   In querying, additional constraints can be set to a query i.e. whether
   2. or 3. value matches or multiple values match in given order.

   Let us examine the tokenization of couple of Sequence related Metalog
   senteces:
The "author" of "http://www.w3.org/RDF/Metalog/" are
"Massimo Marchiori" and "Janne Saarela" in this order.->

literal keyword(of) literal keyword(are)
literal keyword(and) literal keyword(order).
Who is the 2. "author" of "http://www.w3.org/RDF/Metalog"? ->

keyword(who) keyword(2.) literal keyword(of) literal

  A detailed example

   Suppose we want to encode the rule that if a person has written a
   document in some language (for example, English), then he can speak in
   that language. The corresponding metalog program would be:

   if the "language" of a DOCUMENT is Y
   and the "author" of the DOCUMENT is X
   then X can "speak" Y.

   This can be translated into the following piece of RDF syntax:

   <Procedure>
     <Head>
       <Conjunction>
         <Predicate name="speak">
            <rdf:Seq>
              <rdf:li><Variable>X</Variable></rdf:li>
              <rdf:li><Variable>Y</Variable></rdf:li>
            </rdf:Seq>
          </Predicate>
        </Conjunction>
     </Head>
     <Body>
     <Conjunction>
       <Predicates>
         <rdf:Seq>
           <rdf:li>
             <Predicate name="creator">
               <rdf:Seq>
                 <rdf:li><Variable>DOCUMENT</Variable></rdf:li>
                 <rdf:li><Variable>X</Variable></rdf:li>
               </rdf:Seq>
             </Predicate>
           </rdf:li>
           <rdf:li>
         <Predicate name="language">
           <rdf:Seq>
             <rdf:li><Variable>DOCUMENT</Variable></rdf:li>
             <rdf:li><Variable>Y</Variable></rdf:li>
           </rdf:Seq>
         </Predicate>
       </rdf:li>
     </rdf:Seq>
     </Predicates>
     </Conjunction>
     </Body>
   </Procedure>

   And, finally, this corresponds to the logical formula

   speak(X,Y) <= (author(DOCUMENT,X) and language(DOCUMENT,Y))

   So, suppose we have already grabbed from somewhere on the Web some
   pieces of RDF that tell us, for example, that "John" is the author of
   "technical report 231", and that the language of "technical report 231"
   is "English".
   Then, if we want to know what language does John speak, we can just ask

   what "language" does "John" "speak"?

   which is translated into the corresponding query

   speak("John",Y).

   Running this query in the corresponding logic program gives the result
   that Y="English", that is to say, the predicate speak("John","English")
   is true.
   Hence, the corresponding metalog sentence, returned as answer, is:

   "John" "speaks" "English"

   As far as real data are concerned, among our examples we have run the
   above example using a set of 2700 RDF data model triples that
   correspond with the data available at the World Wide Web Consortium
   technical reports page. This page presents the public documents the
   consortium has published along with their authors, dates, and URIs.
   Therefore, one can get a complete knowledge basis regarding W3C's
   authors, that is flexible and elegantly extendable.

Related work

   The use of Web infrastructure to accommodate logic programs has been
   suggested by (Sandevall, 1996) and (Loke & Davidson, 1996). The latter
   approach suggests using familiar logic program notation to place facts
   and queries on HTML pages. The embedded rules also have the ability to
   refer to other HTML pages with other predicates using a namespace
   mechanism. In this way, their evaluation context increases over the
   amount of HTML pages they retrieve to find facts that satisfy the
   queries.

Conclusions

   To the best of our knowledge, this is the first work that addresses the
   problem of querying RDF models and extending it with the ability of
   expressing reasoning rules. The metalog model that we have sketched is
   general enough to be of wide use, and powerful enough to fulfill most
   of the generic user's needs. Moreover, it is elegantly integrated
   within the "big picture" of W3C's standards, with a particular eye
   geared toward extendability and future improvements. It tries to lower
   the "access level" to metadata and reasoning management by using a
   top-level syntax using natural language, enabling not only easy and
   fast writing of complex relationships, but also an extremely high
   readability. Finally, it can be used even without the logical
   extensions, just to provide a user-friendly interface to RDF. Future
   work that we plan to do within W3C is the deployment of a publicly
   accessible prototype of the system, so to foster on a large scale use
   of structured metadata on the Web.

  Acknowledgements

   The authors would like to thank Bert Bos for his help in running the
   test sets.

  References

    1. Das, S.K. (1992). Deductive Databases and Logic Programming.
       Addison Wesley.
    2. Brickley, D., Guha, R.V., Layman, A. (1999). Resource Description
       Framework (RDF) Schemas. W3C Proposed Recommendation.
       http://www.w3.org/TR/
    3. Alin Deutsch (University of Pennsylvania), Mary Fernandez (AT&T
       Labs),Daniela Florescu (INRIA), Alon Levy (University of
       Washington), Dan Suciu (AT&T Labs)  "XML-QL". W3C Note.
       http://www.w3.org/TR/1998/NOTE-xml-ql-19980819
    4. Lassila, O., Swick, R. (1999). Resource Description Framework (RDF)
       Model and Syntax. W3C Proposed Recommendation.
       http://www.w3.org/TR/
    5. Loke, S.W., Davison, A. (1996). Logic Programming with the World
       Wide Web. Proc. of the 7th ACM Conf. on Hypertext.
       http://www.cs.unc.edu/~barman/HT96/P14/lpwww.html
    6. Niemelä, I., Simons, P. (1997). Smodels -- an implementation of the
       stable model and well-founded semantics for normal logic programs
       Proc. of the 4th Int. Conf. on Logic Programming and Non-Monotonic
       Reasoning. Dagstuhl, Germany.
       http://saturn.hut.fi/pub/papers/lpnmr97-sd.ps.gz
    7. Ramakrishnan, R., Srivastava, D., Sudarshan, D. (1992). CORAL:
       Control, Relations and Logic. Proc. of the Int. Conf. on VLDB..
    8. Sandewall, E. (1996). Towards a World-Wide Data Base. Proc. of the
       5th Int. WWW Conf..

  Appendix A - Query schema in RDF

   In the following, we provide (part of) the Metalog schema, to provide
   the technically oriented reader with more inside on how the schema
   effectively uses RDF schema facilities.
<RDF xmlns="http://w3.org/TR/1999/PR-rdf-syntax-19990105#"
     xmlns:rdf="http://w3.org/TR/1999/PR-rdf-syntax-19990105#"
     xmlns:rdfs="http://www.w3.org/TR/WD-rdf-schema#">
<rdfs:Class ID="Procedure" />

<Predicate ID="Head">
  <rdfs:comment xml:lang="en">Head of the procedure</rdfs:comment>
  <rdfs:domain rdf:resource="#Procedure"/>
  <rdfs:range rdf:resource="#Connector"/>
  <rdfs:range rdf:resource="#Predicate"/>
</Predicate>

<Predicate ID="Body">
  <rdfs:comment xml:lang="en">Body of the procedure</rdfs:comment>
  <rdfs:domain rdf:resource="#Procedure"/>
  <rdfs:range rdf:resource="#Connector"/>
  <rdfs:range rdf:resource="#Predicate"/>
</Predicate>

<Predicate ID="Predicates">
  <rdfs:comment xml:lang="en">Predicates combined with a connector</rdfs:comment
>
  <rdfs:domain rdf:resource="#Connector"/>
  <rdfs:range rdf:resource="#Predicate"/>
  <rdfs:range rdf:resource="#Connector"/>
  <!-- this last range definition enables recursion -->
</Predicate>

<rdfs:Class ID="Connector" />

<rdfs:Class ID="Conjunction">
  <rdfs:subClassOf rdf:resource="#Connector" />
</rdfs:Class>

<rdfs:Class ID="Disjunction">
  <rdfs:subClassOf rdf:resource="#Connector" />
</rdfs:Class>

<rdfs:Class ID="Negation">
  <rdfs:subClassOf rdf:resource="#Connector" />
</rdfs:Class>

<rdfs:Class ID="Predicate" />

<Predicate ID="Variable">
  <rdfs:comment xml:lang="en">Variable within a predicate</rdfs:comment>
  <rdfs:domain rdf:resource="#Predicate"/>
  <rdfs:range rdf:resource="http://www.w3.org/FictionalSchemas/useful_types#Stri
ng"/>
</Predicate>

<Predicate ID="Constant">
  <rdfs:comment xml:lang="en">Constant within a predicate</rdfs:comment>
  <rdfs:domain rdf:resource="#Predicate"/>
  <rdfs:range rdf:resource="http://www.w3.org/FictionalSchemas/useful_types#Stri
ng"/>
</Predicate>
</RDF>
     __________________________________________________________________
                      Towards the Semantic Web: Metalog

                  Massimo Marchiori^1,2, Janne Saarela^1,3
                          {massimo,jsaarela}@w3.org

                    The World Wide Web Consortium (W3C)^1
                                MIT^2 INRIA^3

        Contact: M. Marchiori, W3C, MIT Lab for Computer Science, 545
                     Technology Sq., Cambridge MA 02139
               Phone: +1 (617) 253 2442 Fax: +1 (617) 258 5999

   The new W3C standard RDF (Resource Description Framework) describes a
   metadata infrastructure which can accommodate classification elements
   from different vocabularies i.e. schemas. The underlying model consists
   of a labeled directed acyclic graph which can be linearized into
   eXtensible Markup Language (XML) transfer syntax for interchange
   between applications.This paper will demonstrate how a new system,
   Metalog, allows users to write metadata, inference rules and queries in
   English-like syntax. We will demonstrate how these reasoning rules have
   equivalent representation both as RDF descriptions and as logic
   formulae. We will also show how an automated compilation between these
   translations is possible, showing the effectiveness of the system,
   which aims to be a first step towards the ambitious project of Tim
   Berners-Lee's semantic web.

The Metalog Approach

   RDF provides the basis for structuring the data present in the web in a
   consistent and accurate way. However, RDF is only the first step
   towards the construction of what Tim Berners-Lee calls the semantic
   web, a World Wide Web where data is structured, and users can fully
   benefit by this structure when accessing information on the web. RDF
   only provides the "basic vocabulary" in which data can be expressed and
   structured. Then, the whole problem of accessing an managing these data
   structured arises.

   Metalog provides a "logical" view of metadata present on the web. The
   Metalog approach is composed by two major layers.

   The first layer consists in an enrichment of the RDF model. Metalog
   provides way to express logical relationships like "and", "or" and so
   on, and to build up complex inference rules that encode logical
   reasoning. This "semantic layer" builds on top of RDF using a so-called
   RDF schema. We call this level of Metalog the Metalog model level.

   The second layer consists of a "logical interpretation" of RDF data
   (optionally enriched with the semantic schema) into logic. This way,
   the understood semantics of RDF is unwound into its logical components.
   This means that every reasonment on RDF data can be performed acting
   upon the corresponding logical view, providing a neat and powerful way
   to reason about data. We call this level of Metalog the Metalog logic
   level.

   The third layer is a language interface to writing structured data and
   reasoning rules. In principle, the first component already suffices:
   data and rules can be written directly in RDF, using RDF syntax and the
   metalog schema. However, this is not convenient from the practical
   viewpoint. Indeed, RDF syntax aims at being more an encoding language
   rather than a user-friendly language, and it is well recognised in the
   RDF community and among vendors that the typical applications will
   provide more user-friendly interfaces between the "raw RDF" code and
   the user. Our proposed language is innovative in that it tries to
   stress user-friendliness as much as possible: a program is a collection
   of natural language assertions. We think this feature will be
   particularly important for the wide deployment not only of metalog, but
   of RDF itself: the measure of the success of metadata and proper
   structuring of information on the web is given by the number of people
   that will actually lose time and energy in write (and/or translate)
   data into the structured format. Therefore, it is of primary importance
   that the entry level is kept extremely easy, to avoid that the
   difficulty of just learning how to encode and structure data will just
   block the widespread diffusion of metadata in the web. Also, this level
   incorporates in a natural way the concept of query to interact with the
   structured data and the inference rule. We call this level of Metalog
   the Metalog language level.

   Another important feature of the language, in this respect, is indeed
   that it can be used just as an interface to RDF, without the metalog
   extensions. This way, users will be able to access and structure
   metadata using RDF in a smooth and seamless way, using the metalog
   language.

   Therefore, the typical interaction of the user with the Metalog system
   will be: in the "building" process of setting up the data and the
   logical inferences, the user will be able to simply express these using
   the Metalog language. This layer is translated into the Metalog model,
   and then using the Metalog logic interpretation, into logic. From here,
   classic inference engines can then be applied, like logic programming,
   datalog, theorem provers and so on. Also, all the already existing RDF
   data will enter this "chain" directly into the Metalog model level.

The Metalog Model

   We can extend RDF so that the mapping to logic is able to take
   advantage of all of the logical relationships present in logical
   systems: that is to say, behind the ability of expressing static facts,
   we want the ability to encode dynamic reasoning rules, like in logic
   programming.

   In order to do so, we need at least:
     * the connectors: and, or, implies
     * variables

   The metalog schema extends plain RDF with this "logical layer",
   enabling to express arbitrary logical relationships within RDF. In
   fact, the metalog schema provides more accessories besides the
   aforementioned basic ones (like for example, the "not" connector, and
   support for math operators): anyway, for the sake of clarity, we don't
   go into further details on this topic: the basic building blocks are
   the connectors and, or, implies, and the variables. What the reader
   should keep in mind is therefore just that the Metalog model provides
   the "meta-logic" operators to reason with RDF statements.

   Technically, this is quite easy to do: the metalog schema is just a
   schema as defined by the RDF schema specification where, for example,
   and and or are subinstances of the RDF Bag connector.

The Metalog Logic

   Once we have extended "syntactically" the RDF model with connectors,
   the next step is to provide a semantical interpretation of these, in
   conjunction with a semantical interpretation of the RDF model (that is
   to say, a semantical interpretation of the "Metalog model" as a whole).

   The first correspondence in Metalog is between the basic RDF data model
   and the predicates in logic. The RDF data model consists of so-called
   statements Statements are triples where there is a subject (the
   "resource"), a predicate (the "property"), and an object (the
   "literal"). Metalog views an RDF statement in the logical setting as
   just a binary predicate involving the subject and the literal. For
   example, the RDF statement expressing the fact that Tim Berners-Lee
   invented the Web (formally, the RDF triple {invented, Tim Berners-Lee,
   Web}) is seen in logic as the predicate invented(Tim Berners-Lee, Web).
   So, in general RDF statements have a natural translation into logic
   predicates. The exceptions that Metalog does are for the so-called
   sequencing constructs in RDF: Bag, Seq and Alt. These are codified
   using specific varyadic functors (named, indeed, Bag, Seq and Alt...),
   with in addition in the Bag case equations to make the Bag operator act
   like a set-like operator (that is to say,
   Bag(X_1,...,X_n)=Bag(X_p(1),...,X_p(n)) for every permutation p). So,
   in fact, Metalog logic is a kind of equational logic (see also later,
   in the case of the mathematical operators).

   The second natural correspondence is the interpretation of the specific
   Metalog extension: the connectors and, or and implies are interpreted
   as the logical conjunction, disjunction and implication, respectively.
   Variables are interpreted as logical variables. En passant, we mention
   the other extensions provided by Metalog, the not connector and the
   mathematical extensions. Metalog provides support for integer
   arithmetic, with the functions add, sub, times, divide, and the
   predicates less, greater, less_or_equal, greater_or_equal, that have
   the expected equational interpretation. As far as the not connector is
   concerned, things are less easy: while for the other interpretation the
   logical interpretation is rather straightforward (in other words, in
   the almost totality of the useful logics, these operators have all the
   same interpretation), a logical interpretation of the not connector is
   not as plain: there are different alternatives to consider, giving
   different logics. The Metalog choice follows from the intrinsic nature
   of the World Wide Web (where the Metalog system is expected to be
   used), as a distributed knowledge basis, with possibly partial
   information available: we chose the interpretation of the not connector
   to be negation as failure (NAF), that is to say, we opted for the
   Closed World Assumption (CWA). Another point to consider is that since
   the interpretation of the not is in any case such a delicate parameter,
   the interpretation of the not as NAF has been kept as flexible as
   possible, using namespaces, as we will see next.

   Summing up, the mapping between the Metalog model and logical formulas
   is then completely natural: for each RDF statement that does not use a
   metalog connector, there is a corresponding logical predicate as
   defined before. Then, the metalog connectors are translated into the
   corresponding logical connectors as described above.

  Namespaces

   Metalog employs different namespaces for its extensions, in order to
   allows easy extensibility, modification and reuse of its components.
   Therefore, there are three different namespaces in action: the first
   namespace (http://www.w3.org/RDF/Metalog) is for the connectors and,
   or, implies, and for the variables (that is to say, the "core" set of
   Metalog). Then, the not connector has a different namespace (namely
   http://www.w3.org/RDF/Metalog/not/NAF), thus allowing other different
   not's to be used if needed. Finally, all the mathematical extensions
   have yet another namespaces (http://www.w3.org/RDF/Metalog/Math), to
   allow easy upgrade/extensions of the mathematical facilities in the
   future.

The Metalog Syntax

   The third layer is then the actual syntax interface between the user
   and the Metalog model layer.

   The metalog syntax has been explicitly designed with the purpose of
   being totally natural-language based, trying to avoid any possible
   technicalities, and therefore making the language extremely readable
   and self-descriptive.

   The way metalog reaches this scope is by a careful use of upper/lower
   case, quotes, and by allowing a rather liberal positioning of the
   keywords (an advanced parser then disambiguates the keywords from each
   metalog program line).

   Upper/lower case is used to distinguish between normal keywords and
   variables: variables are expressed using names all in upper case (for
   example, FOO is a variable). Words that are in lower case either are
   keywords (reserved words), or if not, they are ignored. For example,
   then is a keyword, while foo is not, and so it is just ignored (it is
   only syntactic sugaring). Other words can be either keywords, or they
   are just ignored. In the current version of metalog, words cannot
   intermingle upper and lower case: this helps to reduce errors and to
   improve readability, since it strengthens the layout difference between
   variables and the other words.

   Finally, any name which is between double quotes (for example, "John")
   is a datum (a fixed constant).

  Keywords

   The following set of keywords are reserved in metalog. Interpretation
   of the keywords is done in metalog on a positional basis: the position
   of the keyword with respect to other keywords and/or other data
   determines the interpretation of the sentence. The reserved keywords
   are:
     * then is a keyword for the logical implication (=>)
       For example,
       if SHE has a "degree" in "math" then SHE "is" "smart"
       is translated into the logical formula
       degree(SHE,"math") => is(SHE,"smart")
       (Note that, here and in the following examples, we provide directly
       the translation into the logical formula, to save space; a more
       detailed translation would have to also show the intermediate RDF
       model, which is in any case trivial to derive).
     * imply is a keyword for the logical implication (=>)
     * implies is a keyword for the logical implication (=>)
     * and can be either the metalog and (the "logical-and"), or it can be
       used to indicate the presence of an RDF Bag (the "bag-and"): this
       is disambiguated by the context
       For example,
       if SHE has a "degree" in "math" and SHE has a "degree" in "computer
       science" as well then SHE "is" "really smart".
       is translated into the logical formula
       (degree(SHE,"math") and degree(SHE,"computer science"))=>
       is(SHE,"really smart")
       On the other hand, as said, and can be used to denote an RDF Bag (a
       set):
       the "technical report 231" has as "authors" "Mary" and "John".
       is translated into the logical formula:
       authors("technical report 231",Bag("Mary","John"))
     * or can be either the metalog or, or it can be used to indicate the
       presence of an RDF Alt (an alternatives list) : this is
       disambiguated by the context
     * order the presence of this keyword turns an RDF Bag into an RDF Seq
       (an ordered list).
       For example,
       the "technical report 231" has as "authors" "Mary" and "John" in
       this order.
       is translated into the logical formula:
       authors("technical report 231",Seq("Mary","John"))
     * not can be combined with other metalog constructs.
       For example
       if SHE has a "degree" in "math" then SHE "is" not "stupid".
       is translated into the logical formula
       degree(SHE,"math") => not(is(SHE,"stupid"))

   The dot is the separator between metalog program lines. For formatting
   purposes, carriage returns, line feeds can tabs can be used: they are
   simply ignored. Commas, semicolons and question marks are reserved
   keywords: we'll explain commas in the next section, and question marks
   in the "Queries" section. On the other hand, semicolons are reserved
   for future use.

   Note: metalog programs also have a number of other keywords to deal
   with, to name some, namespaces (via the keyword namespace),
   mathematical operators, versioning. We will not go in further details
   since we won't be explicitly using namespaces sugaring here, but en
   passant we just mention that essentially the namespace keyword has the
   same functionality as the xmlns attribute for XML namespaces. And, as
   said, there are a number of other keywords that deal with numbers
   operations (e.g., greater, less, etc.), but for the sake of brevity we
   don't go in their (rather obvious) description.

  Parsing

   Parsing is positional. Let's introduce some terminology here. Call
   "quotation" everything that in a metalog language chunk is among
   quotes; keyword and variable have just the usual metalog meaning. Call
   a "holder" either a variable or a quotation. So for example, in

   SHE has a "degree" in "math" then SHE "is" "smart"

   the quotations are "degree", "math", "is" and "smart", the variables
   are SHE, all of these are holders; the keywords are: then.
   Interpretation then occurs as follows.

   First, a so-called strip-off phase occurs, where all the "junk" (parts
   that are neither quotations nor variables nor keywords) are eliminated.
   Note that it is not strictly necessary for the parser to do a strip-off
   in advance, and indeed in our current implementation the strip-off
   occurs incrementally, as the sentences are processed, in a much more
   efficient way. But, for the sake of explanation, it's clearer to assume
   this strip-off part is executed in advance. So, in the above example,
   after strip-off we obtain SHE "degree" "math" then SHE "is" "smart".

   Then, we disambiguate using the metalog keywords. The basic metalog
   mapping structure (here, we use a mapping directly to logic rather than
   to Metalog model for conciseness) follows the classic grammatical model
   of basic sentence, where we have a subject followed by a predicate and
   then an object. This triple "subject predicate object" is naturally
   translated into the logic binary predicate predicate(subject,object).
   On top of this "basic model" of translation, more sophisticated
   constructs are added, using the metalog keywords.

   Metalog has several interoperating rules that deal with keyword
   processing and ambiguities. In the following, we describe the core
   parsing algorithm, to give an idea of the kind of algorithmic involved.

   Let's refer to level 1, 2 or 3 if we are at a position where we expect
   to have a "subject", "predicate" or "object". For example, if we are
   parsing the above example from left to right, and we are at the point
   if SHE has a "degree", then we've just parsed a level 2 ("degree") and
   expect a level 3. Parsing occurs left-to-right, according to the above
   general pattern, only that when a keywords is found, various things can
   happen: if we find a "then", "imply" or "implies" keyword, it means we
   translate all what was to the left (say, obtaining #LEFT#), all what is
   to the right (say, obtaining #RIGHT#), and logically translate to
   "#LEFT# => #RIGHT#" (here, => denotes logical implication). Note that a
   "then" can generally occur only when a level 1 is expected
   (although, the above definition is more general).

   If we find an "and": if the "and" occurs when a level 1 is expected,
   then it could be a logical-and or the bag-and; if there's a holder soon
   after the object to the right of the and, then it's a logical-and;
   otherwise, it's a bag-and, and the level still stays 3. If the "and"
   occurs when a level 2 is expected, then it's a bag-and: it means that
   the holder soon before the and, and the next to come, are concatenated
   into an RDF Bag construct (Bag than can be turned into an RDF Seq if
   the "order" keyword is found).

   Logical-and translation: we have the logical translation "#LEFT# and
   #RIGHT#". For example, take the metalog sentence

   if SHE and HE have a "degree" in "math" and "science" and "John" "is"
   "good" then ....

   Doing the strip off, we obtain:

   SHE and HE "degree" "math" and "science" and "John" "is" "good" then
   ....

   Now we start the parsing from left to right (in the following, the
   denote with Bag(a,b,c,...) the bag composed by elements a, b, c, ...):

   SHE level 1
   and where a level 2 was expected, so...
   HE ... Bag(SHE,HE) is the new level 1
   "degree" level 2
   "math" level 3
   and where level 1 was expected: after "science" there is a keyword, so
   it's a bag-and, which means...
   "science" ... Bag("math","science") is level 3
   and where level 1 was expected: after "John" there is a holder
   ("good"), so it's a logical-and
   "John" level 1
   "is" level 2
   "good" level 3
   then all of the above (#LEFT#), implies all of the following (#RIGHT#)
   ... ...

   So, the final logical translation is

   degree(Bag(SHE,HE),Bag("math","science")) and is("John","good") => ....

   Another important component in the metalog language syntax is
   represented by punctuation. Punctuation plays a relevant role to define
   the structure of metalog: for example, dots (".")  are used to separate
   metalog sentences, and question marks ("?") to denote queries. Besides
   these, commas are used to act as delimiter, a helpful construct in case
   ambiguities arise. For example, consider the following example,
   obtained slightly modifying the above example:

   if SHE and HE have a "degree" in "math" and "science" and "John" and
   "Mary" "are" "good" then ....

   This sentence is given the supposedly wrong interpretation by Metalog
   that

   degree(Bag(SHE,HE),Bag("math","science","John")) and are("Mary","good")
   => ....

   while to express the fact that both John and Mary are good we can use
   the comma punctuation: the above example becomes

   if SHE and HE have a "degree" in "math" and "science", and "John" and
   "Mary" "are" "good" then ....

   or equivalently

   if SHE and HE have a "degree" in "math" and "science", and "John" and
   "Mary" "are" "good", then ....

   The formal rule to deal with commas in the parsing process is that a
   comma forces a level 1.

Queries

   In general, query languages are formal languages to retrieve data from
   a database. Standardized languages already exist to retrieve
   information from different types of databases such as Structured Query
   Language (SQL) for relational databases and Object Query Language (OQL)
   for object databases.

   Semi-structured query languages such as XML-QL [3] operate on the
   document level structure.

   With RDF, the most suitable approach is to focus on the underlying data
   model. Even though XML-QL could be used to query RDF descriptions in
   their XML encoded form, a single RDF data model could not be correctly
   determined with a single XML-QL query due to the fact that RDF allows
   several XML syntax encodings for the same data model. And, XML-QL and
   other similar XML query languages (see QL'98 [7]) have the big
   limitation to query syntactically, and not semantically.

   Instead, the fact the ultimate point of the "Metalog chain" is the
   Metalog logic, leads itself to a natural definition of query:
   (constructive) satisfability. That is to say, any given logical formula
   can be queried along the database, to check whether it is satisfable or
   not (and, in the positive case, the appropriate variable bindings are
   to be returned). We provide a construct in the Metalog language to
   express such a query: the question mark every metalog language sentence
   ending with a question mark is supposed to be a query, and as such it
   should not be added to the knowledge base, but its satisfability can be
   possibly checked by an appropriate inference engine.

Computability

   Note that the RDF metalog model and the corresponding translation into
   logical formulas in the Metalog logic is absolutely general. However,
   in practice, one need also to then be able to process the resulting
   logical formulas in an effective ways. In other words, while the
   Metalog model nicely extends RDF with the full power of first order
   predicate calculus (and more), thus increasing by far the
   expressibility of basic RDF, there is still the other, computational,
   side of the coin: how to process and effectively reason with all these
   logical inference rules.

   Metalog as such does not impose computability restriction, as its
   primary goal is to provide expressibility means to codify logical data
   and relationships (and relative queries). Then, it is up to the
   particular inference engine to try to effectively deal with the
   resulting logical knowledge basis. However, there are at least two
   restrictions of the logic that deserves particular attention: logic
   programming and datalog (see e.g. [1]). These paradigms are that they
   are computationally rather efficient, such that there are many
   implementations available that implement these languages; moreover, in
   the case of datalog, querying is also always terminating: that is to
   say, no matter what query we give, a datalog program (if correctly
   implemented) will always return the answer(s) in a finite amount of
   time. The interesting things that makes these languages particularly
   appealing in our case is due to the fact that both logic programming
   and datalog restrict to binary predicates: this means that RDF (without
   the ordering structures) is already directly mappable, via Metalog,
   into a logic program. Therefore, just relatively small syntactical
   constraints enables a metalog language program (and so, logic formula)
   to be ultimately processed in an effective way using an already
   existing  logic programming or datalog inference engine. This is indeed
   what we are currently doing with our current prototype: interfacing
   with existing logic programming/datalog systems (like, for example ,
   [8]).

   The way Metalog deals with such syntactic restrictions is twofold. The
   first is liberal: it is up to the implementation to check whether the
   metalog language code does actually satisfy the corresponding
   restrictions such to be interpreted as a logic program, or as a datalog
   program. This is consistent with the general philosophy of Metalog as
   being a purely declarative and highly expressive language. The second
   way is to actually annotate the metalog language code with a
   restriction tag: a restriction tag is a metalog sentence expressing the
   fact that the code indeed satisfies the appropriate syntactic
   restrictions. So far, there are two restriction tags, one for logic
   programming and the other for datalog. It is important to note that
   these restriction tags are just annotations, that is to say they are in
   all equivalent to comments, but for the fact that they provide a hint
   to an eventual application that tries to process the metalog code, that
   some particular inference engine (for logic programs, datalog programs,
   etc) could be profitably used. It is semantically transparent, since
   there is no actual representation of a restriction tag in the metalog
   model layer.

  A more detailed example

   Suppose we want to encode the rule that if a person is the author of a
   document in some language (for example, English), then he can speak in
   that language. The corresponding metalog program would be:

   if the "language" of a DOCUMENT is Y
   and the "author" of the DOCUMENT is X
   then X can "speak" Y.

   This can be translated into the following piece of XML/RDF syntax:

   <implies>
     <rdf:Seq>
       <rdf:li>
         <and>
           <rdf:Seq>
             <rdf:li>
               <Predicate name="language">
                 <rdf: seq>
                   <rdf:li><Variable>DOCUMENT</Variable></rdf:li>
                   <rdf:li><Variable>Y</Variable></rdf:li>
                 </rdf:seq>
               </Predicate>
             </rdf:li>
             <rdf:li>
               <Predicate name="author">
                 <rdf: seq>
                   <rdf:li><Variable>DOCUMENT</Variable></rdf:li>
                   <rdf:li><Variable>X</Variable></rdf:li>
                 </rdf:seq>
               </Predicate>
             </rdf:li>
           </rdf:Seq>
         </and>
       </rdf:li>
       <rdf:li>
         <Predicate name="speak">
           <rdf: seq>
             <rdf:li><Variable>X</Variable></rdf:li>
             <rdf:li><Variable>Y</Variable></rdf:li>
           </rdf:seq>
         </Predicate>
       </rdf:li>
     </rdf:Seq>
   </implies>

   And, finally, this corresponds to the logical formula

   speak(X,Y) <= (author(DOCUMENT,X) and language(DOCUMENT,Y))

   This formula is just a Horn clause, and as such it means it can be
   viewed as a logic program.

   So, suppose we have already grabbed from somewhere in the Web some
   pieces of RDF that tell us, for example, that "John" is the author of
   "technical report 231", and that the language of "technical report 231"
   is "English". This, again, can be viewed as part of a logic program
   (technically, they are facts).
   Then, if we want to know what language does John speak, we can just ask

   what "language" does "John" "speak"?

   which is translated into the corresponding query

   speak("John",Y).

   Running this query in the corresponding logic program gives the result
   that Y="English", that is to say, the predicate speak("John","English")
   is true.
   Hence, the corresponding metalog sentence, returned as answer, is:

   "John" "speaks" "English"

  More Applications

   The more ambitious project that we are tackling right now using Metalog
   is the complete management of the W3C web site. W3C is a complex
   organization, and its web site is the big white board on which
   information is shared and processed. Thousands of people every day look
   for related information, and produce new information on the W3C site.
   All this information is stored like the state of the art allows: part
   is stored in separate databases files, and the vast majority just
   resides in static web pages. Therefore, to access and manipulate the
   information, one has to either go and perform a manual search, or
   resort on primitive tools like the local Altavista-based search engine.
   The "next-generation" W3C site, instead, will hopefully be based on the
   Metalog infrastructure. As much as possible of the data will b
                      Let's Reason on the Web: Metalog

                      Massimo Marchiori, Janne Saarela
                          {massimo,jsaarela}@w3.org

                     The World Wide Web Consortium (W3C)

   The Resource Description Framework (RDF) Model&Syntax Specification
   describes a metadata infrastructure which can accommodate
   classification elements from different vocabularies i.e. schemas. The
   underlying model consists of a labeled directed acyclic graph which can
   be linearized into eXtensible Markup Language (XML) transfer syntax for
   interchange between applications.

   This paper will demonstrate how a new querying language, Metalog,
   allows users to write inference rules and queries in English-like
   syntax. We will demonstrate how these reasoning rules have equivalent
   representation both as RDF descriptions and as logic programs. We will
   also show how an automated compilation between these translations is
   possible.

   For the sake of clarity, here we will just give an overview of the
   system, trying to avoid technicalities and cumbersome details.

Query Languages

   In general, query languages are formal languages to retrieve data from
   a database. Standardadized languages already exist to retrieve
   information from different types of databases such as Structured Query
   Language (SQL) for relational databases and Object Query Language (OQL)
   and SQL3 for object relational databases.

   Semi-structured query languages such as XML-QL [3] operate on a
   document level structure taking advantage of the internal element
   structure of an XML document.

   Logic programs consist of facts and rules where valid inference rules
   are used to arrives into new facts i.e. query results.

   With RDF, the most suitable approach is to focus on the underlying data
   model. Even though XML-QL could be used to query RDF descriptions in
   their XML encoded form, a single RDF data model could not be correctly
   determined with a single XML-QL query due to the fact that RDF allows
   several XML syntax encodings for the same data model.

The Metalog Approach

   RDF provides the basis for structuring the data present on the Web in a
   consistent and accurate way. However, RDF is only the first step
   towards the construction of what Tim Berners-Lee calls the "Web of
   knowledge", a World Wide Web where data is structured, and users can
   fully benefit by this structure when accessing information on the Web.
   RDF only provides the "basic vocabulary" in which data can be expressed
   and structured. Then, the whole problem of accessing an managing these
   data structures arises.

   Metalog provides a "logical" view of metadata present on the Web. The
   Metalog approach is composed of several components.

   In the first component, a particular data semantics is established.
   Metalog provides way to express logical relationships such as "and",
   "or" and to build up complex inference rules that encode logical
   reasoning. This "semantic layer" builds on top of RDF using a so-called
   RDF schema.

   The second component consists of a "logical interpretation" of RDF data
   (optionally enriched with the semantic schema) into logic programming.
   This way, the understood semantics of RDF is unwielded into its logical
   components (a logic program, indeed). This means that every reasonment
   on RDF data can be performed acting upon the corresponding logical
   view, the logic program, providing a neat and powerful way to reason
   about data.

   The third component is a language interface to writing structured data
   and reasoning rules. In principle, the first component already
   suffices: data and rules can be written directly in RDF, using RDF
   syntax and the Metalog schema. However, this is not convenient from the
   practical viewpoint. Indeed, RDF syntax aims at being more an encoding
   language rather than a user-friendly language, and it is well
   recognised in the RDF community and among vendors that the typical
   applications will provide more user-friendly interfaces between the
   "raw RDF" code and the user. Our proposed language is innovative in
   that it tries to stress user-friendliness as much as possible: a
   program is a collection of natural language assertions. We think this
   feature will be particularly important for the wide deployment not only
   of metalog, but of RDF itself: the measure of the success of metadata
   and proper structuring of information on the Web is given by the number
   of people that will actually lose time and energy in write (and/or
   translate) data into the structured format. Therefore, it is of primary
   importance that the entry level is kept extremely easy, to avoid that
   the difficuly of just learning how to encode and structure data will
   just block the widespread diffusion of metadata on the Web.

   Another important feature of the language, in this respect, is indeed
   that it can be used just as an interface to RDF, without the metalog
   extensions. This way, users will be able to access and structure
   metadata using RDF in a smooth and seamless way, using the metalog
   language.

The Metalog Schema

   The first correspondance in Metalog is between the basic RDF data model
   and the predicates in logic. The RDF data model consists of so-called
   statements. Statements are triples where there is a subject (the
   "resource"), a predicate (the "property"), and an object (the
   "literal"). Metalog views an RDF statement in the logical setting as
   just a binary predicate involving the subject and the literal. For
   example, the RDF statement expressing the fact that Tim Berners-Lee
   invented the Web (formally, the RDF triple {invented, Tim Berners-Lee,
   Web}) is seen in logic programming as the predicate invented(Tim
   Berners-Lee, Web).

   Once we have estalished the basic correspondance between the basic RDF
   data model and predicates in logic, the next step becomes easy: we can
   extend RDF so that the mapping to logic is able to take advantage of
   all of the logical relationships present in logical systems: that is to
   say, beyond the ability of expressing static facts, we want the ability
   to encode dynamic reasoning rules, like in logic programming.

   In order to do so, we need at least:
     * the standard logical connectors (and, or, not)
     * variables

   The Metalog schema extends plain RDF with this "logical layer",
   enabling the expression of arbitrary logical relationships within RDF.
   In fact, the Metalog schema provides more accessories besides the
   aforementioned basic ones. Without elaborating here all the Metalog
   schema elements since they will be presented later, what the reader
   should keep in mind is just that the Metalog schema provides the
   "meta-logic" operators to reason with RDF statements.

   Technically, this is quite easy to do: the metalog schema is just a
   schema as defined by the RDF schema specification [Brickley99] where,
   for example, and and or are sub-instances of the RDF Bag connector.

   The mapping between "metalog RDF" and logical formulas is then
   completely natural: for each RDF statement that does not use a Metalog
   connector, there is a corresponding logical predicate as defined
   before. Then, the metalog connectors are translated into the
   corresponding logical connectors in the natural way (so, for instance,
   the metalog and connector is mapped using logical conjunction, while
   the metalog or connector is mapped using logical disjunction).

The Metalog Syntax

   Note that the RDF metalog schema and the corresponding translation into
   logical formulas is absolutely general. However, in practicse, one need
   also to then be able to process the resulting logical formulas in an
   effective ways. In other words, while the RDF metalog schema nicely
   extends RDF with the full power of first order predicate calculus, thus
   increasing by far the expressibility of basic RDF, there is still the
   other, computational, side of the coin: how to process and effectively
   reason with all these logical inference rules.

   It is well known that in general dealing with full first order
   predicate calculus is totally unfeasable computationally. So, what we
   would like to have is a subset of predicate calculus that is still
   expressible enough, and also computationally feasible: our choice went
   to logic programming. Logic programming (see e.g. [1]) is a well known
   programming paradigm that selects a subset of full first-order
   predicate calculus (so called Horn clauses); it is a very powerful and
   expressive paradigm, and has the further advantage that it has been
   widely studied in the database community (a subset of logic
   programming, datalog, has even the advantage of having computations
   always terminating, a feature of obvious interest for Web queries).

   The third level is then the actual syntax interface between the user
   and this "metalog RDF" encoding, with the constraint that the
   expressibility of the language must fit within the one provided by
   logic programming.

   The metalog syntax has been explicitly designed with the purpose of
   being totally natural-language based, trying to avoid any possible
   technicalities, and therefore making the language extrememly readable
   and self-descriptive.

   The way metalog reaches this scope is by a careful use of upper/lower
   case, quotes, and by allowing a rather liberal positioning of the
   keywords (an advanced parser then disambiguates the keywords from each
   metalog program line).

  Metalog grammar

   The tokens in the Metalog language can be rougly divided into four
   categories:
    1. variables
    2. literals
    3. keywords
    4. noise words

   In the following subsections we present how these tokens are
   recognized. There is also an example following each of these
   subsections to demonstrate how the recognization works in practice.

    Variables

   Upper/lower case is used to distingush between normal keywords and
   variables: variables are expressed using names all in upper case (for
   example, FOO is a variable). Words that are in lower case either are
   keywords (reserved words), or if not, they are ignored. For example,
   then is a keyword, while foo is not, and so it is just ignored (it is
   only syntactic sugaring). Other words can be either keywords, or they
   are just ignored. In the current version of metalog, words cannot
   intermingle upper and lower case: this helps to reduce errors and to
   improve readability, since it strengthens the layout difference between
   variables and the other words.
SHE X Y CAR RDF

    Literals

   Any name which is between double quotes (for example, "John") is a
   literal (datum, a fixed constant).
"en" "http://www.w3.org/" "Massimo" "a=b+2"

    Keywords

   The following set of keywords are reserved in metalog. Interpretation
   of the keywords is done in metalog on a positional basis: the position
   of the keyword with respect to other keywords and/or other data
   determines the interpretation of the sentence. The reserved keywords
   are:
     * then is a keyword for the logical implication (=>)
       For example,
       if SHE has a "degree" in "math" then SHE "is" "smart"
       is translated into the logical formula
       degree(SHE,"math") => is(SHE,"smart")
       (Note that, here and in the following examples, we provide directly
       the translation into the logical formula, to save space; a more
       detailed translation would have to also show the intermediate RDF
       model, which is in any case trivial to derive).
     * imply is a keyword for the logical implication (=>)
     * implies is a keyword for the logical implication (=>)
     * and can be either the metalog and, or it can be used to indicate
       the presence of an RDF Bag: this is disambiguated by the context
       For example,
       if SHE has a "degree" in "math" and SHE has a "degree" in "computer
       science" as well then SHE "is" "really smart".
       is translated into the logical formula
       (degree(SHE,"math") and degree(SHE,"computer science"))=>
       is(SHE,"really smart")
       On the other hand, as said, and can be used to denote an RDF Bag (a
       set):
       the "technical report 231" has as "authors" "Mary" and "John".
       is translated into the logical formulas (the translation here is
       more involved since the RDF Bag construct is used):
       authors("technical report 231",foo).
       rdf:type(0,rdf:Bag).
       rdf:_1(0,"Mary").
       rdf:_2(0,"John").
     * or can be either the metalog or, or it can be used to indicate the
       presence of an RDF Alt (an alternatives list) : this is
       disambiguated by the context
     * order the presence of this keyword turns an RDF Bag into an RDF Seq
       (an ordered list).
       For example,
       the "technical report 231" has as "authors" "Mary" and "John" in
       this order.
       is translated into the logical formulas (the translation here is
       more involved since the RDF Bag construct is used):
       authors("technical report 231",foo).
       rdf:type(foo,rdf:Seq).
       rdf:_1(foo,"Mary").
       rdf:_2(foo,"John").
     * not can be combined with any other metalog constructs, and its
       interpretation is logical negation.
       For example,
       if SHE has a "degree" in "math" then SHE "is" not "stupid".
       is translated into the logical formula
       degree(SHE,"math") => not(is(SHE,"stupid"))

   The dot is the separator between metalog program lines. For formatting
   purposes, carriage returns, line feeds can tabs can be used: they are
   simply ignored. Similarly, commas and semicolon can be used as well.

   A trailing question mark is used to denote a query.

   Note: metalog programs also have a facility to express namespaces via
   the keyword namespace. We will not go in further details since we won't
   be explicitly using namespaces sugaring here, but en passant we just
   mention that essentially the namespace keyword has the same
   functionality as the xmlns attribute for XML namespaces. Also, there
   are a number of other keywords that deal. for example, with numbers
   operations (e.g., greater, less, etc.), but for the sake of brevity we
   don't go in their (rather obvious) description.
if then and or order not what who of 'is one of'

    Noise words

   Any token not recognized by the rules above is discarded during the
   parsing process which is the reason why we call them noise words. The
   following example presents input for Metalog with detailed description
   what tokenization rule are used.
The "language" of "http://www.w3.org/RDF/Metalog/ is "en"
->
Noise(The) Literal(language) Keyword(of)
Literal(http://www.w3.org/RDF/Metalog)
Keyword(is) Literal(en).

    Complete grammar

rule 1    start -> query
rule 2    start -> statements
rule 3    start -> rules
rule 4    statements -> statements statement
rule 5    statements -> statement
rule 6    rules -> rules rule
rule 7    rules -> rule
rule 8    rule -> IF conditions THEN conditions
rule 9    statement -> LITERAL OF LITERAL IS negation value
rule 10   statement -> LITERAL OF VARIABLE IS negation value
rule 11   statement -> LITERAL OF STATEMENT statement IS negation value
rule 12   value -> ONE_OF literals
rule 13   value -> VARIABLE order
rule 14   value -> literals order
rule 15   order -> IN_THIS_ORDER
rule 16   order ->              /* empty */
rule 17   literals -> literals connector LITERAL
rule 18   literals -> LITERAL
rule 19   conditions -> conditions connector statement
rule 20   conditions -> statement
rule 21   connector -> AND
rule 22   connector -> OR
rule 23   negation -> NOT
rule 24   negation ->           /* empty */
rule 25   query -> WHAT IS querybody
rule 26   query -> IS LITERAL OF LITERAL negation value
rule 27   querybody -> LITERAL OF LITERAL
rule 28   querybody -> LITERAL OF VARIABLE

Completeness requirements

   Designing a new query language for RDF data model requires inherently
   that the language covers all RDF constructs. These constructs are
     * statements
     * containers: bag, alt, seq
     * higher-order statements

Conflicts with Natural Language

   The main issue when dealing with a syntax based on natural English
   language is how to determine predicate, subject, and object always
   correctly? (i.e. the building blocks of RDF statements)
Janne's email is jsaarela@w3.org
vs.
The email of Janne of jsaarela@w3.org
Homepage of W3C is at http://www.w3.org/
vs.
W3C homepage is at http://www.w3.org

Restrictions on the natural language

   The 's genetive form is available for people only. Nouns need of
   genetive structure as well. People can also use of genetive -> adopt
   only one structure i.e. of.

   If the predicate is a verb and not an adjective e.g.
Janne speaks English

   it is not possible to translate this to Metalog!? "Speaks" of "Janne"
   is "English"

  Reserved keywords

   Metalog reserves the use of the following keywords in the input syntax
   and cannot be used by the author.
     * if
     * then
     * and
     * or
     * order
     * not
     * what/who
     * of
     * is one of
     __________________________________________________________________

Roles of Metalog

   Metalog can be used into three different purposes: authoring and
   understanding facts, rules, and queries. We will elaborate their
   definition and expression in Metalog in the following subsections.

  Facts in Metalog

   Facts are recognized by the lack of existance of both if and what
   keywords withn a Metalog sentence. In this case, the first token will
   be a variable or a literal.

   Some examples of tokenization of Metalog facts:
"language" of "http://www.w3.org/" is "en" ->

literal keyword(of) literal keyword(is) literal
"author" of "http://www.w3.org/RDF/Metalog" are
"Massimo Marchiori" and "Janne Saarela" ->

literal keyword(of) literal keyword(are)
literal keyword(are) literal

  Rules in Metalog

   Rules are recognized by the existance of the if keyword as the first
   token of a Metalog sentence.

   Let us examine an example of tokenization of a rule:
If the "language" of RESOURCE is X and
the "author" of RESOURCE if Y then
the "connaissance" of Y is X. ->

keyword(if) literal variable variable keyword(and)
literal keyword(of) variable variable keyword(then)
literal keyword(of) variable variable

  Queries in Metalog

   Queries are recognized by the existance of the what keyword as the
   first token of a Metalog sentence.

   Let us examine an example of tokenization of a query:
What is the "language" of "http://www.w3.org/"? ->

keyword(what) literal keyword(of) literal
     __________________________________________________________________

Containers in RDF

   Metalog supports the container structures of RDF i.e. bags,
   alternatives, and sequences. The following subsections elaborate how
   these structures differ from each other and how they are encoded in
   Metalog.

  Bags

   Bags do not preserve of implicate order. Thus, it is safe to say
   multiple values within a statement i.e.
The "author" of "http://www.w3.org/RDF/Metalog" are
"Massimo Marchiori" and "Janne Saarela". ->

literal keyword(of) literal keyword(are)
literal keyword(and) literal

  Alternatives

   Alternatives imply that only one member of a Alternative container is
   valid at a time. This sets requirements for authoring and querying. In
   authoring, the Metalog statement must imply the values of the statement
   are mutually exclusive with the reserved keyword combination is one of.
   In querying ..?

   Let us examine the tokenization of Metalog sentences using
   Alternatives:
The "author" of "http://www.w3.org/RDF/Metalog" is one of
"Massimo Marchiori" and "Janne Saarela". ->

literal keyword(of) literal keyword(is one of)
literal keyword(and) literal

  Sequences

   Sequences do preserve order in RDF which sets requirements for
   authoring and querying. In authoring, the Metalog statement must imply
   the values of the statement have order with the order reserved keyword.
   In querying, additional constraints can be set to a query i.e. whether
   2. or 3. value matches or multiple values match in given order.

   Let us examine the tokenization of couple of Sequence related Metalog
   senteces:
The "author" of "http://www.w3.org/RDF/Metalog/" are
"Massimo Marchiori" and "Janne Saarela" in this order.->

literal keyword(of) literal keyword(are)
literal keyword(and) literal keyword(order).
Who is the 2. "author" of "http://www.w3.org/RDF/Metalog"? ->

keyword(who) keyword(2.) literal keyword(of) literal

  A detailed example

   Suppose we want to encode the rule that if a person has written a
   document in some language (for example, English), then he can speak in
   that language. The corresponding metalog program would be:

   if the "language" of a DOCUMENT is Y
   and the "author" of the DOCUMENT is X
   then X can "speak" Y.

   This can be translated into the following piece of RDF syntax:

   <Procedure>
     <Head>
       <Conjunction>
         <Predicate name="speak">
            <rdf:Seq>
              <rdf:li><Variable>X</Variable></rdf:li>
              <rdf:li><Variable>Y</Variable></rdf:li>
            </rdf:Seq>
          </Predicate>
        </Conjunction>
     </Head>
     <Body>
     <Conjunction>
       <Predicates>
         <rdf:Seq>
           <rdf:li>
             <Predicate name="creator">
               <rdf:Seq>
                 <rdf:li><Variable>DOCUMENT</Variable></rdf:li>
                 <rdf:li><Variable>X</Variable></rdf:li>
               </rdf:Seq>
             </Predicate>
           </rdf:li>
           <rdf:li>
         <Predicate name="language">
           <rdf:Seq>
             <rdf:li><Variable>DOCUMENT</Variable></rdf:li>
             <rdf:li><Variable>Y</Variable></rdf:li>
           </rdf:Seq>
         </Predicate>
       </rdf:li>
     </rdf:Seq>
     </Predicates>
     </Conjunction>
     </Body>
   </Procedure>

   And, finally, this corresponds to the logical formula

   speak(X,Y) <= (author(DOCUMENT,X) and language(DOCUMENT,Y))

   So, suppose we have already grabbed from somewhere on the Web some
   pieces of RDF that tell us, for example, that "John" is the author of
   "technical report 231", and that the language of "technical report 231"
   is "English".
   Then, if we want to know what language does John speak, we can just ask

   what "language" does "John" "speak"?

   which is translated into the corresponding query

   speak("John",Y).

   Running this query in the corresponding logic program gives the result
   that Y="English", that is to say, the predicate speak("John","English")
   is true.
   Hence, the corresponding metalog sentence, returned as answer, is:

   "John" "speaks" "English"

   As far as real data are concerned, among our examples we have run the
   above example using a set of 2700 RDF data model triples that
   correspond with the data available at the World Wide Web Consortium
   technical reports page. This page presents the public documents the
   consortium has published along with their authors, dates, and URIs.
   Therefore, one can get a complete knowledge basis regarding W3C's
   authors, that is flexible and elegantly extendable.

Related work

   The use of Web infrastructure to accommodate logic programs has been
   suggested by (Sandevall, 1996) and (Loke & Davidson, 1996). The latter
   approach suggests using familiar logic program notation to place facts
   and queries on HTML pages. The embedded rules also have the ability to
   refer to other HTML pages with other predicates using a namespace
   mechanism. In this way, their evaluation context increases over the
   amount of HTML pages they retrieve to find facts that satisfy the
   queries.

Conclusions

   To the best of our knowledge, this is the first work that addresses the
   problem of querying RDF models and extending it with the ability of
   expressing reasoning rules. The metalog model that we have sketched is
   general enough to be of wide use, and powerful enough to fulfill most
   of the generic user's needs. Moreover, it is elegantly integrated
   within the "big picture" of W3C's standards, with a particular eye
   geared toward extendability and future improvements. It tries to lower
   the "access level" to metadata and reasoning management by using a
   top-level syntax using natural language, enabling not only easy and
   fast writing of complex relationships, but also an extremely high
   readability. Finally, it can be used even without the logical
   extensions, just to provide a user-friendly interface to RDF. Future
   work that we plan to do within W3C is the deployment of a publicly
   accessible prototype of the system, so to foster on a large scale use
   of structured metadata on the Web.

  Acknowledgements

   The authors would like to thank Bert Bos for his help in running the
   test sets.

  References

    1. Das, S.K. (1992). Deductive Databases and Logic Programming.
       Addison Wesley.
    2. Brickley, D., Guha, R.V., Layman, A. (1999). Resource Description
       Framework (RDF) Schemas. W3C Proposed Recommendation.
       http://www.w3.org/TR/
    3. Alin Deutsch (University of Pennsylvania), Mary Fernandez (AT&T
       Labs),Daniela Florescu (INRIA), Alon Levy (University of
       Washington), Dan Suciu (AT&T Labs)  "XML-QL". W3C Note.
       http://www.w3.org/TR/1998/NOTE-xml-ql-19980819
    4. Lassila, O., Swick, R. (1999). Resource Description Framework (RDF)
       Model and Syntax. W3C Proposed Recommendation.
       http://www.w3.org/TR/
    5. Loke, S.W., Davison, A. (1996). Logic Programming with the World
       Wide Web. Proc. of the 7th ACM Conf. on Hypertext.
       http://www.cs.unc.edu/~barman/HT96/P14/lpwww.html
    6. Niemelä, I., Simons, P. (1997). Smodels -- an implementation of the
       stable model and well-founded semantics for normal logic programs
       Proc. of the 4th Int. Conf. on Logic Programming and Non-Monotonic
       Reasoning. Dagstuhl, Germany.
       http://saturn.hut.fi/pub/papers/lpnmr97-sd.ps.gz
    7. Ramakrishnan, R., Srivastava, D., Sudarshan, D. (1992). CORAL:
       Control, Relations and Logic. Proc. of the Int. Conf. on VLDB..
    8. Sandewall, E. (1996). Towards a World-Wide Data Base. Proc. of the
       5th Int. WWW Conf..

  Appendix A - Query schema in RDF

   In the following, we provide (part of) the Metalog schema, to provide
   the technically oriented reader with more inside on how the schema
   effectively uses RDF schema facilities.
<RDF xmlns="http://w3.org/TR/1999/PR-rdf-syntax-19990105#"
     xmlns:rdf="http://w3.org/TR/1999/PR-rdf-syntax-19990105#"
     xmlns:rdfs="http://www.w3.org/TR/WD-rdf-schema#">
<rdfs:Class ID="Procedure" />

<Predicate ID="Head">
  <rdfs:comment xml:lang="en">Head of the procedure</rdfs:comment>
  <rdfs:domain rdf:resource="#Procedure"/>
  <rdfs:range rdf:resource="#Connector"/>
  <rdfs:range rdf:resource="#Predicate"/>
</Predicate>

<Predicate ID="Body">
  <rdfs:comment xml:lang="en">Body of the procedure</rdfs:comment>
  <rdfs:domain rdf:resource="#Procedure"/>
  <rdfs:range rdf:resource="#Connector"/>
  <rdfs:range rdf:resource="#Predicate"/>
</Predicate>

<Predicate ID="Predicates">
  <rdfs:comment xml:lang="en">Predicates combined with a connector</rdfs:comment
>
  <rdfs:domain rdf:resource="#Connector"/>
  <rdfs:range rdf:resource="#Predicate"/>
  <rdfs:range rdf:resource="#Connector"/>
  <!-- this last range definition enables recursion -->
</Predicate>

<rdfs:Class ID="Connector" />

<rdfs:Class ID="Conjunction">
  <rdfs:subClassOf rdf:resource="#Connector" />
</rdfs:Class>

<rdfs:Class ID="Disjunction">
  <rdfs:subClassOf rdf:resource="#Connector" />
</rdfs:Class>

<rdfs:Class ID="Negation">
  <rdfs:subClassOf rdf:resource="#Connector" />
</rdfs:Class>

<rdfs:Class ID="Predicate" />

<Predicate ID="Variable">
  <rdfs:comment xml:lang="en">Variable within a predicate</rdfs:comment>
  <rdfs:domain rdf:resource="#Predicate"/>
  <rdfs:range rdf:resource="http://www.w3.org/FictionalSchemas/useful_types#Stri
ng"/>
</Predicate>

<Predicate ID="Constant">
  <rdfs:comment xml:lang="en">Constant within a predicate</rdfs:comment>
  <rdfs:domain rdf:resource="#Predicate"/>
  <rdfs:range rdf:resource="http://www.w3.org/FictionalSchemas/useful_types#Stri
ng"/>
</Predicate>
</RDF>
     __________________________________________________________________
